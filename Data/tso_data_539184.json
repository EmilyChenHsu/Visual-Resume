{"displayName":"Akira Matsuda","id":"539184","avatar":"","creationDate":"2010-12-11 21:40:05","website":"http:\/\/twitter.com\/a_matsuda","reputation":"1554","questionCount":0,"answerCount":20,"commentCount":1,"acceptedCount":13,"nonacceptedCount":7,"activity":{"2011-05":{"commentCount":1,"answerCount":5,"nonacceptedCount":3,"acceptedCount":2},"2010-12":{"answerCount":1,"acceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":3,"acceptedCount":3},"2011-09":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":2,"acceptedCount":2},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-06":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-09":{"answerCount":1,"acceptedCount":1}},"tags":{"ruby-on-rails-3":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-05":{"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":2,"acceptedCount":2},"2011-09":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1}},"answerCount":12,"acceptedCount":8,"relatedTags":{"nested":1,"generator":1,"scaffolding":1,"jquery":1,"ruby-on-rails":9,"pagination":9,"jquery-pagination":1,"ruby":1,"heroku":1,"kaminari":10,"mysql":1,"paginate":1,"sql":1,"meta-search":1,"gem":1,"mongoid":1,"ruby-on-rails-3.1":1},"nonacceptedCount":4},"nested":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"generator":1,"scaffolding":1}},"generator":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"nested":1,"scaffolding":1}},"scaffolding":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"nested":1,"generator":1}},"jquery":{"activity":{"2011-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"pagination":1,"jquery-pagination":1}},"ruby-on-rails":{"activity":{"2011-03":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":2,"acceptedCount":2},"2011-09":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":2,"acceptedCount":2},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1}},"answerCount":15,"acceptedCount":9,"relatedTags":{"jquery":1,"ruby-on-rails-3":9,"pagination":11,"jquery-pagination":1,"ajax":1,"ruby":4,"heroku":1,"kaminari":12,"paginate":1,"sql":1,"meta-search":1,"gem":1,"ruby-on-rails-3.1":1,"activerecord":1,"yaml":1},"nonacceptedCount":6},"pagination":{"activity":{"2011-03":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":3,"nonacceptedCount":1,"acceptedCount":2},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":3,"acceptedCount":3},"2011-09":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1},"2012-09":{"answerCount":1,"acceptedCount":1}},"answerCount":14,"acceptedCount":10,"relatedTags":{"jquery":1,"ruby-on-rails":11,"ruby-on-rails-3":9,"jquery-pagination":1,"ajax":1,"mysql":1,"kaminari":11,"paginate":1,"gem":1,"mongoid":1,"ruby":2,"ruby-on-rails-3.1":1,"yaml":1,"ruby-on-rails-3.2":1},"nonacceptedCount":4},"jquery-pagination":{"activity":{"2011-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"jquery":1,"ruby-on-rails":1,"ruby-on-rails-3":1,"pagination":1}},"ajax":{"activity":{"2011-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"pagination":1}},"ruby":{"activity":{"2011-05":{"answerCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":1,"acceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1},"2012-06":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1}},"answerCount":5,"nonacceptedCount":2,"relatedTags":{"ruby-on-rails":4,"ruby-on-rails-3":1,"heroku":1,"kaminari":4,"pagination":2,"activerecord":1,"yaml":1},"acceptedCount":3},"heroku":{"activity":{"2011-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"kaminari":1}},"kaminari":{"activity":{"2011-05":{"answerCount":5,"nonacceptedCount":3,"acceptedCount":2},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":3,"acceptedCount":3},"2011-09":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":2,"acceptedCount":2},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-06":{"answerCount":1,"acceptedCount":1},"2012-09":{"answerCount":1,"acceptedCount":1}},"answerCount":16,"nonacceptedCount":5,"relatedTags":{"ruby-on-rails":12,"ruby":4,"ruby-on-rails-3":10,"heroku":1,"mysql":1,"pagination":11,"paginate":1,"sql":1,"meta-search":1,"gem":1,"mongoid":1,"ruby-on-rails-3.1":1,"activerecord":1,"ruby-on-rails-3.2":1},"acceptedCount":11},"mysql":{"activity":{"2011-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"pagination":1,"kaminari":1}},"paginate":{"activity":{"2011-05":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"pagination":1,"kaminari":1}},"sql":{"activity":{"2011-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"meta-search":1,"kaminari":1}},"meta-search":{"activity":{"2011-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"sql":1,"ruby-on-rails":1,"ruby-on-rails-3":1,"kaminari":1}},"gem":{"activity":{"2011-06":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"pagination":1,"kaminari":1}},"mongoid":{"activity":{"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"pagination":1,"kaminari":1}},"ruby-on-rails-3.1":{"activity":{"2011-09":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"pagination":1,"kaminari":1}},"activerecord":{"activity":{"2011-11":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"kaminari":1}},"yaml":{"activity":{"2012-06":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"pagination":1}},"ruby-on-rails-3.2":{"activity":{"2012-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"pagination":1,"kaminari":1}}},"questions":[],"answers":{"4419131":{"id":"4419131","date":"2010-12","score":"20","body":"\"<p>I just created one. \\n<a href=\\\"https:\\\/\\\/github.com\\\/amatsuda\\\/nested_scaffold\\\">https:\\\/\\\/github.com\\\/amatsuda\\\/nested_scaffold<\\\/a><\\\/p>\\n\\n<p>Hope this helps!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><nested><generator><scaffolding>","commentcount":"4","accepted":"yes"},"5163200":{"id":"5163200","date":"2011-03","score":"47","body":"\"<p>Thank you for using Kaminari.<\\\/p>\\n\\n<p>I just created a brief sample project using Kaminari and jQuery, as I believe this is the best way to show you the actual code. git log tells you more than words!<\\\/p>\\n\\n<p>So, could you take a look at the commits here on \\\"ajax\\\" branch?  <a href=\\\"https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari_example\\\/commits\\\/ajax\\\">https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari_example\\\/commits\\\/ajax<\\\/a><\\\/p>\\n\\n<p>Hope this helps!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery><ruby-on-rails><ruby-on-rails-3><pagination><jquery-pagination>","commentcount":"5","accepted":"yes"},"5534279":{"id":"5534279","date":"2011-04","score":"1","body":"\"<p>Are you sure you have '#paginator' element for the paginator in you HTML?\\nI mean, does the following code return the element on Firebug?<\\\/p>\\n\\n<pre><code>jQuery('#paginator')\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ajax><pagination>","commentcount":"1","accepted":""},"5890467":{"id":"5890467","date":"2011-05","score":"3","body":"\"<p>It seems you're using an old custom theme for Kaminari '&lt; 0.11' with newer Kaminari gem.<\\\/p>\\n\\n<p>Can you please delete the whole <\\\/p>\\n\\n<blockquote>\\n  <p>app\\\/views\\\/kaminari<\\\/p>\\n<\\\/blockquote>\\n\\n<p>directory and recreate your pagination template again?\\nThanks!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><heroku><kaminari>","commentcount":"1","accepted":""},"5891870":{"id":"5891870","date":"2011-05","score":"0","body":"\"<p>:retailer is duplicated inside your join clause.\\nPlease change your join params to<\\\/p>\\n\\n<blockquote>\\n  <p>.joins(:retailer => :profile)<\\\/p>\\n<\\\/blockquote>\\n\"","title":"\"\"","favorite":null,"tags":"<mysql><ruby-on-rails-3><pagination><kaminari>","commentcount":"0","accepted":""},"5891948":{"id":"5891948","date":"2011-05","score":"4","body":"\"<p>The root cause of this problem is ActiveRecord 3.0's bug, which will be fixed in ActiveRecord 3.1 <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/commit\\\/d5994ee\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/rails\\\/rails\\\/commit\\\/d5994ee<\\\/a> \\n<a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/commit\\\/28c73f0\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/rails\\\/rails\\\/commit\\\/28c73f0<\\\/a><\\\/p>\\n\\n<p>And I did a monkeypatch on Kaminari to work with ActiveRecord 3.0 <a href=\\\"https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari\\\/blob\\\/9d0eebe38e2a22fb8100e491a6d94839d76c868f\\\/lib\\\/kaminari\\\/models\\\/active_record_relation_methods.rb#L7-11\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari\\\/blob\\\/9d0eebe38e2a22fb8100e491a6d94839d76c868f\\\/lib\\\/kaminari\\\/models\\\/active_record_relation_methods.rb#L7-11<\\\/a><\\\/p>\\n\\n<p>In short, updating your Kaminari gem to the newest one will fix your problem. Thanks!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><pagination><kaminari>","commentcount":"0","accepted":"yes"},"5892007":{"id":"5892007","date":"2011-05","score":"16","body":"\"<p>Do you mean you need a \\\"more\\\" button? How about creating a helper like this?<\\\/p>\\n\\n<pre><code># usage: \\n#   link_to_next_page(@items)\\n#   link_to_next_page(@items, :remote =&gt; true)  # Ajax\\ndef link_to_next_page(scope, name, options = {}, &amp;block)\\n  param_name = options.delete(:param_name) || Kaminari.config.param_name\\n  link_to_unless scope.last_page?, name, {param_name =&gt; (scope.current_page + 1)}, options.merge(:rel =&gt; 'next') do\\n    block.call if block\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I'm ready to include this kind of helper methods to the gem if you find it useful, so please let me know what you think. Thanks!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><pagination><paginate><kaminari>","commentcount":"6","accepted":"yes"},"5892128":{"id":"5892128","date":"2011-05","score":"3","body":"\"<p>it works for me with the current latest gems (meta_search 1.0.4, kaminari 0.12.4).<\\\/p>\\n\\n<p>As the author of Kaminari gem, I suppose some older versions of Kaminari possibly does not work with meta_search. I actually fixed several bugs that may cause this kind of problem.<\\\/p>\\n\\n<p>So, can you please upgrade your Kaminari gem and try again?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<sql><ruby-on-rails><ruby-on-rails-3><meta-search><kaminari>","commentcount":"0","accepted":""},"6272295":{"id":"6272295","date":"2011-06","score":"4","body":"\"<p>I still can not understand your code. Why do you assign Story.all to @stories in the 1st line and overwrite the variable in the 3rd line?<\\\/p>\\n\\n<p>Anyways, @stories will display \\\"all the stories from the DB\\\" because you're not calling the pagination method (<code>.per<\\\/code>) on @stories. The pagination links will show you the paginated counts because you're calling <code>per<\\\/code> method on @page variable and passing it to the helper.<\\\/p>\\n\\n<p>I mean, you need to call <code>.per<\\\/code> on the relation before passing it to <code>&lt;%= paginate %&gt;<\\\/code> helper.\\nIt's quite simple.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><pagination><gem><kaminari>","commentcount":"1","accepted":"yes"},"6544499":{"id":"6544499","date":"2011-07","score":"1","body":"\"<p>hrm, strange. That should work. I actually made a vanilla app with an action you shown above and the following models, but I couldn't reproduce the error.<\\\/p>\\n\\n<pre><code>class Dorm &lt; ActiveRecord::Base\\n  has_many :users\\n  has_many :photos, :through =&gt; :users\\nend\\n\\nclass User &lt; ActiveRecord::Base\\n  belongs_to :dorm\\n  has_many :photos\\nend\\n\\nclass Photo &lt; ActiveRecord::Base\\n  belongs_to :user\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>There should be another root cause in your app code. So, could you track down the problem a bit more? To begin with, does the following code work in your rails console?<\\\/p>\\n\\n<pre><code>@dorm.photos.page(1)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><pagination><kaminari>","commentcount":"3","accepted":"yes"},"7118960":{"id":"7118960","date":"2011-08","score":"3","body":"\"<p>I suppose this is not really a matter of pagination. Dealing with the params[:month] value for the query is something different from the page offset switching. You might not need a pagination library for that.<\\\/p>\\n\\n<p>How about simply creating those links like this?<\\\/p>\\n\\n<p>controller:<\\\/p>\\n\\n<pre><code>@posts = Post.by_month(Time.parse(params[:month]) || Time.now)\\n<\\\/code><\\\/pre>\\n\\n<p>view:<\\\/p>\\n\\n<pre><code>&lt;% Post.only(:created_at).map {|p| p.created_at.to_date.beginning_of_month}.uniq.sort.each do |m| -%&gt;\\n  &lt;%= link_to_unless_current m, :month =&gt; m %&gt;&amp;nbsp;\\n&lt;% end -%&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Of course you can combine this query with normal pagination if needed. But the pagination links should not be mixed with the month links in that case.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><pagination><mongoid><kaminari>","commentcount":"0","accepted":"yes"},"7142973":{"id":"7142973","date":"2011-08","score":"1","body":"\"<p>Firstly, is it correctly sorted without Kaminari?\\nI mean, how is <code>Post.order('pageviews')<\\\/code> sorted?<\\\/p>\\n\\n<p>Next, can you check the output SQL?\\nHow is it sorted if you run<\\\/p>\\n\\n<pre><code>Post.order('pageviews').page(1).to_sql\\n<\\\/code><\\\/pre>\\n\\n<p>result on your DB console?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><pagination><kaminari>","commentcount":"1","accepted":"yes"},"7225839":{"id":"7225839","date":"2011-08","score":"4","body":"\"<p>Just added a new feature on Kaminari::PaginatableArray that would solve your problem.\\n <a href=\\\"https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari\\\/pull\\\/141\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari\\\/pull\\\/141<\\\/a><\\\/p>\\n\\n<p>Can you bundle the edge version of Kaminari:<\\\/p>\\n\\n<pre><code>gem 'kaminari', :git =&gt; 'git:\\\/\\\/github.com\\\/amatsuda\\\/kaminari'\\n<\\\/code><\\\/pre>\\n\\n<p>and pass <code>:total_count<\\\/code> option to <code>PaginatableArray#new<\\\/code> like this?<\\\/p>\\n\\n<pre><code>Kaminari::PaginatableArray.new(array, :total_count =&gt; 1326).page(5)\\n<\\\/code><\\\/pre>\\n\\n<p>or<\\\/p>\\n\\n<pre><code>Kaminari::PaginatableArray.new(array, :total_count =&gt; 9999, :limit =&gt; 10, :offset =&gt; 30)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><pagination><kaminari>","commentcount":"3","accepted":"yes"},"7318151":{"id":"7318151","date":"2011-09","score":"1","body":"\"<p>I guess your <code>User#articles<\\\/code> is not just an ordinal <code>has_many<\\\/code>, so we need a bit more info to see what's actually happening.\\nCould you show us <code>current_user.articles.scoped.to_sql<\\\/code>?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><pagination><ruby-on-rails-3.1><kaminari>","commentcount":"0","accepted":""},"7974191":{"id":"7974191","date":"2011-11","score":"3","body":"\"<p>Your simplified code works for me with newest stable versions either, but anyway, if you're experiencing a strange behavior with default_scope + unscoped, it must be caused by this AR bug. <a href=\\\"https:\\\/\\\/rails.lighthouseapp.com\\\/projects\\\/8994\\\/tickets\\\/5386-arbaseunscoped-inconsistency\\\" rel=\\\"nofollow\\\">https:\\\/\\\/rails.lighthouseapp.com\\\/projects\\\/8994\\\/tickets\\\/5386-arbaseunscoped-inconsistency<\\\/a><\\\/p>\\n\\n<p>So, as the document sais, I recommend you to avoid using unscoped method in method chaining. Use block style instead. <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/2407a7a\\\/activerecord\\\/lib\\\/active_record\\\/base.rb#L938\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/2407a7a\\\/activerecord\\\/lib\\\/active_record\\\/base.rb#L938<\\\/a><\\\/p>\\n\\n<pre><code>Article.unscoped { Article.page(nil).per(30) }.to_sql\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><activerecord><kaminari>","commentcount":"0","accepted":"yes"},"8206154":{"id":"8206154","date":"2011-11","score":"3","body":"\"<blockquote>\\n  <p>Yes, but how to query the same without an array? That's what I need.<\\\/p>\\n<\\\/blockquote>\\n\\n<pre><code>@stories = Story.where(:keynote_id =&gt; @keynote).order('created_at DESC').page(params[:page])\\n<\\\/code><\\\/pre>\\n\\n<p>or<\\\/p>\\n\\n<pre><code>Keynote.has_many :stories\\n\\n@stories = @keynote.stories.order('created_at DESC').page(params[:page])\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><pagination><kaminari>","commentcount":"1","accepted":"yes"},"8598341":{"id":"8598341","date":"2011-12","score":"0","body":"\"<p>I believe this problem was fixed in kaminari 0.13.0 gem. Could you try the newest gem?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><kaminari>","commentcount":"0","accepted":""},"10951858":{"id":"10951858","date":"2012-06","score":"8","body":"\"<p>I recently made series of changes on Kaminari tests. <a href=\\\"https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari\\\/compare\\\/b61db76...1f8389ae\\\">https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari\\\/compare\\\/b61db76...1f8389ae<\\\/a><\\\/p>\\n\\n<p>As a result of this big refactoring, now the tests can be run separately per each ORM library, for example like this:<\\\/p>\\n\\n<pre><code>BUNDLE_GEMFILE=gemfiles\\\/active_record_32.gemfile bundle exec rake spec\\n<\\\/code><\\\/pre>\\n\\n<p>To run all tests at once, you should invoke <code>spec:all<\\\/code> task:<\\\/p>\\n\\n<pre><code>bundle exec rake spec:all\\n<\\\/code><\\\/pre>\\n\\n<p>I'm aware that this is a bit unusual. At least it apparently needs to be documented. I'll do so till the next stable release.<\\\/p>\\n\\n<p>Or if you have any better solution, please tell me.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><kaminari>","commentcount":"0","accepted":"yes"},"11048233":{"id":"11048233","date":"2012-06","score":"3","body":"\"<p>Try <a href=\\\"https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari\\\" rel=\\\"nofollow\\\">Kaminari<\\\/a> gem.\\nYou can paginate through any kind of Array-ish object using <a href=\\\"https:\\\/\\\/github.com\\\/amatsuda\\\/kaminari\\\/blob\\\/master\\\/lib\\\/kaminari\\\/models\\\/array_extension.rb\\\" rel=\\\"nofollow\\\">Kaminari::PaginatableArray<\\\/a><\\\/p>\\n\\n<pre><code>&gt; p Kaminari::PaginatableArray.new([*1..100]).page(3).per(20)\\n[41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><pagination><yaml>","commentcount":"0","accepted":""},"12561467":{"id":"12561467","date":"2012-09","score":"1","body":"\"<p>Kaminari is designed to work with ActiveRecord 3+ style query interface only.<\\\/p>\\n\\n<p>Please avoid using <code>:conditions<\\\/code> \\\"Hasheritis\\\" syntax which will be deprecated sooner or later, but chain with <code>where<\\\/code> method instead.<\\\/p>\\n\\n<p>Usage of the <code>where<\\\/code> method is well documented here on the Rails Guides: <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/active_record_querying.html#conditions\\\" rel=\\\"nofollow\\\">http:\\\/\\\/guides.rubyonrails.org\\\/active_record_querying.html#conditions<\\\/a><\\\/p>\\n\\n<p>Your controller code should be like this:<\\\/p>\\n\\n<pre><code>feeds = Feed.where(:source =&gt; ['beep', 'sub_beep']).order('created_at desc').page(params[:page])\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<pagination><ruby-on-rails-3.2><kaminari>","commentcount":"0","accepted":"yes"}},"comments":{"6778642":{"date":"2011-05","id":"6778642","postid":"5502112","body":"\"Hi, I guess you need to change your .joins statement to .joins(:retailer => :profile) I mean, :retailer is duplicated.\"","score":"0","tags":""}}}