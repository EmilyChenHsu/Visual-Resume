{"displayName":"Aaron Patterson","id":"178850","avatar":"","creationDate":"2009-09-25 03:28:51","website":"http:\/\/tenderlovemaking.com\/","reputation":"1121","questionCount":0,"answerCount":3,"commentCount":0,"acceptedCount":2,"nonacceptedCount":1,"activity":{"2012-02":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1}},"tags":{"ruby":{"activity":{"2012-02":{"answerCount":1,"acceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"acceptedCount":2,"relatedTags":{"activerecord":1,"arel":1,"string":1,"yaml":1,"psych":1}},"activerecord":{"activity":{"2012-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"arel":1}},"arel":{"activity":{"2012-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"activerecord":1}},"xml":{"activity":{"2012-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"xpath":1,"nokogiri":1}},"xpath":{"activity":{"2012-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"xml":1,"nokogiri":1}},"nokogiri":{"activity":{"2012-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"xml":1,"xpath":1}},"string":{"activity":{"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"yaml":1,"psych":1}},"yaml":{"activity":{"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"string":1,"psych":1}},"psych":{"activity":{"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"string":1,"yaml":1}}},"questions":[],"answers":{"9317431":{"id":"9317431","date":"2012-02","score":"7","body":"\"<p>Use <code>NamedFunction<\\\/code>:<\\\/p>\\n\\n<pre><code>name = Arel::Attribute.new(Arel::Table.new(:countries), :name)\\nfunc = Arel::Nodes::NamedFunction.new 'zomg', [name]\\nCountry.select([name, func]).to_sql\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><activerecord><arel>","commentcount":"2","accepted":"yes"},"9351246":{"id":"9351246","date":"2012-02","score":"0","body":"\"<p>If you just want to access the root node in the document, you can do this:<\\\/p>\\n\\n<pre><code>root = doc.root\\nroot_id = root['id']\\nlast_edited = root['lastEdited']\\n<\\\/code><\\\/pre>\\n\\n<p>If you need to find it with XPath, you need to use the correct namespace.  Your root node has a namespace of \\\"p\\\", so you must do this:<\\\/p>\\n\\n<pre><code>doc.xpath('\\\/p:educationProvider\\\/@id').first.value\\n<\\\/code><\\\/pre>\\n\\n<p>Notice the <code>p:<\\\/code> that is preceding your node name.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<xml><xpath><nokogiri>","commentcount":"2","accepted":""},"9670812":{"id":"9670812","date":"2012-03","score":"5","body":"\"<pre><code>require 'psych'\\n\\n# Construct an AST\\nvisitor = Psych::Visitors::YAMLTree.new({})\\nvisitor &lt;&lt; DATA.read\\nast = visitor.tree\\n\\n# Find all scalars and modify their formatting\\nast.grep(Psych::Nodes::Scalar).each do |node|\\n  node.plain  = false\\n  node.quoted = true\\n  node.style  = Psych::Nodes::Scalar::LITERAL\\nend\\n\\nbegin\\n  # Call the `yaml` method on the ast to convert to yaml\\n  puts ast.yaml\\nrescue\\n  # The `yaml` method was introduced in later versions, so fall back to\\n  # constructing a visitor\\n  Psych::Visitors::Emitter.new($stdout).accept ast\\nend\\n\\n__END__\\n{\\n  \\\"page\\\": 1,\\n  \\\"results\\\": [\\n    \\\"item\\\", \\\"another\\\"\\n],\\n  \\\"total_pages\\\": 0\\n}\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><string><yaml><psych>","commentcount":"1","accepted":"yes"}},"comments":[]}