{"displayName":"Ryan Bigg","id":"15245","avatar":"","creationDate":"2008-09-17 07:34:53","website":"http:\/\/ryanbigg.com","reputation":"66124","questionCount":18,"answerCount":1049,"commentCount":1432,"acceptedCount":541,"nonacceptedCount":508,"activity":{"2010-09":{"commentCount":15,"answerCount":14,"acceptedCount":8,"nonacceptedCount":6,"questionCount":1},"2010-10":{"commentCount":23,"answerCount":24,"acceptedCount":13,"nonacceptedCount":11},"2010-11":{"commentCount":39,"answerCount":43,"nonacceptedCount":29,"acceptedCount":14},"2010-12":{"commentCount":91,"answerCount":80,"nonacceptedCount":42,"acceptedCount":38,"questionCount":1},"2011-01":{"commentCount":100,"questionCount":5,"answerCount":73,"acceptedCount":33,"nonacceptedCount":40},"2011-02":{"commentCount":33,"answerCount":33,"nonacceptedCount":17,"acceptedCount":16,"questionCount":1},"2011-03":{"commentCount":36,"answerCount":40,"acceptedCount":21,"nonacceptedCount":19},"2011-04":{"commentCount":68,"answerCount":45,"acceptedCount":23,"nonacceptedCount":22,"questionCount":1},"2011-05":{"commentCount":54,"answerCount":37,"acceptedCount":18,"nonacceptedCount":19},"2011-06":{"commentCount":31,"answerCount":34,"acceptedCount":21,"nonacceptedCount":13},"2011-07":{"commentCount":35,"answerCount":22,"nonacceptedCount":8,"acceptedCount":14,"questionCount":1},"2011-08":{"commentCount":63,"answerCount":49,"nonacceptedCount":22,"acceptedCount":27},"2011-09":{"commentCount":23,"answerCount":26,"nonacceptedCount":9,"acceptedCount":17},"2011-10":{"commentCount":63,"answerCount":48,"nonacceptedCount":20,"acceptedCount":28,"questionCount":1},"2011-11":{"commentCount":24,"answerCount":21,"acceptedCount":14,"nonacceptedCount":7},"2011-12":{"commentCount":73,"answerCount":50,"acceptedCount":25,"nonacceptedCount":25},"2012-01":{"commentCount":40,"answerCount":26,"acceptedCount":16,"nonacceptedCount":10},"2012-02":{"commentCount":44,"answerCount":26,"nonacceptedCount":11,"acceptedCount":15},"2012-03":{"commentCount":48,"questionCount":2,"answerCount":32,"nonacceptedCount":14,"acceptedCount":18},"2012-04":{"commentCount":18,"answerCount":16,"nonacceptedCount":10,"acceptedCount":6},"2012-06":{"commentCount":13,"answerCount":15,"nonacceptedCount":9,"questionCount":1,"acceptedCount":6},"2012-05":{"commentCount":11,"answerCount":12,"acceptedCount":6,"nonacceptedCount":6},"2012-07":{"commentCount":26,"answerCount":33,"nonacceptedCount":16,"acceptedCount":17,"questionCount":1},"2012-09":{"commentCount":9,"answerCount":9,"acceptedCount":6,"nonacceptedCount":3},"2012-10":{"commentCount":74,"answerCount":33,"acceptedCount":15,"nonacceptedCount":18},"2012-08":{"commentCount":9,"answerCount":12,"acceptedCount":7,"nonacceptedCount":5},"2012-11":{"commentCount":48,"answerCount":22,"nonacceptedCount":9,"acceptedCount":13},"2012-12":{"commentCount":14,"answerCount":10,"nonacceptedCount":6,"acceptedCount":4},"2013-01":{"commentCount":18,"answerCount":9,"acceptedCount":3,"nonacceptedCount":6},"2013-02":{"commentCount":45,"answerCount":16,"nonacceptedCount":8,"acceptedCount":8},"2013-03":{"commentCount":34,"answerCount":15,"nonacceptedCount":3,"acceptedCount":12},"2013-04":{"commentCount":21,"answerCount":6,"nonacceptedCount":3,"questionCount":2,"acceptedCount":3},"2013-07":{"commentCount":30,"answerCount":19,"nonacceptedCount":11,"acceptedCount":8,"questionCount":1},"2013-06":{"commentCount":4,"answerCount":4,"acceptedCount":3,"nonacceptedCount":1},"2013-08":{"commentCount":43,"answerCount":24,"acceptedCount":14,"nonacceptedCount":10},"2013-09":{"commentCount":41,"answerCount":22,"nonacceptedCount":11,"acceptedCount":11},"2013-05":{"commentCount":2,"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2013-10":{"commentCount":35,"answerCount":18,"acceptedCount":7,"nonacceptedCount":11},"2014-01":{"commentCount":5,"answerCount":1,"acceptedCount":1},"2014-02":{"commentCount":4,"answerCount":1,"acceptedCount":1},"2014-03":{"commentCount":16,"answerCount":21,"acceptedCount":8,"nonacceptedCount":13},"2013-11":{"commentCount":7,"answerCount":4,"acceptedCount":2,"nonacceptedCount":2},"2013-12":{"commentCount":2,"answerCount":1,"nonacceptedCount":1}},"tags":{"ruby-on-rails":{"activity":{"2010-09":{"commentCount":4,"answerCount":12,"acceptedCount":7,"nonacceptedCount":5},"2010-10":{"commentCount":12,"answerCount":23,"acceptedCount":12,"nonacceptedCount":11},"2010-11":{"commentCount":13,"answerCount":37,"nonacceptedCount":26,"acceptedCount":11},"2010-12":{"commentCount":21,"answerCount":65,"nonacceptedCount":31,"acceptedCount":34,"questionCount":1},"2011-01":{"commentCount":34,"answerCount":55,"nonacceptedCount":32,"acceptedCount":23,"questionCount":3},"2011-02":{"commentCount":13,"answerCount":24,"acceptedCount":11,"nonacceptedCount":13},"2011-04":{"commentCount":31,"answerCount":36,"acceptedCount":17,"nonacceptedCount":19,"questionCount":1},"2011-03":{"commentCount":8,"answerCount":30,"nonacceptedCount":15,"acceptedCount":15},"2011-05":{"commentCount":17,"answerCount":22,"acceptedCount":9,"nonacceptedCount":13},"2011-06":{"commentCount":6,"answerCount":22,"acceptedCount":13,"nonacceptedCount":9},"2011-07":{"commentCount":9,"answerCount":10,"nonacceptedCount":4,"questionCount":1,"acceptedCount":6},"2011-08":{"commentCount":26,"answerCount":27,"nonacceptedCount":12,"acceptedCount":15},"2011-09":{"commentCount":8,"answerCount":8,"nonacceptedCount":5,"acceptedCount":3},"2011-10":{"commentCount":16,"answerCount":36,"nonacceptedCount":11,"acceptedCount":25},"2011-11":{"commentCount":12,"answerCount":16,"acceptedCount":10,"nonacceptedCount":6},"2011-12":{"commentCount":29,"answerCount":37,"acceptedCount":15,"nonacceptedCount":22},"2012-01":{"commentCount":10,"answerCount":20,"acceptedCount":12,"nonacceptedCount":8},"2012-02":{"commentCount":13,"answerCount":18,"acceptedCount":9,"nonacceptedCount":9},"2012-03":{"commentCount":26,"answerCount":25,"nonacceptedCount":8,"acceptedCount":17},"2012-04":{"commentCount":5,"answerCount":11,"nonacceptedCount":6,"acceptedCount":5},"2012-06":{"commentCount":7,"answerCount":13,"nonacceptedCount":8,"questionCount":1,"acceptedCount":5},"2012-05":{"commentCount":5,"answerCount":10,"acceptedCount":4,"nonacceptedCount":6},"2012-09":{"commentCount":6,"answerCount":9,"acceptedCount":6,"nonacceptedCount":3},"2012-10":{"commentCount":24,"answerCount":17,"nonacceptedCount":10,"acceptedCount":7},"2012-07":{"commentCount":4,"answerCount":19,"acceptedCount":11,"nonacceptedCount":8,"questionCount":1},"2012-08":{"commentCount":4,"answerCount":8,"acceptedCount":6,"nonacceptedCount":2},"2012-11":{"commentCount":15,"answerCount":14,"nonacceptedCount":6,"acceptedCount":8},"2012-12":{"commentCount":3,"answerCount":7,"nonacceptedCount":4,"acceptedCount":3},"2013-01":{"commentCount":11,"answerCount":8,"acceptedCount":3,"nonacceptedCount":5},"2013-02":{"commentCount":18,"answerCount":12,"nonacceptedCount":6,"acceptedCount":6},"2013-03":{"commentCount":11,"answerCount":10,"acceptedCount":10},"2013-04":{"commentCount":7,"questionCount":1,"answerCount":4,"nonacceptedCount":1,"acceptedCount":3},"2013-07":{"commentCount":11,"answerCount":12,"acceptedCount":7,"nonacceptedCount":5},"2013-08":{"commentCount":19,"answerCount":17,"nonacceptedCount":9,"acceptedCount":8},"2013-09":{"commentCount":21,"answerCount":13,"nonacceptedCount":6,"acceptedCount":7},"2013-10":{"commentCount":15,"answerCount":10,"acceptedCount":4,"nonacceptedCount":6},"2014-01":{"commentCount":3,"answerCount":1,"acceptedCount":1},"2014-02":{"commentCount":1},"2014-03":{"commentCount":6,"answerCount":11,"nonacceptedCount":7,"acceptedCount":4},"2013-11":{"commentCount":2,"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"2013-12":{"commentCount":1},"2013-05":{"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2013-06":{"answerCount":3,"acceptedCount":3}},"commentCount":507,"relatedTags":{"json":9,"routes":40,"bundler":16,"ruby-on-rails-3":442,"rake":26,"paperclip":12,"devise":45,"session":3,"ruby":342,"partial-views":4,"rspec2":7,"spork":3,"ubuntu":7,"rmagick":1,"sql":6,"join":1,"fields-for":3,"routing":29,"mongrel":2,"dispatch":1,"authlogic":1,"passenger":10,"webfaction":1,"rails-activerecord":9,"forms":14,"activerecord":59,"scaffold":1,"rspec":65,"populate":1,"osx":7,"bundle":8,"cucumber":19,"database":9,"sqlite3":10,"controller":20,"action":2,"halting-problem":1,"internationalization":1,"rubygems":34,"installation":4,"capybara":12,"rakefile":1,"css":5,"selectbox":1,"mysql":9,"mongodb":6,"mongomapper":1,"mongodb-ruby":1,"testing":19,"delayed-job":6,"upgrade":2,"dynamic-finders":1,"recaptcha":2,"migration":7,"tdd":3,"heroku":30,"apache":7,"rack":12,"fcgi":2,"windows":3,"rspec-rails":11,"nested-attributes":5,"ubuntu-10.04":1,"gem":21,"cancan":13,"sqlite3-ruby":2,"rvm":8,"javascript":11,"jquery":11,"gmail":5,"actionmailer":9,"rails-migrations":3,"rest":8,"delete":3,"view":1,"local-variables":2,"methods":5,"console":4,"postgresql":9,"boolean":2,"seed":1,"environment":1,"unit-testing":7,"rails-engines":10,"datamapper":2,"validation":4,"rails-routing":12,"ajax":11,"authentication":7,"facebook":3,"model-associations":1,"xml":6,"escaping":2,"hpricot":1,"yaml":2,"symbols":1,"block":1,"include":2,"initalization":1,"activeresource":3,"admin":2,"models":2,"rails-models":1,"kaminari":1,"ruby-on-rails-3.1":31,"associations":18,"belongs-to":8,"ruby-on-rails-plugins":6,"ruby-on-rails-2":3,"model-view-controller":9,"monkeypatching":2,"activemerchant":2,"nokogiri":5,"railscasts":5,"mongoid":8,"osx-lion":1,"sinatra":2,"model":4,"save":2,"declarative-authorization":2,"nginx":4,"thin":2,"asset-pipeline":11,"spree":48,"rest-client":1,"net-http":3,"design":2,"shipping":1,"thor":1,"hash":5,"params":4,"sprockets":4,"railstutorial.org":5,"sqlite":2,"many-to-many":1,"relationships":1,"activemodel":3,"ruby-1.9":2,"pagination":1,"will-paginate":3,"namespaces":3,"windows-7":2,"datetime":2,"factory-girl":9,"dry":2,"simple-form":2,"primary-key":1,"internet-explorer":1,"http-protocols":1,"facebooker":1,"update-attributes":1,"web":1,"ruby-on-rails-3.2.1":3,"arrays":4,"edit":2,"parameters":3,"new-operator":1,"git":4,"version-control":1,"branch":1,"get":1,"multithreading":2,"queue":3,"habtm":1,"database-management":2,"builder":1,"wkhtmltopdf":1,"wicked-pdf":1,"iphone":1,"ios":1,"retina-display":1,"destroy":1,"performance":2,"string":4,"plural":2,"idempotent":2,"ms-word":1,"github":4,"terminal":3,"ruby-on-rails-3.2":20,"templates":5,"erb":7,"require":2,"subdomains":2,"content-management-system":1,"browsercms":1,"amazon-s3":1,"nil":1,"param":1,"seeding":2,"facebook-graph-api":1,"koala":1,"deface":2,"google-analytics":2,"analytics":2,"assets":3,"has-many":2,"helper":1,"global-variables":1,"e-commerce":3,"put":2,"multidimensional-array":1,"partials":2,"production":2,"piggybak":1,"ember.js":2,"twitter-bootstrap":2,"xmlhttprequest":2,"linux":2,"path":2,"character-encoding":1,"rolify":1,"activescaffold":2,"instagram":1,"activeadmin":3,"production-environment":3,"mediawiki":2,"deployment":1,"capistrano":3,"constants":1,"polymorphic-associations":5,"nlp":2,"file-upload":3,"paypal":2,"shopping-cart":3,"checkout":1,"cart":2,"tcp":1,"monitoring":1,"comments":3,"ruby-on-rails-4":23,"html":6,"angularjs":1,"post":1,"locale":3,"ruby-on-rails-4-1":1,"github-api":1,"friendly-id":1,"ruby-1.8.7":1,"rails-i18n":2,"cron":1,"whenever":1,"multi-tenant":2,"multi-tenancy":1,"acts-as-tenant":1,"roles":1,"curl":3,"generator":4,"user":2,"controllers":2,"html5":1,"button":1,"design-patterns":1,"error-handling":1,"httparty":2,"cycle":1,"layout":4,"initialization":1,"custom-action":1,"email":3,"smtp":1,"process":1,"cloud":1,"parallel-processing":1,"random":1,"uri":1,"static-pages":1,"timestamp":1,"activesupport":2,"ramaze":1,"scheduled-tasks":1,"arel":1,"railtie":1,"iteration":1,"helpers":1,"redcloth":1,"formatting":1,"security":5,"encryption":1,"binding":1,"resources":2,"nested":2,"pluralize":1,"syntax":1,"form-for":3,"ckeditor":1,"bdd":3,"matcher":1,"link-to":3,"number-with-delimiter":1,"nested-forms":7,"polymorphism":1,"crud":1,"attr-accessible":1,"loops":1,"each":1,"httpwebrequest":1,"setup":1,"ruby-debug":1,"content-type":1,"httprequest":1,"actiondispatch":1,"textmate":2,"google-chrome":1,"scope":1,"feeds":1,"meta-search":1,"restful-authentication":1,"api":2,"documentation":1,"link-to-remote":1,"locking":1,"ubuntu-10.10":1,"rdoc":1,"integration-testing":1,"url":3,"request":1,"has-one":1,"current-page":1,"date":4,"configuration":1,"actioncontroller":1,"loc":1,"redirect":2,"twitter":1,"compatibility":1,"search-engine":1,"spider":1,"testunit":1,"timezone":2,"fastercsv":1,"syntax-error":1,"filter":1,"initializer":1,"observer-pattern":1,"url-helper":1,"render":1,"server-error":1,"config":1,"parent-child":1,"warnings":1,"unobtrusive-javascript":1,"named-scope":1,"middleware":1,"soap":1,"savon":1,"localization":1,"number-to-currency":1,"jquery-selectors":1,"sorting":2,"plugins":3,"modularity":1,"redmine":1,"database-migration":1,"dbmigrate":1,"cookies":1,"sendmail":1,"time":1,"nested-sets":1,"deprecated":1,"sendgrid":1,"irb":1,"oracle":1,"search":1,"where":1,"mobile":1,"sencha-touch":1,"root":1,"selenium":1,"selenium2":1,"symfony2":1,"networking":1,"csv":2,"rails-admin":2,"searchlogic":1,"attributes":2,"url-scheme":1,"naming":1,"forum":1,"template-engine":1,"slim-lang":1,"nested-form-for":1,"callback":1,"warden":1,"favicon":1,"inheritance":1,"versioning":1,"infinite-loop":1,"polymorphic":1,"activerelation":1,"redis":1,"views":1,"authorization":1,"hobo":1,"godaddy":1,"elasticsearch":1,"tire":1,"travis-ci":1,"best-in-place":1,"login":1,"before-filter":1,"nested-resources":2,"order":2,"unicode":1,"directory":1,"pusher":1,"after-save":1,"translation":1,"file-io":1,"minitest":1,"subdomain":2,"ubuntu-12.04":1,"view-helpers":1,"refactoring":1,"instance-variables":1,"input":1,"ransack":1,"oauth":1,"sass":1,"partial":1,"globalize3":1,"cloudfoundry":1,"osx-mountain-lion":1,"paginate":1,"product":1,"blogs":1,"regex":1,"floating-point":1,"gsub":1,"braintree":1,"omniauth":1,"padrino":1,"mint":1,"vote-up-buttons":1,"html-escape-characters":1,"inherited-resources":1,"iframe":1,"localhost":1,"caching":1,"newrelic":1},"answerCount":738,"acceptedCount":378,"nonacceptedCount":360,"questionCount":9},"json":{"activity":{"2010-09":{"commentCount":1},"2012-02":{"commentCount":1},"2012-11":{"commentCount":1},"2012-12":{"commentCount":2},"2012-10":{"commentCount":2},"2013-10":{"commentCount":2},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2011-02":{"answerCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":1,"nonacceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1},"2013-09":{"answerCount":3,"acceptedCount":1,"nonacceptedCount":2}},"commentCount":9,"relatedTags":{"ruby-on-rails":9,"jquery":4,"get":1,"xml":2,"ruby-on-rails-3":3,"ruby":2,"javascript":5,"jsonp":2,"blackberry-webworks":2,"ajax":1,"cucumber":1,"capybara":1},"answerCount":7,"nonacceptedCount":6,"acceptedCount":1},"routes":{"activity":{"2010-10":{"commentCount":1},"2010-12":{"commentCount":1,"answerCount":3,"acceptedCount":3},"2011-04":{"commentCount":1},"2011-07":{"commentCount":2,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-08":{"commentCount":1,"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2011-12":{"commentCount":1},"2012-02":{"commentCount":2},"2012-10":{"commentCount":1},"2012-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-02":{"commentCount":2,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-01":{"commentCount":1},"2013-09":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-08":{"commentCount":1},"2010-11":{"answerCount":1,"nonacceptedCount":1},"2011-01":{"questionCount":1,"answerCount":1,"nonacceptedCount":1},"2011-02":{"answerCount":1,"acceptedCount":1},"2011-03":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":2,"acceptedCount":2},"2011-10":{"answerCount":3,"nonacceptedCount":3},"2011-11":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":3,"nonacceptedCount":1,"acceptedCount":2},"2012-03":{"answerCount":1,"acceptedCount":1},"2012-07":{"answerCount":1,"nonacceptedCount":1},"2012-09":{"answerCount":1,"acceptedCount":1}},"commentCount":17,"relatedTags":{"ruby-on-rails":40,"bundler":1,"ruby":2,"partial-views":3,"ruby-on-rails-3":27,"rack":2,"update-attributes":1,"ruby-on-rails-3.2":2,"rest":3,"put":2,"model-view-controller":2,"devise":3,"partials":1,"spree":1,"routing":2,"rails-routing":2,"url":2,"rake":1,"namespaces":1,"production-environment":1,"controller":3,"admin":1,"heroku":1,"resources":1,"cucumber":1,"integration-testing":1,"helper":1,"database":1,"user":1,"rspec":1,"ruby-on-rails-3.1":2,"nested-routes":1,"url-scheme":1,"versioning":1,"forms":1,"input":1,"rails-engines":1,"gem":1,"ruby-on-rails-4":1},"answerCount":32,"nonacceptedCount":14,"acceptedCount":18,"questionCount":1},"bundler":{"activity":{"2010-10":{"commentCount":1},"2010-09":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2010-11":{"commentCount":1},"2011-01":{"commentCount":1},"2011-06":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2011-08":{"commentCount":2},"2011-09":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-02":{"commentCount":1},"2012-10":{"commentCount":1},"2013-02":{"commentCount":2},"2013-04":{"commentCount":1},"2013-09":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-08":{"commentCount":1},"2013-10":{"commentCount":2},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-02":{"answerCount":1,"nonacceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1},"2014-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":18,"relatedTags":{"ruby-on-rails":16,"routes":1,"ruby-on-rails-3":14,"bundle":3,"rspec":1,"rvm":4,"encoding":2,"ruby-1.9.2":2,"ruby":12,"aptana":1,"gem":4,"rake":1,"assets":1,"rubygems":6,"chef":1,"git":1,"cucumber":1,"capybara":1,"heroku":2,"asset-pipeline":1},"answerCount":12,"acceptedCount":5,"nonacceptedCount":7},"ruby-on-rails-3":{"activity":{"2010-10":{"commentCount":5,"answerCount":6,"nonacceptedCount":5,"acceptedCount":1},"2010-11":{"commentCount":3,"answerCount":11,"acceptedCount":6,"nonacceptedCount":5},"2010-12":{"commentCount":7,"answerCount":22,"acceptedCount":14,"nonacceptedCount":8},"2010-09":{"commentCount":1,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-01":{"commentCount":16,"answerCount":33,"nonacceptedCount":17,"acceptedCount":16,"questionCount":2},"2011-02":{"commentCount":8,"answerCount":18,"acceptedCount":9,"nonacceptedCount":9,"questionCount":1},"2011-04":{"commentCount":18,"answerCount":20,"acceptedCount":11,"nonacceptedCount":9},"2011-03":{"commentCount":6,"answerCount":22,"acceptedCount":15,"nonacceptedCount":7},"2011-05":{"commentCount":16,"answerCount":23,"acceptedCount":13,"nonacceptedCount":10},"2011-06":{"commentCount":6,"answerCount":21,"acceptedCount":10,"nonacceptedCount":11},"2011-07":{"commentCount":11,"answerCount":11,"nonacceptedCount":4,"acceptedCount":7},"2011-08":{"commentCount":25,"answerCount":37,"nonacceptedCount":17,"acceptedCount":20},"2011-09":{"commentCount":9,"answerCount":19,"nonacceptedCount":5,"acceptedCount":14},"2011-10":{"commentCount":9,"answerCount":25,"acceptedCount":14,"nonacceptedCount":11},"2011-11":{"commentCount":10,"answerCount":8,"acceptedCount":5,"nonacceptedCount":3},"2011-12":{"commentCount":19,"answerCount":23,"acceptedCount":16,"nonacceptedCount":7},"2012-01":{"commentCount":5,"answerCount":10,"nonacceptedCount":3,"acceptedCount":7},"2012-03":{"commentCount":6,"answerCount":12,"nonacceptedCount":4,"acceptedCount":8},"2012-02":{"commentCount":3,"answerCount":14,"acceptedCount":8,"nonacceptedCount":6},"2012-04":{"commentCount":1,"answerCount":6,"nonacceptedCount":4,"acceptedCount":2},"2012-06":{"commentCount":5,"answerCount":9,"nonacceptedCount":7,"acceptedCount":2},"2012-05":{"commentCount":3,"answerCount":2,"acceptedCount":2},"2012-09":{"commentCount":2,"answerCount":2,"acceptedCount":2},"2012-10":{"commentCount":13,"answerCount":12,"acceptedCount":8,"nonacceptedCount":4},"2012-07":{"commentCount":2,"answerCount":17,"nonacceptedCount":8,"acceptedCount":9},"2012-08":{"commentCount":2,"answerCount":6,"acceptedCount":3,"nonacceptedCount":3},"2012-11":{"commentCount":9,"answerCount":9,"nonacceptedCount":1,"acceptedCount":8},"2013-01":{"commentCount":2,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-02":{"commentCount":12,"answerCount":5,"acceptedCount":3,"nonacceptedCount":2},"2012-12":{"commentCount":1,"answerCount":2,"nonacceptedCount":2},"2013-03":{"commentCount":10,"answerCount":5,"acceptedCount":5},"2013-07":{"commentCount":4,"answerCount":8,"nonacceptedCount":7,"acceptedCount":1},"2013-08":{"commentCount":8,"answerCount":5,"nonacceptedCount":2,"acceptedCount":3},"2013-09":{"commentCount":11,"answerCount":6,"nonacceptedCount":2,"acceptedCount":4},"2013-04":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2013-10":{"commentCount":8,"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"2014-02":{"commentCount":1},"2014-03":{"commentCount":5,"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2013-12":{"commentCount":1},"2013-06":{"answerCount":3,"acceptedCount":3},"2014-01":{"answerCount":1,"acceptedCount":1}},"commentCount":285,"relatedTags":{"ruby-on-rails":442,"rake":13,"session":1,"devise":28,"ubuntu":4,"rmagick":1,"bundler":14,"amazon-s3":4,"paperclip":12,"populate":1,"yaml":2,"ruby-1.9.1":2,"ruby":157,"send":1,"rakefile":1,"css":4,"selectbox":1,"javascript":5,"jquery-ui":2,"api":2,"routing":17,"rspec":31,"unit-testing":7,"activerecord":34,"migration":3,"testing":8,"tdd":4,"heroku":16,"nokogiri":1,"cucumber":14,"capybara":5,"nested-attributes":3,"cancan":11,"jquery":13,"rspec2":6,"webrat":3,"jrails":1,"kaminari":1,"view":5,"local-variables":1,"gem":13,"rails-engines":9,"validation":5,"methods":4,"rails-routing":9,"authentication":5,"facebook":2,"routes":27,"rack":5,"actionmailer":5,"admin":2,"dispatch":1,"models":2,"rails-models":2,"deployment":1,"error-handling":1,"stack-trace":1,"sorting":2,"where":1,"activemodel":2,"ruby-on-rails-3.1":30,"ruby-1.8":1,"arrays":2,"multidimensional-array":1,"ruby-1.9.2":3,"gmail":3,"mailer":2,"ruby-on-rails-plugins":6,"encoding":2,"rvm":5,"bundle":2,"rubygems":16,"delayed-job":3,"osx":2,"postgresql":6,"osx-lion":1,"ubuntu-11.04":1,"sinatra":2,"model":5,"controller":9,"declarative-authorization":2,"rest-client":1,"net-http":1,"wiki":2,"dynamic-finders":1,"polymorphism":1,"has-many":3,"mysql":4,"sqlite":2,"sqlite3":3,"url":3,"ruby-1.9":2,"installation":1,"spree":18,"pagination":1,"will-paginate":2,"aptana":1,"facebook-credits":1,"windows-7":2,"datetime":3,"factory-girl":8,"message-queue":1,"dry":2,"simple-form":1,"partial":2,"coffeescript":2,"passenger":3,"asset-pipeline":5,"sprockets":3,"wkhtmltopdf":1,"wicked-pdf":2,"forms":7,"params":2,"nil":1,"param":1,"facebook-graph-api":1,"koala":1,"ruby-on-rails-3.2":14,"associations":12,"e-commerce":2,"xml":2,"json":3,"rspec-rails":2,"railstutorial.org":1,"piggybak":1,"rss":2,"mime-types":2,"scraper":2,"ajax":5,"character-encoding":1,"instagram":1,"activeadmin":3,"haml":1,"performance":2,"comparison":2,"rabl":2,"jsonbuilder":2,"mediawiki":2,"constants":1,"form-for":4,"mongodb":3,"hash":4,"mongoid":3,"rails-activerecord":2,"ruby-on-rails-4":7,"nested-forms":2,"image-upload":1,"https":1,"flash-message":1,"github":2,"github-api":1,"git":5,"ssh":1,"capistrano":3,"su":1,"shopping-cart":2,"multi-tenant":1,"multi-tenancy":1,"acts-as-tenant":1,"html":4,"curl":2,"arel":1,"security":1,"encryption":1,"sql":3,"bdd":4,"delete":2,"link-to":2,"datamapper":1,"rest":1,"crud":1,"sed":1,"activeresource":2,"attr-accessible":1,"apache":1,"database":3,"observer-pattern":2,"nested-routes":2,"content-type":1,"httprequest":1,"actiondispatch":1,"textmate":2,"generator":4,"feeds":1,"meta-search":1,"templates":2,"link-to-remote":1,"locking":2,"ubuntu-10.10":1,"rdoc":1,"activesupport":1,"current-page":1,"path":1,"require":1,"configuration":1,"belongs-to":1,"actioncontroller":1,"loc":1,"time":1,"timezone":3,"twitter":1,"compatibility":1,"search-engine":1,"spider":1,"nginx":1,"natty":1,"date":1,"named-scope":1,"namespaces":1,"url-helper":1,"ldap":1,"rubycas":1,"server-error":1,"integration-testing":2,"custom-action":1,"resources":1,"warnings":1,"selenium":1,"conditional":1,"thin":2,"middleware":3,"authlogic":1,"soap":1,"savon":1,"localization":1,"locale":1,"number-to-currency":1,"timestamp":1,"jquery-selectors":1,"helper":1,"omniauth":2,"relationships":1,"user":2,"monkeypatching":1,"urlhelper":1,"cookies":1,"thor":1,"sendmail":1,"console":1,"nested":1,"nested-sets":1,"assets":2,"apache2":2,"phusion-passenger":2,"pdf-generation":1,"plugins":1,"controllers":1,"textarea":1,"highcharts":1,"relationship":2,"has-and-belongs-to-many":1,"fields-for":1,"file-upload":1,"oauth":2,"url-scheme":1,"naming":1,"erb":2,"callback":1,"warden":1,"httparty":1,"versioning":1,"infinite-loop":1,"activescaffold":1,"authorization":1,"rack-middleware":1,"csv":1,"rails-admin":1,"attributes":1,"comments":1,"twitter-bootstrap":2,"best-in-place":1,"mass-assignment":1,"nested-resources":1,"serialization":1,"model-view-controller":1,"directory":1,"jquery-ui-datepicker":1,"for-loop":1,"field":1,"view-helpers":1,"model-associations":1,"plural":1,"scope":1,"iced-coffeescript":1,"coffeescript-resources":1,"boolean-logic":1,"subdomain":1,"caching":1},"answerCount":444,"acceptedCount":255,"nonacceptedCount":189,"questionCount":3},"rake":{"activity":{"2010-11":{"commentCount":1},"2010-10":{"commentCount":1},"2010-12":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-01":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-03":{"commentCount":2,"answerCount":2,"acceptedCount":2},"2011-05":{"commentCount":1},"2011-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-03":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2012-10":{"commentCount":4,"answerCount":1,"nonacceptedCount":1},"2013-02":{"commentCount":1},"2012-11":{"commentCount":2},"2011-04":{"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":1,"nonacceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1},"2012-05":{"answerCount":1,"nonacceptedCount":1},"2012-08":{"answerCount":1,"nonacceptedCount":1}},"commentCount":17,"relatedTags":{"ruby-on-rails":26,"ruby-on-rails-3":13,"populate":1,"yaml":2,"ruby-1.9.1":2,"ruby":9,"rakefile":1,"console":1,"environment":1,"heroku":2,"delayed-job":1,"mysql":2,"seeding":2,"sqlite3":2,"bundler":1,"assets":1,"migration":1,"database":1,"routes":1,"unit-testing":1,"server-error":1,"spree":1,"rspec":1,"github":1,"travis-ci":1,"factory-girl":1},"answerCount":15,"nonacceptedCount":8,"acceptedCount":7},"paperclip":{"activity":{"2010-12":{"commentCount":1},"2011-01":{"commentCount":1,"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2011-03":{"commentCount":1},"2011-06":{"commentCount":1},"2011-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-09":{"commentCount":1},"2013-09":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2010-10":{"answerCount":1,"nonacceptedCount":1},"2011-02":{"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2013-01":{"answerCount":1,"acceptedCount":1},"2014-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":7,"relatedTags":{"ruby-on-rails":12,"devise":1,"amazon-s3":3,"ruby-on-rails-3":12,"ruby-1.8":1,"testing":2,"rspec":3,"ruby":3,"apache":2,"osx":1,"database":2,"file-upload":2,"ubuntu":1,"passenger":1},"answerCount":11,"nonacceptedCount":8,"acceptedCount":3},"devise":{"activity":{"2010-12":{"commentCount":2,"answerCount":3,"acceptedCount":3},"2011-02":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-04":{"commentCount":3,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-05":{"commentCount":1},"2011-07":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-08":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-10":{"commentCount":1},"2011-12":{"commentCount":2,"answerCount":5,"nonacceptedCount":3,"acceptedCount":2},"2012-06":{"commentCount":1},"2012-10":{"commentCount":1},"2012-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-01":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2012-09":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2013-03":{"commentCount":1},"2013-10":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2013-07":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-09":{"commentCount":1},"2010-09":{"answerCount":1,"acceptedCount":1},"2011-01":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1},"2012-02":{"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2012-03":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2012-11":{"answerCount":1,"nonacceptedCount":1},"2013-11":{"answerCount":1,"acceptedCount":1}},"commentCount":23,"relatedTags":{"ruby-on-rails":45,"paperclip":1,"session":2,"ruby-on-rails-3":28,"cancan":6,"ruby":10,"authentication":3,"url":1,"methods":1,"internet-explorer":1,"http-protocols":1,"spree":3,"model-view-controller":1,"routes":3,"partials":1,"ruby-on-rails-3.2":2,"associations":1,"rspec":2,"factory-girl":1,"rolify":1,"controller":2,"https":1,"flash-message":1,"ruby-on-rails-4":3,"roles":1,"forms":1,"user":1,"controllers":1,"cucumber":2,"gem":1,"ruby-on-rails-3.1":1,"rails-admin":1,"attributes":1,"warden":1,"postgresql":1,"oauth":1,"secret-key":1},"answerCount":33,"acceptedCount":23,"nonacceptedCount":10},"session":{"activity":{"2010-12":{"commentCount":1},"2012-07":{"commentCount":1},"2011-02":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"devise":2,"ruby-on-rails-3":1,"ruby":1,"routing":1},"answerCount":1,"acceptedCount":1},"ruby":{"activity":{"2010-12":{"commentCount":9,"answerCount":21,"nonacceptedCount":15,"acceptedCount":6},"2010-09":{"commentCount":1,"answerCount":4,"acceptedCount":2,"questionCount":1,"nonacceptedCount":2},"2010-10":{"commentCount":1,"answerCount":7,"nonacceptedCount":2,"acceptedCount":5},"2011-01":{"commentCount":17,"questionCount":1,"answerCount":15,"acceptedCount":7,"nonacceptedCount":8},"2010-11":{"commentCount":1,"answerCount":11,"nonacceptedCount":8,"acceptedCount":3},"2011-02":{"commentCount":4,"answerCount":9,"nonacceptedCount":5,"acceptedCount":4},"2011-04":{"commentCount":19,"answerCount":10,"acceptedCount":6,"nonacceptedCount":4},"2011-03":{"commentCount":3,"answerCount":5,"acceptedCount":5},"2011-05":{"commentCount":9,"answerCount":13,"acceptedCount":6,"nonacceptedCount":7},"2011-06":{"commentCount":3,"answerCount":5,"acceptedCount":4,"nonacceptedCount":1},"2011-08":{"commentCount":7,"answerCount":10,"acceptedCount":8,"nonacceptedCount":2},"2011-09":{"commentCount":5,"answerCount":8,"nonacceptedCount":5,"acceptedCount":3},"2011-10":{"commentCount":8,"answerCount":7,"acceptedCount":5,"nonacceptedCount":2},"2011-11":{"commentCount":6,"answerCount":3,"acceptedCount":1,"nonacceptedCount":2},"2011-12":{"commentCount":3,"answerCount":17,"acceptedCount":6,"nonacceptedCount":11},"2012-01":{"commentCount":4,"answerCount":8,"acceptedCount":5,"nonacceptedCount":3},"2012-02":{"commentCount":5,"answerCount":10,"acceptedCount":4,"nonacceptedCount":6},"2012-03":{"commentCount":14,"questionCount":2,"answerCount":16,"nonacceptedCount":9,"acceptedCount":7},"2012-05":{"commentCount":1,"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"2012-09":{"commentCount":3,"answerCount":1,"nonacceptedCount":1},"2012-10":{"commentCount":6,"answerCount":9,"acceptedCount":2,"nonacceptedCount":7},"2012-07":{"commentCount":1,"answerCount":6,"nonacceptedCount":5,"questionCount":1,"acceptedCount":1},"2012-11":{"commentCount":14,"answerCount":10,"acceptedCount":6,"nonacceptedCount":4},"2012-08":{"commentCount":1,"answerCount":4,"acceptedCount":2,"nonacceptedCount":2},"2013-02":{"commentCount":10,"answerCount":2,"nonacceptedCount":2},"2012-12":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2013-01":{"commentCount":2,"answerCount":3,"acceptedCount":1,"nonacceptedCount":2},"2013-03":{"commentCount":6,"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2013-04":{"commentCount":6,"answerCount":3,"nonacceptedCount":1,"acceptedCount":2},"2013-07":{"commentCount":5,"answerCount":5,"nonacceptedCount":4,"acceptedCount":1},"2013-08":{"commentCount":10,"answerCount":8,"acceptedCount":5,"nonacceptedCount":3},"2013-09":{"commentCount":9,"answerCount":5,"acceptedCount":2,"nonacceptedCount":3},"2013-10":{"commentCount":5,"answerCount":7,"nonacceptedCount":4,"acceptedCount":3},"2014-01":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2014-03":{"commentCount":2,"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2013-12":{"commentCount":1},"2011-07":{"answerCount":8,"acceptedCount":4,"nonacceptedCount":4},"2012-04":{"answerCount":1,"acceptedCount":1},"2012-06":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2013-05":{"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2013-06":{"answerCount":1,"acceptedCount":1},"2013-11":{"answerCount":1,"acceptedCount":1}},"commentCount":205,"relatedTags":{"ruby-on-rails":342,"routes":2,"partial-views":2,"rails-activerecord":3,"osx":9,"string":6,"database":3,"sqlite3":4,"ruby-on-rails-3":157,"send":1,"dependencies":1,"warnings":1,"rake":9,"rakefile":1,"api":4,"routing":7,"hosting":1,"testing":5,"rspec":23,"arrays":6,"search":1,"hashmap":1,"cucumber":7,"capybara":5,"rvm":9,"apache":2,"rack":7,"fcgi":2,"rspec-rails":2,"nested-attributes":2,"rubygems":29,"ubuntu-10.04":1,"gem":21,"windows":1,"javascript":4,"jquery":7,"mysql":7,"activerecord":17,"hash":5,"iterate":1,"unit-testing":3,"rails-engines":4,"debug-symbols":1,"validation":1,"methods":2,"ajax":4,"yaml":1,"symbols":1,"block":1,"postgresql":5,"activeresource":3,"authentication":2,"devise":10,"model-view-controller":5,"monkeypatching":3,"sockets":2,"byte":1,"ruby-on-rails-plugins":1,"nokogiri":7,"railscasts":1,"model":2,"controller":5,"save":1,"ruby-on-rails-3.1":10,"rest-client":1,"net-http":3,"thor":1,"params":2,"ruby-1.9":2,"rspec2":2,"cancan":1,"bundler":12,"aptana":1,"datetime":2,"factory-girl":5,"local-variables":1,"web":1,"casting":2,"bundle":2,"ruby-on-rails-2":1,"parameters":1,"new-operator":1,"libxml":2,"performance":1,"asset-pipeline":2,"plural":2,"idempotent":2,"automated-tests":1,"json-spec":1,"forms":2,"content-management-system":1,"browsercms":1,"facebook-graph-api":1,"koala":1,"constants":1,"private":1,"ruby-1.9.3":2,"session":1,"gcc":1,"osx-mountain-lion":2,"e-commerce":4,"spree":13,"multidimensional-array":1,"associations":4,"ruby-1.8.7":2,"archive":1,"tar":1,"oop":3,"class":3,"object":3,"linux":2,"ubuntu":5,"path":2,"character-encoding":1,"json":2,"testunit":1,"segmentation-fault":1,"permutation":1,"nginx":3,"production-environment":1,"mediawiki":2,"chef":1,"polymorphic-associations":1,"amazon-s3":2,"paperclip":3,"tcp":1,"monitoring":1,"ruby-2.0":1,"passenger":2,"heroku":6,"locale":2,"ruby-on-rails-4":10,"ruby-on-rails-4-1":1,"friendly-id":1,"ruby-on-rails-3.2":5,"rails-i18n":2,"xml":1,"generator":2,"design":1,"design-patterns":1,"error-handling":1,"httparty":2,"curl":2,"git":1,"imap":1,"timestamp":1,"csv":1,"queue":1,"scheduled-tasks":1,"railtie":1,"iteration":1,"helpers":1,"formatting":1,"obsolete":1,"pluralize":1,"sql":2,"backup":1,"tmail":1,"attr-accessible":1,"loops":1,"each":1,"httpwebrequest":1,"chaining":1,"activemodel":1,"feeds":1,"filemaker":1,"documentation":1,"actionmailer":2,"delete":1,"http":1,"current-page":1,"compilation":1,"natty":1,"fastercsv":1,"bdd":1,"syntax":3,"gedit":1,"email":1,"server-error":1,"load":1,"config":1,"parent-child":1,"nested-forms":3,"parsing":1,"uri":1,"ruby-1.8":1,"capistrano":2,"unobtrusive-javascript":1,"migration":1,"mongodb":2,"mongoid":2,"named-scope":1,"frameworks":1,"soap":1,"savon":1,"jquery-selectors":1,"url":2,"cookies":1,"nested":1,"nested-sets":1,"selenium":1,"selenium2":1,"css":2,"assets":2,"gmail":1,"relationship":1,"has-and-belongs-to-many":1,"link-to":1,"security":1,"networking":1,"rails-admin":1,"searchlogic":1,"naming":1,"sorting":1,"boolean":1,"github":2,"layout":1,"forum":1,"thin":1,"erb":5,"warden":1,"inheritance":1,"controllers":1,"middleware":1,"require":1,"activerelation":1,"redis":1,"elasticsearch":1,"tire":1,"travis-ci":1,"login":1,"before-filter":1,"paypal":1,"activemerchant":1,"activesupport":1,"directory":1,"minitest":1,"sinatra":3,"omniauth":2,"ubuntu-12.04":1,"osx-lion":1,"view-helpers":1,"will-paginate":1,"paginate":1,"product":1,"cart":1,"sqlite":1,"facebook":1,"padrino":1,"date":1,"time":1},"answerCount":272,"acceptedCount":128,"questionCount":5,"nonacceptedCount":144},"xhtml":{"activity":{"2010-11":{"commentCount":1}},"commentCount":1},"git":{"activity":{"2010-12":{"commentCount":2},"2011-10":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-12":{"commentCount":1},"2012-03":{"commentCount":2},"2012-06":{"commentCount":1},"2012-10":{"commentCount":1,"answerCount":3,"nonacceptedCount":3},"2012-07":{"commentCount":1},"2012-11":{"commentCount":1},"2013-04":{"commentCount":2},"2013-09":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2010-09":{"answerCount":1,"acceptedCount":1},"2010-10":{"answerCount":1,"nonacceptedCount":1},"2011-01":{"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2011-03":{"answerCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":1,"nonacceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":1,"nonacceptedCount":1},"2011-09":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-01":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-04":{"answerCount":1,"nonacceptedCount":1},"2012-12":{"answerCount":1,"nonacceptedCount":1},"2013-02":{"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"nonacceptedCount":1},"2013-08":{"answerCount":1,"acceptedCount":1},"2013-10":{"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2013-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":13,"relatedTags":{"version-control":4,"branch":2,"ruby-on-rails":4,"mysql":1,"web-applications":1,"githooks":1,"git-reset":1,"github":7,"terminal":1,"git-branch":3,"git-fork":1,"bash":1,"git-clone":3,"tortoisegit":2,"git-bash":2,"git-commands":2,"ruby-on-rails-3":5,"ssh":1,"capistrano":1,"su":1,"git-remote":1,"ruby":1,"heroku":3,"sed":1,"mercurial":1,"bazaar":1,"gem":1,"bundler":1,"gitignore":1,"master":1,"head":1,"fork":1,"repository":1,"checkout":1,"tdd":1,"commit":1},"answerCount":29,"acceptedCount":11,"nonacceptedCount":18},"partial-views":{"activity":{"2010-12":{"commentCount":1},"2012-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-01":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":4,"ruby":2,"routes":3,"rest":2,"put":2},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"rspec2":{"activity":{"2010-12":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-03":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-02":{"commentCount":1},"2011-10":{"commentCount":4},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":3,"nonacceptedCount":1,"acceptedCount":2},"2011-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":7,"relatedTags":{"ruby-on-rails":7,"spork":1,"ruby-on-rails-3":6,"webrat":1,"ruby-on-rails-3.1":2,"spree":2,"rails-engines":2,"ruby":2,"rspec":5,"rspec-rails":3,"cucumber":2,"matcher":1,"capybara":1,"integration-testing":1,"bdd":2,"tdd":1,"postgresql":1},"answerCount":8,"acceptedCount":4,"nonacceptedCount":4},"spork":{"activity":{"2010-12":{"commentCount":1},"2013-08":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"rspec2":1,"rspec":2},"answerCount":1,"acceptedCount":1},"ubuntu":{"activity":{"2010-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-08":{"commentCount":1},"2013-02":{"commentCount":1},"2013-04":{"commentCount":1},"2013-08":{"commentCount":1},"2013-12":{"commentCount":1},"2011-01":{"answerCount":1,"acceptedCount":1},"2011-05":{"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2013-01":{"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1}},"commentCount":6,"relatedTags":{"ruby-on-rails":7,"ruby-on-rails-3":4,"rmagick":1,"gem":1,"ubuntu-11.04":1,"ruby":5,"linux":1,"path":1,"apache":3,"nginx":2,"passenger":3,"rvm":1,"rubygems":1,"ruby-debug":1,"natty":1,"syntax":1,"gedit":1,"paperclip":1},"answerCount":6,"nonacceptedCount":1,"acceptedCount":5},"rmagick":{"activity":{"2010-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ubuntu":1,"ruby-on-rails-3":1}},"sql":{"activity":{"2010-12":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2012-02":{"answerCount":1,"nonacceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":6,"join":1,"fields-for":1,"ruby":2,"ruby-on-rails-3":3,"activerecord":2,"date":1,"console":1,"order":1},"answerCount":6,"nonacceptedCount":3,"acceptedCount":3},"join":{"activity":{"2010-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"sql":1,"ruby-on-rails":1,"fields-for":1}},"fields-for":{"activity":{"2010-12":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"sql":1,"ruby-on-rails":3,"join":1,"nested-forms":2,"ruby-on-rails-3":1,"view":1,"forms":1,"belongs-to":1},"answerCount":3,"acceptedCount":3},"version-control":{"activity":{"2010-12":{"commentCount":1},"2011-10":{"commentCount":1},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2013-10":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"git":4,"branch":2,"ruby-on-rails":1,"mercurial":1,"bazaar":1,"svn":1,"cvs":1,"github":1},"answerCount":3,"nonacceptedCount":3},"branch":{"activity":{"2010-12":{"commentCount":1},"2011-10":{"commentCount":1}},"commentCount":2,"relatedTags":{"git":2,"version-control":2,"ruby-on-rails":1}},"routing":{"activity":{"2010-10":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-01":{"commentCount":2,"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2011-06":{"commentCount":1},"2011-08":{"commentCount":1,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-12":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-07":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2010-11":{"answerCount":2,"acceptedCount":2},"2010-12":{"answerCount":1,"acceptedCount":1},"2011-02":{"answerCount":2,"nonacceptedCount":2},"2011-03":{"answerCount":3,"nonacceptedCount":3},"2011-04":{"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2011-05":{"answerCount":1,"nonacceptedCount":1},"2011-09":{"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"2011-10":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-09":{"answerCount":1,"acceptedCount":1},"2013-11":{"answerCount":1,"acceptedCount":1},"2014-02":{"answerCount":1,"acceptedCount":1},"2014-03":{"answerCount":1,"acceptedCount":1}},"commentCount":7,"relatedTags":{"ruby-on-rails":29,"mongrel":1,"dispatch":1,"ruby":7,"api":1,"ruby-on-rails-3":17,"model-view-controller":1,"sinatra":1,"rack":1,"namespaces":1,"session":1,"static-pages":1,"routes":2,"rails-routing":4,"rest":1,"crud":1,"setup":1,"passenger":1,"activerecord":1,"url":2,"request":1,"resources":1,"model":1,"admin":1,"urlhelper":1,"symfony2":1,"ruby-on-rails-3.1":1,"controller":1,"subdomain":1,"ruby-on-rails-4":3,"nested-forms":1,"rails-engines":1},"answerCount":31,"nonacceptedCount":16,"acceptedCount":15},"mongrel":{"activity":{"2010-10":{"commentCount":1},"2011-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"routing":1,"dispatch":1,"osx":1},"answerCount":1,"nonacceptedCount":1},"dispatch":{"activity":{"2010-10":{"commentCount":1},"2011-06":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":1,"routing":1,"mongrel":1,"ruby-on-rails-3":1}},"curl":{"activity":{"2010-11":{"commentCount":1},"2014-03":{"commentCount":2},"2010-09":{"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":1,"acceptedCount":1}},"commentCount":3,"relatedTags":{"html":2,"css":2,"ruby-on-rails":3,"ruby-on-rails-3":2,"ruby":2,"http":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"wordpress":{"activity":{"2010-12":{"commentCount":1},"2012-10":{"commentCount":2}},"commentCount":3,"relatedTags":{"facebook":2,"comments":2}},"authlogic":{"activity":{"2010-12":{"commentCount":1},"2011-08":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"passenger":1,"webfaction":1,"ruby-on-rails-3":1,"ruby-on-rails-plugins":1},"answerCount":1,"acceptedCount":1},"passenger":{"activity":{"2010-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-01":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-01":{"commentCount":1},"2012-04":{"commentCount":1},"2013-08":{"commentCount":1},"2011-02":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"nonacceptedCount":1},"2013-01":{"answerCount":1,"acceptedCount":1},"2013-06":{"answerCount":1,"acceptedCount":1}},"commentCount":5,"relatedTags":{"ruby-on-rails":10,"authlogic":1,"webfaction":1,"delayed-job":1,"ruby-on-rails-3":3,"coffeescript":1,"apache":3,"ruby":2,"ubuntu":3,"nginx":2,"routing":1,"setup":1,"apache2":1,"phusion-passenger":1,"paperclip":1},"answerCount":7,"nonacceptedCount":2,"acceptedCount":5},"webfaction":{"activity":{"2010-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"authlogic":1,"passenger":1}},"rails-activerecord":{"activity":{"2010-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-08":{"commentCount":2},"2013-09":{"commentCount":1},"2010-11":{"answerCount":1,"nonacceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1},"2014-03":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":9,"ruby":3,"terminal":2,"nlp":2,"ruby-on-rails-3":2,"arel":1,"mysql":1,"rspec":1,"attributes":1,"templates":1,"partial":1,"ruby-on-rails-4":1,"money":1,"money-rails":1},"answerCount":6,"nonacceptedCount":2,"acceptedCount":4},"forms":{"activity":{"2010-10":{"commentCount":1},"2011-01":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2012-03":{"commentCount":1},"2012-10":{"commentCount":2},"2010-09":{"answerCount":1,"acceptedCount":1},"2010-11":{"answerCount":1,"acceptedCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":1,"nonacceptedCount":1},"2012-01":{"answerCount":1,"acceptedCount":1},"2012-12":{"answerCount":1,"nonacceptedCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1},"2013-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":5,"relatedTags":{"ruby-on-rails":14,"activerecord":1,"scaffold":1,"ruby":2,"ruby-on-rails-3":7,"user":1,"controllers":1,"devise":1,"javascript":1,"partials":1,"form-for":1,"textarea":1,"nested-forms":1,"belongs-to":1,"fields-for":1,"input":1,"controller":1,"routes":1,"product":1,"cart":1,"ruby-on-rails-4":1},"answerCount":11,"acceptedCount":5,"nonacceptedCount":6},"activerecord":{"activity":{"2010-10":{"commentCount":1},"2011-01":{"commentCount":1,"answerCount":4,"acceptedCount":2,"nonacceptedCount":2},"2011-02":{"commentCount":2,"answerCount":5,"nonacceptedCount":4,"acceptedCount":1},"2011-03":{"commentCount":2,"answerCount":2,"nonacceptedCount":2},"2011-04":{"commentCount":2,"answerCount":3,"nonacceptedCount":1,"acceptedCount":2},"2011-05":{"commentCount":1,"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2011-07":{"commentCount":2,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-08":{"commentCount":5,"answerCount":1,"acceptedCount":1},"2011-12":{"commentCount":2,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-03":{"commentCount":3,"answerCount":3,"nonacceptedCount":1,"acceptedCount":2},"2012-05":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-10":{"commentCount":1,"answerCount":4,"acceptedCount":2,"nonacceptedCount":2},"2012-11":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2013-08":{"commentCount":1,"answerCount":4,"acceptedCount":3,"nonacceptedCount":1},"2013-07":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2010-09":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2010-11":{"answerCount":2,"nonacceptedCount":2},"2010-12":{"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"nonacceptedCount":1},"2011-10":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1},"2012-02":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2012-08":{"answerCount":1,"nonacceptedCount":1},"2012-09":{"answerCount":1,"nonacceptedCount":1},"2012-12":{"answerCount":1,"acceptedCount":1},"2014-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":27,"relatedTags":{"ruby-on-rails":59,"forms":1,"scaffold":1,"dynamic-finders":2,"ruby-on-rails-3":34,"migration":1,"mysql":2,"ruby":17,"rubygems":1,"yaml":1,"validation":3,"activemodel":4,"model":2,"controller":2,"rspec":5,"dry":2,"ruby-on-rails-3.1":2,"habtm":1,"associations":4,"destroy":1,"ruby-on-rails-3.2":3,"belongs-to":1,"sql":2,"datamapper":1,"security":1,"delayed-job":1,"filemaker":1,"routing":1,"database":1,"factory-girl":1,"rails-models":1,"locking":1,"oracle":1,"csv":1,"timezone":1,"activerelation":1,"order":1,"boolean-logic":1,"padrino":1,"ruby-on-rails-4":1,"activeadmin":1,"inherited-resources":1},"answerCount":56,"acceptedCount":26,"nonacceptedCount":30},"scaffold":{"activity":{"2010-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"forms":1,"activerecord":1}},"rspec":{"activity":{"2010-12":{"commentCount":1,"answerCount":6,"acceptedCount":5,"nonacceptedCount":1},"2011-01":{"commentCount":6,"questionCount":1,"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2011-02":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-03":{"commentCount":2,"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"2011-08":{"commentCount":4,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-04":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-09":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2011-10":{"commentCount":1,"answerCount":3,"acceptedCount":1,"nonacceptedCount":2},"2012-05":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2012-02":{"commentCount":1},"2012-10":{"commentCount":4,"answerCount":1,"acceptedCount":1},"2012-07":{"commentCount":1},"2012-11":{"commentCount":2},"2012-09":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-07":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2013-08":{"commentCount":2,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-09":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2010-09":{"answerCount":1,"nonacceptedCount":1},"2010-10":{"answerCount":1,"acceptedCount":1},"2010-11":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2012-03":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-06":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1},"2013-02":{"answerCount":2,"acceptedCount":2},"2013-03":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1}},"commentCount":33,"relatedTags":{"ruby-on-rails":65,"cucumber":6,"ruby":23,"testing":9,"ruby-on-rails-3":31,"unit-testing":2,"tdd":1,"windows":1,"rspec-rails":7,"bundler":1,"rvm":1,"ruby-on-rails-plugins":1,"ruby-on-rails-2":1,"paperclip":3,"activerecord":5,"controller":1,"activemodel":1,"rspec2":5,"capybara":4,"associations":2,"devise":2,"factory-girl":7,"ajax":1,"spork":2,"actionmailer":1,"matcher":1,"bdd":2,"webrat":1,"mongoid":2,"nested-routes":1,"feeds":1,"mysql":1,"rails-activerecord":1,"redirect":1,"postgresql":1,"ruby-on-rails-3.1":2,"routes":1,"selenium":1,"selenium2":1,"validation":1,"rake":1,"middleware":1,"railstutorial.org":1,"facebook":1,"padrino":1,"ruby-on-rails-4":1,"rails-routing":1},"answerCount":50,"nonacceptedCount":19,"acceptedCount":31,"questionCount":1},"amazon-s3":{"activity":{"2011-01":{"commentCount":1},"2012-06":{"commentCount":1},"2013-09":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails-3":4,"paperclip":3,"ruby-on-rails":1,"ruby":2},"answerCount":1,"acceptedCount":1},"populate":{"activity":{"2010-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"rake":1}},"osx":{"activity":{"2010-10":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2010-12":{"commentCount":1},"2011-04":{"commentCount":1},"2011-07":{"commentCount":1},"2012-02":{"commentCount":1},"2012-01":{"commentCount":1},"2012-10":{"commentCount":1},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2011-03":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-11":{"answerCount":1,"nonacceptedCount":1},"2013-02":{"answerCount":1,"nonacceptedCount":1},"2013-05":{"answerCount":1,"nonacceptedCount":1}},"commentCount":7,"relatedTags":{"ruby-on-rails":7,"ruby":9,"rvm":3,"rubygems":1,"ruby-on-rails-3":2,"postgresql":1,"osx-lion":2,"objective-c":1,"ios":1,"performance":1,"asset-pipeline":1,"gcc":1,"osx-mountain-lion":2,"apache":1,"paperclip":1,"mongrel":1,"github":1,"boxen":1},"answerCount":7,"nonacceptedCount":7},"bundle":{"activity":{"2010-11":{"commentCount":1},"2011-08":{"commentCount":2},"2012-01":{"commentCount":1},"2012-10":{"commentCount":2},"2012-03":{"answerCount":1,"nonacceptedCount":1},"2012-09":{"answerCount":1,"acceptedCount":1}},"commentCount":6,"relatedTags":{"ruby-on-rails":8,"bundler":3,"ruby-on-rails-3":2,"ruby":2,"rvm":1,"gem":2,"pusher":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"string":{"activity":{"2010-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-01":{"commentCount":1},"2012-02":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2010-11":{"answerCount":2,"nonacceptedCount":2},"2013-07":{"answerCount":1,"acceptedCount":1}},"commentCount":3,"relatedTags":{"ruby":6,"ruby-on-rails":4,"plural":2,"idempotent":2,"csv":1,"formatting":1,"javascript":1,"regex":2,"floating-point":1,"gsub":1},"answerCount":5,"nonacceptedCount":4,"acceptedCount":1},"yaml":{"activity":{"2010-12":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-05":{"commentCount":1},"2011-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails-3":2,"rake":2,"ruby-1.9.1":2,"ruby-on-rails":2,"ruby":1,"activerecord":1},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"ruby-1.9.1":{"activity":{"2010-12":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"rake":2,"yaml":2},"answerCount":1,"acceptedCount":1},"cucumber":{"activity":{"2010-12":{"commentCount":2,"answerCount":4,"acceptedCount":2,"nonacceptedCount":2,"questionCount":1},"2011-01":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-04":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-02":{"commentCount":1,"answerCount":1,"nonacceptedCount":1,"questionCount":1},"2011-08":{"commentCount":1,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-11":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-02":{"commentCount":1},"2010-10":{"answerCount":1,"acceptedCount":1},"2011-03":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-07":{"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1},"2012-05":{"answerCount":1,"acceptedCount":1},"2012-06":{"answerCount":1,"acceptedCount":1},"2012-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":8,"relatedTags":{"ruby-on-rails":19,"rspec":6,"capybara":8,"ruby":7,"ruby-on-rails-3":14,"api":1,"automated-tests":1,"json-spec":1,"bdd":3,"rspec2":2,"matcher":1,"webrat":2,"devise":2,"postgresql":1,"integration-testing":2,"load":1,"gem":1,"bundler":1,"selenium":1,"routes":1,"tdd":1,"ajax":1,"json":1,"testing":1},"answerCount":22,"acceptedCount":13,"nonacceptedCount":9,"questionCount":2},"database":{"activity":{"2011-01":{"commentCount":1,"answerCount":2,"nonacceptedCount":2},"2011-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-01":{"commentCount":1},"2011-04":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":9,"ruby":3,"sqlite3":1,"ruby-on-rails-3.1":2,"database-management":2,"unit-testing":1,"ruby-on-rails-3":3,"paperclip":2,"rake":1,"file-upload":1,"activerecord":1,"url":1,"user":1,"routes":1,"model":1,"polymorphic":1},"answerCount":7,"nonacceptedCount":4,"acceptedCount":3},"sqlite3":{"activity":{"2011-01":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2011-08":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-10":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-11":{"commentCount":1},"2013-03":{"commentCount":1},"2011-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":6,"relatedTags":{"ruby-on-rails":10,"ruby":4,"database":1,"sqlite3-ruby":2,"ruby-on-rails-3":3,"sqlite":2,"rake":2,"heroku":1,"locking":1},"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"controller":{"activity":{"2010-10":{"commentCount":1},"2011-08":{"commentCount":3},"2011-09":{"commentCount":1},"2011-12":{"commentCount":1},"2012-03":{"commentCount":2},"2012-10":{"commentCount":2},"2013-03":{"commentCount":1},"2013-10":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2012-04":{"answerCount":1,"acceptedCount":1},"2012-07":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1},"2012-11":{"answerCount":1,"nonacceptedCount":1},"2012-12":{"answerCount":1,"nonacceptedCount":1},"2013-02":{"answerCount":1,"acceptedCount":1}},"commentCount":13,"relatedTags":{"ruby-on-rails":20,"action":2,"halting-problem":1,"ruby":5,"model":3,"save":1,"ruby-on-rails-3":9,"activerecord":2,"rspec":1,"edit":2,"production":2,"devise":2,"belongs-to":2,"templates":1,"view":1,"delete":1,"routes":3,"admin":1,"form-for":1,"nested-resources":1,"routing":1,"activesupport":1,"forms":1,"input":1},"answerCount":12,"nonacceptedCount":5,"acceptedCount":7},"action":{"activity":{"2010-10":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"controller":2,"halting-problem":1},"answerCount":1,"nonacceptedCount":1},"halting-problem":{"activity":{"2010-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"controller":1,"action":1}},"internationalization":{"activity":{"2010-11":{"commentCount":1},"2012-08":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"e-commerce":1,"locale":1,"spree":1},"answerCount":1,"nonacceptedCount":1},"php":{"activity":{"2010-12":{"commentCount":1,"answerCount":2,"nonacceptedCount":2},"2011-11":{"commentCount":1},"2012-10":{"commentCount":1},"2011-02":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1}},"commentCount":3,"relatedTags":{"regex":3,"xml":1,"mysql":2,"arrays":1,"codeigniter":1,"linux":1},"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"regex":{"activity":{"2010-12":{"commentCount":1,"answerCount":2,"nonacceptedCount":2},"2011-02":{"answerCount":1,"acceptedCount":1},"2013-07":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"php":3,"javascript":1,"string":2,"codeigniter":1,"ruby-on-rails":1,"floating-point":1,"gsub":1},"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"send":{"activity":{"2010-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"ruby-on-rails-3":1}},"rubygems":{"activity":{"2010-11":{"commentCount":1,"answerCount":3,"nonacceptedCount":1,"acceptedCount":2},"2011-03":{"commentCount":2},"2011-04":{"commentCount":2},"2011-01":{"commentCount":1,"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2011-05":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-10":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-12":{"commentCount":1,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-02":{"commentCount":1},"2012-03":{"commentCount":2},"2013-02":{"commentCount":4},"2013-04":{"commentCount":2},"2013-10":{"commentCount":3,"answerCount":1,"nonacceptedCount":1},"2013-03":{"commentCount":1},"2010-09":{"answerCount":1,"acceptedCount":1},"2010-10":{"answerCount":1,"nonacceptedCount":1},"2010-12":{"answerCount":3,"acceptedCount":1,"nonacceptedCount":2},"2011-02":{"answerCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-04":{"answerCount":1,"acceptedCount":1},"2012-06":{"answerCount":1,"acceptedCount":1},"2012-07":{"answerCount":1,"nonacceptedCount":1},"2012-10":{"answerCount":3,"nonacceptedCount":3},"2013-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":22,"relatedTags":{"ruby-on-rails":34,"installation":2,"ruby":29,"ubuntu-10.04":1,"gem":7,"windows":1,"mysql":1,"activerecord":1,"osx":1,"ruby-on-rails-3":16,"rails-engines":1,"ruby-on-rails-3.1":2,"spree":2,"bundler":6,"mediawiki":2,"chef":1,"nokogiri":1,"ruby-on-rails-3.2":1,"rvm":1,"heroku":2,"ubuntu":1,"ruby-debug":1,"compatibility":1,"ruby-on-rails-plugins":1,"authentication":1,"omniauth":1,"redmine":1,"searchlogic":1,"asset-pipeline":1,"capistrano":1},"answerCount":27,"acceptedCount":11,"nonacceptedCount":16},"installation":{"activity":{"2010-11":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-10":{"commentCount":1},"2013-01":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":4,"rubygems":2,"ruby-on-rails-3":1,"spree":3},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"capybara":{"activity":{"2010-12":{"commentCount":1},"2011-02":{"commentCount":1},"2011-04":{"commentCount":1},"2012-05":{"commentCount":1},"2011-03":{"answerCount":2,"nonacceptedCount":2},"2011-08":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1},"2012-06":{"answerCount":1,"acceptedCount":1},"2013-07":{"answerCount":1,"acceptedCount":1},"2013-08":{"answerCount":1,"acceptedCount":1},"2013-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":12,"cucumber":8,"ruby":5,"ruby-on-rails-3":5,"rspec":4,"rspec2":1,"integration-testing":1,"selenium":1,"tdd":1,"bdd":1,"bundler":1,"ajax":1,"json":1,"facebook":1,"rspec-rails":1,"braintree":1,"testing":1},"answerCount":12,"nonacceptedCount":5,"acceptedCount":7},"hibernate":{"activity":{"2010-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"spring":1}},"spring":{"activity":{"2010-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"hibernate":1}},"dependencies":{"activity":{"2010-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"warnings":1}},"warnings":{"activity":{"2010-12":{"commentCount":1},"2011-08":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"dependencies":1,"ruby-on-rails":1,"ruby-on-rails-3":1},"answerCount":1,"nonacceptedCount":1},"rakefile":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"rake":1}},"css":{"activity":{"2011-01":{"commentCount":1},"2012-11":{"commentCount":5,"answerCount":1,"nonacceptedCount":1},"2014-03":{"commentCount":2},"2010-10":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1}},"commentCount":8,"relatedTags":{"ruby-on-rails":5,"ruby-on-rails-3":4,"selectbox":1,"html":5,"google-chrome":1,"javascript":4,"jquery":1,"autocomplete":2,"positioning":2,"haml":2,"curl":2,"cycle":1,"ruby":2,"ruby-on-rails-3.1":1,"assets":1,"ruby-on-rails-3.2":1},"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"selectbox":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"css":1,"ruby-on-rails-3":1}},"javascript":{"activity":{"2011-01":{"commentCount":2},"2011-03":{"commentCount":1},"2011-04":{"commentCount":1},"2012-10":{"commentCount":7},"2012-11":{"commentCount":9},"2013-01":{"commentCount":1},"2013-02":{"commentCount":4},"2013-07":{"commentCount":1},"2013-08":{"commentCount":1},"2013-09":{"commentCount":2,"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2013-10":{"commentCount":2},"2013-04":{"commentCount":1},"2014-03":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-11":{"commentCount":1},"2010-11":{"answerCount":1,"acceptedCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-02":{"answerCount":1,"nonacceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1},"2013-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":34,"relatedTags":{"jquery-ui":1,"ruby-on-rails-3":5,"raphael":1,"python":1,"cherrypy":1,"genshi":1,"jquery":10,"ruby-on-rails":11,"ruby":4,"html":7,"dom":1,"template-engine":1,"mustache":1,"webserver":1,"css":4,"function":3,"callback":1,"heroku":1,"asset-pipeline":1,"ajax":3,"xmlhttprequest":2,"autocomplete":2,"positioning":2,"haml":2,"html5":1,"object":1,"json":5,"jsonp":2,"blackberry-webworks":2,"xml":1,"security":1,"variables":1,"global":1,"sqlite":1,"cordova":1,"forms":1,"partials":1,"regex":1,"string":1,"syntax-error":1,"unobtrusive-javascript":1,"ruby-on-rails-3.1":1,"erb":1,"call":1},"answerCount":14,"acceptedCount":5,"nonacceptedCount":9},"jquery-ui":{"activity":{"2011-01":{"commentCount":1},"2012-10":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"ruby-on-rails-3":2,"jquery-ui-datepicker":1},"answerCount":1,"acceptedCount":1},"mysql":{"activity":{"2011-01":{"commentCount":1},"2011-03":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-07":{"commentCount":1},"2011-12":{"commentCount":2,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-02":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2012-09":{"commentCount":1},"2012-10":{"commentCount":1},"2013-07":{"commentCount":1},"2013-08":{"commentCount":1},"2010-11":{"answerCount":1,"nonacceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1}},"commentCount":11,"relatedTags":{"ruby-on-rails":9,"ruby":7,"activerecord":2,"rubygems":1,"ruby-on-rails-3":4,"rake":2,"casting":2,"git":1,"web-applications":1,"githooks":1,"postgresql":1,"php":2,"e-commerce":1,"spree":1,"binding":1,"rspec":1,"rails-activerecord":1,"search":1,"where":1,"linux":1},"answerCount":7,"nonacceptedCount":3,"acceptedCount":4},"api":{"activity":{"2011-01":{"commentCount":1},"2012-02":{"commentCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-05":{"answerCount":1,"acceptedCount":1},"2012-04":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby":4,"ruby-on-rails-3":2,"routing":1,"cucumber":1,"automated-tests":1,"json-spec":1,"ruby-on-rails":2,"documentation":1,"rest":1,"sinatra":1},"answerCount":3,"acceptedCount":3},"hosting":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1}},"mongodb":{"activity":{"2011-01":{"commentCount":1},"2013-09":{"commentCount":3},"2011-08":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2012-05":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":6,"mongomapper":1,"mongodb-ruby":1,"ruby-on-rails-3":3,"hash":3,"mongoid":5,"ruby":2,"date":1,"time":1},"answerCount":3,"acceptedCount":3},"mongomapper":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"mongodb":1,"mongodb-ruby":1}},"mongodb-ruby":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"mongodb":1,"mongomapper":1}},"testing":{"activity":{"2011-01":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2011-02":{"commentCount":1},"2011-04":{"commentCount":1},"2011-08":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2012-07":{"commentCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"acceptedCount":1},"2012-05":{"answerCount":1,"acceptedCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"nonacceptedCount":1},"2013-02":{"answerCount":1,"acceptedCount":1},"2013-08":{"answerCount":2,"nonacceptedCount":2},"2013-09":{"answerCount":1,"nonacceptedCount":1},"2014-03":{"answerCount":1,"acceptedCount":1}},"commentCount":6,"relatedTags":{"ruby-on-rails":19,"ruby":5,"rspec":9,"ruby-on-rails-3":8,"tdd":1,"paperclip":2,"rspec-rails":1,"railstutorial.org":1,"unit-testing":1,"activesupport":1,"cucumber":1,"factory-girl":2,"minitest":1,"polymorphic-associations":2,"capybara":1,"iframe":1,"localhost":1},"answerCount":14,"acceptedCount":8,"nonacceptedCount":6},"delayed-job":{"activity":{"2011-01":{"commentCount":1},"2011-05":{"commentCount":1},"2011-11":{"commentCount":1},"2012-03":{"commentCount":2},"2011-02":{"answerCount":1,"nonacceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1}},"commentCount":5,"relatedTags":{"ruby-on-rails":6,"passenger":1,"ruby-on-rails-3":3,"heroku":1,"rake":1,"actionmailer":1,"multithreading":2,"queue":2,"activerecord":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"upgrade":{"activity":{"2011-01":{"commentCount":1},"2011-05":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"initializer":1},"answerCount":1,"acceptedCount":1},"dynamic-finders":{"activity":{"2011-01":{"commentCount":1},"2011-08":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":1,"activerecord":2,"ruby-on-rails-3":1}},"recaptcha":{"activity":{"2011-01":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2},"answerCount":1,"acceptedCount":1},"arrays":{"activity":{"2011-01":{"commentCount":1},"2011-04":{"commentCount":1},"2011-12":{"commentCount":1},"2012-09":{"commentCount":1},"2012-11":{"commentCount":2},"2012-10":{"commentCount":1},"2010-11":{"answerCount":1,"acceptedCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1}},"commentCount":7,"relatedTags":{"ruby":6,"search":1,"hashmap":1,"ruby-on-rails-3":2,"multidimensional-array":2,"ruby-1.9.2":1,"ruby-on-rails":4,"hash":1,"segmentation-fault":1,"permutation":1,"php":1,"highcharts":1},"answerCount":4,"acceptedCount":3,"nonacceptedCount":1},"search":{"activity":{"2011-01":{"commentCount":2},"2011-10":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby":1,"arrays":1,"hashmap":1,"keyword":1,"mysql":1,"ruby-on-rails":1,"where":1},"answerCount":1,"acceptedCount":1},"hashmap":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"arrays":1,"search":1}},"unit-testing":{"activity":{"2011-01":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-04":{"commentCount":2},"2011-09":{"commentCount":1},"2012-01":{"commentCount":1},"2012-03":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-02":{"commentCount":1},"2013-01":{"commentCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1}},"commentCount":8,"relatedTags":{"ruby-on-rails-3":7,"rspec":2,"ruby-on-rails":7,"ruby":3,"database":1,"methods":1,"testunit":1,"testing":1,"rake":1},"answerCount":4,"acceptedCount":4},"migration":{"activity":{"2011-02":{"commentCount":1},"2011-04":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":2,"acceptedCount":2},"2011-10":{"answerCount":1,"acceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":7,"ruby-on-rails-3":3,"activerecord":1,"rake":1,"ruby":1},"answerCount":6,"nonacceptedCount":1,"acceptedCount":5},"python":{"activity":{"2011-02":{"commentCount":2},"2011-03":{"commentCount":1},"2013-08":{"commentCount":1},"2010-11":{"answerCount":1,"nonacceptedCount":1},"2011-01":{"answerCount":2,"nonacceptedCount":2}},"commentCount":4,"relatedTags":{"loops":1,"vowel":1,"javascript":1,"cherrypy":1,"genshi":1,"django":1,"google-app-engine":2,"notation":1,"shorthand":1,"networking":1,"internet":1},"answerCount":3,"nonacceptedCount":3},"loops":{"activity":{"2011-02":{"commentCount":1},"2012-10":{"commentCount":1},"2013-08":{"commentCount":1},"2011-01":{"answerCount":1,"nonacceptedCount":1}},"commentCount":3,"relatedTags":{"python":1,"vowel":1,"time":1,"binary-tree":1,"matlab":1,"matrix":1,"manipulation":1,"ruby-on-rails":1,"ruby":1,"each":1},"answerCount":1,"nonacceptedCount":1},"vowel":{"activity":{"2011-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"python":1,"loops":1}},"tdd":{"activity":{"2011-02":{"commentCount":1},"2012-01":{"commentCount":2},"2013-03":{"commentCount":1},"2011-08":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2013-09":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":3,"ruby-on-rails-3":4,"testing":1,"rspec":1,"ruby-on-rails-3.1":2,"factory-girl":2,"railstutorial.org":1,"bdd":2,"rspec2":1,"cucumber":1,"capybara":1,"git":1,"commit":1},"answerCount":3,"acceptedCount":3},"heroku":{"activity":{"2011-02":{"commentCount":1},"2011-01":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-07":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-05":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-11":{"commentCount":1},"2012-03":{"commentCount":2,"questionCount":1},"2013-02":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-01":{"commentCount":1},"2013-03":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2013-07":{"commentCount":3,"answerCount":1,"nonacceptedCount":1},"2013-04":{"commentCount":2},"2013-10":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2010-10":{"answerCount":2,"nonacceptedCount":2},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":1,"nonacceptedCount":1},"2011-10":{"answerCount":4,"acceptedCount":3,"nonacceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1},"2012-07":{"answerCount":1,"nonacceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":16,"relatedTags":{"ruby-on-rails-3":16,"nokogiri":1,"ruby-on-rails":30,"deployment":1,"error-handling":1,"stack-trace":1,"rake":2,"delayed-job":1,"thin":2,"rss":2,"mime-types":2,"scraper":2,"javascript":1,"asset-pipeline":4,"sqlite3":1,"ruby":6,"git":3,"rubygems":2,"model-view-controller":1,"associations":1,"rails-routing":1,"routes":1,"assets":1,"sendgrid":1,"pdf-generation":1,"wicked-pdf":1,"actionmailer":1,"gem":1,"bundler":2,"ruby-on-rails-3.2":1,"spree":1,"sqlite":1,"postgresql":1,"sinatra":1,"ruby-on-rails-4":1},"answerCount":26,"nonacceptedCount":15,"acceptedCount":11,"questionCount":1},"nokogiri":{"activity":{"2011-02":{"commentCount":1},"2011-04":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-04":{"commentCount":1},"2012-03":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2013-04":{"commentCount":1},"2013-07":{"commentCount":1},"2013-08":{"commentCount":1}},"commentCount":8,"relatedTags":{"ruby-on-rails-3":1,"heroku":1,"ruby-on-rails":5,"ruby":7,"railscasts":1,"xml":2,"builder":1,"gem":2,"libxml":2,"rubygems":1},"answerCount":2,"nonacceptedCount":2},"rvm":{"activity":{"2010-12":{"commentCount":1},"2011-01":{"commentCount":1},"2011-06":{"commentCount":2},"2011-08":{"commentCount":1},"2011-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-01":{"commentCount":1},"2012-02":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-10":{"commentCount":1},"2013-12":{"commentCount":1},"2010-09":{"answerCount":1,"acceptedCount":1},"2011-05":{"answerCount":1,"nonacceptedCount":1},"2012-11":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1}},"commentCount":10,"relatedTags":{"ruby":9,"osx":3,"ruby-on-rails":8,"rspec":1,"bundler":4,"ruby-on-rails-3":5,"encoding":2,"ruby-1.9.2":2,"gem":4,"bundle":1,"gcc":1,"osx-mountain-lion":1,"ubuntu":1,"rubygems":1,"compilation":1,"spree":1,"ubuntu-12.04":1},"answerCount":6,"acceptedCount":2,"nonacceptedCount":4},"raphael":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1}},"keyword":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"search":1}},"apache":{"activity":{"2011-02":{"commentCount":1},"2011-04":{"commentCount":1},"2012-04":{"commentCount":1},"2013-04":{"commentCount":1},"2010-10":{"answerCount":1,"nonacceptedCount":1},"2010-12":{"answerCount":2,"nonacceptedCount":2},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2013-01":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":7,"ruby":2,"rack":2,"fcgi":2,"passenger":3,"ubuntu":3,"process":1,"cloud":1,"parallel-processing":1,"http":1,"http-status-code-404":1,"osx":1,"ruby-on-rails-3":1,"paperclip":2},"answerCount":5,"nonacceptedCount":4,"acceptedCount":1},"rack":{"activity":{"2011-02":{"commentCount":1},"2011-04":{"commentCount":2},"2011-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-11":{"commentCount":2},"2013-09":{"commentCount":3},"2011-07":{"answerCount":1,"nonacceptedCount":1},"2012-04":{"answerCount":1,"nonacceptedCount":1},"2013-08":{"answerCount":1,"acceptedCount":1}},"commentCount":9,"relatedTags":{"ruby-on-rails":12,"ruby":7,"apache":2,"fcgi":2,"ruby-on-rails-3":5,"routes":2,"routing":1,"sinatra":1,"global-variables":1,"model-view-controller":1,"middleware":2,"rack-middleware":1,"omniauth":1,"ruby-on-rails-4":1},"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"fcgi":{"activity":{"2011-02":{"commentCount":1},"2011-04":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"ruby":2,"apache":2,"rack":2}},"windows":{"activity":{"2011-03":{"commentCount":1},"2011-01":{"commentCount":1},"2012-03":{"commentCount":1},"2011-05":{"answerCount":1,"nonacceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":3,"rspec":1,"ruby":1,"rubygems":1,"gem":1},"answerCount":1,"nonacceptedCount":1},"rspec-rails":{"activity":{"2011-03":{"commentCount":1},"2011-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-10":{"commentCount":1},"2012-02":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-07":{"commentCount":1},"2013-07":{"commentCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1},"2013-08":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1}},"commentCount":6,"relatedTags":{"ruby-on-rails":11,"ruby":2,"rspec":7,"ruby-on-rails-plugins":1,"ruby-on-rails-2":1,"rspec2":3,"ruby-on-rails-3":2,"testing":1,"railstutorial.org":1,"actionmailer":1,"bdd":1,"rails-routing":1,"ruby-on-rails-3.2.1":1,"capybara":1,"braintree":1},"answerCount":6,"nonacceptedCount":3,"acceptedCount":3},"nested-attributes":{"activity":{"2011-04":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-09":{"commentCount":3},"2013-02":{"commentCount":1}},"commentCount":5,"relatedTags":{"ruby-on-rails":5,"ruby":2,"ruby-on-rails-3":3,"comments":3,"ruby-on-rails-4":3,"railscasts":3,"nested-forms":1,"image-upload":1},"answerCount":1,"acceptedCount":1},"ubuntu-10.04":{"activity":{"2011-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"rubygems":1}},"cherrypy":{"activity":{"2011-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"python":1,"genshi":1}},"genshi":{"activity":{"2011-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"python":1,"cherrypy":1}},"gem":{"activity":{"2011-04":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-01":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-03":{"commentCount":1},"2011-05":{"commentCount":2,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-08":{"commentCount":1},"2011-12":{"commentCount":1,"answerCount":4,"nonacceptedCount":2,"acceptedCount":2},"2012-03":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2012-02":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-03":{"commentCount":3},"2013-09":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-08":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2013-10":{"commentCount":2},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"nonacceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1},"2012-09":{"answerCount":1,"acceptedCount":1},"2012-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":18,"relatedTags":{"ruby-on-rails":21,"ruby":21,"rubygems":7,"windows":1,"ruby-on-rails-3":13,"admin":1,"rails-engines":2,"ubuntu":1,"ubuntu-11.04":1,"rvm":4,"nokogiri":2,"libxml":2,"bundler":4,"tcp":1,"monitoring":1,"path":1,"require":1,"fastercsv":1,"git":1,"load":1,"cucumber":1,"devise":1,"model":1,"oauth":1,"omniauth":1,"searchlogic":1,"spree":2,"bundle":2,"heroku":1,"pusher":1,"ubuntu-12.04":1,"gmail":1,"routes":1,"ruby-on-rails-4":1},"answerCount":19,"nonacceptedCount":10,"acceptedCount":9},"cancan":{"activity":{"2011-04":{"commentCount":3},"2011-10":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-08":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-01":{"commentCount":1},"2013-10":{"commentCount":1},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":1,"nonacceptedCount":1},"2012-04":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"acceptedCount":1},"2013-08":{"answerCount":1,"acceptedCount":1}},"commentCount":7,"relatedTags":{"ruby-on-rails":13,"ruby-on-rails-3":11,"devise":6,"ruby":1,"rolify":1,"ruby-on-rails-4":2,"roles":1,"authorization":1,"spree":1},"answerCount":8,"nonacceptedCount":3,"acceptedCount":5},"sqlite3-ruby":{"activity":{"2011-01":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"sqlite3":2},"answerCount":1,"nonacceptedCount":1},"jquery":{"activity":{"2011-04":{"commentCount":4,"answerCount":1,"acceptedCount":1},"2011-09":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-02":{"commentCount":1},"2012-11":{"commentCount":5,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2012-10":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2013-07":{"commentCount":1},"2013-08":{"commentCount":1},"2013-09":{"commentCount":1},"2013-10":{"commentCount":1},"2011-06":{"answerCount":2,"acceptedCount":2},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1}},"commentCount":17,"relatedTags":{"javascript":10,"ruby-on-rails":11,"ruby":7,"ruby-on-rails-3":13,"jrails":1,"kaminari":1,"ajax":7,"json":4,"get":1,"html":3,"css":1,"jsonp":2,"blackberry-webworks":2,"ruby-on-rails-3.2":1,"polymorphic-associations":1,"xml":1,"jquery-selectors":1,"twitter-bootstrap":1},"answerCount":10,"acceptedCount":7,"nonacceptedCount":3},"django":{"activity":{"2011-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"python":1,"google-app-engine":1}},"google-app-engine":{"activity":{"2011-02":{"commentCount":1},"2013-08":{"commentCount":1}},"commentCount":2,"relatedTags":{"python":2,"django":1}},"gmail":{"activity":{"2011-02":{"commentCount":1},"2011-05":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2010-10":{"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1},"2012-02":{"answerCount":1,"nonacceptedCount":1},"2013-08":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":5,"actionmailer":2,"ruby-on-rails-3":3,"mailer":2,"email":2,"smtp":1,"ruby":1,"ios":1,"gem":1},"answerCount":6,"acceptedCount":3,"nonacceptedCount":3},"actionmailer":{"activity":{"2011-02":{"commentCount":1},"2011-05":{"commentCount":1},"2011-11":{"commentCount":1},"2013-07":{"commentCount":1},"2010-11":{"answerCount":1,"acceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":1,"nonacceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":9,"gmail":2,"ruby-on-rails-3":5,"delayed-job":1,"rspec":1,"rspec-rails":1,"ruby":2,"sendmail":1,"heroku":1},"answerCount":7,"acceptedCount":5,"nonacceptedCount":2},"rails-migrations":{"activity":{"2011-03":{"commentCount":1},"2011-08":{"commentCount":1},"2011-11":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3},"answerCount":1,"acceptedCount":1},"webrat":{"activity":{"2011-03":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-01":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":3,"rspec2":1,"rspec":1,"cucumber":2,"bdd":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"rest":{"activity":{"2011-03":{"commentCount":1},"2011-10":{"commentCount":1},"2012-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-01":{"commentCount":1},"2010-12":{"answerCount":1,"acceptedCount":1},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2012-04":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":8,"delete":1,"routes":3,"partial-views":2,"put":2,"routing":1,"ruby-on-rails-3":1,"crud":1,"api":1,"sinatra":1},"answerCount":4,"acceptedCount":2,"nonacceptedCount":2},"delete":{"activity":{"2011-03":{"commentCount":1},"2010-12":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":3,"rest":1,"ruby-on-rails-3":2,"link-to":1,"ruby":1,"controller":1},"answerCount":2,"acceptedCount":2},"hash":{"activity":{"2011-04":{"commentCount":1},"2011-11":{"commentCount":2},"2012-11":{"commentCount":1},"2013-09":{"commentCount":3},"2012-10":{"answerCount":1,"acceptedCount":1},"2013-10":{"answerCount":1,"nonacceptedCount":1}},"commentCount":7,"relatedTags":{"ruby":5,"iterate":1,"ruby-on-rails":5,"params":2,"arrays":1,"segmentation-fault":1,"permutation":1,"ruby-on-rails-3":4,"mongodb":3,"mongoid":3,"generator":1,"syntax":1},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"iterate":{"activity":{"2011-04":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"hash":1}},"jrails":{"activity":{"2011-04":{"commentCount":1}},"commentCount":1,"relatedTags":{"jquery":1,"ruby-on-rails-3":1,"kaminari":1}},"kaminari":{"activity":{"2011-04":{"commentCount":1},"2011-07":{"commentCount":1}},"commentCount":2,"relatedTags":{"jquery":1,"ruby-on-rails-3":1,"jrails":1,"ruby-on-rails":1}},"view":{"activity":{"2011-04":{"commentCount":1},"2011-12":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2011-03":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":5,"local-variables":1,"partial":2,"templates":1,"controller":1,"fields-for":1},"answerCount":3,"acceptedCount":3},"local-variables":{"activity":{"2011-04":{"commentCount":1},"2011-11":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":1,"view":1,"ruby":1}},"linux":{"activity":{"2011-01":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-02":{"commentCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"voice":1,"ruby-on-rails":2,"ruby":2,"ubuntu":1,"path":1,"php":1,"mysql":1},"answerCount":2,"nonacceptedCount":2},"voice":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"linux":1}},"methods":{"activity":{"2011-01":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2011-05":{"commentCount":1},"2011-10":{"commentCount":1},"2011-12":{"commentCount":1},"2013-01":{"commentCount":1},"2013-04":{"commentCount":1},"2010-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":7,"relatedTags":{"ruby-on-rails":5,"console":2,"ruby":2,"validation":1,"ruby-on-rails-3":4,"url":1,"devise":1,"model-view-controller":1,"model":1,"unit-testing":1,"testunit":1,"undefined":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"console":{"activity":{"2011-01":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-03":{"commentCount":1},"2011-10":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":4,"methods":2,"rake":1,"environment":1,"sql":1,"ruby-on-rails-3":1},"answerCount":2,"acceptedCount":2},"postgresql":{"activity":{"2011-02":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-06":{"commentCount":1},"2011-07":{"commentCount":1},"2012-09":{"commentCount":1},"2012-11":{"commentCount":1},"2013-08":{"commentCount":1},"2013-05":{"commentCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":1,"acceptedCount":1},"2012-12":{"answerCount":1,"nonacceptedCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":7,"relatedTags":{"ruby-on-rails":9,"boolean":1,"seed":1,"ruby":5,"ruby-on-rails-3":6,"osx":1,"osx-lion":1,"mysql":1,"ruby-on-rails-4":1,"go":1,"cucumber":1,"rspec":1,"rspec2":1,"oauth":1,"devise":1,"sqlite":1,"heroku":1,"sinatra":1},"answerCount":6,"acceptedCount":4,"nonacceptedCount":2},"boolean":{"activity":{"2011-02":{"commentCount":1},"2012-01":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"postgresql":1,"seed":1,"ruby":1,"sorting":1},"answerCount":1,"acceptedCount":1},"seed":{"activity":{"2011-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"postgresql":1,"boolean":1}},"environment":{"activity":{"2011-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"console":1,"rake":1}},"rails-engines":{"activity":{"2011-04":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-05":{"commentCount":1},"2011-10":{"commentCount":2,"answerCount":2,"nonacceptedCount":2},"2011-11":{"commentCount":1},"2011-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-01":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-08":{"commentCount":1},"2011-01":{"answerCount":1,"acceptedCount":1},"2012-03":{"answerCount":1,"nonacceptedCount":1},"2013-02":{"answerCount":1,"nonacceptedCount":1},"2013-07":{"answerCount":1,"acceptedCount":1},"2014-02":{"answerCount":1,"acceptedCount":1}},"commentCount":8,"relatedTags":{"ruby-on-rails":10,"ruby":4,"ruby-on-rails-3":9,"rubygems":1,"gem":2,"ruby-on-rails-3.1":3,"rspec2":2,"spree":3,"helper":1,"path":1,"require":1,"template-engine":1,"slim-lang":1,"assets":1,"routes":1,"ruby-on-rails-3.2":1,"activesupport":1,"ruby-on-rails-4":1,"routing":1,"nested-forms":1},"answerCount":10,"acceptedCount":4,"nonacceptedCount":6},"datamapper":{"activity":{"2011-04":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"activerecord":1,"ruby-on-rails-3":1},"answerCount":1,"nonacceptedCount":1},"debug-symbols":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1}},"validation":{"activity":{"2011-01":{"commentCount":1},"2011-07":{"commentCount":1},"2010-11":{"answerCount":1,"nonacceptedCount":1},"2010-12":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":4,"ruby":1,"ruby-on-rails-3":5,"methods":1,"activerecord":3,"activemodel":1,"rspec":1},"answerCount":4,"nonacceptedCount":1,"acceptedCount":3},"sql-server":{"activity":{"2011-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"sql-server-2000":1}},"sql-server-2000":{"activity":{"2011-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"sql-server":1}},"rails-routing":{"activity":{"2011-03":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-08":{"commentCount":1},"2013-04":{"commentCount":1},"2010-12":{"answerCount":1,"acceptedCount":1},"2011-04":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"acceptedCount":1},"2012-02":{"answerCount":1,"acceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2013-09":{"answerCount":2,"acceptedCount":2},"2014-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":12,"ruby-on-rails-3":9,"routing":4,"routes":2,"model-view-controller":1,"heroku":1,"associations":1,"rspec-rails":1,"ruby-on-rails-3.2.1":1,"subdomain":1,"rspec":1,"ruby-on-rails-4":1,"spree":1},"answerCount":10,"acceptedCount":7,"nonacceptedCount":3},"ajax":{"activity":{"2011-04":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2012-11":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2013-02":{"commentCount":2},"2013-08":{"commentCount":1},"2013-07":{"commentCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-05":{"answerCount":1,"nonacceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1},"2013-09":{"answerCount":1,"acceptedCount":1}},"commentCount":8,"relatedTags":{"ruby-on-rails":11,"ruby":4,"jquery":7,"ruby-on-rails-3":5,"javascript":3,"xmlhttprequest":2,"polymorphic-associations":1,"rspec":1,"link-to-remote":1,"syntax-error":1,"json":1,"cucumber":1,"capybara":1,"vote-up-buttons":1},"answerCount":6,"acceptedCount":4,"nonacceptedCount":2},"authentication":{"activity":{"2011-04":{"commentCount":1},"2011-05":{"commentCount":3,"answerCount":1,"nonacceptedCount":1},"2012-10":{"commentCount":1},"2011-09":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":5,"relatedTags":{"ruby-on-rails":7,"ruby-on-rails-3":5,"facebook":1,"ruby":2,"devise":3,"rubygems":1,"omniauth":1},"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"facebook":{"activity":{"2011-04":{"commentCount":1},"2011-05":{"commentCount":1},"2010-10":{"commentCount":1},"2012-10":{"commentCount":2},"2011-12":{"answerCount":1,"acceptedCount":1},"2013-07":{"answerCount":1,"acceptedCount":1}},"commentCount":5,"relatedTags":{"ruby-on-rails":3,"ruby-on-rails-3":2,"authentication":1,"facebooker":1,"wordpress":2,"comments":2,"ruby":1,"rspec":1,"capybara":1},"answerCount":2,"acceptedCount":2},"model-associations":{"activity":{"2011-04":{"commentCount":1},"2013-03":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"associations":1,"relationship":1,"plural":1},"answerCount":1,"acceptedCount":1},"xml":{"activity":{"2011-04":{"commentCount":1},"2011-11":{"commentCount":1},"2012-04":{"commentCount":1},"2012-11":{"commentCount":1},"2012-12":{"commentCount":1},"2013-09":{"commentCount":1},"2013-08":{"commentCount":1},"2010-10":{"answerCount":1,"nonacceptedCount":1},"2010-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":7,"relatedTags":{"ruby-on-rails":6,"escaping":1,"hpricot":1,"php":1,"nokogiri":2,"builder":1,"ruby-on-rails-3":2,"json":2,"javascript":1,"jquery":1,"ruby":1,"c#":1,"xpath":1},"answerCount":2,"nonacceptedCount":2},"escaping":{"activity":{"2011-04":{"commentCount":1},"2013-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"xml":1,"hpricot":1,"html":1,"html-escape-characters":1},"answerCount":1,"nonacceptedCount":1},"hpricot":{"activity":{"2011-04":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"xml":1,"escaping":1}},"symbols":{"activity":{"2011-05":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"block":1}},"block":{"activity":{"2011-05":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"symbols":1}},"include":{"activity":{"2011-01":{"commentCount":1},"2010-12":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"initalization":1,"number-with-delimiter":1},"answerCount":1,"acceptedCount":1},"initalization":{"activity":{"2011-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"include":1}},"activeresource":{"activity":{"2011-05":{"commentCount":1},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":3,"ruby":3,"ruby-on-rails-3":2,"attr-accessible":1,"httparty":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"admin":{"activity":{"2011-05":{"commentCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2,"gem":1,"controller":1,"routes":1,"routing":1,"model":1},"answerCount":2,"acceptedCount":2},"models":{"activity":{"2011-05":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2,"rails-models":1}},"rails-models":{"activity":{"2011-05":{"commentCount":1},"2011-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":2,"models":1,"activerecord":1},"answerCount":1,"nonacceptedCount":1},"deployment":{"activity":{"2011-07":{"commentCount":1},"2013-03":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails-3":1,"error-handling":1,"heroku":1,"stack-trace":1,"ruby-on-rails":1,"capistrano":1}},"error-handling":{"activity":{"2011-07":{"commentCount":1},"2010-09":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"deployment":1,"heroku":1,"stack-trace":1,"ruby-on-rails":1,"ruby":1,"design-patterns":1,"httparty":1},"answerCount":1,"acceptedCount":1},"stack-trace":{"activity":{"2011-07":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"deployment":1,"error-handling":1,"heroku":1}},"sorting":{"activity":{"2011-07":{"commentCount":1},"2011-09":{"answerCount":1,"nonacceptedCount":1},"2012-01":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"where":1,"ruby-on-rails":2,"ruby":1,"boolean":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"where":{"activity":{"2011-07":{"commentCount":1},"2011-10":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"sorting":1,"mysql":1,"ruby-on-rails":1,"search":1},"answerCount":1,"acceptedCount":1},"activemodel":{"activity":{"2011-07":{"commentCount":1},"2011-08":{"commentCount":1},"2011-02":{"answerCount":1,"nonacceptedCount":1},"2012-02":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails-3":2,"validation":1,"activerecord":4,"ruby-on-rails":3,"rspec":1,"ruby":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"ruby-on-rails-3.1":{"activity":{"2011-07":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-09":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2011-08":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2011-10":{"commentCount":3,"answerCount":5,"nonacceptedCount":4,"acceptedCount":1},"2011-11":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2011-12":{"commentCount":4,"answerCount":4,"acceptedCount":3,"nonacceptedCount":1},"2012-01":{"commentCount":4,"answerCount":2,"acceptedCount":2},"2012-02":{"commentCount":3,"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"2012-10":{"commentCount":1},"2012-11":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-09":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"nonacceptedCount":1},"2012-04":{"answerCount":1,"nonacceptedCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2013-06":{"answerCount":1,"acceptedCount":1}},"commentCount":23,"relatedTags":{"ruby-on-rails":31,"ruby-on-rails-3":30,"ruby":10,"nginx":1,"thin":1,"asset-pipeline":4,"rspec2":2,"spree":5,"rails-engines":3,"rubygems":2,"tdd":2,"factory-girl":2,"sprockets":2,"activerecord":2,"habtm":1,"database":2,"database-management":2,"ruby-on-rails-3.2":2,"ruby-on-rails-plugins":1,"rspec":2,"routes":2,"mongoid":1,"javascript":1,"associations":1,"css":1,"assets":1,"routing":1,"devise":1,"rails-admin":1,"naming":1,"erb":1},"answerCount":26,"nonacceptedCount":9,"acceptedCount":17},"ruby-1.8":{"activity":{"2011-06":{"commentCount":1},"2011-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"paperclip":1,"ruby":1,"parsing":1,"uri":1},"answerCount":1,"nonacceptedCount":1},"associations":{"activity":{"2011-07":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-03":{"commentCount":1},"2012-08":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-01":{"commentCount":1},"2012-11":{"commentCount":2},"2010-12":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-02":{"answerCount":1,"acceptedCount":1},"2011-03":{"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":4,"acceptedCount":3,"nonacceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-05":{"answerCount":1,"acceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2012-09":{"answerCount":1,"nonacceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":6,"relatedTags":{"ruby-on-rails":18,"belongs-to":4,"activerecord":4,"destroy":1,"ruby-on-rails-3":12,"has-many":2,"devise":1,"ruby-on-rails-3.2":1,"ruby":4,"rspec":2,"has-one":1,"model-view-controller":1,"heroku":1,"rails-routing":1,"ruby-on-rails-3.1":1,"rails-admin":1,"relationship":1,"model-associations":1,"plural":1},"answerCount":17,"nonacceptedCount":6,"acceptedCount":11},"belongs-to":{"activity":{"2011-07":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-10":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":2,"acceptedCount":2},"2012-01":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":8,"associations":4,"controller":2,"activerecord":1,"has-one":1,"ruby-on-rails-3":1,"forms":1,"nested-forms":1,"fields-for":1},"answerCount":6,"nonacceptedCount":2,"acceptedCount":4},"ruby-on-rails-plugins":{"activity":{"2011-08":{"commentCount":2,"answerCount":2,"acceptedCount":2},"2011-05":{"commentCount":1},"2012-06":{"commentCount":1},"2010-11":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":6,"rspec":1,"rspec-rails":1,"ruby-on-rails-2":1,"ruby":1,"ruby-on-rails-3":6,"wkhtmltopdf":1,"wicked-pdf":1,"rubygems":1,"ruby-on-rails-3.1":1,"authlogic":1},"answerCount":3,"acceptedCount":3},"ruby-on-rails-2":{"activity":{"2011-08":{"commentCount":1},"2012-03":{"commentCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"rspec":1,"ruby-on-rails-plugins":1,"rspec-rails":1,"ruby":1},"answerCount":1,"nonacceptedCount":1},"multidimensional-array":{"activity":{"2011-04":{"commentCount":1},"2012-10":{"commentCount":1}},"commentCount":2,"relatedTags":{"arrays":2,"ruby-on-rails-3":1,"ruby-1.9.2":1,"ruby-on-rails":1,"ruby":1}},"ruby-1.9.2":{"activity":{"2011-04":{"commentCount":1},"2011-06":{"commentCount":2}},"commentCount":3,"relatedTags":{"arrays":1,"ruby-on-rails-3":3,"multidimensional-array":1,"encoding":2,"rvm":2,"bundler":2}},"model-view-controller":{"activity":{"2011-06":{"commentCount":1},"2011-12":{"commentCount":1},"2012-12":{"commentCount":1},"2011-04":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"nonacceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1},"2012-07":{"answerCount":1,"nonacceptedCount":1},"2012-08":{"answerCount":1,"nonacceptedCount":1},"2013-04":{"answerCount":1,"acceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":9,"ruby":5,"routing":1,"methods":1,"model":1,"devise":1,"routes":2,"partials":1,"heroku":1,"associations":1,"rails-routing":1,"rack":1,"inheritance":1,"controllers":1,"ruby-on-rails-3":1,"directory":1},"answerCount":6,"acceptedCount":3,"nonacceptedCount":3},"monkeypatching":{"activity":{"2011-04":{"commentCount":2},"2011-09":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"ruby":3,"ruby-on-rails-3":1},"answerCount":1,"acceptedCount":1},"sockets":{"activity":{"2011-05":{"commentCount":1},"2013-09":{"commentCount":1},"2011-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby":2,"byte":1,"networking":1,"dns":1,"localhost":1},"answerCount":1,"nonacceptedCount":1},"byte":{"activity":{"2011-05":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"sockets":1}},"mailer":{"activity":{"2011-05":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"gmail":2},"answerCount":1,"acceptedCount":1},"activemerchant":{"activity":{"2011-06":{"commentCount":1},"2012-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby":1,"paypal":1},"answerCount":1,"nonacceptedCount":1},"encoding":{"activity":{"2011-06":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails-3":2,"rvm":2,"bundler":2,"ruby-1.9.2":2}},"railscasts":{"activity":{"2011-04":{"commentCount":1},"2013-09":{"commentCount":3},"2012-10":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":5,"ruby":1,"nokogiri":1,"comments":3,"ruby-on-rails-4":3,"nested-attributes":3},"answerCount":1,"acceptedCount":1},"mongoid":{"activity":{"2011-07":{"commentCount":1,"questionCount":1},"2013-09":{"commentCount":3},"2010-12":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"nonacceptedCount":1},"2012-05":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":8,"ruby-on-rails-3":3,"mongodb":5,"hash":3,"rspec":2,"ruby":2,"ruby-on-rails-3.1":1},"answerCount":4,"acceptedCount":3,"questionCount":1,"nonacceptedCount":1},"osx-lion":{"activity":{"2011-07":{"commentCount":1},"2012-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"osx":2,"postgresql":1,"ruby":1},"answerCount":1,"nonacceptedCount":1},"ubuntu-11.04":{"activity":{"2011-08":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"ubuntu":1,"gem":1}},"sinatra":{"activity":{"2011-08":{"commentCount":1},"2012-04":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"nonacceptedCount":1},"2013-04":{"answerCount":1,"nonacceptedCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2,"routing":1,"rack":1,"api":1,"rest":1,"ruby":3,"omniauth":1,"erb":1,"sqlite":1,"postgresql":1,"heroku":1},"answerCount":4,"acceptedCount":1,"nonacceptedCount":3},"model":{"activity":{"2011-08":{"commentCount":3},"2011-12":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2011-09":{"answerCount":1,"acceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":4,"ruby":2,"controller":3,"save":1,"ruby-on-rails-3":5,"activerecord":2,"model-view-controller":1,"methods":1,"routing":1,"admin":1,"relationship":1,"has-and-belongs-to-many":1,"gem":1,"database":1,"polymorphic":1},"answerCount":4,"acceptedCount":4},"save":{"activity":{"2011-08":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby":1,"model":1,"controller":1,"parameters":1},"answerCount":1,"nonacceptedCount":1},"declarative-authorization":{"activity":{"2011-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2},"answerCount":1,"nonacceptedCount":1},"nginx":{"activity":{"2011-08":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2012-12":{"commentCount":1},"2013-08":{"commentCount":1},"2011-05":{"answerCount":1,"acceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":4,"ruby-on-rails-3.1":1,"thin":1,"asset-pipeline":1,"ruby":3,"production-environment":1,"ubuntu":2,"passenger":2,"ruby-on-rails-3":1,"natty":1},"answerCount":2,"acceptedCount":2},"thin":{"activity":{"2011-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-03":{"commentCount":1},"2012-02":{"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"nginx":1,"ruby-on-rails-3.1":1,"asset-pipeline":2,"heroku":2,"ruby-on-rails-3":2,"ruby":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"asset-pipeline":{"activity":{"2011-08":{"commentCount":1},"2011-12":{"commentCount":1},"2012-02":{"commentCount":3,"answerCount":1,"acceptedCount":1},"2012-01":{"commentCount":1},"2013-01":{"commentCount":1},"2013-07":{"commentCount":2},"2011-10":{"answerCount":2,"acceptedCount":2},"2013-02":{"answerCount":1,"acceptedCount":1},"2013-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":9,"relatedTags":{"ruby-on-rails":11,"nginx":1,"ruby-on-rails-3.1":4,"thin":2,"ruby-on-rails-3":5,"sprockets":5,"ruby":2,"performance":1,"osx":1,"ruby-on-rails-3.2":1,"javascript":1,"heroku":4,"sass":1,"rubygems":1,"bundler":1},"answerCount":5,"acceptedCount":4,"nonacceptedCount":1},"spree":{"activity":{"2011-10":{"commentCount":4,"answerCount":2,"acceptedCount":2},"2011-12":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2012-01":{"commentCount":4,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-03":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-04":{"commentCount":3,"answerCount":4,"acceptedCount":3,"nonacceptedCount":1},"2012-06":{"commentCount":1},"2012-02":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2012-10":{"commentCount":3,"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2012-08":{"commentCount":1,"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2013-02":{"commentCount":2,"answerCount":1,"nonacceptedCount":1},"2013-01":{"commentCount":1,"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"2013-08":{"commentCount":1},"2013-11":{"commentCount":1},"2013-10":{"commentCount":1,"answerCount":2,"nonacceptedCount":2},"2011-11":{"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"2012-07":{"answerCount":5,"nonacceptedCount":4,"acceptedCount":1},"2012-09":{"answerCount":1,"nonacceptedCount":1},"2012-11":{"answerCount":2,"acceptedCount":2},"2012-12":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-06":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-07":{"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"2014-03":{"answerCount":4,"acceptedCount":1,"nonacceptedCount":3}},"commentCount":26,"relatedTags":{"ruby-on-rails":48,"ruby-on-rails-3.1":5,"rspec2":2,"rails-engines":3,"ruby-on-rails-3":18,"installation":3,"rubygems":2,"devise":3,"ruby-on-rails-3.2":4,"grails":1,"groovy":1,"deface":2,"ruby":13,"e-commerce":5,"routes":1,"imagemagick":1,"mysql":1,"ruby-on-rails-4":3,"ruby-2.0":1,"strong-parameters":1,"generator":3,"rake":1,"gem":2,"rvm":1,"views":1,"authorization":1,"cancan":1,"internationalization":1,"locale":1,"helper":1,"overriding":1,"translation":1,"heroku":1,"ransack":1,"rails-routing":1,"newrelic":1},"answerCount":47,"acceptedCount":19,"nonacceptedCount":28},"rest-client":{"activity":{"2011-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"net-http":1}},"net-http":{"activity":{"2011-10":{"commentCount":1},"2012-11":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"ruby":3,"ruby-on-rails-3":1,"rest-client":1},"answerCount":1,"nonacceptedCount":1},"design":{"activity":{"2011-10":{"commentCount":1},"2010-09":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"shipping":1,"ruby":1},"answerCount":1,"acceptedCount":1},"shipping":{"activity":{"2011-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"design":1}},"thor":{"activity":{"2011-11":{"commentCount":1},"2011-10":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1},"answerCount":1,"acceptedCount":1},"wiki":{"activity":{"2011-11":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2},"answerCount":1,"acceptedCount":1},"params":{"activity":{"2011-11":{"commentCount":2},"2012-09":{"commentCount":1},"2012-07":{"commentCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":4,"ruby":2,"hash":2,"ruby-on-rails-3":2,"nil":1,"param":1}},"sprockets":{"activity":{"2011-08":{"commentCount":1},"2012-02":{"commentCount":3},"2011-10":{"answerCount":1,"acceptedCount":1},"2013-02":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":4,"railstutorial.org":1,"ruby-on-rails-3":3,"ruby-on-rails-3.1":2,"asset-pipeline":5,"ruby-on-rails-3.2":1,"sass":1},"answerCount":2,"acceptedCount":2},"railstutorial.org":{"activity":{"2011-08":{"commentCount":1},"2012-07":{"commentCount":1},"2013-03":{"commentCount":1},"2012-12":{"answerCount":1,"nonacceptedCount":1},"2013-02":{"answerCount":1,"acceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":5,"sprockets":1,"ruby-on-rails-3":1,"testing":1,"rspec-rails":1,"tdd":1,"rspec":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"polymorphism":{"activity":{"2011-10":{"commentCount":1},"2010-12":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"has-many":1,"ruby-on-rails":1},"answerCount":1,"acceptedCount":1},"has-many":{"activity":{"2011-10":{"commentCount":1},"2012-08":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails-3":3,"polymorphism":1,"ruby-on-rails":2,"associations":2},"answerCount":1,"acceptedCount":1},"firefox":{"activity":{"2011-10":{"commentCount":1,"questionCount":1}},"commentCount":1,"relatedTags":{"selenium":2},"questionCount":1},"selenium":{"activity":{"2011-10":{"commentCount":1,"questionCount":1},"2011-08":{"answerCount":1,"acceptedCount":1},"2011-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"firefox":2,"ruby-on-rails-3":1,"cucumber":1,"capybara":1,"ruby-on-rails":1,"ruby":1,"rspec":1,"selenium2":1},"answerCount":2,"acceptedCount":1,"questionCount":1,"nonacceptedCount":1},"sqlite":{"activity":{"2011-08":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-11":{"commentCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2,"sqlite3":2,"javascript":1,"cordova":1,"ruby":1,"postgresql":1,"heroku":1,"sinatra":1},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"many-to-many":{"activity":{"2011-09":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"relationships":1}},"relationships":{"activity":{"2011-09":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"many-to-many":1,"ruby-on-rails-3":1},"answerCount":1,"acceptedCount":1},"url":{"activity":{"2011-10":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-02":{"answerCount":1,"acceptedCount":1},"2011-03":{"answerCount":1,"nonacceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1},"2013-02":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":3,"methods":1,"devise":1,"routes":2,"ruby-on-rails":3,"routing":2,"request":1,"database":1,"user":1,"ruby":2},"answerCount":5,"acceptedCount":3,"nonacceptedCount":2},"ruby-1.9":{"activity":{"2011-10":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"ruby":2,"ruby-on-rails-3":2}},"pagination":{"activity":{"2011-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"will-paginate":1}},"will-paginate":{"activity":{"2011-12":{"commentCount":1},"2012-02":{"commentCount":1},"2011-07":{"answerCount":1,"nonacceptedCount":1},"2013-05":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"ruby-on-rails-3":2,"pagination":1,"ruby-on-rails-3.2.1":1,"ruby":1,"paginate":1},"answerCount":2,"nonacceptedCount":2},"namespaces":{"activity":{"2011-12":{"commentCount":1},"2011-05":{"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":3,"routing":1,"routes":1,"production-environment":1,"ruby-on-rails-3":1},"answerCount":2,"acceptedCount":2},"aptana":{"activity":{"2011-09":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"ruby-on-rails-3":1,"bundler":1}},"facebook-credits":{"activity":{"2011-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1}},"windows-7":{"activity":{"2011-12":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2}},"datetime":{"activity":{"2011-08":{"commentCount":1},"2011-04":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"nonacceptedCount":1},"2013-10":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby":2,"ruby-on-rails-3":3,"factory-girl":1,"time":1,"timezone":2},"answerCount":3,"acceptedCount":1,"nonacceptedCount":2},"factory-girl":{"activity":{"2011-08":{"commentCount":1},"2012-01":{"commentCount":2},"2012-09":{"commentCount":1},"2011-01":{"answerCount":1,"nonacceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-05":{"answerCount":2,"acceptedCount":2},"2012-04":{"answerCount":1,"nonacceptedCount":1},"2012-05":{"answerCount":1,"acceptedCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1},"2012-08":{"answerCount":1,"nonacceptedCount":1},"2013-02":{"answerCount":1,"acceptedCount":1},"2013-08":{"answerCount":1,"acceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":9,"ruby":5,"ruby-on-rails-3":8,"datetime":1,"ruby-on-rails-3.1":2,"tdd":2,"rspec":7,"devise":1,"testunit":1,"activerecord":1,"testing":2,"rake":1},"answerCount":10,"nonacceptedCount":4,"acceptedCount":6},"message-queue":{"activity":{"2011-09":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1}},"dry":{"activity":{"2011-12":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2,"activerecord":2},"answerCount":1,"acceptedCount":1},"simple-form":{"activity":{"2011-12":{"commentCount":1},"2012-02":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":1,"nested-form-for":1},"answerCount":1,"nonacceptedCount":1},"partial":{"activity":{"2011-12":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"view":2,"ruby-on-rails":1,"templates":1,"rails-activerecord":1},"answerCount":2,"acceptedCount":2},"primary-key":{"activity":{"2011-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1}},"internet-explorer":{"activity":{"2011-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"devise":1,"http-protocols":1}},"http-protocols":{"activity":{"2011-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"internet-explorer":1,"devise":1}},"facebooker":{"activity":{"2010-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"facebook":1}},"update-attributes":{"activity":{"2011-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"routes":1}},"web":{"activity":{"2012-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1}},"ruby-on-rails-3.2.1":{"activity":{"2012-02":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":3,"will-paginate":1,"rspec-rails":1,"rails-routing":1,"erb":1},"answerCount":2,"acceptedCount":2},"casting":{"activity":{"2012-02":{"commentCount":2}},"commentCount":2,"relatedTags":{"mysql":2,"ruby":2}},"coffeescript":{"activity":{"2012-01":{"commentCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"passenger":1,"scope":1,"iced-coffeescript":1,"coffeescript-resources":1},"answerCount":1,"nonacceptedCount":1},"edit":{"activity":{"2012-03":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"controller":2}},"parameters":{"activity":{"2011-10":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-01":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":3,"ruby":1,"new-operator":1,"save":1},"answerCount":2,"nonacceptedCount":2},"new-operator":{"activity":{"2011-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"parameters":1}},"web-applications":{"activity":{"2011-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"mysql":1,"git":1,"githooks":1}},"githooks":{"activity":{"2011-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"mysql":1,"git":1,"web-applications":1}},"objective-c":{"activity":{"2012-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"ios":1,"osx":1}},"ios":{"activity":{"2012-02":{"commentCount":2,"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"objective-c":1,"osx":1,"iphone":1,"ruby-on-rails":1,"retina-display":1,"email":1,"gmail":1},"answerCount":1,"nonacceptedCount":1},"get":{"activity":{"2012-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"jquery":1,"ruby-on-rails":1,"json":1}},"multithreading":{"activity":{"2012-03":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"queue":2,"delayed-job":2}},"queue":{"activity":{"2012-03":{"commentCount":2},"2010-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"multithreading":2,"delayed-job":2,"ruby":1,"scheduled-tasks":1},"answerCount":1,"nonacceptedCount":1},"habtm":{"activity":{"2011-12":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"activerecord":1,"ruby-on-rails-3.1":1}},"database-management":{"activity":{"2011-12":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"database":2,"ruby-on-rails-3.1":2},"answerCount":1,"nonacceptedCount":1},"builder":{"activity":{"2012-04":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"xml":1,"nokogiri":1}},"wkhtmltopdf":{"activity":{"2012-06":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"ruby-on-rails-plugins":1,"wicked-pdf":1}},"wicked-pdf":{"activity":{"2012-06":{"commentCount":1},"2011-10":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":2,"ruby-on-rails-plugins":1,"wkhtmltopdf":1,"heroku":1,"pdf-generation":1},"answerCount":1,"nonacceptedCount":1},"iphone":{"activity":{"2012-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ios":1,"retina-display":1}},"retina-display":{"activity":{"2012-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"iphone":1,"ruby-on-rails":1,"ios":1}},"libxml":{"activity":{"2012-03":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby":2,"gem":2,"nokogiri":2}},"git-reset":{"activity":{"2012-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"git":1}},"destroy":{"activity":{"2012-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"activerecord":1,"associations":1}},"performance":{"activity":{"2012-01":{"commentCount":1},"2013-03":{"commentCount":2},"2011-01":{"answerCount":1,"nonacceptedCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":2,"ruby":1,"osx":1,"asset-pipeline":1,"ruby-on-rails-3":2,"comparison":2,"rabl":2,"jsonbuilder":2},"answerCount":1,"nonacceptedCount":1},"plural":{"activity":{"2012-02":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby":2,"string":2,"idempotent":2,"ruby-on-rails-3":1,"associations":1,"relationship":1,"model-associations":1},"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"idempotent":{"activity":{"2012-02":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby":2,"string":2,"plural":2},"answerCount":1,"nonacceptedCount":1},"ms-word":{"activity":{"2012-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1}},"ruby-on-rails-3.2":{"activity":{"2012-04":{"commentCount":1},"2012-02":{"commentCount":1},"2012-10":{"commentCount":2,"answerCount":3,"acceptedCount":1,"nonacceptedCount":2},"2012-11":{"commentCount":1,"answerCount":3,"nonacceptedCount":1,"acceptedCount":2},"2013-01":{"commentCount":1},"2013-03":{"commentCount":5,"answerCount":1,"acceptedCount":1},"2013-07":{"commentCount":1,"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-08":{"commentCount":2,"answerCount":1,"acceptedCount":1},"2013-02":{"commentCount":1},"2013-09":{"commentCount":1},"2013-12":{"commentCount":1},"2013-10":{"commentCount":1},"2013-04":{"answerCount":1,"nonacceptedCount":1}},"commentCount":18,"relatedTags":{"spree":4,"ruby-on-rails":20,"asset-pipeline":1,"sprockets":1,"ruby-on-rails-3":14,"routes":2,"activerecord":3,"ruby-on-rails-3.1":2,"devise":2,"associations":1,"jquery":1,"imagemagick":1,"ruby":5,"rubygems":1,"heroku":1,"css":1,"view-helpers":1,"globalize3":1,"multi-tenant":1,"rails-engines":1,"activesupport":1,"csv":1},"answerCount":11,"acceptedCount":6,"nonacceptedCount":5},"git-diff":{"activity":{"2012-05":{"commentCount":1}},"commentCount":1},"github":{"activity":{"2012-06":{"commentCount":1},"2012-07":{"commentCount":1},"2013-08":{"commentCount":1},"2013-10":{"commentCount":1,"answerCount":2,"nonacceptedCount":2},"2011-01":{"answerCount":2,"acceptedCount":2},"2012-01":{"answerCount":2,"acceptedCount":2},"2012-05":{"answerCount":1,"nonacceptedCount":1},"2013-02":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1}},"commentCount":4,"relatedTags":{"ruby-on-rails":4,"git":7,"terminal":1,"ruby-on-rails-3":2,"github-api":1,"sed":1,"ruby":2,"issue-tracking":1,"rake":1,"travis-ci":1,"fork":1,"repository":1,"osx":1,"boxen":1,"version-control":1},"answerCount":9,"acceptedCount":5,"nonacceptedCount":4},"terminal":{"activity":{"2012-06":{"commentCount":1},"2013-08":{"commentCount":2}},"commentCount":3,"relatedTags":{"ruby-on-rails":3,"git":1,"github":1,"nlp":2,"rails-activerecord":2}},"automated-tests":{"activity":{"2012-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"api":1,"cucumber":1,"json-spec":1}},"json-spec":{"activity":{"2012-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"api":1,"cucumber":1,"automated-tests":1}},"grails":{"activity":{"2012-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"groovy":1,"spree":1}},"groovy":{"activity":{"2012-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"grails":1,"spree":1}},"templates":{"activity":{"2012-05":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1},"2013-07":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":5,"erb":2,"require":2,"ruby-on-rails-3":2,"view":1,"controller":1,"partial":1,"rails-activerecord":1},"answerCount":5,"acceptedCount":4,"nonacceptedCount":1},"erb":{"activity":{"2012-05":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2012-02":{"answerCount":1,"nonacceptedCount":1},"2012-03":{"questionCount":1,"answerCount":1,"nonacceptedCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1},"2014-03":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":7,"templates":2,"require":2,"javascript":1,"ruby":5,"ruby-on-rails-3":2,"ruby-on-rails-3.1":1,"unicode":1,"sinatra":1,"omniauth":1,"ruby-on-rails-3.2.1":1},"answerCount":9,"nonacceptedCount":5,"questionCount":1,"acceptedCount":4},"require":{"activity":{"2012-05":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1},"2012-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"templates":2,"erb":2,"ruby-on-rails-3":1,"path":1,"gem":1,"rails-engines":1,"ruby":1},"answerCount":3,"nonacceptedCount":3},"subdomains":{"activity":{"2012-06":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2},"answerCount":1,"nonacceptedCount":1},"content-management-system":{"activity":{"2012-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"browsercms":1}},"browsercms":{"activity":{"2012-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"content-management-system":1}},"nil":{"activity":{"2012-09":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"params":1,"param":1}},"param":{"activity":{"2012-09":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"params":1,"nil":1}},"seeding":{"activity":{"2012-10":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"rake":2}},"comments":{"activity":{"2012-10":{"commentCount":2},"2013-09":{"commentCount":3},"2012-06":{"answerCount":1,"nonacceptedCount":1}},"commentCount":5,"relatedTags":{"facebook":2,"wordpress":2,"ruby-on-rails":3,"ruby-on-rails-4":3,"nested-attributes":3,"railscasts":3,"ruby-on-rails-3":1,"attributes":1},"answerCount":1,"nonacceptedCount":1},"facebook-graph-api":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"koala":1}},"koala":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"facebook-graph-api":1}},"html":{"activity":{"2012-10":{"commentCount":1},"2012-11":{"commentCount":5},"2013-10":{"commentCount":1},"2014-03":{"commentCount":2},"2011-06":{"answerCount":1,"nonacceptedCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1},"2013-09":{"answerCount":1,"nonacceptedCount":1},"2013-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":9,"relatedTags":{"javascript":7,"css":5,"google-chrome":1,"jquery":3,"ruby-on-rails":6,"ruby-on-rails-3":4,"curl":2,"escaping":1,"html-escape-characters":1,"call":1},"answerCount":5,"nonacceptedCount":4,"acceptedCount":1},"constants":{"activity":{"2012-10":{"commentCount":1},"2013-02":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby":1,"private":1,"ruby-1.9.3":1,"ruby-on-rails":1,"ruby-on-rails-3":1}},"private":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"constants":1,"ruby-1.9.3":1}},"ruby-1.9.3":{"activity":{"2012-10":{"commentCount":1},"2013-04":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby":2,"constants":1,"private":1,"ruby-2.0":1}},"deface":{"activity":{"2012-10":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"spree":2}},"time":{"activity":{"2012-10":{"commentCount":1},"2011-04":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2014-03":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"loops":1,"binary-tree":1,"ruby-on-rails-3":1,"datetime":1,"timezone":1,"ruby-on-rails":1,"date":1,"mongodb":1,"ruby":1},"answerCount":3,"acceptedCount":3},"binary-tree":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"loops":1,"time":1}},"google-analytics":{"activity":{"2012-10":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"analytics":2},"answerCount":1,"acceptedCount":1},"analytics":{"activity":{"2012-10":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"google-analytics":2},"answerCount":1,"acceptedCount":1},"assets":{"activity":{"2012-10":{"commentCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1},"2012-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":3,"rake":1,"bundler":1,"ruby-on-rails-3":2,"heroku":1,"css":1,"ruby":2,"ruby-on-rails-3.1":1,"rails-engines":1},"answerCount":3,"acceptedCount":2,"nonacceptedCount":1},"dom":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1}},"git-branch":{"activity":{"2012-03":{"commentCount":1},"2010-09":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"git":3,"git-fork":1,"git-remote":1,"master":1,"head":1},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"git-fork":{"activity":{"2012-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"git":1,"git-branch":1}},"helper":{"activity":{"2012-08":{"commentCount":1,"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"rails-engines":1,"ruby-on-rails-3":1,"routes":1,"integration-testing":1,"spree":1,"overriding":1},"answerCount":2,"acceptedCount":2},"gcc":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"osx":1,"rvm":1,"osx-mountain-lion":1}},"osx-mountain-lion":{"activity":{"2012-10":{"commentCount":1},"2013-05":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby":2,"osx":2,"gcc":1,"rvm":1,"ruby-on-rails":1},"answerCount":1,"nonacceptedCount":1},"template-engine":{"activity":{"2012-10":{"commentCount":1},"2012-01":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"mustache":1,"ruby-on-rails":1,"rails-engines":1,"slim-lang":1},"answerCount":1,"acceptedCount":1},"mustache":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"template-engine":1}},"google-chrome":{"activity":{"2012-11":{"commentCount":1},"2011-02":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"html":1,"css":1,"ruby-on-rails":1},"answerCount":1,"nonacceptedCount":1},"webserver":{"activity":{"2012-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1}},"global-variables":{"activity":{"2012-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"rack":1}},"android":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"android-listview":1,"onclick":1}},"android-listview":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"android":1,"onclick":1}},"onclick":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"android":1,"android-listview":1}},"bash":{"activity":{"2012-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"git":1,"git-clone":1}},"git-clone":{"activity":{"2012-11":{"commentCount":1},"2013-04":{"commentCount":2}},"commentCount":3,"relatedTags":{"git":3,"bash":1,"tortoisegit":2,"git-bash":2,"git-commands":2}},"e-commerce":{"activity":{"2012-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2013-08":{"commentCount":1},"2012-07":{"answerCount":1,"nonacceptedCount":1},"2013-01":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"ruby":4,"ruby-on-rails-3":2,"spree":5,"mysql":1,"internationalization":1,"locale":1},"answerCount":3,"nonacceptedCount":3},"put":{"activity":{"2012-08":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"rest":2,"routes":2,"partial-views":2},"answerCount":1,"nonacceptedCount":1},"partials":{"activity":{"2012-12":{"commentCount":1},"2010-11":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"model-view-controller":1,"devise":1,"routes":1,"javascript":1,"forms":1},"answerCount":1,"acceptedCount":1},"function":{"activity":{"2012-10":{"commentCount":1},"2013-02":{"commentCount":2}},"commentCount":3,"relatedTags":{"javascript":3,"callback":1}},"callback":{"activity":{"2012-10":{"commentCount":1},"2012-02":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"function":1,"ruby-on-rails":1,"ruby-on-rails-3":1},"answerCount":1,"acceptedCount":1},"production":{"activity":{"2012-10":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"controller":2}},"piggybak":{"activity":{"2013-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1}},"ember.js":{"activity":{"2013-01":{"commentCount":1},"2013-03":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":2}},"rss":{"activity":{"2013-02":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"heroku":2,"mime-types":2,"scraper":2},"answerCount":1,"acceptedCount":1},"mime-types":{"activity":{"2013-02":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"heroku":2,"rss":2,"scraper":2},"answerCount":1,"acceptedCount":1},"scraper":{"activity":{"2013-02":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"heroku":2,"rss":2,"mime-types":2},"answerCount":1,"acceptedCount":1},"ruby-1.8.7":{"activity":{"2012-09":{"commentCount":1},"2013-09":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby":2,"ruby-on-rails":1,"friendly-id":1}},"twitter-bootstrap":{"activity":{"2012-09":{"commentCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1},"2012-10":{"answerCount":1,"nonacceptedCount":1},"2013-08":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2,"best-in-place":1,"jquery":1},"answerCount":3,"nonacceptedCount":3},"archive":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"tar":1}},"tar":{"activity":{"2012-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"archive":1}},"oop":{"activity":{"2012-11":{"commentCount":2,"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby":3,"class":3,"object":3},"answerCount":1,"acceptedCount":1},"class":{"activity":{"2012-11":{"commentCount":2,"answerCount":1,"acceptedCount":1}},"commentCount":2,"relatedTags":{"ruby":3,"oop":3,"object":3},"answerCount":1,"acceptedCount":1},"object":{"activity":{"2012-11":{"commentCount":3,"answerCount":1,"acceptedCount":1}},"commentCount":3,"relatedTags":{"ruby":3,"oop":3,"class":3,"javascript":1,"html5":1},"answerCount":1,"acceptedCount":1},"xmlhttprequest":{"activity":{"2013-02":{"commentCount":2}},"commentCount":2,"relatedTags":{"javascript":2,"ruby-on-rails":2,"ajax":2}},"path":{"activity":{"2013-02":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby":2,"linux":1,"ubuntu":1,"resources":1,"nested":1,"ruby-on-rails-3":1,"gem":1,"require":1,"rails-engines":1},"answerCount":3,"nonacceptedCount":3},"autocomplete":{"activity":{"2012-11":{"commentCount":2}},"commentCount":2,"relatedTags":{"javascript":2,"css":2,"positioning":2,"haml":2}},"positioning":{"activity":{"2012-11":{"commentCount":2}},"commentCount":2,"relatedTags":{"javascript":2,"css":2,"autocomplete":2,"haml":2}},"haml":{"activity":{"2012-11":{"commentCount":3}},"commentCount":3,"relatedTags":{"javascript":2,"css":2,"autocomplete":2,"positioning":2,"ruby-on-rails-3":1}},"html5":{"activity":{"2012-11":{"commentCount":1},"2010-09":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"object":1,"ruby-on-rails":1,"button":1},"answerCount":1,"nonacceptedCount":1},"character-encoding":{"activity":{"2012-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1}},"rolify":{"activity":{"2013-01":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"devise":1,"cancan":1}},"activescaffold":{"activity":{"2013-01":{"commentCount":1},"2012-03":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":1,"infinite-loop":1},"answerCount":1,"acceptedCount":1},"instagram":{"activity":{"2013-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1}},"jsonp":{"activity":{"2012-10":{"commentCount":2}},"commentCount":2,"relatedTags":{"javascript":2,"jquery":2,"json":2,"blackberry-webworks":2}},"blackberry-webworks":{"activity":{"2012-10":{"commentCount":2}},"commentCount":2,"relatedTags":{"javascript":2,"jquery":2,"json":2,"jsonp":2}},"activeadmin":{"activity":{"2012-10":{"commentCount":1},"2013-09":{"commentCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2014-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"ruby-on-rails-3":3,"activerecord":1,"ruby-on-rails-4":1,"inherited-resources":1},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"testunit":{"activity":{"2013-01":{"commentCount":1},"2011-05":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"unit-testing":1,"methods":1,"ruby-on-rails":1,"factory-girl":1},"answerCount":1,"acceptedCount":1},"comparison":{"activity":{"2013-03":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails-3":2,"performance":2,"rabl":2,"jsonbuilder":2}},"rabl":{"activity":{"2013-03":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails-3":2,"performance":2,"comparison":2,"jsonbuilder":2}},"jsonbuilder":{"activity":{"2013-03":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails-3":2,"performance":2,"comparison":2,"rabl":2}},"segmentation-fault":{"activity":{"2012-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"arrays":1,"hash":1,"permutation":1}},"permutation":{"activity":{"2012-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"arrays":1,"hash":1,"segmentation-fault":1}},"production-environment":{"activity":{"2012-12":{"commentCount":1},"2011-05":{"answerCount":1,"acceptedCount":1},"2013-04":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":3,"ruby":1,"nginx":1,"namespaces":1,"routes":1,"cloudfoundry":1},"answerCount":2,"acceptedCount":2},"mediawiki":{"activity":{"2013-02":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"ruby":2,"ruby-on-rails-3":2,"rubygems":2}},"capistrano":{"activity":{"2013-03":{"commentCount":1},"2013-09":{"commentCount":1},"2011-07":{"answerCount":1,"nonacceptedCount":1},"2013-10":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"deployment":1,"ruby-on-rails-3":3,"git":1,"ssh":1,"su":1,"ruby":2,"rubygems":1},"answerCount":2,"nonacceptedCount":2},"chef":{"activity":{"2013-04":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby":1,"rubygems":1,"bundler":1}},"tortoisegit":{"activity":{"2013-04":{"commentCount":2}},"commentCount":2,"relatedTags":{"git":2,"git-clone":2,"git-bash":2,"git-commands":2}},"git-bash":{"activity":{"2013-04":{"commentCount":2}},"commentCount":2,"relatedTags":{"git":2,"tortoisegit":2,"git-clone":2,"git-commands":2}},"git-commands":{"activity":{"2013-04":{"commentCount":2}},"commentCount":2,"relatedTags":{"git":2,"tortoisegit":2,"git-clone":2,"git-bash":2}},"polymorphic-associations":{"activity":{"2013-08":{"commentCount":1,"answerCount":2,"nonacceptedCount":2},"2013-09":{"commentCount":1},"2012-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":5,"ruby":1,"ajax":1,"jquery":1,"file-upload":1,"nested-forms":1,"testing":2},"answerCount":3,"nonacceptedCount":3},"form-for":{"activity":{"2013-08":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1},"2013-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":4,"ruby-on-rails":3,"forms":1,"controller":1,"nested-resources":1,"security":1},"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"nlp":{"activity":{"2013-08":{"commentCount":2}},"commentCount":2,"relatedTags":{"ruby-on-rails":2,"terminal":2,"rails-activerecord":2}},"go":{"activity":{"2013-08":{"commentCount":1},"2013-05":{"commentCount":1},"2013-07":{"commentCount":1,"questionCount":1},"2013-04":{"questionCount":1}},"commentCount":3,"relatedTags":{"postgresql":1},"questionCount":2},"eclipse":{"activity":{"2013-08":{"commentCount":1}},"commentCount":1},"file-upload":{"activity":{"2013-09":{"commentCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":3,"database":1,"paperclip":2,"ruby-on-rails-3":1,"nested-forms":1,"polymorphic-associations":1},"answerCount":3,"nonacceptedCount":3},"paypal":{"activity":{"2013-09":{"commentCount":1},"2012-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"shopping-cart":1,"checkout":1,"cart":1,"ruby":1,"activemerchant":1},"answerCount":1,"nonacceptedCount":1},"shopping-cart":{"activity":{"2013-09":{"commentCount":2},"2013-10":{"commentCount":1}},"commentCount":3,"relatedTags":{"ruby-on-rails":3,"paypal":1,"checkout":1,"cart":1,"ruby-on-rails-3":2}},"checkout":{"activity":{"2013-09":{"commentCount":1},"2013-03":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"paypal":1,"shopping-cart":1,"cart":1,"git":1},"answerCount":1,"nonacceptedCount":1},"cart":{"activity":{"2013-09":{"commentCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"paypal":1,"shopping-cart":1,"checkout":1,"ruby":1,"forms":1,"product":1},"answerCount":1,"nonacceptedCount":1},"tcp":{"activity":{"2013-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"gem":1,"monitoring":1}},"monitoring":{"activity":{"2013-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"tcp":1,"gem":1}},"ruby-2.0":{"activity":{"2013-04":{"commentCount":1},"2013-11":{"commentCount":1}},"commentCount":2,"relatedTags":{"ruby":1,"ruby-1.9.3":1,"ruby-on-rails-4":1,"spree":1,"strong-parameters":1}},"undefined":{"activity":{"2013-04":{"commentCount":1}},"commentCount":1,"relatedTags":{"methods":1}},"matlab":{"activity":{"2013-08":{"commentCount":1}},"commentCount":1,"relatedTags":{"loops":1,"matrix":1,"manipulation":1}},"matrix":{"activity":{"2013-08":{"commentCount":1}},"commentCount":1,"relatedTags":{"matlab":1,"loops":1,"manipulation":1}},"manipulation":{"activity":{"2013-08":{"commentCount":1}},"commentCount":1,"relatedTags":{"matlab":1,"loops":1,"matrix":1}},"actionscript-3":{"activity":{"2013-08":{"commentCount":1}},"commentCount":1},"ruby-on-rails-4":{"activity":{"2013-09":{"commentCount":4,"answerCount":3,"acceptedCount":1,"nonacceptedCount":2},"2013-10":{"commentCount":2,"answerCount":4,"nonacceptedCount":3,"acceptedCount":1},"2013-08":{"commentCount":1,"answerCount":5,"nonacceptedCount":3,"acceptedCount":2},"2014-03":{"commentCount":4,"answerCount":6,"nonacceptedCount":3,"acceptedCount":3},"2013-11":{"commentCount":1,"answerCount":2,"acceptedCount":2},"2014-02":{"answerCount":1,"acceptedCount":1}},"commentCount":12,"relatedTags":{"ruby-on-rails":23,"comments":3,"nested-attributes":3,"railscasts":3,"nomethoderror":2,"ruby-on-rails-3":7,"postgresql":1,"ruby":10,"ruby-on-rails-4-1":1,"spree":3,"ruby-2.0":1,"strong-parameters":1,"devise":3,"cancan":2,"roles":1,"omniauth":1,"rack":1,"routes":1,"gem":1,"rspec":1,"forms":1,"heroku":1,"secret-key":1,"routing":3,"nested-forms":1,"rails-engines":1,"rails-routing":1,"activerecord":1,"activeadmin":1,"inherited-resources":1,"rails-activerecord":1,"money":1,"money-rails":1},"answerCount":21,"nonacceptedCount":11,"acceptedCount":10},"nomethoderror":{"activity":{"2013-10":{"commentCount":1,"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-4":2},"answerCount":1,"nonacceptedCount":1},"angularjs":{"activity":{"2013-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"post":1}},"post":{"activity":{"2013-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"angularjs":1}},"java":{"activity":{"2013-10":{"commentCount":1}},"commentCount":1},"algorithm":{"activity":{"2013-08":{"commentCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"graph":1,"matching":1,"c++":1,"primes":1},"answerCount":1,"nonacceptedCount":1},"graph":{"activity":{"2013-08":{"commentCount":1}},"commentCount":1,"relatedTags":{"algorithm":1,"matching":1}},"matching":{"activity":{"2013-08":{"commentCount":1}},"commentCount":1,"relatedTags":{"algorithm":1,"graph":1}},"locale":{"activity":{"2014-01":{"commentCount":2},"2011-08":{"answerCount":1,"acceptedCount":1},"2012-08":{"answerCount":1,"nonacceptedCount":1}},"commentCount":2,"relatedTags":{"ruby-on-rails":3,"ruby":2,"ruby-on-rails-3":1,"localization":1,"number-to-currency":1,"internationalization":1,"e-commerce":1,"spree":1},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"ruby-on-rails-4-1":{"activity":{"2014-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-4":1}},"imagemagick":{"activity":{"2013-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3.2":1,"spree":1}},"nested-forms":{"activity":{"2013-02":{"commentCount":1},"2010-12":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"nonacceptedCount":1},"2012-01":{"answerCount":1,"acceptedCount":1},"2012-11":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2013-01":{"answerCount":1,"acceptedCount":1},"2014-02":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":2,"nested-attributes":1,"image-upload":1,"ruby-on-rails":7,"fields-for":2,"ruby":3,"forms":1,"belongs-to":1,"file-upload":1,"polymorphic-associations":1,"ruby-on-rails-4":1,"routing":1,"rails-engines":1},"answerCount":8,"acceptedCount":6,"nonacceptedCount":2},"image-upload":{"activity":{"2013-02":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"nested-forms":1,"nested-attributes":1}},"https":{"activity":{"2013-07":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"devise":1,"flash-message":1}},"flash-message":{"activity":{"2013-07":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"https":1,"devise":1}},"github-api":{"activity":{"2013-08":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"github":1}},"friendly-id":{"activity":{"2013-09":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-1.8.7":1}},"ssh":{"activity":{"2013-09":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"git":1,"capistrano":1,"su":1}},"su":{"activity":{"2013-09":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-3":1,"git":1,"ssh":1,"capistrano":1}},"rails-i18n":{"activity":{"2013-10":{"commentCount":1,"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby":2},"answerCount":1,"acceptedCount":1},"cron":{"activity":{"2013-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"whenever":1}},"whenever":{"activity":{"2013-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"cron":1}},"strong-parameters":{"activity":{"2013-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails-4":1,"spree":1,"ruby-2.0":1}},"multi-tenant":{"activity":{"2013-10":{"commentCount":1},"2012-11":{"answerCount":1,"acceptedCount":1},"2013-04":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":1,"multi-tenancy":1,"acts-as-tenant":1,"subdomain":1,"ruby-on-rails-3.2":1},"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"multi-tenancy":{"activity":{"2013-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"multi-tenant":1,"acts-as-tenant":1}},"acts-as-tenant":{"activity":{"2013-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"multi-tenant":1,"multi-tenancy":1}},"security":{"activity":{"2014-03":{"commentCount":1},"2010-11":{"answerCount":1,"nonacceptedCount":1},"2011-02":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-07":{"answerCount":1,"acceptedCount":1},"2013-11":{"answerCount":1,"nonacceptedCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"variables":1,"global":1,"ruby-on-rails":5,"encryption":1,"ruby-on-rails-3":1,"activerecord":1,"ruby":1,"networking":1,"form-for":1},"answerCount":5,"nonacceptedCount":4,"acceptedCount":1},"variables":{"activity":{"2014-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"security":1,"global":1}},"global":{"activity":{"2014-03":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"security":1,"variables":1}},"backbone.js":{"activity":{"2013-10":{"commentCount":1}},"commentCount":1},"cordova":{"activity":{"2013-11":{"commentCount":1}},"commentCount":1,"relatedTags":{"javascript":1,"sqlite":1}},"css3":{"activity":{"2013-10":{"commentCount":1}},"commentCount":1},"roles":{"activity":{"2013-10":{"commentCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":1,"devise":1,"ruby-on-rails-4":1,"cancan":1}},"generator":{"activity":{"2013-10":{"commentCount":1,"answerCount":1,"nonacceptedCount":1},"2011-02":{"answerCount":1,"nonacceptedCount":1},"2011-11":{"answerCount":1,"acceptedCount":1},"2012-01":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"acceptedCount":1}},"commentCount":1,"relatedTags":{"ruby-on-rails":4,"ruby":2,"spree":3,"ruby-on-rails-3":4,"textmate":1,"hash":1},"answerCount":5,"nonacceptedCount":2,"acceptedCount":3},"user":{"activity":{"2010-09":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1},"2013-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":3,"acceptedCount":2,"relatedTags":{"ruby-on-rails":2,"forms":1,"controllers":1,"devise":1,"database":1,"ruby-on-rails-3":2,"url":1,"routes":1},"nonacceptedCount":1},"controllers":{"activity":{"2010-09":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"nonacceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":3,"acceptedCount":2,"relatedTags":{"ruby-on-rails":2,"forms":1,"user":1,"devise":1,"ruby-on-rails-3":1,"plugins":1,"ruby":1,"model-view-controller":1,"inheritance":1},"nonacceptedCount":1},"button":{"activity":{"2010-09":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"html5":1}},"design-patterns":{"activity":{"2010-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"error-handling":1,"httparty":1}},"httparty":{"activity":{"2010-09":{"answerCount":1,"acceptedCount":1},"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"acceptedCount":2,"relatedTags":{"ruby-on-rails":2,"ruby":2,"design-patterns":1,"error-handling":1,"ruby-on-rails-3":1,"activeresource":1}},"git-remote":{"activity":{"2010-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"git":1,"git-branch":1}},"cycle":{"activity":{"2010-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"css":1}},"imap":{"activity":{"2010-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1}},"layout":{"activity":{"2010-10":{"answerCount":1,"acceptedCount":1},"2010-12":{"answerCount":1,"nonacceptedCount":1},"2012-01":{"answerCount":1,"nonacceptedCount":1},"2013-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":4,"acceptedCount":1,"relatedTags":{"ruby-on-rails":4,"initialization":1,"ruby":1,"forum":1},"nonacceptedCount":3},"initialization":{"activity":{"2010-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"layout":1}},"custom-action":{"activity":{"2010-10":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"acceptedCount":2,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1}},"email":{"activity":{"2010-10":{"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"nonacceptedCount":1},"2012-02":{"answerCount":1,"nonacceptedCount":1},"2012-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":4,"acceptedCount":1,"relatedTags":{"ruby-on-rails":3,"smtp":1,"gmail":2,"ruby":1,"ios":1,"godaddy":1},"nonacceptedCount":3},"smtp":{"activity":{"2010-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"email":1,"gmail":1}},"process":{"activity":{"2010-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"apache":1,"cloud":1,"parallel-processing":1}},"cloud":{"activity":{"2010-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"apache":1,"process":1,"parallel-processing":1}},"parallel-processing":{"activity":{"2010-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"apache":1,"process":1,"cloud":1}},"random":{"activity":{"2010-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"uri":1}},"uri":{"activity":{"2010-10":{"answerCount":1,"nonacceptedCount":1},"2011-07":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"nonacceptedCount":2,"relatedTags":{"ruby-on-rails":1,"random":1,"ruby":1,"parsing":1,"ruby-1.8":1}},"static-pages":{"activity":{"2010-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"routing":1}},"timestamp":{"activity":{"2010-10":{"answerCount":1,"acceptedCount":1},"2011-08":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1},"nonacceptedCount":1},"csv":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1},"2012-04":{"answerCount":1,"nonacceptedCount":1},"2012-09":{"answerCount":1,"acceptedCount":1},"2013-08":{"answerCount":1,"acceptedCount":1}},"answerCount":5,"nonacceptedCount":3,"relatedTags":{"ruby":1,"string":1,"ruby-on-rails":2,"activerecord":1,"ruby-on-rails-3":1,"after-save":1,"ruby-on-rails-3.2":1},"acceptedCount":2},"activesupport":{"activity":{"2010-11":{"answerCount":1,"acceptedCount":1},"2011-03":{"answerCount":1,"acceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1},"2013-07":{"answerCount":1,"acceptedCount":1}},"answerCount":4,"acceptedCount":4,"relatedTags":{"ruby-on-rails":2,"ramaze":1,"ruby-on-rails-3":1,"testing":1,"ruby":1,"controller":1,"ruby-on-rails-3.2":1,"rails-engines":1}},"ramaze":{"activity":{"2010-11":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"activesupport":1}},"scheduled-tasks":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"queue":1}},"arel":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"rails-activerecord":1}},"railtie":{"activity":{"2010-11":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1}},"iteration":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"helpers":1}},"helpers":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"iteration":1}},"redcloth":{"activity":{"2010-11":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"formatting":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"string":1}},"encryption":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"security":1,"ruby-on-rails-3":1}},"c#":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"xml":1,"xpath":1}},"xpath":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"c#":1,"xml":1}},"binding":{"activity":{"2010-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"mysql":1,"ruby-on-rails":1}},"resources":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":1,"acceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1}},"answerCount":3,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":2,"path":1,"nested":1,"routing":1,"ruby-on-rails-3":1,"routes":1},"acceptedCount":2},"nested":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":2,"resources":1,"path":1,"ruby":1,"ruby-on-rails-3":1,"nested-sets":1},"acceptedCount":1},"obsolete":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby":1}},"compiler":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"download":1,"apple":1}},"download":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"compiler":1,"apple":1}},"apple":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"compiler":1,"download":1}},"c++":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"algorithm":1,"primes":1}},"primes":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"c++":1,"algorithm":1}},"pluralize":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1}},"http":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"nonacceptedCount":1,"relatedTags":{"apache":1,"http-status-code-404":1,"ruby":1,"curl":1},"acceptedCount":1},"http-status-code-404":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"apache":1,"http":1}},"syntax":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1},"2011-06":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"nonacceptedCount":1},"2013-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":4,"nonacceptedCount":3,"relatedTags":{"ruby-on-rails":1,"ruby":3,"ubuntu":1,"gedit":1,"hash":1},"acceptedCount":1},"ckeditor":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"bdd":{"activity":{"2010-12":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":2,"nonacceptedCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":6,"acceptedCount":3,"relatedTags":{"ruby-on-rails":3,"cucumber":3,"ruby-on-rails-3":4,"rspec":2,"webrat":1,"ruby":1,"rspec2":2,"rspec-rails":1,"tdd":2,"capybara":1},"nonacceptedCount":3},"matcher":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"rspec":1,"cucumber":1,"rspec2":1}},"link-to":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1},"2011-06":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1}},"answerCount":3,"acceptedCount":2,"relatedTags":{"ruby-on-rails":3,"delete":1,"ruby-on-rails-3":2,"observer-pattern":1,"url-helper":1,"ruby":1},"nonacceptedCount":1},"backup":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby":1}},"number-with-delimiter":{"activity":{"2010-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"include":1}},"tmail":{"activity":{"2010-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby":1}},"crud":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"rest":1,"routing":1,"ruby-on-rails-3":1}},"sed":{"activity":{"2011-01":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"git":1,"ruby-on-rails-3":1,"github":1}},"attr-accessible":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"activeresource":1}},"shell":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"unix":1}},"unix":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"shell":1}},"each":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"loops":1}},"httpwebrequest":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1}},"mercurial":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"git":1,"version-control":1,"bazaar":1}},"bazaar":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"git":1,"version-control":1,"mercurial":1}},"setup":{"activity":{"2011-01":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"routing":1,"passenger":1}},"ruby-debug":{"activity":{"2011-01":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ubuntu":1,"rubygems":1}},"observer-pattern":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1},"2011-06":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"nonacceptedCount":2,"relatedTags":{"ruby-on-rails-3":2,"ruby-on-rails":1,"link-to":1,"url-helper":1}},"notation":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"python":1,"shorthand":1}},"shorthand":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"python":1,"notation":1}},"networking":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1},"2011-09":{"answerCount":1,"nonacceptedCount":1},"2011-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":3,"nonacceptedCount":3,"relatedTags":{"python":1,"internet":1,"sockets":1,"dns":1,"localhost":1,"ruby-on-rails":1,"ruby":1,"security":1}},"internet":{"activity":{"2011-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"python":1,"networking":1}},"nested-routes":{"activity":{"2011-01":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":2,"rspec":1,"routes":1},"nonacceptedCount":1},"content-type":{"activity":{"2011-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"httprequest":1,"actiondispatch":1}},"httprequest":{"activity":{"2011-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"content-type":1,"actiondispatch":1}},"actiondispatch":{"activity":{"2011-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"content-type":1,"httprequest":1}},"textmate":{"activity":{"2011-02":{"answerCount":1,"nonacceptedCount":1},"2011-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"nonacceptedCount":2,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":2,"generator":1,"loc":1}},"chaining":{"activity":{"2011-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1}},"scope":{"activity":{"2011-02":{"answerCount":1,"nonacceptedCount":1},"2013-07":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"nonacceptedCount":2,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"coffeescript":1,"iced-coffeescript":1,"coffeescript-resources":1}},"codeigniter":{"activity":{"2011-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"php":1,"regex":1}},"feeds":{"activity":{"2011-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"rspec":1}},"filemaker":{"activity":{"2011-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"activerecord":1}},"meta-search":{"activity":{"2011-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1}},"restful-authentication":{"activity":{"2011-03":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"documentation":{"activity":{"2011-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"api":1}},"link-to-remote":{"activity":{"2011-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ajax":1,"ruby-on-rails-3":1}},"locking":{"activity":{"2011-03":{"answerCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":2,"sqlite3":1,"activerecord":1},"acceptedCount":1},"ubuntu-10.10":{"activity":{"2011-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"rdoc":1}},"rdoc":{"activity":{"2011-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"ubuntu-10.10":1}},"integration-testing":{"activity":{"2011-03":{"answerCount":1,"nonacceptedCount":1},"2011-07":{"answerCount":1,"acceptedCount":1},"2011-09":{"answerCount":1,"acceptedCount":1}},"answerCount":3,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"cucumber":2,"capybara":1,"ruby-on-rails-3":2,"rspec2":1,"routes":1,"helper":1},"acceptedCount":2},"request":{"activity":{"2011-03":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"url":1,"routing":1}},"has-one":{"activity":{"2011-04":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"associations":1,"belongs-to":1}},"current-page":{"activity":{"2011-04":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1}},"date":{"activity":{"2011-04":{"answerCount":1,"nonacceptedCount":1},"2011-05":{"answerCount":1,"acceptedCount":1},"2011-10":{"answerCount":1,"acceptedCount":1},"2013-08":{"answerCount":1,"acceptedCount":1}},"answerCount":4,"nonacceptedCount":1,"relatedTags":{"sql":1,"ruby-on-rails":4,"ruby-on-rails-3":1,"timezone":1,"mongodb":1,"time":1,"ruby":1},"acceptedCount":3},"configuration":{"activity":{"2011-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1}},"actioncontroller":{"activity":{"2011-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1}},"loc":{"activity":{"2011-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"textmate":1}},"timezone":{"activity":{"2011-04":{"answerCount":1,"acceptedCount":1},"2011-05":{"answerCount":1,"acceptedCount":1},"2012-03":{"answerCount":1,"nonacceptedCount":1},"2012-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":4,"acceptedCount":2,"relatedTags":{"ruby-on-rails-3":3,"datetime":2,"time":1,"ruby-on-rails":2,"date":1,"activerecord":1},"nonacceptedCount":2},"redirect":{"activity":{"2011-04":{"answerCount":1,"acceptedCount":1},"2011-05":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"acceptedCount":2,"relatedTags":{"ruby-on-rails":2,"rspec":1,"filter":1}},"twitter":{"activity":{"2011-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1}},"compatibility":{"activity":{"2011-05":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"rubygems":1}},"search-engine":{"activity":{"2011-05":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"spider":1}},"spider":{"activity":{"2011-05":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"search-engine":1}},"compilation":{"activity":{"2011-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby":1,"rvm":1}},"natty":{"activity":{"2011-05":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"ruby-on-rails-3":1,"ubuntu":1,"nginx":1}},"fastercsv":{"activity":{"2011-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"gem":1}},"syntax-error":{"activity":{"2011-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"javascript":1,"ruby-on-rails":1,"ajax":1}},"filter":{"activity":{"2011-05":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"redirect":1}},"initializer":{"activity":{"2011-05":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"upgrade":1}},"gedit":{"activity":{"2011-06":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"syntax":1,"ubuntu":1}},"named-scope":{"activity":{"2011-06":{"answerCount":1,"nonacceptedCount":1},"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"ruby-on-rails":1,"ruby":1},"acceptedCount":1},"url-helper":{"activity":{"2011-06":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"observer-pattern":1,"link-to":1}},"render":{"activity":{"2011-06":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"ldap":{"activity":{"2011-06":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"rubycas":1}},"rubycas":{"activity":{"2011-06":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"ldap":1}},"server-error":{"activity":{"2011-06":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"rake":1}},"load":{"activity":{"2011-07":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"cucumber":1,"gem":1}},"config":{"activity":{"2011-07":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1}},"parent-child":{"activity":{"2011-07":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1}},"parsing":{"activity":{"2011-07":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby":1,"uri":1,"ruby-1.8":1}},"conditional":{"activity":{"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1}},"unobtrusive-javascript":{"activity":{"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"javascript":1,"ruby-on-rails":1,"ruby":1}},"middleware":{"activity":{"2011-08":{"answerCount":1,"nonacceptedCount":1},"2012-03":{"answerCount":1,"nonacceptedCount":1},"2012-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":3,"nonacceptedCount":3,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":3,"rack":2,"ruby":1,"rspec":1,"rack-middleware":1}},"frameworks":{"activity":{"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1}},"soap":{"activity":{"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"savon":1}},"savon":{"activity":{"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"soap":1}},"localization":{"activity":{"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"locale":1,"number-to-currency":1}},"number-to-currency":{"activity":{"2011-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"localization":1,"locale":1}},"jquery-selectors":{"activity":{"2011-09":{"answerCount":1,"acceptedCount":1},"2013-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"acceptedCount":1,"relatedTags":{"jquery":1,"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"cross-browser":1,"css-selectors":1,"greasemonkey":1,"userscripts":1},"nonacceptedCount":1},"omniauth":{"activity":{"2011-09":{"answerCount":1,"acceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"nonacceptedCount":1},"2013-08":{"answerCount":1,"acceptedCount":1}},"answerCount":4,"acceptedCount":3,"relatedTags":{"ruby-on-rails-3":2,"authentication":1,"rubygems":1,"oauth":1,"gem":1,"ruby":2,"sinatra":1,"erb":1,"ruby-on-rails":1,"ruby-on-rails-4":1,"rack":1},"nonacceptedCount":1},"gitignore":{"activity":{"2011-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"git":1}},"dns":{"activity":{"2011-09":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"sockets":1,"networking":1,"localhost":1}},"localhost":{"activity":{"2011-09":{"answerCount":1,"nonacceptedCount":1},"2014-03":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"nonacceptedCount":1,"relatedTags":{"sockets":1,"networking":1,"dns":1,"ruby-on-rails":1,"testing":1,"iframe":1},"acceptedCount":1},"urlhelper":{"activity":{"2011-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"routing":1}},"master":{"activity":{"2011-09":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"git":1,"git-branch":1,"head":1}},"head":{"activity":{"2011-09":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"git":1,"git-branch":1,"master":1}},"plugins":{"activity":{"2011-10":{"answerCount":3,"nonacceptedCount":2,"acceptedCount":1},"2011-12":{"answerCount":1,"acceptedCount":1}},"answerCount":4,"nonacceptedCount":2,"relatedTags":{"ruby-on-rails":3,"modularity":1,"deprecated":1,"ruby-on-rails-3":1,"controllers":1},"acceptedCount":2},"modularity":{"activity":{"2011-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"plugins":1}},"redmine":{"activity":{"2011-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"rubygems":1}},"database-migration":{"activity":{"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"dbmigrate":1}},"dbmigrate":{"activity":{"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"database-migration":1}},"cookies":{"activity":{"2011-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1}},"sendmail":{"activity":{"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"actionmailer":1}},"nested-sets":{"activity":{"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"nested":1}},"deprecated":{"activity":{"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"plugins":1}},"sendgrid":{"activity":{"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"heroku":1}},"irb":{"activity":{"2011-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"apache2":{"activity":{"2011-10":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1}},"answerCount":2,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":2,"phusion-passenger":2,"passenger":1},"nonacceptedCount":1},"phusion-passenger":{"activity":{"2011-10":{"answerCount":2,"acceptedCount":1,"nonacceptedCount":1}},"answerCount":2,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":2,"apache2":2,"passenger":1},"nonacceptedCount":1},"pdf-generation":{"activity":{"2011-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"heroku":1,"wicked-pdf":1}},"oracle":{"activity":{"2011-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"activerecord":1}},"mobile":{"activity":{"2011-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"sencha-touch":1}},"sencha-touch":{"activity":{"2011-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"mobile":1}},"textarea":{"activity":{"2011-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"forms":1}},"root":{"activity":{"2011-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"highcharts":{"activity":{"2011-11":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"arrays":1,"ruby-on-rails-3":1}},"selenium2":{"activity":{"2011-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"selenium":1,"rspec":1}},"symfony2":{"activity":{"2011-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"routing":1}},"relationship":{"activity":{"2011-12":{"answerCount":1,"acceptedCount":1},"2013-03":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"acceptedCount":2,"relatedTags":{"ruby":1,"ruby-on-rails-3":2,"model":1,"has-and-belongs-to-many":1,"associations":1,"model-associations":1,"plural":1}},"has-and-belongs-to-many":{"activity":{"2011-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby":1,"ruby-on-rails-3":1,"model":1,"relationship":1}},"rails-admin":{"activity":{"2011-12":{"answerCount":1,"acceptedCount":1},"2012-05":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"acceptedCount":2,"relatedTags":{"ruby-on-rails":2,"ruby":1,"ruby-on-rails-3.1":1,"devise":1,"ruby-on-rails-3":1,"associations":1}},"oauth":{"activity":{"2011-12":{"answerCount":1,"acceptedCount":1},"2012-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":2,"gem":1,"omniauth":1,"ruby-on-rails":1,"postgresql":1,"devise":1},"nonacceptedCount":1},"searchlogic":{"activity":{"2011-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"rubygems":1,"gem":1}},"svn":{"activity":{"2011-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"version-control":1,"cvs":1}},"cvs":{"activity":{"2011-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"svn":1,"version-control":1}},"attributes":{"activity":{"2011-12":{"answerCount":1,"acceptedCount":1},"2012-06":{"answerCount":1,"nonacceptedCount":1},"2012-08":{"answerCount":1,"acceptedCount":1}},"answerCount":3,"acceptedCount":2,"relatedTags":{"ruby-on-rails":2,"devise":1,"ruby-on-rails-3":1,"comments":1,"rails-activerecord":1},"nonacceptedCount":1},"url-scheme":{"activity":{"2012-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"routes":1}},"naming":{"activity":{"2012-01":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"ruby-on-rails-3.1":1}},"issue-tracking":{"activity":{"2012-01":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"github":1}},"forum":{"activity":{"2012-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"layout":1}},"slim-lang":{"activity":{"2012-01":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"template-engine":1,"rails-engines":1}},"nested-form-for":{"activity":{"2012-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"simple-form":1}},"warden":{"activity":{"2012-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"devise":1}},"favicon":{"activity":{"2012-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"inheritance":{"activity":{"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"model-view-controller":1,"controllers":1}},"versioning":{"activity":{"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"routes":1}},"infinite-loop":{"activity":{"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"activescaffold":1}},"polymorphic":{"activity":{"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"database":1,"model":1}},"activerelation":{"activity":{"2012-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"activerecord":1}},"redis":{"activity":{"2012-03":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1}},"views":{"activity":{"2012-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"spree":1}},"authorization":{"activity":{"2012-04":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"cancan":1,"spree":1}},"rack-middleware":{"activity":{"2012-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"rack":1,"middleware":1}},"hobo":{"activity":{"2012-04":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"godaddy":{"activity":{"2012-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"email":1}},"elasticsearch":{"activity":{"2012-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"tire":1}},"tire":{"activity":{"2012-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"elasticsearch":1}},"travis-ci":{"activity":{"2012-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"github":1,"rake":1}},"best-in-place":{"activity":{"2012-06":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1,"twitter-bootstrap":1}},"login":{"activity":{"2012-06":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"before-filter":1}},"before-filter":{"activity":{"2012-06":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"login":1}},"mass-assignment":{"activity":{"2012-07":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1}},"nested-resources":{"activity":{"2012-07":{"answerCount":1,"acceptedCount":1},"2013-01":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"acceptedCount":1,"relatedTags":{"ruby-on-rails":2,"ruby-on-rails-3":1,"controller":1,"form-for":1},"nonacceptedCount":1},"order":{"activity":{"2012-07":{"answerCount":1,"acceptedCount":1},"2012-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":2,"acceptedCount":1,"relatedTags":{"sql":1,"ruby-on-rails":2,"activerecord":1},"nonacceptedCount":1},"serialization":{"activity":{"2012-07":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails-3":1}},"unicode":{"activity":{"2012-07":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"erb":1}},"directory":{"activity":{"2012-08":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"model-view-controller":1}},"overriding":{"activity":{"2012-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"helper":1,"spree":1}},"pusher":{"activity":{"2012-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"gem":1,"bundle":1}},"after-save":{"activity":{"2012-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"csv":1}},"translation":{"activity":{"2012-09":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"spree":1}},"jquery-ui-datepicker":{"activity":{"2012-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"jquery-ui":1}},"file-io":{"activity":{"2012-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"minitest":{"activity":{"2012-10":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"testing":1}},"for-loop":{"activity":{"2012-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"field":1}},"field":{"activity":{"2012-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"for-loop":1}},"subdomain":{"activity":{"2012-11":{"answerCount":1,"acceptedCount":1},"2013-09":{"answerCount":1,"acceptedCount":1}},"answerCount":2,"acceptedCount":2,"relatedTags":{"ruby-on-rails":2,"multi-tenant":1,"ruby-on-rails-3":1,"routing":1,"rails-routing":1}},"ubuntu-12.04":{"activity":{"2012-11":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"gem":1,"rvm":1}},"view-helpers":{"activity":{"2012-11":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"ruby-on-rails-3":1,"ruby-on-rails-3.2":1}},"refactoring":{"activity":{"2012-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"instance-variables":1}},"instance-variables":{"activity":{"2012-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"refactoring":1}},"input":{"activity":{"2012-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"forms":1,"controller":1,"routes":1}},"ransack":{"activity":{"2012-12":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"spree":1}},"sass":{"activity":{"2013-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"asset-pipeline":1,"sprockets":1}},"cross-browser":{"activity":{"2013-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"jquery-selectors":1,"css-selectors":1,"greasemonkey":1,"userscripts":1}},"css-selectors":{"activity":{"2013-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"jquery-selectors":1,"cross-browser":1,"greasemonkey":1,"userscripts":1}},"greasemonkey":{"activity":{"2013-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"jquery-selectors":1,"cross-browser":1,"css-selectors":1,"userscripts":1}},"userscripts":{"activity":{"2013-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"jquery-selectors":1,"cross-browser":1,"css-selectors":1,"greasemonkey":1}},"fork":{"activity":{"2013-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"git":1,"github":1,"repository":1}},"repository":{"activity":{"2013-02":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"git":1,"github":1,"fork":1}},"boxen":{"activity":{"2013-02":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"osx":1,"github":1}},"globalize3":{"activity":{"2013-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3.2":1}},"cloudfoundry":{"activity":{"2013-04":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"production-environment":1}},"paginate":{"activity":{"2013-05":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"will-paginate":1}},"product":{"activity":{"2013-07":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"forms":1,"cart":1}},"iced-coffeescript":{"activity":{"2013-07":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"scope":1,"coffeescript":1,"coffeescript-resources":1}},"coffeescript-resources":{"activity":{"2013-07":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"scope":1,"coffeescript":1,"iced-coffeescript":1}},"blogs":{"activity":{"2013-07":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"floating-point":{"activity":{"2013-07":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"regex":1,"string":1,"gsub":1}},"gsub":{"activity":{"2013-07":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"regex":1,"string":1,"floating-point":1}},"boolean-logic":{"activity":{"2013-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-3":1,"activerecord":1}},"braintree":{"activity":{"2013-08":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"capybara":1,"rspec-rails":1}},"padrino":{"activity":{"2013-08":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby":1,"activerecord":1,"rspec":1}},"mint":{"activity":{"2013-09":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1}},"vote-up-buttons":{"activity":{"2013-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ajax":1}},"html-escape-characters":{"activity":{"2013-09":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"html":1,"ruby-on-rails":1,"escaping":1}},"commit":{"activity":{"2013-09":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"git":1,"tdd":1}},"secret-key":{"activity":{"2013-10":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"devise":1,"ruby-on-rails-4":1}},"call":{"activity":{"2013-12":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"javascript":1,"html":1}},"inherited-resources":{"activity":{"2014-03":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"activerecord":1,"ruby-on-rails-4":1,"activeadmin":1}},"iframe":{"activity":{"2014-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails":1,"testing":1,"localhost":1}},"caching":{"activity":{"2014-03":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"ruby-on-rails-3":1}},"money":{"activity":{"2014-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-4":1,"rails-activerecord":1,"money-rails":1}},"money-rails":{"activity":{"2014-03":{"answerCount":1,"acceptedCount":1}},"answerCount":1,"acceptedCount":1,"relatedTags":{"ruby-on-rails-4":1,"rails-activerecord":1,"money":1}},"newrelic":{"activity":{"2014-03":{"answerCount":1,"nonacceptedCount":1}},"answerCount":1,"nonacceptedCount":1,"relatedTags":{"ruby-on-rails":1,"spree":1}}},"questions":{"3788629":{"id":"3788629","date":"2010-09","score":"1","body":"\"<p>Currently I'm parsing a HTML document using Nokogiri and iterating through all the <code>code<\\\/code> tags like this:<\\\/p>\\n\\n<pre><code>html = Nokogiri::HTML(doc)\\nhtml.css(\\\"code\\\").each do |code|\\n   # do something with code\\n   if \\\/^@@@@\\\/.match(code.text.split(\\\"\\\\n\\\")[0])\\n     return \\\"this code element is at line blah\\\"\\n   end     \\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I don't <em>have<\\\/em> to use Nokogiri, it was just convenient to use to iterate through all the code elements.<\\\/p>\\n\\n<p>In the case where the <code>code<\\\/code> tag begins with <code>@@@@<\\\/code> then I want to be able to reference the line number in the document where that <code>code<\\\/code> tag occurred. Keep in mind that two code tags can be identical.<\\\/p>\\n\"","title":"\"Find the line number of a tag in a HTML document\"","favorite":null,"tags":"<ruby>","commentCount":"0","viewCount":"745","answerCount":"4"},"4514019":{"id":"4514019","date":"2010-12","score":"1","body":"\"<p>I have around 30 scenarios that all bar one require this step to be at the top of the <code>Background<\\\/code>:<\\\/p>\\n\\n<pre><code>Given I have an account:\\n  | name     | path     |\\n  | ticketee | ticketee |\\n<\\\/code><\\\/pre>\\n\\n<p>For the one that doesn't require this step it is not important that it exists or doesn't exist, because it's the feature for creating accounts. I can simply use a different account name and path for this.<\\\/p>\\n\\n<p>Now, I was thinking rather than putting this in every single feature file 29 times that I could make use of the <code>Before<\\\/code> method in Cucumber which would mean placing a file in <code>features\\\/support\\\/create_account.rb<\\\/code> which would have this code:<\\\/p>\\n\\n<pre><code>Before do\\n  steps(%Q{\\n    Given I have an account:\\n      | name     | path     |\\n      | ticketee | ticketee |\\n  })\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The only downside from this is that it extracts what some would think belongs in the feature to a very difficult-to-track-down location and is probably not standard. But on the other hand, it saves quite a lot of repetition. <\\\/p>\\n\\n<p>What should I do?<\\\/p>\\n\"","title":"\"Cucumber step for all scenarios\"","favorite":null,"tags":"<ruby-on-rails><cucumber>","commentCount":"0","viewCount":"646","answerCount":"3"},"4572975":{"id":"4572975","date":"2011-01","score":"2","body":"\"<p>At the bottom of <a href=\\\"http:\\\/\\\/www.ruby-doc.org\\\/core\\\/classes\\\/Kernel.html#M005962\\\" rel=\\\"nofollow\\\">Kernel#sprintf<\\\/a>'s documentation it has this example:<\\\/p>\\n\\n<pre><code>sprintf(\\\"%u\\\", -123) #=&gt; \\\"..4294967173\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>When I do this on 1.8.7 I get this result:<\\\/p>\\n\\n<pre><code>\\\"..18446744073709551493\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>That's <em>similar<\\\/em> to the expected output, but is definitely not it.<\\\/p>\\n\\n<p>When I do it on 1.9.2 however, I get the same number back as a string:<\\\/p>\\n\\n<pre><code>ruby-1.9.2-p136 :001 &gt; sprintf(\\\"%u\\\", -123)\\n =&gt; \\\"-123\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>So there's actually two questions here. <\\\/p>\\n\\n<ol>\\n<li><p>Why would I be getting a different output to what the documentation says I would and<\\\/p><\\\/li>\\n<li>Why would Ruby 1.9.2 behave differently to 1.8.7, even when the documentation is quite specific about the output type?<\\\/li>\\n<\\\/ol>\\n\"","title":"\"Is this sprintf call broken in 1.9.2?\"","favorite":"1","tags":"<ruby>","commentCount":"0","viewCount":"316","answerCount":"1"},"4613996":{"id":"4613996","date":"2011-01","score":"12","body":"\"<p>Currently in my application I have the concepts of projects and users. Now I'm wanting to implement an account scope for these so that both projects and users belong to an account rather than to nothing in particular. By doing this, I would like to scope my routes like this:<\\\/p>\\n\\n<pre><code> scope \\\":account_id\\\" do\\n   resources :projects\\n   ...\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>However, by implementing a routing <code>scope<\\\/code> with a named parameter this changes how the routing helpers perform so that the <code>project_path<\\\/code> routing helper now expects two parameters, one for the <code>account_id<\\\/code> parameter and one for the <code>id<\\\/code> parameter, making it something like this:<\\\/p>\\n\\n<pre><code>  project_path(current_account, project)\\n<\\\/code><\\\/pre>\\n\\n<p>This <em>tiny<\\\/em> <code>scope<\\\/code> change requires me to make <em>massive<\\\/em> changes across the application in the controllers and views where I use these path helpers.<\\\/p>\\n\\n<p>Surely, surely, surely, there's a clean way to do this without having to change every single routing helper in the application?<\\\/p>\\n\"","title":"\"Implementing account scoping\"","favorite":"10","tags":"<ruby-on-rails><ruby-on-rails-3><routes>","commentCount":"0","viewCount":"1021","answerCount":"2"},"4644975":{"id":"4644975","date":"2011-01","score":"4","body":"\"<p>TL;DR: Crafting an API. Need different fields for different versions. Teach me, wise ones.<\\\/p>\\n\\n<p>I'm currently trying to figure out the best way to craft a versioned API. That is to say, I wish to have a URL of <code>\\\/api\\\/v1\\\/projects.json<\\\/code> that would show a list of projects with a bunch of fields and <code>api\\\/v2\\\/projects.json<\\\/code> to show a list of projects with separate fields. <\\\/p>\\n\\n<p>I've been thinking about this problem for about 15 minutes which probably means it's all wrong. At the moment I've got this in my <code>app\\\/models\\\/project.rb<\\\/code> file:<\\\/p>\\n\\n<pre><code>def self.api_fields\\n  { \\n    :v1 =&gt; [\\\"name\\\"],\\n    :v2 =&gt; [\\\"name\\\", \\\"tickets_count\\\"]\\n  }\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then I can use this in my API controllers (<code>api\\\/v1\\\/projects_controller.rb<\\\/code>) like this:<\\\/p>\\n\\n<pre><code>def index\\n  respond_with(Project.all(:select =&gt; Project.api_fields[:v1]))\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This is great and works as I'd like it to, but there's probably a better way about it. That's your task! Share with me your mountains of API-crafting wisdom.<\\\/p>\\n\\n<p>Bonus points if you come up with a solution that will also allow me to use methods for instances of a model's object, such as a <code>tickets_count<\\\/code> method on a <code>Project<\\\/code> method.<\\\/p>\\n\"","title":"\"Ensuring APIs are separate\"","favorite":"4","tags":"<ruby-on-rails>","commentCount":"0","viewCount":"510","answerCount":"4"},"4720610":{"id":"4720610","date":"2011-01","score":"0","body":"\"<p>In RSpec I'm currently testing API requests using a series of methods that compile effectively to something like this:<\\\/p>\\n\\n<pre><code>env = Rack::MockRequest.env_for('\\\/api\\\/v1\\\/projects.json')\\nRails.application.call(env)\\n<\\\/code><\\\/pre>\\n\\n<p>I was wondering if there was a shorter way of making a request to the Rails application in RSpec. I know you can create a controller spec and request specific actions, but I'm more after a way to make a request to a URL and check that the output is what I expect.<\\\/p>\\n\"","title":"\"Make a request to a specific path\"","favorite":null,"tags":"<ruby-on-rails-3><rspec>","commentCount":"0","viewCount":"251","answerCount":"2"},"4788601":{"id":"4788601","date":"2011-01","score":"15","body":"\"<p>I'm looking for people's examples of good* practices when using Rails.<\\\/p>\\n\\n<p>I've got a couple such as:<\\\/p>\\n\\n<ul>\\n<li><code>before_filter<\\\/code> calls go underneath the controller class name declaration, nowhere else.<\\\/li>\\n<li>Base controllers for a namespace are named <code>BaseController<\\\/code>, not <code>ApplicationController<\\\/code>. There is, and should forever be, only one <code>ApplicationController<\\\/code>.<\\\/li>\\n<li><code>attr_*<\\\/code> methods are defined at the top of their respective classes.<\\\/li>\\n<li>Model callbacks go after <code>attr_*<\\\/code> methods, or at the top of the model.<\\\/li>\\n<li>Validations go at the top of the model, with custom validation methods being defined as <code>private<\\\/code> methods at the bottom of the file.<\\\/li>\\n<\\\/ul>\\n\\n<p>Now I'm not looking for Ruby's good practices, but more of a list of ones specifically in Rails. The ones listed above are just an example, not gospel.<\\\/p>\\n\\n<p>* I didn't want to use the term \\\"best practices\\\", as best implies an ultimate, and in all things code people may disagree.<\\\/p>\\n\"","title":"\"Good practices of Rails\"","favorite":"8","tags":"<ruby-on-rails>","commentCount":"2","viewCount":"2537","answerCount":"2"},"5022454":{"id":"5022454","date":"2011-02","score":"3","body":"\"<p>I'm writing a book on Rails 3 at the moment and past-me has written in Chapter 3 or so that when a specific feature is run that a routing error is generated. Now, it's unlike me to go writing things that aren't true, so I'm pretty sure this happened once in the past.<\\\/p>\\n\\n<p>I haven't yet been able to duplicate the scenario myself, but I'm pretty confident it's one of the forgotten settings in the environment file.<\\\/p>\\n\\n<p>To duplicate this issue:<\\\/p>\\n\\n<ul>\\n<li>Generate a new rails project<\\\/li>\\n<li><strong>important<\\\/strong>: Remove the <code>public\\\/index.html<\\\/code> file<\\\/li>\\n<li>Add cucumber-rails and capybara to the \\\"test\\\" group in your <code>Gemfile<\\\/code><\\\/li>\\n<li>run <code>bundle install<\\\/code><\\\/li>\\n<li>run <code>rails g cucumber:skeleton<\\\/code><\\\/li>\\n<li>Generate a new feature, call it <code>features\\\/creating_projects.feature<\\\/code><\\\/li>\\n<li>Inside this feature put:<\\\/li>\\n<\\\/ul>\\n\\n<p>This:<\\\/p>\\n\\n<pre><code>Feature: Creating projects\\n  In order to value\\n  As a role\\n  I want feature\\n\\nScenario: title\\n  Given I am on the homepage\\n<\\\/code><\\\/pre>\\n\\n<p>When you run this feature using <code>bundle exec cucumber features\\\/creating_projects.feature<\\\/code> it <em>should<\\\/em> fail with a \\\"No route matches \\\/\\\" error, because you didn't define the root route. However, what I and others are seeing is that it <em>doesn't<\\\/em>.<\\\/p>\\n\\n<p>Now I've set a setting in <code>test.rb<\\\/code> that will get this exception page to show, but I would rather Rails did a hard-raise of the exception so that it showed up in Cucumber as a failing step, like I'm pretty sure it used to, rather than a passing step.<\\\/p>\\n\\n<p>Does anybody know what could have changed since May-ish of last year for Rails to not do this? I'm pretty confident it's <em>some<\\\/em> setting in <code>config\\\/environments\\\/test.rb<\\\/code>, but for the life of me I cannot figure it out.<\\\/p>\\n\"","title":"\"Raising route not found error\"","favorite":"1","tags":"<ruby-on-rails-3><cucumber>","commentCount":"3","viewCount":"1672","answerCount":"1"},"5611023":{"id":"5611023","date":"2011-04","score":"2","body":"\"<p>I've got an application at <a href=\\\"http:\\\/\\\/github.com\\\/rails3book\\\/ticketee\\\" rel=\\\"nofollow\\\">http:\\\/\\\/github.com\\\/rails3book\\\/ticketee<\\\/a> that contains an OAuth portion provided by Devise. The configuration is at <code>config\\\/initializers\\\/devise.rb<\\\/code>. I have got this working with Twitter but always get this \\\"invalid credentials\\\" message back from GitHub. <\\\/p>\\n\\n<p>I cannot see what I am doing differently between Twitter and GitHub. To my knowledge, this should Just Work(tm).<\\\/p>\\n\"","title":"\"GitHub OAuth using Devise + OmniAuth\"","favorite":"1","tags":"<ruby-on-rails>","commentCount":"0","viewCount":"2472","answerCount":"2"},"6713935":{"id":"6713935","date":"2011-07","score":"1","body":"\"<p>I'm looking to gain access to the owner of the <code>elements<\\\/code> association in the following code inside the <code>Processor<\\\/code> module. First up, <code>Chapter.process<\\\/code> is called:<\\\/p>\\n\\n<p><strong>app\\\/models\\\/chapter.rb<\\\/strong><\\\/p>\\n\\n<pre><code>class Chapter\\n  include Mongoid::Document\\n  field :position, :type =&gt; Integer\\n  field :title, :type =&gt; String\\n  field :identifier, :type =&gt; String\\n\\n  embedded_in :book\\n  embeds_many :elements\\n\\n  def self.process!(git, file)\\n    chapter = new\\n    # Parsing of XML goes here, generating parsed_doc\\n    elements = parsed_doc.css(\\\"div.chapter &gt; *\\\")\\n    elements.each { |element| chapter.elements.process!(element) }\\n  end\\n<\\\/code><\\\/pre>\\n\\n<p>This then passes off to the code inside <code>Processor<\\\/code>, which is actually included into the <code>Element<\\\/code> class like this:<\\\/p>\\n\\n<p><strong>app\\\/models\\\/element.rb<\\\/strong><\\\/p>\\n\\n<pre><code>class Element\\n  include Mongoid::Document\\n  extend Processor\\n  field :tag, :type =&gt; String\\n  field :identifier, :type =&gt; String\\n  field :title, :type =&gt; String\\n\\n  embedded_in :chapter\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Where the <code>Processor<\\\/code> class is defined like this:<\\\/p>\\n\\n<pre><code>module Processor\\n\\n  def process!(markup)\\n    [ASSOCIATION OWNER GOES HERE].elements.send(\\\"process_#{markup.name}!\\\", markup)\\n  end\\n<\\\/code><\\\/pre>\\n\\n<p>The reason I need this is because I have attempted to simply call <code>send<\\\/code> by itself but Monogid insists that:<\\\/p>\\n\\n<blockquote>\\n  <p>Access to the collection for Element is not allowed since it is an embedded document, please access a collection from the root document.<\\\/p>\\n<\\\/blockquote>\\n\\n<p>And so it would seem the only way to do this would be to access the parent object for this association. I know that there's supposed to be a <code>_parent<\\\/code> method on instances of document, but in this case this method is being called on the <em>collection<\\\/em>, not an instance.<\\\/p>\\n\\n<p>So how can I reference the association object from within this <code>process!<\\\/code> method?<\\\/p>\\n\"","title":"\"Gaining access to association owner object\"","favorite":null,"tags":"<ruby-on-rails><mongoid>","commentCount":"2","viewCount":"256","answerCount":"2"},"7733824":{"id":"7733824","date":"2011-10","score":"7","body":"\"<p>I have a project where we have some Selenium tests. I have recently upgraded Firefox to 7.0.1 because it prompted me to and now the \\\"WebDriver for Firefox\\\" extension that these tests use is broken.<\\\/p>\\n\\n<p><img src=\\\"http:\\\/\\\/i.stack.imgur.com\\\/cIY2o.png\\\" alt=\\\"Firefox WebDriver is broken\\\"><\\\/p>\\n\\n<p>How can I fix this? Must I uninstall this current version of Firefox and install an older one? Or is there a file I can edit to tell it to ignore that the version is different?<\\\/p>\\n\"","title":"\"Selenium WebDriver + Firefox 7.0.1 incompatibility\"","favorite":null,"tags":"<firefox><selenium>","commentCount":"4","viewCount":"2904","answerCount":"4"},"9509657":{"id":"9509657","date":"2012-03","score":"1","body":"\"<p>I have a pretty simple Rack app that's defined in a file called <code>config.ru<\\\/code>: <\\\/p>\\n\\n<pre><code>require '.\\\/environment'\\n\\n class Ryan\\n   def self.call(env)\\n    [200, { \\\"Content-Type\\\" =&gt; \\\"text\\\/html\\\" }, [Time.zone.now]]\\n   end\\n end\\n\\n run Ryan\\n<\\\/code><\\\/pre>\\n\\n<p>In <code>environment.rb<\\\/code>, there's this:<\\\/p>\\n\\n<pre><code>require 'active_support\\\/core_ext\\\/time\\\/zones'\\nrequire 'active_support\\\/time_with_zone'\\nrequire 'active_support\\\/core_ext\\\/time\\\/conversions'\\n\\nTime.zone = 'Sydney'\\n<\\\/code><\\\/pre>\\n\\n<p>And in the <code>Gemfile<\\\/code>:<\\\/p>\\n\\n<pre><code>source \\\"http:\\\/\\\/rubygems.org\\\"\\n\\ngem 'rack'\\ngem 'tzinfo'\\ngem 'activesupport'\\n<\\\/code><\\\/pre>\\n\\n<p>When I run this locally, it works! Huge success.<\\\/p>\\n\\n<p>However, when I deploy this application to Heroku it fails entirely with this showing in the logs:<\\\/p>\\n\\n<pre><code>2012-03-01T02:01:55+00:00 app[web.1]: [2012-03-01 02:01:55] INFO  ruby 1.9.2 (2011-07-09) [x86_64-linux]\\n2012-03-01T02:01:55+00:00 app[web.1]: [2012-03-01 02:01:55] INFO  WEBrick 1.3.1\\n2012-03-01T02:01:55+00:00 app[web.1]: [2012-03-01 02:01:55] INFO  WEBrick::HTTPServer#start: pid=1 port=27368\\n2012-03-01T02:01:56+00:00 heroku[web.1]: State changed from starting to up\\n2012-03-01T02:01:57+00:00 app[web.1]: [2012-03-01 02:01:57] ERROR NoMethodError: undefined method `now' for nil:NilClass\\n2012-03-01T02:01:57+00:00 app[web.1]:   \\\/app\\\/vendor\\\/bundle\\\/ruby\\\/1.9.1\\\/gems\\\/rack-1.4.1\\\/lib\\\/rack\\\/handler\\\/webrick.rb:59:in `service'\\n2012-03-01T02:01:57+00:00 app[web.1]:   \\\/usr\\\/local\\\/lib\\\/ruby\\\/1.9.1\\\/webrick\\\/httpserver.rb:70:in `run'\\n2012-03-01T02:01:57+00:00 app[web.1]:   \\\/app\\\/config.ru:8:in `call'\\n2012-03-01T02:01:57+00:00 app[web.1]:   \\\/usr\\\/local\\\/lib\\\/ruby\\\/1.9.1\\\/webrick\\\/httpserver.rb:111:in `service'\\n2012-03-01T02:01:57+00:00 app[web.1]:   \\\/usr\\\/local\\\/lib\\\/ruby\\\/1.9.1\\\/webrick\\\/server.rb:183:in `block in start_thread'\\n<\\\/code><\\\/pre>\\n\\n<p>So... what's the dealio here? Is Heroku running this in a different kind of process and so that's why it can't be found?<\\\/p>\\n\"","title":"\"Heroku + Rack App + Active Support Timezones\"","favorite":"0","tags":"<ruby><heroku>","commentCount":"2","viewCount":"294","answerCount":"2"},"9816111":{"id":"9816111","date":"2012-03","score":"5","body":"\"<p>I have the following Ruby script:<\\\/p>\\n\\n<pre><code>require 'erubis'\\n\\ndef listing(title, attributes={})\\n  \\\"output\\\" + yield + \\\"more output\\\"\\nend\\n\\nexample = %Q{&lt;% listing \\\"db\\\/migrate\\\/[date]_create_purchases.rb\\\", :id =&gt; \\\"ch01_292\\\" do %&gt;\\n&lt;![CDATA[class CreatePurchases &lt; ActiveRecord::Migration\\n  def change\\n    create_table :purchases do |t|\\n      t.string :name\\n      t.float :cost\\n      t.timestamps\\n    end\\n  end\\nend]]&gt;\\n&lt;% end %&gt;}\\n\\nchapter = Erubis::Eruby.new(example)\\np chapter.result(binding)\\n<\\\/code><\\\/pre>\\n\\n<p>I am attempting to use a block here and get it to output \\\"output\\\", then the content in the block and then \\\"more output\\\", but I can't seem to get it to work.<\\\/p>\\n\\n<p>I know that ERB used to work this way in Rails 2.3 and now works with <code>&lt;%=<\\\/code> in Rails 3... but I'm not using Rails at all. This is just pure ERB.<\\\/p>\\n\\n<p>How can I get it to output all the content?<\\\/p>\\n\"","title":"\"Blocks in pure ERB \\\/ Erubis\"","favorite":"1","tags":"<ruby><erb>","commentCount":"0","viewCount":"1271","answerCount":"2"},"10891331":{"id":"10891331","date":"2012-06","score":"5","body":"\"<p>I have a <code>Product<\\\/code> model that <code>has_and_belongs_to_many :taxons<\\\/code>, and I want to find all products that are in specific taxons.<\\\/p>\\n\\n<p>For example, if a product belongs to both the \\\"Ruby on Rails\\\" and \\\"Shirts\\\" taxon, I want that product to be returned in the dataset, but <em>not<\\\/em> if it only belongs to either \\\"Ruby on Rails\\\" or \\\"Shirts\\\"<\\\/p>\\n\"","title":"\"Finding records with two specific records in another table\"","favorite":"4","tags":"<ruby-on-rails>","commentCount":"0","viewCount":"506","answerCount":"3"},"11339333":{"id":"11339333","date":"2012-07","score":"4","body":"\"<p>I am attempting to make it so that people can define arbitrary workflows in classes. The code for this is probably too long for Stack Overflow and so I've got <strong><a href=\\\"https:\\\/\\\/gist.github.com\\\/3051916\\\" rel=\\\"nofollow\\\">a gist<\\\/a><\\\/strong> for it.<\\\/p>\\n\\n<p>If you run the code, the first couple of tests will work, but when it attempts to transition to the payment state, it checks for the <code>payment_required?<\\\/code> method on the complete wrong object. I want it to be checking for it on the current <code>Order<\\\/code> instance, but instead it (seemingly) is looking for that method on the state machine anonymous class.<\\\/p>\\n\\n<p>How do I get it to call the method correctly on the <code>Order<\\\/code> instance?<\\\/p>\\n\"","title":"\"Defining a custom state machine\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentCount":"2","viewCount":"491","answerCount":"2"},"16013975":{"id":"16013975","date":"2013-04","score":"5","body":"\"<p>I have a form that I'm testing using Capybara. This form's URL goes to my Braintree sandbox, although I suspect the problem would happen for any remote URL. When Capybara clicks the submit button for the form, the request is routed to the dummy application rather than the remote service.<\\\/p>\\n\\n<p>Here's an example app that reproduces this issue: <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/capybara_remote\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/radar\\\/capybara_remote<\\\/a>. Run bundle exec ruby test\\\/form_test.rb and the test will pass, which is not what I'd typically expect.<\\\/p>\\n\\n<p>Why does this happen and is this behaviour that I can rely on always happening?<\\\/p>\\n\"","title":"\"Capybara + remote form request\"","favorite":"1","tags":"<ruby-on-rails>","commentCount":"3","viewCount":"419","answerCount":"1"},"16228887":{"id":"16228887","date":"2013-04","score":"7","body":"\"<p>I have the following code:<\\\/p>\\n\\n<pre><code>package main\\n\\nimport \\\"net\\\"\\nimport \\\"fmt\\\"\\nimport \\\"bufio\\\"\\n\\nfunc main() {\\n    conn, _ := net.Dial(\\\"tcp\\\", \\\"irc.freenode.net:6667\\\")\\n\\n    reader := bufio.NewReader(conn)\\n    go func() {\\n        str, err := reader.ReadString('\\\\n')\\n        if err != nil {\\n            \\\/\\\/ handle it\\n            fmt.Println(err)\\n        }\\n        fmt.Println(str)\\n    }()\\n\\n}\\n<\\\/code><\\\/pre>\\n\\n<p>If I don't have the code that reads from the  buffer in a goroutine, it outputs a message like this, which is what I expect to happen:<\\\/p>\\n\\n<pre><code>:zelazny.freenode.net NOTICE * :*** Looking up your hostname...\\n<\\\/code><\\\/pre>\\n\\n<p>However, having it inside a goroutine prints nothing.<\\\/p>\\n\\n<p>Can someone explain why that is?<\\\/p>\\n\"","title":"\"Why does fmt.Println inside a goroutine not print a line?\"","favorite":"2","tags":"<go>","commentCount":"0","viewCount":"929","answerCount":"2"},"17959374":{"id":"17959374","date":"2013-07","score":"2","body":"\"<p>With this code, is there a better way to loop through all the users and create a new string containing all their <code>Nick<\\\/code> values?    <\\\/p>\\n\\n<pre><code>package main\\n\\nimport \\\"fmt\\\"\\n\\ntype User struct {\\n    Nick     string\\n}\\n\\n\\nfunc main() {\\n    var users [2]User\\n    users[0] = User{ Nick: \\\"Radar\\\" }\\n    users[1] = User{ Nick: \\\"NotRadar\\\" }\\n    names := \\\":\\\"\\n    for _, u := range users {\\n        names += u.Nick + \\\" \\\"\\n    }\\n    fmt.Println(names)\\n\\n}\\n<\\\/code><\\\/pre>\\n\"","title":"\"Cleaner way to iterate through array + create a string from values\"","favorite":"2","tags":"<go>","commentCount":"2","viewCount":"143","answerCount":"4"}},"answers":{"3641549":{"id":"3641549","date":"2010-09","score":"2","body":"\"<p>(Basing this off your comments on the question)<\\\/p>\\n\\n<p>You will need to add hpricot (and any other gem this needs) to your <code>Gemfile<\\\/code> so that they are made available by Bundler. Bundler is <em>by far<\\\/em> the easiest way to avoid gem conflicts and tomfoolery.<\\\/p>\\n\\n<p>Imagine this situation: You somehow lose the gems that you have currently. Be this happening through a format or system change or any other reason. Whatever it is, you've lost your gems. How are you going to re-install all your gems? You <em>could<\\\/em> keep a list of them somewhere else yourself, but is this truly likely?<\\\/p>\\n\\n<p>Bundler solves this problem by making you state what gems your application requires and only adding those gems to the load path, which is why you can't find <code>hpricot<\\\/code>. When you run <code>bundle install<\\\/code> the first time, this creates a <code>Gemfile.lock<\\\/code> which contains something like this:<\\\/p>\\n\\n<pre><code>GEM\\n  remote: http:\\\/\\\/rubygems.org\\\/\\n  specs:\\n    abstract (1.0.0)\\n    actionmailer (3.0.0)\\n    ...\\n<\\\/code><\\\/pre>\\n\\n<p>Because you commit this file to your source control \\\"solution\\\" of choice (be it Git, SVN, FTP, whatever, it's not important) you have a solid way of specifying the precise gems and precise versions of those gems that your application uses.<\\\/p>\\n\\n<p>When\\\/If your gems are wiped, you can simply clone your project again and run <code>bundle install<\\\/code>. Because the <code>Gemfile.lock<\\\/code> file exists, you'll have exactly the same gems you had originally, even if there were updates.<\\\/p>\\n\\n<p>If you don't want the <em>exact<\\\/em> same gems, just run <code>bundle update<\\\/code> and this will ignore the specifications in <code>Gemfile.lock<\\\/code> and instead revert to depending on <code>Gemfile<\\\/code> to define them. This will check for new versions of gems and install them, updating the <code>Gemfile.lock<\\\/code> when it's done.<\\\/p>\\n\\n<p>Honestly, I don't understand the Bundler hate. If you could explain in wider terms than \\\"OMG IT SUCKS YEHUDA IS SATAN\\\", I'd be much obliged.<\\\/p>\\n\\n<p><strong>Edit: WedTM asked for a sample Gemfile and related code:<\\\/strong><\\\/p>\\n\\n<p>In the Gemfile you'd have this:<\\\/p>\\n\\n<pre><code>group(:scripts) do\\n  gem 'gem1'\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>To require these gems for your scripts:<\\\/p>\\n\\n<pre><code>require 'bundler'\\nBundler.require(:scripts)\\n<\\\/code><\\\/pre>\\n\\n<p>You may also wish to require the default gems too which you can do by just adding default anywhere to the arguments of <code>require<\\\/code>:<\\\/p>\\n\\n<pre><code>Bundler.require(:default, :scripts)\\n<\\\/code><\\\/pre>\\n\\n<p>If this for some reason doesn't work I would imagine it would be because it can't locate the <code>Gemfile<\\\/code>. This can be fixed by setting the <code>ENV['BUNDLE_GEMFILE']<\\\/code> to the path to the <code>Gemfile<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><bundler>","commentcount":"6","accepted":"yes"},"3641736":{"id":"3641736","date":"2010-09","score":"1","body":"\"<p>Sure do.<\\\/p>\\n\\n<p>Your callbacks are, as you know, just method names. Therefore rather than using <code>create_laser<\\\/code> here you could call another method here to setup and create a laser with some default parameters. Let's call it <code>setup_laser<\\\/code> and use it like this:<\\\/p>\\n\\n<pre><code>before_create :setup_laser\\n<\\\/code><\\\/pre>\\n\\n<p>We'd define it in the <code>Geek<\\\/code> model like this:<\\\/p>\\n\\n<pre><code>private\\n\\ndef setup_laser\\n  create_laser(:power =&gt; 5000)\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"1","accepted":"yes"},"3663235":{"id":"3663235","date":"2010-09","score":"12","body":"\"<p>This is correct. <code>bundle install<\\\/code> won't install Rails as a gem in the conventional sense. Now to explain why.<\\\/p>\\n\\n<p>When Bundler runs an install, it will install the gems a directory: <code>~\\\/.bundle\\\/&lt;type-of-ruby&gt;\\\/&lt;version&gt;\\\/gems<\\\/code>. This is different to the normal way of installing them to a system path. When a gem is installed at a system path, the executable is made available because that directory is within the load path. Now this is a <strong>bad<\\\/strong> thing, because you can only have one executable <em>per gem<\\\/em>. Have you got SomeGem v2 installed but want to use the generator from SomeGem v1? Too bad.<\\\/p>\\n\\n<p>Bundler solves this problem by installing them into the afore-mentioned location and only requiring specific versions of the gems it needs (specified inside of <code>Gemfile<\\\/code>. By running simply <code>rails<\\\/code>, you're trying to run the <em>system<\\\/em> executable (as in one provided by doing <code>gem install rails<\\\/code>) rather than the Bundler one (provided by doing <code>bundle install<\\\/code> for a Rails project).<\\\/p>\\n\\n<p>To run the one that Bundler installs you must run it like this <code>bundle exec rails<\\\/code> within a directory that contains a <code>Gemfile<\\\/code> that specifies any version of Rails. Bundler will load a specific version of Rails and you should now be able to run them side-by-side with the only tradeoff being the <code>bundle exec<\\\/code> prefix to commands.<\\\/p>\\n\\n<p>Personally I've aliased this to <code>be<\\\/code> and two characters before some commands is a worthwhile tradeoff to avoiding The Seventh Circle of Gem Conflict Hell in my opinion.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rubygems><rvm>","commentcount":"2","accepted":"yes"},"3694311":{"id":"3694311","date":"2010-09","score":"0","body":"\"<p>Basing off jordini's answer:<\\\/p>\\n\\n<pre><code>def superuser_boolean\\n  errors.add(:superuser, \\\"Should be a boolean\\\") if [true, false].include?(superuser)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>No ugly <code>is_a<\\\/code> checks, just a simple <code>include?<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><rspec>","commentcount":"4","accepted":""},"3719984":{"id":"3719984","date":"2010-09","score":"2","body":"\"<p>Putting the environment config in the environment files is considered the best practice. You can define these configs as constants and they will be available everywhere in your application automatically.<\\\/p>\\n\\n<pre><code>S3Config = { :username =&gt; \\\"blah\\\" }\\n<\\\/code><\\\/pre>\\n\\n<p>Access the <code>:user<\\\/code> key by calling <code>S3Config[:user]<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><design>","commentcount":"3","accepted":"yes"},"3742396":{"id":"3742396","date":"2010-09","score":"0","body":"\"<p>Why <code>:current_user<\\\/code>? That's a symbol and doesn't point to any <code>User<\\\/code> object. Perhaps what you're after is simply <code>current_user<\\\/code>?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><forms><user><controllers><devise>","commentcount":"0","accepted":"yes"},"3742420":{"id":"3742420","date":"2010-09","score":"5","body":"\"<p>You could override the <code>button_to<\\\/code> helper in <code>ApplicationHelper<\\\/code> to render a <code>button<\\\/code> tag instead. Look at the code that <code>button_to<\\\/code> already has and modify it to suit your purposes.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><html5><button>","commentcount":"3","accepted":""},"3788334":{"id":"3788334","date":"2010-09","score":"2","body":"\"<p>In most cases, I would <strong>never<\\\/strong> rescue from or raise<code>RuntimeError<\\\/code>. That could be something completely unrelated to your code. It's best to use a custom exception.<\\\/p>\\n\\n<p>Generally, you can call errors whatever you want as long as you namespace them within your library's constant. For example, if someone gets their username wrong you could have <code>YourApp::InvalidUsername<\\\/code> as an exception object which would be defined like this:<\\\/p>\\n\\n<pre><code>module YourApp\\n  class InvalidUsername &lt; StandardError\\n    def message\\n      super(\\\"Yo dawg, you got your username wrong all up in here\\\")\\n    end\\n  end\\n<\\\/code><\\\/pre>\\n\\n<p>end<\\\/p>\\n\\n<p>When you <code>raise YourApp::InvalidUsername<\\\/code> you'll see that message appear.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><design-patterns><error-handling><httparty>","commentcount":"1","accepted":"yes"},"3801364":{"id":"3801364","date":"2010-09","score":"3","body":"\"<p>You can use my <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/dotiw\\\" rel=\\\"nofollow\\\">dotiw<\\\/a> gem\\\/plugin for that. It adds a couple of additional options and has greater precision than the one Rails offers.<\\\/p>\\n\\n<pre><code>distance_of_time_in_words(time1, time2, :only =&gt; [:days, :hours, :minutes])\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":""},"3807740":{"id":"3807740","date":"2010-09","score":"0","body":"\"<p>I figured out that for <em>some unknown reason<\\\/em> that <code>Nokogiri::HTML<\\\/code> won't return the line number of any given element when you call the <code>line<\\\/code> method on it, but <code>Nokogiri::XML<\\\/code> <strong>will<\\\/strong>. Confusing, much?<\\\/p>\\n\\n<p>Therefore, the solution is this:<\\\/p>\\n\\n<pre><code>html = Nokogiri::XML(html)\\nhtml.css(\\\"code\\\") do |code|\\n  if \\\/^@@@@\\\/.match(code)\\n    parse_code(code)\\n  end\\nend\\n\\ndef parse_code(code)\\n  # do something and report back using:\\n  # Assume for a moment document.path exists.\\n  puts \\\"Parsed code block on: #{code.line} of #{document.path}\\\"\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"0","accepted":""},"3809880":{"id":"3809880","date":"2010-09","score":"5","body":"\"<p><code>cycle<\\\/code> takes multiple arguments and cycles through them. You're passing a <em>single<\\\/em> argument, an array.<\\\/p>\\n\\n<p>You can use the splat operator to change the array into these multi arguments:<\\\/p>\\n\\n<pre><code>cycle(*some_array)\\n<\\\/code><\\\/pre>\\n\\n<p>This will act as if you did:<\\\/p>\\n\\n<pre><code>cycle(\\\"one\\\", \\\"two\\\", \\\"three\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>Rather than:<\\\/p>\\n\\n<pre><code>cycle([\\\"one\\\", \\\"two\\\", \\\"three\\\"])\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"3810106":{"id":"3810106","date":"2010-09","score":"1","body":"\"<p>There's no way you can do this with straight out routing. You could work around it by defining that when a City cannot be found that you then redirect to the show page of the sites controller, passing through the page name. That would require something like this in the routes:<\\\/p>\\n\\n<pre><code>get ':slug', :to =&gt; \\\"cities#show\\\", :as =&gt; \\\"city\\\"\\nget ':page', :to =&gt; \\\"site#show\\\", :as =&gt; \\\"page\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>In the <code>show<\\\/code> action for <code>CitiesController<\\\/code> you would do the find and then rescue from it when it raises an ActiveRecord::RecordNotFound.<\\\/p>\\n\\n<pre><code>def show\\n  @city = City.find_by_slug!(params[:slug])\\n  rescue ActiveRecord::RecordNotFound\\n    redirect_to(page_path(params[:slug])\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Or you know, you could just define a route for each of your pages and stop this redirect malarky.<\\\/p>\\n\\n<pre><code>get 'about', :controller =&gt; \\\"site\\\", :action =&gt; \\\"show\\\", :id =&gt; \\\"about\\\"\\n# and so on.\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"3810275":{"id":"3810275","date":"2010-09","score":"5","body":"\"<p>You can remove these branches by using this command:<\\\/p>\\n\\n<pre><code>git push origin :branch_name\\n<\\\/code><\\\/pre>\\n\\n<p>To remove the <code>BranchA<\\\/code> branch:<\\\/p>\\n\\n<pre><code>git push origin :BranchA\\n<\\\/code><\\\/pre>\\n\\n<p>To remove the <code>origin\\\/BranchA<\\\/code> branch:<\\\/p>\\n\\n<pre><code>git push origin :origin\\\/BranchA\\n<\\\/code><\\\/pre>\\n\\n<p>Alternatively you could use <code>git branch -dr BranchA<\\\/code> and so on.<\\\/p>\\n\\n<p>Remove every branch except <code>BranchA<\\\/code> and <code>origin\\\/BranchA<\\\/code>. You may have deleted the <code>origin<\\\/code> remote, in which case you should remove the <code>remotes<\\\/code> remote and re-add it as the <code>origin<\\\/code> remote.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><git-branch><git-remote>","commentcount":"5","accepted":"yes"},"3810418":{"id":"3810418","date":"2010-09","score":"0","body":"\"<pre><code>x = %Q{\\\"admin=true\\\"}\\nHash.from_xml(%x{curl -d \\\"#{x}\\\" http:\\\/\\\/localhost:8888} ) rescue nil\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>%Q{}<\\\/code>syntax indicates a quoted string, which is kind of like a \\\"super\\\"\\\/\\\"enhanced\\\" version of a double-quoted string. <\\\/p>\\n\\n<p>The <code>#{}<\\\/code> syntax inside <code>%x{}<\\\/code> is called <em>interpolation<\\\/em> and it allows to evaluate Ruby code inside a string.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><curl>","commentcount":"2","accepted":""},"3844618":{"id":"3844618","date":"2010-10","score":"2","body":"\"<p>How about this?<\\\/p>\\n\\n<pre><code>&lt;tr class=\\\"&lt;%= cycle(*[[\\\"striped\\\"]*3,[\\\"unstriped\\\"]*3].flatten) %&gt;\\\"&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><css><cycle>","commentcount":"5","accepted":"yes"},"3844621":{"id":"3844621","date":"2010-10","score":"0","body":"\"<p>The action should receive it as a file (through way of multipart form upload) and then store it as a temporary file for you.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><xml>","commentcount":"1","accepted":""},"3848124":{"id":"3848124","date":"2010-10","score":"1","body":"\"<p>You can create seed data in <em>db\\\/seeds.rb<\\\/em> and run <code>heroku rake db:seed<\\\/code> after pushing your application to put this data into your application's database.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><git><ruby-on-rails-3><heroku>","commentcount":"2","accepted":""},"3848683":{"id":"3848683","date":"2010-10","score":"1","body":"\"<p>What version of Rails are you using?<\\\/p>\\n\\n<p>If it's Rails 3 you'll need to specify it as a dependency of your application in the <em>Gemfile<\\\/em>:<\\\/p>\\n\\n<pre><code>gem 'fastercsv'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rubygems>","commentcount":"1","accepted":""},"3848698":{"id":"3848698","date":"2010-10","score":"1","body":"\"<p>You want to use the <code>sqlite3-ruby<\\\/code> gem, not the <code>sqlite3<\\\/code> gem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><heroku>","commentcount":"1","accepted":""},"3862846":{"id":"3862846","date":"2010-10","score":"3","body":"\"<p>Use <code>append_view_path<\\\/code>:<\\\/p>\\n\\n<pre><code>ActionController::Base.append_view_path(\\\"myapp\\\/custom\\\")\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"3862950":{"id":"3862950","date":"2010-10","score":"5","body":"\"<p><a href=\\\"http:\\\/\\\/mail.google.com\\\/support\\\/bin\\\/answer.py?hl=en&amp;answer=78799\\\">You need to connect using SSL on port 993<\\\/a>.<\\\/p>\\n\\n<p>Therefore your code should be this:<\\\/p>\\n\\n<pre><code>imap = Net::IMAP.new('imap.gmail.com', 993, true)\\nimap.login(\\\"user@host.com\\\", \\\"password\\\")\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><imap>","commentcount":"3","accepted":"yes"},"3902269":{"id":"3902269","date":"2010-10","score":"2","body":"\"<p>You don't need to use <code>send<\\\/code> for this because <code>hidden_field<\\\/code> isn't a private method, nor is the method you're calling dynamic. These are the only two reasons you should be using <code>send<\\\/code>. <\\\/p>\\n\\n<p>Instead, make your form use more ERB tags:<\\\/p>\\n\\n<pre><code>&lt;%= remote_form_for(:model_object, :url =&gt; { :action =&gt; 'some_action' }) do |f| %&gt;\\n  &lt;% @options.each do |k, v| %&gt;\\n    &lt;%= f.hidden_field(k, { :value =&gt; v }) %&gt;\\n  &lt;% end %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":"yes"},"3902290":{"id":"3902290","date":"2010-10","score":"0","body":"\"<p>Your form tag should be this:<\\\/p>\\n\\n<pre><code>&lt;% simple_form_for @user do |f|%&gt;\\n  &lt;%= f.input :name %&gt;\\n  &lt;%= f.button :submit %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Note on the first line how I am using <code>&lt;%<\\\/code>, not <code>&lt;%=<\\\/code>. In Rails 3 for this plugin it will probably change to <code>&lt;%=<\\\/code>, but it appears you're not using that version. The reason you're getting that error is because it's trying to output the block before it is complete.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"3902520":{"id":"3902520","date":"2010-10","score":"1","body":"\"<p>There is a high chance you're using a form to update these settings, am I right?*<\\\/p>\\n\\n<p>In which case you want to do <code>post 'updatesettings'<\\\/code> in your routes file, not <code>get<\\\/code>. This will define a route that responds to <code>POST<\\\/code> requests, vs one that only responds to <code>GET<\\\/code> requests. If you want both then use a <code>get<\\\/code> and a <code>post<\\\/code> line in your routes file.<\\\/p>\\n\\n<p>* Most of the time, yes I am.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":""},"3911018":{"id":"3911018","date":"2010-10","score":"1","body":"\"<p>I encourage you to teach 3.0, but each to their own. If your materials only cover 2.3.8 then it's missing out on a lot of goodies associated with 3.0 (such as Bundler). Anyway:<\\\/p>\\n\\n<p>My primary fear with this is that you're going to have an un-upgradable version of Rubygems if you don't have system privileges. Some gems require a Rubygems version >= 1.3.5 or even better, 1.3.6. Latest is 1.3.7. Thankfully, there's a way around it.<\\\/p>\\n\\n<p>You can do this by installing the rvm gem:<\\\/p>\\n\\n<pre><code> gem install rvm --install-dir ~\\\/.gems\\n<\\\/code><\\\/pre>\\n\\n<p>RVM is \\\"Ruby Version Manager\\\" and does what it says on the tin: manages different versions of Ruby on your system. It'd be helpful in your case because it works without modifying the system Ruby.<\\\/p>\\n\\n<p>This will install the gem to the user's home directory rather than the default system path. Then you'll need to run the <code>rvm-install<\\\/code> command which, as of this writing is:<\\\/p>\\n\\n<pre><code> ~\\\/.gems\\\/rvm-1.0.14\\\/bin\\\/rvm-install\\n<\\\/code><\\\/pre>\\n\\n<p>Your version of RVM may be different. To install a new version of Ruby which people can (ab)use run:<\\\/p>\\n\\n<pre><code> rvm install ruby-1.9.2-p0\\n<\\\/code><\\\/pre>\\n\\n<p>1.9.2 is the latest stable version of Ruby and I highly encourage you use it rather than the older 1.8.7.<\\\/p>\\n\\n<p>This should come with the latest Rubygems and, for bonus points, won't muddle about with the existing ruby installation on the machine (which is probably impossible if you don't have admin rights).<\\\/p>\\n\\n<p>From this point, you'll be able to use<\\\/p>\\n\\n<pre><code> rvm use ruby-1.9.2-p0\\n<\\\/code><\\\/pre>\\n\\n<p>to \\\"switch\\\" to that specific ruby. From there, you'll be able to do run <code>gem install rails -v 2.3.8<\\\/code> which will install Rails somewhere in <code>~\\\/.rvm<\\\/code>. The location is not important. What is important however is that now you'll have a <code>rails<\\\/code> command that you can use and then you can go from there.<\\\/p>\\n\\n<p>Good luck!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><osx>","commentcount":"2","accepted":""},"3920822":{"id":"3920822","date":"2010-10","score":"27","body":"\"<p><code>initialize<\\\/code> is used internally to Rails to, well, initialize a new instance of your controller so it can then serve requests on it. By defining this method in this particular manner, <strong>you are breaking Rails<\\\/strong>.<\\\/p>\\n\\n<p>There is a way through! A light at the end of the tunnel. A pot of gold at the end of the rainbow:<\\\/p>\\n\\n<pre><code>def initialize\\n  @title = \\\"Admins\\\"\\n  super\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>See that little <code>super<\\\/code> call there? That'll call the superclass's <code>initialize<\\\/code> method, doing exactly what Rails would do otherwise. Now that we've covered how to do it <em>your<\\\/em> way, let's cover how to do it the <em>\\\"officially sanctioned\\\" Rails way<\\\/em>:<\\\/p>\\n\\n<pre><code>class AdminsController &lt; ApplicationController\\n  before_filter :set_title\\n\\n\\n  # your actions go here\\n\\n  private      \\n    def set_title\\n      @title = \\\"Title\\\"\\n    end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Yes, it's a little more code but it'll result in less frustration by others who gaze upon your code. This is the conventional way of doing it and I strongly encourage following conventions rather than doing \\\"magic\\\".<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><layout><initialization>","commentcount":"3","accepted":"yes"},"3921105":{"id":"3921105","date":"2010-10","score":"21","body":"\"<p>Quite a lot has changed since Rails 1 and I'm really impressed by the people who are willing to spend the time to sit down with Rails 3 and learn the differences (1). The community needs to be welcoming to these and the RTFM'ers aren't being helpful. This is where I think I can help out.<\\\/p>\\n\\n<p>I would write that like this in Rails 3:<\\\/p>\\n\\n<pre><code>&lt;%= form_for(@album) do |f| %&gt;\\n  &lt;p&gt;\\n    &lt;%= f.label :title %&gt;\\n    &lt;%= f.text_field :title %&gt;\\n  &lt;\\\/p&gt;\\n\\n  &lt;p&gt;\\n    &lt;%= f.label :artist %&gt;\\n    &lt;%= f.text_field :artist %&gt;\\n  &lt;\\\/p&gt;\\n\\n  &lt;p&gt;\\n    &lt;%= f.label :genre %&gt;\\n    &lt;%= f.text_field :genre %&gt;\\n  &lt;\\\/p&gt;\\n\\n  &lt;p&gt;\\n    &lt;%= f.label :release_date %&gt;\\n    &lt;%= f.datetime_select :release_date %&gt;\\n  &lt;\\\/p&gt;\\n\\n  &lt;%= f.submit %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Woah, so many changes! Where do we begin? The top line, of course!<\\\/p>\\n\\n<p><code>form_for<\\\/code> is a method that's been in Rails for a while and has become exceedingly useful over the past couple of major revisions. This method will take the <code>@album<\\\/code> variable set up in the controller and inspect it to determine a couple of things 1) where the form should go 2) what the values of the fields should be.<\\\/p>\\n\\n<p>I should mention at this stage that it should be mentioned that your <code>app\\\/views\\\/albums\\\/new.html.erb<\\\/code> should now look like this:<\\\/p>\\n\\n<pre><code>&lt;h2&gt;New Album&lt;\\\/h2&gt;\\n&lt;%= render \\\"form\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>OMG, more new stuff! It's ok: <code>render \\\"form\\\"<\\\/code> will render the <em>app\\\/views\\\/albums\\\/_form.html.erb<\\\/em> partial. This is where the above <code>form_for<\\\/code> tomfoolery should live now. Why? Let me continue explaining.<\\\/p>\\n\\n<p>In your <code>AlbumsController<\\\/code>'s <code>new<\\\/code> action, you'd have something like this:<\\\/p>\\n\\n<pre><code>def new\\n  @album = Album.new\\nend\\n<\\\/code><\\\/pre>\\n\\n<p><code>form_for<\\\/code> is smart enough to go: \\\"hey, that's a new <code>Album<\\\/code> resource, he probably wants to go to the <code>create<\\\/code> action for this form because he's being a good lad and following the Rails conventions\\\", so that's precisely what it'll do.<\\\/p>\\n\\n<p>Except:<\\\/p>\\n\\n<p>This will raise an exception that there's no <code>albums_path<\\\/code> method defined. What the?<\\\/p>\\n\\n<p>In Ruby on Rails 2, RESTful routing became a <em>Big Thing<\\\/em>. It's best if you read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\">routing guide<\\\/a>, since if I explained it I would only be repeating a lot of it. Basically: RESTful routing is a convention for the URL routes of your application that determines that when we do a POST (it's a form, remember?) to <em>\\\/albums<\\\/em>, this will go to the <code>create<\\\/code> action. <\\\/p>\\n\\n<p>But how does Rails know to do this?<\\\/p>\\n\\n<p>Because in your <em>config\\\/routes.rb<\\\/em> file you've put this line:<\\\/p>\\n\\n<pre><code>resources :albums\\n<\\\/code><\\\/pre>\\n\\n<p>This defines routes to \\\"The Seven\\\" default actions of your controller (index, show, new, create, edit, update and destroy). Seriously, read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\">routing guide<\\\/a> to know all about this beauty.<\\\/p>\\n\\n<p>So back to our little <code>form_for<\\\/code>. It knows to go to <code>\\\/albums<\\\/code> for a new object, which is cool and all. So what's up with the <code>f<\\\/code> block argument? Well, this is a form builder object which allows us to build form elements for the specific <code>Album<\\\/code> object from our <code>new<\\\/code> (and soon, <code>edit<\\\/code>) actions. When we call:<\\\/p>\\n\\n<pre><code>&lt;%= f.text_field :title %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>We are doing the Rails 1 equivalent of:<\\\/p>\\n\\n<pre><code>&lt;%= text_field :album, :title %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>It's just a little bit of syntatic sugar that Rails gives you in order to make your views more DRY.<\\\/p>\\n\\n<p>I also added labels to your form because users need to know what the fields are that they're filling in. The beautiful part here is that the user won't see <code>:title<\\\/code>, but will see <code>Title<\\\/code> instead. For <code>:release_date<\\\/code>, they'll see \\\"Release Date\\\". Beautiful.<\\\/p>\\n\\n<p>At the end of the form, I use <code>f.submit<\\\/code>. This will generate a submit button that says either \\\"Create Album\\\" if <code>@album<\\\/code> is a new object, or \\\"Update Album\\\" if it's a pre-existing object. But where do the pre-existing objects get edited?<\\\/p>\\n\\n<p>In the <code>edit<\\\/code> action!<\\\/p>\\n\\n<pre><code>def edit\\n  @album = Album.find(params[:id]\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>In your <em>app\\\/views\\\/albums\\\/edit.html.erb<\\\/em> file you'd have much the same you have in its <em>new.html.erb<\\\/em> sibling:<\\\/p>\\n\\n<pre><code>&lt;h2&gt;Editing Album&lt;\\\/h2&gt;\\n&lt;%= render \\\"form\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>You can use precisely the <strong>same<\\\/strong> line in both of these to render the same partial, but it will perform differently if the object is new or if it is pre-existing (commonly referred to as persisted).<\\\/p>\\n\\n<p>In the case of the <code>edit<\\\/code> action rendering this partial, it will generate a route to <code>\\\/albums\\\/1<\\\/code> for the form and do a Rails-specialty <code>PUT<\\\/code> request to this resource. Another thing the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\">routing guide<\\\/a> will explain very well, I hope.<\\\/p>\\n\\n<p>I'm sorry for the length of this answer but there's no real short answer for this question, it's quite a large change but trust me when I say it <em>really<\\\/em> is for the better.<\\\/p>\\n\\n<p>Rails 3 rocks.<\\\/p>\\n\\n<p>(1) Less so with the people who aren't.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"5","accepted":"yes"},"3930322":{"id":"3930322","date":"2010-10","score":"0","body":"\"<p>In the <code>create<\\\/code> action, conditionally redirect to either the public \\\/ private page depending on the user's status:<\\\/p>\\n\\n<pre><code>def create\\n  # create code goes here\\n  if current_user?\\n    redirect_to neighborhoods_path\\n  else\\n    redirect_to root_path\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Or is there something that I am not understanding from your question?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><custom-action>","commentcount":"1","accepted":"yes"},"3930395":{"id":"3930395","date":"2010-10","score":"6","body":"\"<p>Don't use GMail for what it wasn't built for. It wasn't designed as a mass-email system, although Google definitely has the firepower to do this.<\\\/p>\\n\\n<p>Instead, perhaps use something like <a href=\\\"http:\\\/\\\/sendgrid.com\\\">SendGrid<\\\/a> to send your emails. SendGrid is <em>designed<\\\/em> for this and is just as easy (actually, probably <strong>easier<\\\/strong>) to set up with than GMail.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><email><smtp><gmail>","commentcount":"3","accepted":"yes"},"3930413":{"id":"3930413","date":"2010-10","score":"1","body":"\"<p>As soon as the file is uploaded to the server, move them on. Let the server itself handle the moving the file to \\\"storage 1\\\" using something like Delayed Job and then notify the user (using a system such as email) that the file is now available to be downloaded.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><apache><process><cloud><parallel-processing>","commentcount":"1","accepted":""},"3932664":{"id":"3932664","date":"2010-10","score":"1","body":"\"<p>Isn't this already the default in Rails?<\\\/p>\\n\\n<p>That's called an asset timestamp and should reflect the latest time that the asset was modified.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><random><uri>","commentcount":"1","accepted":""},"4001603":{"id":"4001603","date":"2010-10","score":"0","body":"\"<p>I cover this in <a href=\\\"http:\\\/\\\/manning.com\\\/katz\\\" rel=\\\"nofollow\\\">Rails 3 in Action<\\\/a>'s Chapter 8. I don't cover uploading to S3 or resizing images however.<\\\/p>\\n\\n<p>Recommending you buy it based solely on it fixing this one problem may sound a little biased, but I can just about guarantee you that it'll answer other questions you have down the line. It has a Behaviour Driven Development approach as one of the main themes, introducing you to Rails features during the development of an application. This shows you not only how you can <em>build<\\\/em> an application, but also make it <em>maintainable<\\\/em>.<\\\/p>\\n\\n<p>As for the resizing of images after they've been uploaded, Paperclip's got <a href=\\\"http:\\\/\\\/rdoc.info\\\/github\\\/thoughtbot\\\/paperclip\\\/master\\\/Paperclip\\\/ClassMethods%3ahas_attached_file\\\" rel=\\\"nofollow\\\">pretty good documentation on that<\\\/a>. I'd recommend having a read and then asking another question on SO if you don't understand any of the options \\\/ methods.<\\\/p>\\n\\n<p>And as for S3 uploading, you can do this:<\\\/p>\\n\\n<pre><code>has_attached_file :photo, :styles =&gt; { ... }, :storage =&gt; :s3\\n<\\\/code><\\\/pre>\\n\\n<p>You'd need to configure <code>Paperclip::Storage::S3<\\\/code> with your S3 details to set it up, and again Paperclip's got some <a href=\\\"http:\\\/\\\/rdoc.info\\\/github\\\/thoughtbot\\\/paperclip\\\/master\\\/Paperclip\\\/Storage\\\/S3\\\" rel=\\\"nofollow\\\">pretty awesome documentation<\\\/a> for this.<\\\/p>\\n\\n<p>Good luck!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><paperclip>","commentcount":"0","accepted":""},"4007226":{"id":"4007226","date":"2010-10","score":"4","body":"\"<p>Personally I would check using <code>if current_user?<\\\/code> rather than <code>devise_controller?<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"4011012":{"id":"4011012","date":"2010-10","score":"2","body":"\"<p>I think if you simply create the objects in a file in <em>features\\\/support<\\\/em> they will be persisted:<\\\/p>\\n\\n<pre><code>ImportantThing.create(:name =&gt; \\\"USEFUL THING\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>This is because before every Scenario Cucumber will start a database transaction and then rollback to its prior status, which should contain the objects you've loaded.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rspec><cucumber>","commentcount":"0","accepted":"yes"},"4011016":{"id":"4011016","date":"2010-10","score":"0","body":"\"<p>Are you sure you typed this correctly? It looks like you've typed \\\"localhost:3000\\\/[space]hello.html\\\" rather than \\\"localhost:3000\\\/hello.html\\\". Please double check.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routing><static-pages>","commentcount":"0","accepted":""},"4057075":{"id":"4057075","date":"2010-10","score":"4","body":"\"<pre><code>user = User.create(:user_age =&gt; 35)\\n<\\\/code><\\\/pre>\\n\\n<p>This will initialize a new object, set the <code>user_age<\\\/code> attribute to 35, save it to the database and return the <code>User<\\\/code> object which represents that record in the database.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"1","accepted":"yes"},"4057103":{"id":"4057103","date":"2010-10","score":"70","body":"\"<p>I think you're trying to trick us.<\\\/p>\\n\\n<p>The input date to your question is the <em>25th of October, 2010<\\\/em>, whilst the output is the <em><strong>29th<\\\/strong> of October, 2010<\\\/em>. Well played!<\\\/p>\\n\\n<p>Continuing on this nit-picking thread: your times are also completely different and you're missing the seconds from the output time. <\\\/p>\\n\\n<p>Now for the true answer.<\\\/p>\\n\\n<p>A little factoid first though: the ISO 8601 output in Ruby is similar to the \\\"Combined date and time\\\" output from <a href=\\\"http:\\\/\\\/en.wikipedia.org\\\/wiki\\\/ISO_8601\\\">ISO 8601's Wikipedia page<\\\/a>.<\\\/p>\\n\\n<p>You've got a string and so you'll need to convert it into a <code>Time<\\\/code> object which you can do with <code>to_time<\\\/code>. Then it's simply a matter of calling <code>iso8601<\\\/code> on that object to get the ISO 8601 version:<\\\/p>\\n\\n<pre><code>\\\"2010-10-25 23:48:46 UTC\\\".to_time.iso8601\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>to_time<\\\/code> method is courtesy of Rails, whilst the <code>iso8601<\\\/code> is courtest of Ruby's standard library.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><timestamp>","commentcount":"3","accepted":"yes"},"4062902":{"id":"4062902","date":"2010-10","score":"1","body":"\"<p>That'd be this:<\\\/p>\\n\\n<pre><code>render :text =&gt; \\\"hello\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>You can only call render or redirect once for a single request, just FYI.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"4075065":{"id":"4075065","date":"2010-11","score":"0","body":"\"<p>It's simply <code>_<\\\/code><\\\/p>\\n\\n<p>Nothing more, nothing less. Works in all irb consoles save for Heroku's.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4084492":{"id":"4084492","date":"2010-11","score":"0","body":"\"<p>Just a thought, but the <code>cucumber<\\\/code> testing gem has a <code>Cucumber::Ast::Table<\\\/code> class you could use to process this file.<\\\/p>\\n\\n<pre><code>Cucumber::Ast::Table.new(File.read(file))\\n<\\\/code><\\\/pre>\\n\\n<p>Then I think it's the <code>rows<\\\/code> method you can use to read it out.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><string><csv>","commentcount":"0","accepted":""},"4120631":{"id":"4120631","date":"2010-11","score":"9","body":"\"<p>I would change how you scope the finds. Rails 3 is beautiful for allowing you to do this because just about everything is scope'able.<\\\/p>\\n\\n<p>Firstly in your controller I would find the parent resource using something like this:<\\\/p>\\n\\n<pre><code>before_filter :find_company\\n\\n# your actions go here\\n\\nprivate\\n\\n  def find_company\\n    @company = Company.find(params[:company_id]) if params[:company_id]\\n  end\\n<\\\/code><\\\/pre>\\n\\n<p>This should be fairly straight forward: Find a <code>Company<\\\/code> record that has an ID that matches the one passed in from the nested route. If it's not nested, then there's not going to be a <code>params[:company_id]<\\\/code> so therefore there wouldn't be a <code>@company<\\\/code> variable set.<\\\/p>\\n\\n<p>Next, you want to scope the project find, depending on whether or not a <code>@company<\\\/code> is set. This is easy too. Right under the first <code>before_filter<\\\/code>, put this one:<\\\/p>\\n\\n<pre><code>before_filter :scope_projects\\n<\\\/code><\\\/pre>\\n\\n<p>Then define the method for it underneath the <code>find_company<\\\/code> method like this:<\\\/p>\\n\\n<pre><code>def scope_projects\\n  @projects = @company ? @company.projects : Project\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Now you're probably thinking <em>\\\"WOAH\\\"<\\\/em>. I know. Me too.<\\\/p>\\n\\n<p>Now wherever you would reference either the <code>projects<\\\/code> association or the <code>Project<\\\/code> class, use <code>@projects<\\\/code> instead. By the power of this <code>scope_projects<\\\/code> method, your app will know whether or not you mean \\\"all projects, ever\\\" or \\\"all projects, ever, that are in the specified company\\\".<\\\/p>\\n\\n<p>Now when you get to the views, you could do something like this:<\\\/p>\\n\\n<pre><code>&lt;h1&gt;&lt;% if @company %&gt;&lt;%= @company.name %&gt;'s&lt;% end %&gt; Projects&lt;\\\/h1&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>You could even move it into a helper:<\\\/p>\\n\\n<pre><code>def optional_company\\n  if @company\\n    @company.name + \\\"'s\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>And turn that ugly hunk-o-logic into this:<\\\/p>\\n\\n<pre><code>&lt;h1&gt;&lt;%= optional_company %&gt; Projects&lt;\\\/h1&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Modify as required.<\\\/p>\\n\\n<p>Hope this has been helpful.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routing>","commentcount":"1","accepted":"yes"},"4190535":{"id":"4190535","date":"2010-11","score":"1","body":"\"<p>No really, name your model something else. <\\\/p>\\n\\n<p><code>Thread<\\\/code> is a reserved constant in Ruby and overriding that constant is only going to make you run into trouble. I compromised for <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/rboard\\\" rel=\\\"nofollow\\\">my application<\\\/a> and called it <code>Topic<\\\/code> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"4200903":{"id":"4200903","date":"2010-11","score":"0","body":"\"<p>Don't access it through passenger, launch it using <code>ruby script\\\/server<\\\/code> and check out the error it throws there. Generally those errors are way more descriptive than Passenger because Passenger is probably running your application using the <code>production<\\\/code> environment.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"4202290":{"id":"4202290","date":"2010-11","score":"2","body":"\"<p>You're probably doing this:<\\\/p>\\n\\n<pre><code>require 'active_support'\\n<\\\/code><\\\/pre>\\n\\n<p>Which requires the very, very basics of Active Support.<\\\/p>\\n\\n<p>What you want is this:<\\\/p>\\n\\n<pre><code>require 'active_support\\\/core_ext\\\/string'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activesupport><ramaze>","commentcount":"1","accepted":"yes"},"4202586":{"id":"4202586","date":"2010-11","score":"1","body":"\"<p>Put this line:<\\\/p>\\n\\n<pre><code>ActionMailer::Base.default_url_options[:host] = \\\"0.0.0.0:3000\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>in <em>config\\\/environments\\\/development.rb<\\\/em>, and also in <em>config\\\/environments\\\/production.rb<\\\/em>, but modify it in the latter to be the appropriate URL.<\\\/p>\\n\\n<p>By putting it in an initializer you're setting it up for all environments, which is incorrect.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><actionmailer>","commentcount":"0","accepted":"yes"},"4202597":{"id":"4202597","date":"2010-11","score":"5","body":"\"<p>In Rails 3 you can call the <code>_validators<\\\/code> method on an object to get the list of validators that will run:<\\\/p>\\n\\n<pre><code>t = Ticket.new\\nt._validators\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><validation><activerecord>","commentcount":"1","accepted":""},"4212517":{"id":"4212517","date":"2010-11","score":"3","body":"\"<p>Use the <code>concat<\\\/code> helper:<\\\/p>\\n\\n<pre><code>concat(content_tag(:span, :class =&gt; \\\"a\\\") { user.designation })\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4217593":{"id":"4217593","date":"2010-11","score":"3","body":"\"<p>In Rails 3, <code>collection<\\\/code> is now a block:<\\\/p>\\n\\n<pre><code>resources :products do\\n  collection do\\n    get :search\\n    post :search\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This will allow you to access the <code>ProductsController#search<\\\/code> action using either a <code>GET<\\\/code> or <code>POST<\\\/code> request.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"4218044":{"id":"4218044","date":"2010-11","score":"1","body":"\"<p>Run a cron job every minute that runs a rake task that checks the database for any un-run tasks in the past.<\\\/p>\\n\\n<p>This way if your system goes down (hint: it will) when you bring it back\\nup the cronjob will pick up the slack left behind.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><queue><scheduled-tasks>","commentcount":"0","accepted":""},"4222939":{"id":"4222939","date":"2010-11","score":"1","body":"\"<p>Don't use Searchlogic for what you can use Rails for:<\\\/p>\\n\\n<pre><code> User.all(:conditions =&gt; [\\\"username IS NOT NULL\\\"])\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rubygems>","commentcount":"1","accepted":""},"4229056":{"id":"4229056","date":"2010-11","score":"0","body":"\"<p>When you specify a version number using <code>&gt;=<\\\/code> for a\\ngem, Rubygems will always try to get the latest and greatest for that gem, regardless if the dependency is already satisfied. This is not a bug, but rather expected behavior. To fix this, the gem author should specify that the gem depends on any version of Rails 2 by doing this:<\\\/p>\\n\\n<pre><code>s.add_dependency 'rails', '~&gt; 2'\\n<\\\/code><\\\/pre>\\n\\n<p>In summary, this is the gem author's fault, not Rubygems.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><rubygems>","commentcount":"1","accepted":"yes"},"4236373":{"id":"4236373","date":"2010-11","score":"2","body":"\"<p>I wrote <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/paranoia\\\" rel=\\\"nofollow\\\">a plugin for this exact purpose<\\\/a>, called paranoia. I \\\"borrowed\\\" the idea from <a href=\\\"https:\\\/\\\/github.com\\\/technoweenie\\\/acts_as_paranoid\\\" rel=\\\"nofollow\\\">acts_as_paranoid<\\\/a> and basically re-wrote AAP using much less code.<\\\/p>\\n\\n<p>When you call <code>destroy<\\\/code> on a record, it doesn't actually delete it. Instead, it will set a <code>deleted_at<\\\/code> column in your database to the current time. <\\\/p>\\n\\n<p>The README on the GitHub page should be helpful for installation &amp; usage. If it isn't, then let me know and I'll see if I can fix that for you.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><activerecord>","commentcount":"0","accepted":""},"4236380":{"id":"4236380","date":"2010-11","score":"27","body":"\"<pre><code>rails g rspec:controller ControllerName\\n<\\\/code><\\\/pre>\\n\\n<p>When it asks you to override the existing controller, type <code>n<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rspec>","commentcount":"2","accepted":"yes"},"4236745":{"id":"4236745","date":"2010-11","score":"2","body":"\"<p>This is not working because you are calling the method on a <code>Post<\\\/code> object but you have defined the method in the <code>PostsController<\\\/code> class. This method must be defined in the Post model file (app\\\/models\\\/post.rb) for it to work as you want.<\\\/p>\\n\\n<p>Generally, methods that update an object should go in that object's respective class.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><methods>","commentcount":"4","accepted":""},"4241042":{"id":"4241042","date":"2010-11","score":"2","body":"\"<p>I'm currently writing a book called <a href=\\\"http:\\\/\\\/manning.com\\\/katz\\\" rel=\\\"nofollow\\\">Rails 3 in Action<\\\/a> that sounds like it would \\\"answer\\\" your question.<\\\/p>\\n\\n<p>Whilst the first chapter <em>does<\\\/em> cover scaffolding (just for a \\\"quick win\\\"), the rest of the book goes through and teaches you how to develop an application using the exact same process that people in the real world do. <\\\/p>\\n\\n<p>You'll learn Rails, Cucumber and RSpec, along with the other gems that we pick up along the way of developing the application.<\\\/p>\\n\\n<p>Give it a shot and let me know what you think.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4242429":{"id":"4242429","date":"2010-11","score":"1","body":"\"<p>Use the <code>group_by<\\\/code> method:<\\\/p>\\n\\n<pre><code> &lt;% @country.states.each_with_index do |state, i| %&gt;\\n   State &lt;strong&gt;&lt;%= i + 1 %&gt;&lt;\\\/strong&gt;\\n\\n   &lt;% state.shops.group_by(&amp;:type) do |type, shops| %&gt;\\n     &lt;h3&gt;&lt;%= type %&gt;&lt;\\\/h3&gt;\\n     &lt;% shops.each do |shop| %&gt;\\n       =====showing attributes of each shop=====\\n     &lt;% end %&gt;\\n   &lt;% end %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"3","accepted":""},"4252475":{"id":"4252475","date":"2010-11","score":"1","body":"\"<p>Your error states:<\\\/p>\\n\\n<pre><code> Could not find 'gcal4ruby (= 0.0.5, runtime)' in any of the gem sources Try running 'bundle install'.\\n<\\\/code><\\\/pre>\\n\\n<p>It's looking for <code>0.0.5<\\\/code> of gcal4ruby, which you don't have installed, rather you're saying yourself that the <code>gem list -d<\\\/code> shows:<\\\/p>\\n\\n<pre><code> gcal4ruby (0.5.5) \\n<\\\/code><\\\/pre>\\n\\n<p>Which is <em>not<\\\/em> the correct version. I would recommend attempting to discover what's trying to require this older version of <code>gcal4ruby<\\\/code>. I think it's in your <code>Gemfile<\\\/code>, but I have been known to be wrong occasionally.<\\\/p>\\n\\n<p>If this answer doesn't solve your question, then please attach the errors you're getting and your <code>Gemfile<\\\/code> to your question.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rubygems><installation>","commentcount":"0","accepted":"yes"},"4252621":{"id":"4252621","date":"2010-11","score":"3","body":"\"<p>\\\"Edge\\\" is the latest from <a href=\\\"http:\\\/\\\/github.com\\\/rails\\\/rails\\\" rel=\\\"nofollow\\\">http:\\\/\\\/github.com\\\/rails\\\/rails<\\\/a>, with 3.0.3 being considered the latest stable release as of this writing.<\\\/p>\\n\\n<p>Edge should not be used for production applications, as it has been known to contain breaking changes. The stable releases on the other hand, contain less (i.e. not 100% bug free, but Good Enough(tm))<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4252625":{"id":"4252625","date":"2010-11","score":"195","body":"\"<p>It's not a bug in ARel, it's a bug in your logic.<\\\/p>\\n\\n<p>What you want here is:<\\\/p>\\n\\n<pre><code>Foo.includes(:bar).where(Bar.arel_table[:id].not_eq(nil))\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><arel><rails-activerecord>","commentcount":"8","accepted":""},"4253442":{"id":"4253442","date":"2010-11","score":"0","body":"\"<p>You're expecting it to show a link even if the field is empty? That is not at all possible. You should always ensure that the field has content.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"4254274":{"id":"4254274","date":"2010-11","score":"3","body":"\"<p>You're defining <code>self.include<\\\/code> (4th line down), when the correct method is <code>self.included<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><railtie>","commentcount":"1","accepted":"yes"},"4261381":{"id":"4261381","date":"2010-11","score":"1","body":"\"<p>Use the <code>concat<\\\/code> helper:<\\\/p>\\n\\n<pre><code>def show_profile_stars(profile)\\n  content_tag :span, :class =&gt; 'stars' do\\n    profile.stars.times do\\n      concat(image_tag(\\\"stars.gif\\\", :size =&gt; \\\"30x30\\\", :class =&gt; \\\"gold\\\"))\\n    end\\n\\n    nil\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>You also need to return <code>nil<\\\/code> at the end of the <code>content_tag<\\\/code> so that it doesn't output <code>stars<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><iteration><helpers>","commentcount":"0","accepted":""},"4261408":{"id":"4261408","date":"2010-11","score":"36","body":"\"<p>If you want to capture specific errors, use <a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActiveSupport\\\/Rescuable\\\/ClassMethods.html\\\"><code>rescue_from<\\\/code><\\\/a> in <code>ApplicationController<\\\/code>.<\\\/p>\\n\\n<p>Otherwise if you just want to edit the default error pages, edit the <em>500.html<\\\/em> and <em>400.html<\\\/em> files in <em>{Rails.root}\\\/public<\\\/em><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"4261493":{"id":"4261493","date":"2010-11","score":"3","body":"\"<p>You can use <code>scope<\\\/code> for this, it's much neater:<\\\/p>\\n\\n<pre><code> scope :path =&gt; \\\":username\\\" do\\n   resources :links do\\n     put 'star', :on =&gt; :member\\n   end\\n end\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routing>","commentcount":"3","accepted":"yes"},"4271590":{"id":"4271590","date":"2010-11","score":"11","body":"\"<p>Use the <code>step<\\\/code> method for this: <\\\/p>\\n\\n<pre><code>10.step(40,10)\\n<\\\/code><\\\/pre>\\n\\n<p>The first argument is the number you want to count up to, with the second argument being the \\\"steps\\\" that you take to get there.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><arrays>","commentcount":"4","accepted":"yes"},"4271722":{"id":"4271722","date":"2010-11","score":"12","body":"\"<p>Where is the current_account method being used? What purpose does it serve?<\\\/p>\\n\\n<p>Generally, you don't test private methods but rather test the methods that call the private one.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec>","commentcount":"7","accepted":""},"4274041":{"id":"4274041","date":"2010-11","score":"6","body":"\"<p>Guido <em>wrote<\\\/em> the language. If anyone would be good at it, I'd damn well hope it's him.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<python>","commentcount":"2","accepted":""},"4282875":{"id":"4282875","date":"2010-11","score":"3","body":"\"<p>You don't save the parameter parsed as RedCloth like that, nor would I recommend it. Parsing it into RedCloth will result in the original value being lost unless you stored the output in an alternate field, which is what I <em>would<\\\/em> recommend.<\\\/p>\\n\\n<p>You can use a <code>before_save<\\\/code> in your model to parse that value and store it:<\\\/p>\\n\\n<pre><code>before_save :parse_text\\n\\n# your model methods go here\\n\\nprivate\\n\\n  def parse_text\\n    self.parsed_text = RedCloth.new(text).to_html\\n  end\\n<\\\/code><\\\/pre>\\n\\n<p>When you want to render the <code>parsed_text<\\\/code> value in your view you'll have to tell Rails that it's safe by doing this:<\\\/p>\\n\\n<pre><code>@object.parsed_text.html_safe\\n<\\\/code><\\\/pre>\\n\\n<p>However, the code contained here does not account for people mixing Markdown and HTML, so be <em>very<\\\/em> careful how you use it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><redcloth>","commentcount":"3","accepted":"yes"},"4285228":{"id":"4285228","date":"2010-11","score":"1","body":"\"<p>This works for me, and would only fail if I had something like this:<\\\/p>\\n\\n<pre><code>Order.scoped.build_shipping_info\\n<\\\/code><\\\/pre>\\n\\n<p>Is this the <em>exact<\\\/em> code you're using?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"4288958":{"id":"4288958","date":"2010-11","score":"4","body":"\"<p>Long version:<\\\/p>\\n\\n<pre><code>string.split(\\\"\\\").in_groups_of(4).map { |s| s.join(\\\"\\\") }.join(\\\" \\\")\\n<\\\/code><\\\/pre>\\n\\n<p>Is this supposed to be a phone number of some sort? Rails has a <a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActionView\\\/Helpers\\\/NumberHelper.html#method-i-number_to_phone\\\" rel=\\\"nofollow\\\"><code>number_to_phone<\\\/code> helper that you could use<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><string><formatting>","commentcount":"4","accepted":""},"4290982":{"id":"4290982","date":"2010-11","score":"0","body":"\"<p>If the entire purpose of this is to display it on the Edit page, why not put it there (<code>app\\\/views\\\/the_controller\\\/edit.html.erb<\\\/code>)? That way it'd be shown on all requests to that page and you're not putting view \\\/ presentation code into the controller where it doesn't belong.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"4293640":{"id":"4293640","date":"2010-11","score":"2","body":"\"<p>One way would be to do this:<\\\/p>\\n\\n<pre><code>match 'about_us', :to =&gt; \\\"home#about_us\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>If you have multiple actions you want to perform in this way, use this:<\\\/p>\\n\\n<pre><code>match ':action', :controller =&gt; \\\"home\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routes>","commentcount":"1","accepted":""},"4293772":{"id":"4293772","date":"2010-11","score":"0","body":"\"<p>Personally, I would not have any \\\"normal\\\" validations on the <code>first_name<\\\/code> and <code>last_name<\\\/code> fields. Instead, I would leave it in the capable hands of a custom validator:<\\\/p>\\n\\n<pre><code>validate :name_is_valid\\n\\ndef name_is_valid\\n  if first_name.blank? || last_name.blank?\\n    errors.add(:name, \\\"You must specify both your first and last name\\\")\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"4296010":{"id":"4296010","date":"2010-11","score":"3","body":"\"<p>To do this, I would put this at the top of my routes:<\\\/p>\\n\\n<pre><code>match ':user_id\\\/:thread_id\\\/:id', :to =&gt; \\\"comments#show\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>I've changed <code>comment_id<\\\/code> in this example to <code>id<\\\/code> because it's \\\"The Rails Way\\\" that the last id parameter is simply called <code>id<\\\/code>. It also results in shorter code.<\\\/p>\\n\\n<p>If you wish to have a routing helper for it use the <code>:as<\\\/code> option:<\\\/p>\\n\\n<pre><code>match ':user_id\\\/:thread_id\\\/:id', :to =&gt; \\\"comments#show\\\", :as =&gt; \\\"comment\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can use <code>comment_path<\\\/code>\\\/<code>comment_url<\\\/code>to access the route, but you must pass in three arguments to it, each of them being an object or an id of an object.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"4299724":{"id":"4299724","date":"2010-11","score":"0","body":"\"<p>This method would return <code>nil<\\\/code> if either:<\\\/p>\\n\\n<ul>\\n<li>There was no user object (unlikely, since <code>find_by_email<\\\/code> works in the console)<\\\/li>\\n<li>If <code>has_password?<\\\/code> returns <code>false<\\\/code>, which is likely.<\\\/li>\\n<\\\/ul>\\n\\n<p>Check your <code>has_password?<\\\/code> method is doing the right thing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"4300527":{"id":"4300527","date":"2010-11","score":"0","body":"\"<p>If the application is private then this should be of no concern, but I'm guessing it's for a public \\\/ open-source application.<\\\/p>\\n\\n<p>If that is the case, then add a basic example of that file as <em>config\\\/initializers\\\/mail.rb.example<\\\/em> and add the real thing to your <em>.gitignore<\\\/em> file so that it's never committed. After that, add instructions to the <em>README<\\\/em> that people will need to copy over the <em>mail.rb.example<\\\/em> file to <em>mail.rb<\\\/em> in order for the application to work as intended.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><security><encryption><ruby-on-rails-3>","commentcount":"2","accepted":""},"4307383":{"id":"4307383","date":"2010-11","score":"2","body":"\"<p>It worked in 2.3 because there was an <code>ActionController::Verification<\\\/code> module back there. It's not working in 3.0 because this module doesn't exist. Rather than relying on Rails to have a module that you can hook into, define your own like this:<\\\/p>\\n\\n<pre><code>require 'active_support\\\/concern'\\nmodule Your\\n  module Mod\\n    extend ActiveSupport::Concern\\n    module ClassMethods\\n      def verify_identity(options = {})\\n        # code goes here\\n      end\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>and use:<\\\/p>\\n\\n<p>ActionController::Base.send(:include, Your::Mod)<\\\/p>\\n\\n<p>To make its functions available. <code>ActiveSupport::Concern<\\\/code> supports you having a <code>ClassMethods<\\\/code> and <code>InstanceMethods<\\\/code> module inside your module and it takes care of loading the methods in these modules into the correct areas of whatever the module is included into.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-plugins>","commentcount":"0","accepted":"yes"},"4312168":{"id":"4312168","date":"2010-11","score":"0","body":"\"<p>Try this:<\\\/p>\\n\\n<pre><code>videoToAdd.Title = doc.SelectSingleNode(@\\\"\\\/\\\/xmlns:video\\\/xmlns:title\\\").InnerXml;\\n<\\\/code><\\\/pre>\\n\\n<p>Your XML document has an XML namespace and to find the elements you must prefix them with <code>xmlns:<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<c#><xml><xpath>","commentcount":"1","accepted":""},"4312201":{"id":"4312201","date":"2010-11","score":"2","body":"\"<p>Try this out for size:<\\\/p>\\n\\n<pre><code>projects = Project.find(:all, :joins =&gt; \\\"tags\\\", :conditions =&gt; [conditions + \\\"AND (projects.name LIKE ? OR description LIKE ? OR tags.name LIKE ?\\\", [\\\"%#{params[:query]}%\\\" * 3]].flatten)\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>:joins<\\\/code> option tells Active Record to perform an SQL join onto the <code>tags<\\\/code> table, which will allow you to perform queries on the tags column. Also take note in this example how I've added the <code>projects.<\\\/code> prefix to your original <code>name<\\\/code> column. This is so your database doesn't get confused what <code>name<\\\/code> column you want; the one from the  <code>projects<\\\/code> or the <code>tags<\\\/code> table.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<mysql><ruby-on-rails><binding>","commentcount":"2","accepted":""},"4318681":{"id":"4318681","date":"2010-11","score":"3","body":"\"<p>I think you'll find that the <code>p<\\\/code> method outputs to the console as well, but the reason why it's \\\"rendered as HTML\\\" is because the <code>p<\\\/code> method returns the value passed in, where <code>puts<\\\/code> does not.<\\\/p>\\n\\n<p><code>p<\\\/code> is the shorter version of <code>puts something.inspect<\\\/code> and is very useful for debugging and that's about it. For outputting strings to the console, it's more preferrable to use <code>puts<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":""},"4318865":{"id":"4318865","date":"2010-11","score":"0","body":"\"<p>The route would take two arguments: a <code>project_id<\\\/code> and a <code>study_id<\\\/code>. This is not matching the route because you have not passed through these two parameters to the <code>url_for<\\\/code> in your <code>form_tag<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><ruby-on-rails><forms><partials>","commentcount":"1","accepted":"yes"},"4329476":{"id":"4329476","date":"2010-12","score":"2","body":"\"<p>Indeed as Matt's comment points out, this functionality is provided by Jose Valim's <a href=\\\"https:\\\/\\\/github.com\\\/josevalim\\\/inherited_resources\\\" rel=\\\"nofollow\\\">inherited_resources<\\\/a> gem. This gem provides people with a way of drastically cutting down on the repetition in CRUD controllers by abstracting all the standard crap away into a gem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4329497":{"id":"4329497","date":"2010-12","score":"1","body":"\"<p>As people have outlined before me, generally you don't test routes. However, if you have something complex like a subdomain constraints in your routes file that you want to make <em>damn<\\\/em> sure are going to go to the right spot, then I'd recommend (with a touch of bias) reading my article on <a href=\\\"http:\\\/\\\/ruby.ryanbigg.com\\\/post\\\/1679869207\\\/testing-rails-requests\\\" rel=\\\"nofollow\\\">Testing Rails Requests<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec>","commentcount":"2","accepted":"yes"},"4329753":{"id":"4329753","date":"2010-12","score":"1","body":"\"<p>Yes you can.<\\\/p>\\n\\n<p>The reason you're getting the <code>undefined method photo_path<\\\/code> is because you're not using the nested resource that you have defined.<\\\/p>\\n\\n<p>In your <code>form_for<\\\/code> you should be doing this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [@company, :photo] do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Where <code>@company<\\\/code> is a pre-existing company object.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><resources><path><nested>","commentcount":"3","accepted":""},"4331685":{"id":"4331685","date":"2010-12","score":"1","body":"\"<p>Nothing is wrong with it, <code>Pathname<\\\/code> just wasn't the right place for it. <\\\/p>\\n\\n<p>Use <code>Dir.chdir<\\\/code> instead.<\\\/p>\\n\\n<p>Source: <a href=\\\"http:\\\/\\\/corelib.rubyonrails.org\\\/classes\\\/Pathname.html#M000633\\\" rel=\\\"nofollow\\\">http:\\\/\\\/corelib.rubyonrails.org\\\/classes\\\/Pathname.html#M000633<\\\/a> (click \\\"[Source]\\\")<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><obsolete>","commentcount":"1","accepted":""},"4340599":{"id":"4340599","date":"2010-12","score":"5","body":"\"<p>Your <code>link_to<\\\/code> should be this:<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"Delete\\\", @article, :method =&gt; :delete, :confirm =&gt; \\\"are u sure?\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This will generate the correct URL for your article and go to the <code>destroy<\\\/code> action.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"4350511":{"id":"4350511","date":"2010-12","score":"11","body":"\"<p>Instead of doing it that way, build the association (assumes you have <code>has_many :pages<\\\/code> in the <code>User<\\\/code> model):<\\\/p>\\n\\n<pre><code>@page = current_user.pages.build(params[:page])\\n<\\\/code><\\\/pre>\\n\\n<p>This will automatically set <code>user_id<\\\/code> for the <code>Page<\\\/code> object.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"4350535":{"id":"4350535","date":"2010-12","score":"3","body":"\"<p>Rather than defining a method to do this, <code>delegate<\\\/code>! In <code>app\\\/models\\\/c.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>delegate :title, :to =&gt; :b\\n<\\\/code><\\\/pre>\\n\\n<p>And then in <code>app\\\/models\\\/b.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>delegate :title, :to =&gt; :a\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><associations><belongs-to>","commentcount":"0","accepted":""},"4351457":{"id":"4351457","date":"2010-12","score":"3","body":"\"<p>The second install CD for your Macbook Pro should have the Developer Tools on it, and using that you can install Xcode.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<compiler><download><apple>","commentcount":"0","accepted":"yes"},"4355822":{"id":"4355822","date":"2010-12","score":"0","body":"\"<p>You are over complicating it:<\\\/p>\\n\\n<pre><code>&lt;%= form_remote_tag :action =&gt; :create %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Also, be sure that this is what you truly need. You say you want to create multiple objects in the form, which is why I think you may be after <code>form_remote_for<\\\/code> coupled with <code>fields_for<\\\/code> rather than <code>form_remote_tag<\\\/code>, but from your question I don't fully understand.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rest>","commentcount":"1","accepted":"yes"},"4356082":{"id":"4356082","date":"2010-12","score":"19","body":"\"<p>You must put the :protocol option inside the path helper:<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"Buy now!\\\", line_items_url(:thing_id =&gt; @thing, :protocol =&gt; \\\"https\\\"), :method =&gt; :post %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"3","accepted":"yes"},"4356954":{"id":"4356954","date":"2010-12","score":"1","body":"\"<p>Ignoring the fact that this is <a href=\\\"http:\\\/\\\/www.regular-expressions.info\\\/email.html\\\" rel=\\\"nofollow\\\">not quite a valid email regular expression...<\\\/a><\\\/p>\\n\\n<p>You're missing the angle brackets around your regex:<\\\/p>\\n\\n<pre><code>\\\/&lt;([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\\\.[a-zA-Z0-9._-]+)&gt;\\\/\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><regex><string>","commentcount":"1","accepted":""},"4385048":{"id":"4385048","date":"2010-12","score":"0","body":"\"<p>The list action is very old in Rails and is not use any more. Whatever is recommending that you use it is outdated and should not be trusted.<\\\/p>\\n\\n<p>Instead, read the Getting Started guide for how to properly use Rails now: <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html<\\\/a> <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4385092":{"id":"4385092","date":"2010-12","score":"2","body":"\"<p>Use a cron job which then runs a rake task. Define the task like this in _lib\\\/tasks\\\/your_thing.rake_:<\\\/p>\\n\\n<pre><code>task :your_thing =&gt; :environment do\\n  # do stuff\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4413431":{"id":"4413431","date":"2010-12","score":"1","body":"\"<p>Looks like you're following a very old tutorial.<\\\/p>\\n\\n<p>I recommend stopping that and reading <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\" rel=\\\"nofollow\\\">the official guides<\\\/a> (which have a great \\\"<a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">Getting Started<\\\/a>\\\" guide), or <a href=\\\"http:\\\/\\\/manning.com\\\/katz\\\" rel=\\\"nofollow\\\">a book<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rubygems>","commentcount":"2","accepted":"yes"},"4414799":{"id":"4414799","date":"2010-12","score":"6","body":"\"<p>On any <code>User<\\\/code> object:<\\\/p>\\n\\n<pre><code>user.valid_password?(\\\"password\\\") #=&gt; true\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"4423978":{"id":"4423978","date":"2010-12","score":"1","body":"\"<p>You are attempting to use an undefined constant. You must define the exception class:<\\\/p>\\n\\n<pre><code>class MissingInfo &lt; StandardError; end\\n<\\\/code><\\\/pre>\\n\\n<p>Secondly, I wouldn't rely on the logs to capture the errors. Instead, I would use a service such as <a href=\\\"http:\\\/\\\/hoptoadapp.com\\\" rel=\\\"nofollow\\\">Hoptoad<\\\/a> for that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"3","accepted":""},"4424307":{"id":"4424307","date":"2010-12","score":"5","body":"\"<p>You want to set <code>a<\\\/code> to a new <code>Array<\\\/code> object inside the <code>each<\\\/code>. At the moment, you're pushing the <em>same<\\\/em> <code>a<\\\/code> object to the array, which is why it's returning the same value three times. Even better would be to not use <code>a<\\\/code> at all and instead convert the code into something like this:<\\\/p>\\n\\n<pre><code>x.each do |line|\\n  name, age = line.split(\\\/\\\\s\\\/)\\n  array.push([name, age])\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>You could make it smaller than that even by moving the <code>line.split<\\\/code> to be within the <code>push<\\\/code> method, but I think that reduces readability and doesn't explain what information you're getting out of <code>split<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"2","accepted":"yes"},"4424332":{"id":"4424332","date":"2010-12","score":"2","body":"\"<p>Generally you would use the nested version of <code>fields_for<\\\/code> if you were using this line in your <code>User<\\\/code> model:<\\\/p>\\n\\n<pre><code>has_many :orders\\naccepts_nested_attributes_for :orders\\n<\\\/code><\\\/pre>\\n\\n<p>By defining this, you will be able to create a new user and new order record*<em>s<\\\/em>* at the same time by using this in the <code>create<\\\/code> action of your <code>UsersController<\\\/code>:<\\\/p>\\n\\n<pre><code>@user = User.new(params[:user])\\n<\\\/code><\\\/pre>\\n\\n<p>Because you're using <code>accepts_nested_attributes_for<\\\/code> now, the order attributes will be passed through as <code>params[:user][:orders_attributes]<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4424419":{"id":"4424419","date":"2010-12","score":"0","body":"\"<p>See the program here: <a href=\\\"http:\\\/\\\/www.cplusplus.com\\\/forum\\\/general\\\/1125\\\/\\\" rel=\\\"nofollow\\\">http:\\\/\\\/www.cplusplus.com\\\/forum\\\/general\\\/1125\\\/<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<c++><algorithm><primes>","commentcount":"0","accepted":""},"4424822":{"id":"4424822","date":"2010-12","score":"2","body":"\"<p>Nope, that's the way.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><pluralize>","commentcount":"0","accepted":""},"4425405":{"id":"4425405","date":"2010-12","score":"2","body":"\"<p>This is at least expecting there to be a <code>year<\\\/code>, <code>month<\\\/code> and <code>slug<\\\/code> parameter to be set. Your routes require that much, at least.<\\\/p>\\n\\n<p>In your test:<\\\/p>\\n\\n<pre><code>test \\\"can get a post by slug\\\" do\\n  post = Post.create(:slug =&gt; \\\"best-post-ever\\\")\\n  get :show, :slug =&gt; post.slug, :year =&gt; Time.now.year, :month =&gt; Time.now.month\\n  assert_response :success\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>With these three parameters, the route will now be matched and your request will go through.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":"yes"},"4425412":{"id":"4425412","date":"2010-12","score":"36","body":"\"<p>I wrote <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/guides\\\/blob\\\/master\\\/gem-development.md\\\">a guide on writing a gem<\\\/a> using Bundler which you may find useful. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><rubygems>","commentcount":"3","accepted":""},"4426080":{"id":"4426080","date":"2010-12","score":"1","body":"\"<p>A URL that returns a status code of just about <a href=\\\"http:\\\/\\\/www.w3.org\\\/Protocols\\\/rfc2616\\\/rfc2616-sec10.html\\\" rel=\\\"nofollow\\\">anything in the 200 range<\\\/a>, with probably an exception of 203.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<apache><http><http-status-code-404>","commentcount":"1","accepted":""},"4427853":{"id":"4427853","date":"2010-12","score":"3","body":"\"<p>If you had your <code>belongs_to :user<\\\/code> in the Comment model configured like this:<\\\/p>\\n\\n<pre><code>belongs_to :user, :counter_cache =&gt; true\\n<\\\/code><\\\/pre>\\n\\n<p>And then you had a <code>comments_count<\\\/code> integer field defaulting to 0 in your <code>users<\\\/code> table, then you would be able to order by that rather than having to do a join.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<sql><ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":""},"4433438":{"id":"4433438","date":"2010-12","score":"2","body":"\"<pre><code>where :commentable_id =&gt; comments.map(&amp;:id), :user_id =&gt; \\\"&lt;&gt; #{current_user.id}\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>This will do it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><syntax>","commentcount":"2","accepted":""},"4433719":{"id":"4433719","date":"2010-12","score":"22","body":"\"<p>In your test environment <code>ActionMailer::Base.delivery_method<\\\/code> should be set to <code>:test<\\\/code>, which means that these emails will not be sent out. If this setting is set to something else such as <code>smtp<\\\/code> by way of a configuration in say <code>config\\\/environments.rb<\\\/code>, then emails <em>will<\\\/em> be sent out.<\\\/p>\\n\\n<p>If that setting's already there, then to use the <code>User<\\\/code> object (as in, to be actually able to log in) you'll need to call <code>confirm!<\\\/code> on it:<\\\/p>\\n\\n<pre><code>user = User.first\\nuser.confirm!\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><devise>","commentcount":"6","accepted":"yes"},"4434077":{"id":"4434077","date":"2010-12","score":"4","body":"\"<p>I see that you're looking to test the <code>reject_if<\\\/code> then the best way to do this is to test it directly:<\\\/p>\\n\\n<pre><code>anaf_for_languages = User.nested_attributes_options[:languages]\\nanaf_for_languages[:reject_if].call({ \\\"name\\\" =&gt; \\\"\\\" }).should be_true\\n<\\\/code><\\\/pre>\\n\\n<p>If it's <code>true<\\\/code>, then <code>name<\\\/code> is blank. I think this is a little more succinct than your code, but not as immediately obvious.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec>","commentcount":"2","accepted":"yes"},"4435212":{"id":"4435212","date":"2010-12","score":"2","body":"\"<p>Yeah, <code>with_options<\\\/code> still works in Rails 3. Try this out:<\\\/p>\\n\\n<pre><code>map.with_options :controller =&gt; 'foo', :via =&gt; :post do\\n  match 'one', :action =&gt; 'one' #automatically generates one_* helpers\\n  match 'two', :action =&gt; 'two' #automatically generates two_* helpers\\n\\n  foo.with_options :special_flag =&gt; 'true', :path =&gt; 'special_prefix', :via =&gt; :get do\\n    match '',        :action =&gt; 'for_blank'\\n    match  'another', :action =&gt; 'for_another', :as =&gt; \\\"four\\\" # as will change the helper methods names\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>:via<\\\/code> option replaces your ugly <code>conditions<\\\/code> hash with a much nicer syntax.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routing><routes><ruby-on-rails-3><rails-routing>","commentcount":"2","accepted":"yes"},"4437123":{"id":"4437123","date":"2010-12","score":"1","body":"\"<p>That's quite a long <code>form_for<\\\/code> you've got there. The short answer to your question: <code>@product<\\\/code> is useful for determining what action to go to for a resource that can have many objects, which is what this sounds like. <code>:product<\\\/code> on the other hand will always go to the same action, <code>update<\\\/code>. This is best used for singular resources. A great explanation of the resources can be found in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing Guide<\\\/a>. It's also explained in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">Getting Started<\\\/a> guide.<\\\/p>\\n\\n<p>Your second <code>form_for<\\\/code> could be shorted right down to this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for @product do |f| %&gt;\\n   ...\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>All is explained in the Routing and Getting Started guides.<\\\/p>\\n\\n<p>Also, I saw in your profile you're from Melbourne. There's the <a href=\\\"http:\\\/\\\/groups.google.com\\\/group\\\/rails-oceania\\\" rel=\\\"nofollow\\\">Ruby on Rails Oceania<\\\/a> Google group which lists the meetups around the country. There's one each month in Melbourne which you may want to attend to meet like minded people.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><forms><form-for><ruby-on-rails-3>","commentcount":"1","accepted":""},"4437211":{"id":"4437211","date":"2010-12","score":"1","body":"\"<p>Are you running an earlier version of Rails than 3.0.0? You'll want to install the <a href=\\\"http:\\\/\\\/github.com\\\/rails\\\/rails_xss\\\" rel=\\\"nofollow\\\">rails_xss<\\\/a> plugin which provides this functionality. In Rails 3, this comes standard. <\\\/p>\\n\\n<p>I would advise, if at all possible, to upgrade to Rails 3 as soon as you are able.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ckeditor>","commentcount":"1","accepted":"yes"},"4445037":{"id":"4445037","date":"2010-12","score":"6","body":"\"<p>You should:<\\\/p>\\n\\n<ul>\\n<li>Remove the <code>show<\\\/code> action from the controller<\\\/li>\\n<li>Switch the <code>redirect_to<\\\/code>s in <code>create<\\\/code> and <code>update<\\\/code> to go to the new action<\\\/li>\\n<li>Remove the <code>link_to<\\\/code>s from <code>index.html.erb<\\\/code> and <code>edit.html.erb<\\\/code><\\\/li>\\n<li>Remove the <code>app\\\/views\\\/entities\\\/show.html.erb<\\\/code><\\\/li>\\n<li>Stop the routes from being generated by changing the <code>resources :entities<\\\/code> line in your <em>config\\\/routes.rb<\\\/em> file to <code>resources :entities, :except =&gt; :show<\\\/code><\\\/li>\\n<\\\/ul>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"4446052":{"id":"4446052","date":"2010-12","score":"2","body":"\"<p>My initial thoughts: I think what would cause this is if Rails wasn't inside your bundle. But you seem like a smart man and so I tried duplicating your example and found that I got the same thing.<\\\/p>\\n\\n<p>Puzzled, I made sure that I was getting output:<\\\/p>\\n\\n<pre><code>Scenario: title\\n  Given I run \\\"rails new test_app\\\"\\n  Then the output should contain:\\n    \\\"\\\"\\\"\\n      app\\\/mailers\\n    \\\"\\\"\\\"\\n  And I cd to \\\"test_app\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>It turns out by simply <em>observing<\\\/em> that the output contains <em>app\\\/mailers<\\\/em> that this process works. It's very quantum and most probably a bug in Aruba or Rails. I'm not sure which. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><cucumber><bdd><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4446483":{"id":"4446483","date":"2010-12","score":"2","body":"\"<p>Are you using RSpec 2? The correct constant is now <code>RSpec::Matchers<\\\/code> for that. Defined in <code>rspec\\\/matchers<\\\/code>.<\\\/p>\\n\\n<p>If you're not, then perhaps you haven't required <code>spec\\\/matchers<\\\/code> which defines the <code>Spec::Matchers<\\\/code> constant for RSpec &lt; 2.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><cucumber><rspec2><matcher>","commentcount":"0","accepted":"yes"},"4446735":{"id":"4446735","date":"2010-12","score":"11","body":"\"<p>Do you have <code>rails.js<\\\/code> specified in a <code>javascript_include_tag<\\\/code>? This is required for the unobtrusive <code>DELETE<\\\/code> method to work. If you're using jQuery then there's a <a href=\\\"http:\\\/\\\/github.com\\\/rails\\\/jquery-ujs\\\">solution for that too.<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><delete><ruby-on-rails-3><link-to>","commentcount":"7","accepted":"yes"},"4446860":{"id":"4446860","date":"2010-12","score":"7","body":"\"<p>Why not define this as an instance variable like the <code>@title<\\\/code>? That way you could just for the presence of it in the view and also default its value.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"4447359":{"id":"4447359","date":"2010-12","score":"0","body":"\"<p>You are over complicating routing. Please read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing Guide<\\\/a> for enlightenment.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"4447442":{"id":"4447442","date":"2010-12","score":"0","body":"\"<p>This isn't a problem that Ruby should solve. <\\\/p>\\n\\n<p>If you need to do it every 1-2 days, create a cron job that runs a backup script that calls a tool such as <code>mysqldump<\\\/code> directly.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><backup>","commentcount":"0","accepted":""},"4456177":{"id":"4456177","date":"2010-12","score":"1","body":"\"<p>Set these in <em>config\\\/environments\\\/production.rb<\\\/em> and <em>config\\\/environments\\\/development.rb<\\\/em> and then if you're running a server, restart it for the changes to these files to take effect.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"4","accepted":"yes"},"4456314":{"id":"4456314","date":"2010-12","score":"3","body":"\"<p>You would be getting a <code>NoMethodError<\\\/code> because the <code>Fixnum<\\\/code> class doesn't have a <code>this_is_a_method<\\\/code> defined for instances of that class.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":""},"4456653":{"id":"4456653","date":"2010-12","score":"0","body":"\"<p>It looks to me like your <code>paths.rb<\\\/code> is configured correctly, but it's your <code>create<\\\/code> action that's redirecting back to <code>expenses_path<\\\/code> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<rspec><cucumber><bdd><ruby-on-rails-3><webrat>","commentcount":"3","accepted":""},"4458643":{"id":"4458643","date":"2010-12","score":"0","body":"\"<p>Personally I've never seen this issue before but it may be solvable by the Heroku support crew. Get in contact with them on irc.freenode.net #heroku. Good luck!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><heroku>","commentcount":"1","accepted":""},"4467225":{"id":"4467225","date":"2010-12","score":"1","body":"\"<p>The <code>create<\\\/code> method is responsible for creating that simple blog post, whilst the <code>update<\\\/code> method is responsible for updating it.<\\\/p>\\n\\n<pre><code>def create\\n  @blog = Blog.new(params[:blog])\\n  if @blog.save\\n    flash[:notice] = \\\"Saved!\\\"\\n    redirect_to @blog\\n  end\\nend\\n\\ndef update\\n  @blog = Blog.find(params[:id])\\n  if @blog.update_attributes(params[:blog])\\n    flash[:notice] = \\\"Saved!\\\"\\n    redirect_to @blog\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Not much you could extract out of that besides what to do when the save succeeds \\\/ fails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"3","accepted":""},"4467372":{"id":"4467372","date":"2010-12","score":"7","body":"\"<p>You're going to run into a lot of pain if you don't want to touch the routes file, mainly because that's what Rails is going to reference when it tries to figure out where your route goes. I don't know of another way to do that, so here's the <em>config\\\/routes.rb<\\\/em> code when you're convinced it's a good idea:<\\\/p>\\n\\n<pre><code>scope :path =&gt; \\\"old\\\" do\\n  resources :recipes\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Now when you route to <code>recipes_path<\\\/code> it will go to <code>\\\/old\\\/recipes<\\\/code>, although this may not be what you're after. If that's the case, then you may want to chuck the <code>as<\\\/code> option on the end of this <code>scope<\\\/code>:<\\\/p>\\n\\n<pre><code>scope :path =&gt; \\\"old\\\", :as =&gt; \\\"old\\\" do\\n  resources :recipes\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>In which case, this route would now be <code>old_recipes_path<\\\/code>, still routing to <code>\\\/old\\\/recipes<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"3","accepted":"yes"},"4467768":{"id":"4467768","date":"2010-12","score":"7","body":"\"<p>The true problem here is that you're including this module into the class, rather than extended the class with it.<\\\/p>\\n\\n<p>The differences is an include will make the methods available on the instance, where as the extend will make them where you're trying to use them: on the class.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><include><number-with-delimiter>","commentcount":"7","accepted":"yes"},"4468277":{"id":"4468277","date":"2010-12","score":"2","body":"\"<p><code>ActionMailer::Base<\\\/code> has a <code>method_missing<\\\/code> defined on it:<\\\/p>\\n\\n<pre><code>def method_missing(method, *args) #:nodoc:\\n  return super unless respond_to?(method)\\n  new(method, *args).message\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This will call your instance method with the same arguments and then call the <code>message<\\\/code> method, returning the object of that mailer call. To deliver it, call <code>deliver!<\\\/code> on the end of your method call: <\\\/p>\\n\\n<pre><code>CoreMail.consulting_reply(email).deliver!\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"4477157":{"id":"4477157","date":"2010-12","score":"4","body":"\"<p>This reads nicer in my opinion:<\\\/p>\\n\\n<pre><code>&lt;% if @article %&gt;\\n  &lt;%= link_to 'link', @article %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>\\\"If there is an article, link to it using the following display text and object.\\\"<\\\/p>\\n\\n<p>A friend also points out that this could be shortened to this:<\\\/p>\\n\\n<pre><code>&lt;%= link_to(\\\"link\\\", @article) if @article %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>But personally, I prefer the first one.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"4477614":{"id":"4477614","date":"2010-12","score":"0","body":"\"<p>Use the <code>mail<\\\/code> gem instead. It's pretty <a href=\\\"http:\\\/\\\/github.com\\\/mikel\\\/mail\\\" rel=\\\"nofollow\\\">well documented<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><tmail>","commentcount":"0","accepted":""},"4477684":{"id":"4477684","date":"2010-12","score":"37","body":"\"<p>Three words: <strong><em>Here be dragons<\\\/em><\\\/strong>.<\\\/p>\\n\\n<p>By going off the path of doing things \\\"The Rails Way\\\", then you will encounter foes of unimaginable power and cunning. At first, you will think \\\"OH HO HO I am doing it <em>my<\\\/em> way, aren't I awesome?\\\". Then you'll grow tired. <em>Exhausted<\\\/em> even. Forlornly, during your struggles, you'll look at all the <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/by_star\\\">cool gem<\\\/a>s that are using Active Record and wonder why you chose to venture down a path so fraught with doom and gloom it would make Chuck Norris shit his pants.<\\\/p>\\n\\n<p>Please, do not stray from Active Record. It is only here to help you, not hinder you. If you wish to write your own queries then there is a <code>find_by_sql<\\\/code> method, or an even lower <code>Model.connection.execute<\\\/code> method.  However, these should only be used, much like nuclear weaponry, in times of exceptionally dire needs. <\\\/p>\\n\\n<p>If you don't want to use Active Record at all, then I would encourage you to look at either <a href=\\\"http:\\\/\\\/datamapper.org\\\">DataMapper<\\\/a> or <a href=\\\"http:\\\/\\\/mongoid.org\\\/\\\">Mongoid<\\\/a>. <\\\/p>\\n\\n<p>DataMapper provides much of the same functionality as Active Record and some have been known to prefer the syntax. As a bit of trivia: it was one of the first gems to be compatible with Rails 3.<\\\/p>\\n\\n<p>Mongoid on the other hand is for MongoDB databases, which some other people also fancy. <\\\/p>\\n\\n<p>I beg again: do not stray from the beaten path, lest you want a beating yourself.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rails-activerecord>","commentcount":"5","accepted":""},"4480389":{"id":"4480389","date":"2010-12","score":"7","body":"\"<p>Are you using Rails 3? If so it should be:<\\\/p>\\n\\n<pre><code>&lt;%= form_for @bird do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>and <\\\/p>\\n\\n<pre><code>&lt;%= f.fields_for :taxon do |builder| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Note the equals.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><nested-forms><fields-for>","commentcount":"3","accepted":"yes"},"4481141":{"id":"4481141","date":"2010-12","score":"3","body":"\"<p>See the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/layouts_and_rendering.html#using-nested-layouts\\\" rel=\\\"nofollow\\\">\\\"Nested Layouts\\\" section<\\\/a> of the \\\"Layouts and Rendering\\\" guide.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><layout>","commentcount":"0","accepted":""},"4482579":{"id":"4482579","date":"2010-12","score":"1","body":"\"<p>Your <code>post_at<\\\/code> value isn't a field, it's just displayed in the table. You want to do this:<\\\/p>\\n\\n<pre><code>&lt;tr&gt;\\n  &lt;td&gt;Post at&lt;\\\/td&gt;\\n  &lt;td&gt;&lt;%= f.datetime_select :post_at %&gt;&lt;\\\/td&gt;\\n&lt;\\\/tr&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>But in fact, there's more wrong with this code than that. For starters, Rails already has a field for this which will be set automatically called <code>created_at<\\\/code>. Next, your <code>save<\\\/code> action in your controller should be a <code>create<\\\/code> action to follow the Rails conventions.<\\\/p>\\n\\n<p>I really think you should read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\" rel=\\\"nofollow\\\">Getting Started<\\\/a> guide which covers these basic fundamentals and then <a href=\\\"http:\\\/\\\/manning.com\\\/katz\\\" rel=\\\"nofollow\\\">a book<\\\/a> <a href=\\\"http:\\\/\\\/pragprog.com\\\/titles\\\/rails3\\\/agile-web-development-with-rails\\\" rel=\\\"nofollow\\\">or two<\\\/a> about Rails in more depth. These really teach you a lot.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><parameters><save>","commentcount":"2","accepted":""},"4482594":{"id":"4482594","date":"2010-12","score":"13","body":"\"<p>Your test needs to be inside an <code>example<\\\/code> or <code>it<\\\/code> block (they're the same method):<\\\/p>\\n\\n<pre><code>it \\\"when posting a valid url\\\" do\\n  # url = mock('ShortenedUrl')\\n  url = Struct.new('ShortenedUrl')\\n  ShortenedUrl.should_receive(:new).with(:url =&gt; 'http:\\\/\\\/example.com').and_return(url)\\n  url.should_receive(:save!)\\n\\n  post :make_short, :url =&gt; 'http:\\\/\\\/example.com'\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>A <code>context<\\\/code> block is used for grouping similar examples.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><mongoid>","commentcount":"3","accepted":"yes"},"4482782":{"id":"4482782","date":"2010-12","score":"1","body":"\"<pre><code>&lt;? explode(\\\" \\\", \\\"a b c d e\\\") ?&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<php><arrays>","commentcount":"0","accepted":""},"4486874":{"id":"4486874","date":"2010-12","score":"3","body":"\"<p>Ruby on Rails is a web framework built for programmer productivity and happiness. It's built on top of the Ruby language which means you get access to all the cool libraries (\\\"gems\\\") other people have written such as file upload libraries and ones that interact with web services such as AWS. <\\\/p>\\n\\n<p>You use HTML and JavaScript with it just like you would in every other web framework out there. The difference? It's not built on top of a hack of a language such as PHP. Good Ruby code is elegant and very readable, and you will find this out in your usage of the framework.<\\\/p>\\n\\n<p>The Getting Started guide explains it very well: <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4494281":{"id":"4494281","date":"2010-12","score":"1","body":"\"<p>Put this on the end of your query:<\\\/p>\\n\\n<pre><code>.group(\\\"DATE(created_at)\\\")\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<sql><ruby-on-rails><activerecord>","commentcount":"1","accepted":"yes"},"4495790":{"id":"4495790","date":"2010-12","score":"8","body":"\"<p>If you're changing the version in your Gemfile, you should be running <code>bundle update<\\\/code> so that all gems are updated to their latest versions specified by the <code>Gemfile<\\\/code>. <code>rake rails:update<\\\/code> is used for updating things such as the Prototype assets to the latest version.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"4504352":{"id":"4504352","date":"2010-12","score":"41","body":"\"<p>That's why they made the <code>path<\\\/code> option on <code>match<\\\/code> which is also available on <code>resources<\\\/code>:<\\\/p>\\n\\n<pre><code>resources :stories, :path =&gt; \\\"books\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"4","accepted":"yes"},"4506034":{"id":"4506034","date":"2010-12","score":"37","body":"\"<p>You can't get them in PDF, but you can get them in HTML form by running these commands:<\\\/p>\\n\\n<pre><code>git clone git:\\\/\\\/github.com\\\/rails\\\/rails.git\\ncd rails\\ngit checkout origin\\\/3-2-stable -b 3-2-stable\\ncd railties\\\/guides\\nruby rails_guides.rb\\ncd output\\nopen index.html\\n<\\\/code><\\\/pre>\\n\\n<p>When these commands have finished you should be in the <code>railties\\\/guides\\\/output<\\\/code> folder which contains the HTML versions of the guides that were just generated with <code>ruby rails_guides.rb<\\\/code>, and if you're on a decent operating system then you'll see the homepage in your default browser.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"7","accepted":"yes"},"4506590":{"id":"4506590","date":"2010-12","score":"0","body":"\"<p>I think this could be better written like this:<\\\/p>\\n\\n<pre><code>class MyNumber\\n  def number\\n    @@number ||= rand(10)\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":""},"4507140":{"id":"4507140","date":"2010-12","score":"0","body":"\"<p>Rather than using <code>make_commentable<\\\/code>, use the Rails-provided <code>build_commentable<\\\/code> method.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><polymorphism>","commentcount":"3","accepted":"yes"},"4508765":{"id":"4508765","date":"2010-12","score":"15","body":"\"<p>Yes, this will give you precisely what you're after in the neatest fashion I know possible.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routes><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"4514554":{"id":"4514554","date":"2010-12","score":"12","body":"\"<p>You can use <code>scope<\\\/code> for this:<\\\/p>\\n\\n<pre><code>scope \\\":username\\\", :as =&gt; \\\"user\\\" do\\n  resources :things\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Combine this with <code>to_param<\\\/code> on the user model:<\\\/p>\\n\\n<pre><code>def to_param\\n  username\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>And you'll have routes such as <code>\\\/username\\\/things<\\\/code>. Be careful though, the username shouldn't contain any dots, forward slashes or standard URI characters. You may want to chuck a <code>parameterize<\\\/code> on the end of <code>username<\\\/code> to make sure.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routes><devise><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"4514566":{"id":"4514566","date":"2010-12","score":"1","body":"\"<p>Have a look in <code>config\\\/application.rb<\\\/code>, you may have a line that looks like this:<\\\/p>\\n\\n<pre><code>config.generators do |g|\\n  g.orm :datamapper\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Change that <code>:datamapper<\\\/code> symbol to <code>:active_record<\\\/code> or remove that line completely to switch back to ActiveRecord.<\\\/p>\\n\\n<p>If it's not there, you may have a file in <code>config\\\/initializers<\\\/code> which does this setup for you.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><ruby-on-rails-3><datamapper>","commentcount":"3","accepted":""},"4515546":{"id":"4515546","date":"2010-12","score":"2","body":"\"<p>Define the associations like this:<\\\/p>\\n\\n<pre><code>belongs_to :default_channel, :class_name =&gt; \\\"Channel\\\"\\nbelongs_to :selected_channel, :class_name =&gt; \\\"Channel\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>This will reference the <code>default_channel_id<\\\/code> field in your database to load the <code>default_channel<\\\/code> association when you request it and I bet with that information you can work out what happens when you call <code>selected_channel<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><associations><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4516163":{"id":"4516163","date":"2010-12","score":"1","body":"\"<p>Use this line in your Gemfile:<\\\/p>\\n\\n<pre><code>gem 'rails', :path =&gt; \\\"vendor\\\/rails\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><bundler>","commentcount":"4","accepted":""},"4522809":{"id":"4522809","date":"2010-12","score":"1","body":"\"<p>Add the ranges to an array and flatten it to get a series of numbers, then call <code>rand<\\\/code> to find a particular element of this array.<\\\/p>\\n\\n<pre><code>range_1 = 1..10\\nrange_2 = 2..30\\n\\nrange_array = [range_1.to_a, range_2.to_a].flatten\\nrange_array[rand(range_array.length)]\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"5","accepted":""},"4532269":{"id":"4532269","date":"2010-12","score":"5","body":"\"<p>There's the <a href=\\\"http:\\\/\\\/github.com\\\/josevalim\\\/inherited_resources\\\" rel=\\\"nofollow\\\">inherited_resources<\\\/a> gem you could use for this.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><controller><action>","commentcount":"1","accepted":""},"4532796":{"id":"4532796","date":"2010-12","score":"0","body":"\"<p>Looks like in the stacktrace the <code>google-geocoder<\\\/code> plugin is requiring an older version of RSpec.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><migration><rake>","commentcount":"0","accepted":""},"4533680":{"id":"4533680","date":"2010-12","score":"4","body":"\"<p>Heikki is right, but doesn't explain <em>why<\\\/em> it's this way. Rails adds every folder inside <code>app<\\\/code> to the autoload_path config setting. When an unknown constant is asked for, Rails will look up in this path to find the constant and if it can't find a filename -- such as the case of <code>gamestate.rb<\\\/code> vs. the proper <code>game_state.rb<\\\/code> -- then it won't be able to load the constant defined in this file.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><activerecord>","commentcount":"2","accepted":""},"4535968":{"id":"4535968","date":"2010-12","score":"0","body":"\"<p>You'll want to place this module in the <code>lib<\\\/code> directory and then add it to <code>config.autoload_paths<\\\/code> in your <code>config\\\/application.rb<\\\/code> file (a setting which, by default, is commented out). When you reference this module in your code, Rails will automatically know to require the file in the <code>lib<\\\/code> directory.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><apache><ubuntu><passenger>","commentcount":"0","accepted":""},"4545224":{"id":"4545224","date":"2010-12","score":"11","body":"\"<p>Create a custom validator:<\\\/p>\\n\\n<pre><code>validate :price_is_less_than_total\\n\\n# other model methods\\n\\nprivate\\n\\n  def price_is_less_than_total\\n    errors.add(:price, \\\"should be less than total\\\") if price &gt; total\\n  end\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><validation><ruby-on-rails-3>","commentcount":"4","accepted":"yes"},"4545246":{"id":"4545246","date":"2010-12","score":"0","body":"\"<p>I wrote a guide on installing this version of Ruby: <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\" rel=\\\"nofollow\\\">http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you<\\\/a>. It should get you up and running in no time.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rake><yaml><ruby-1.9.1>","commentcount":"1","accepted":"yes"},"4550332":{"id":"4550332","date":"2010-12","score":"1","body":"\"<p>A one-liner equal to Abdullah's answer  would be to <code>delegate<\\\/code>:<\\\/p>\\n\\n<pre><code>delegate :name, :to =&gt; :tag\\n<\\\/code><\\\/pre>\\n\\n<p>If you care about making things all on one line.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"4550710":{"id":"4550710","date":"2010-12","score":"0","body":"\"<p>An RSS feed is XML and so you'd use something like the <a href=\\\"http:\\\/\\\/www.php.net\\\/manual\\\/en\\\/function.xml-parse.php\\\" rel=\\\"nofollow\\\"><code>xml_parse_into_struct<\\\/code><\\\/a> to begin parsing this feed. The examples on this page should be good enough to get you going.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<php><regex>","commentcount":"0","accepted":""},"4554375":{"id":"4554375","date":"2010-12","score":"0","body":"\"<p>You could define a superclass which defines this method to simply set the headers:<\\\/p>\\n\\n<pre><code>class MailBase &lt; ActionMailer::Base\\n  def test_email\\n    # sendgrid headers go here\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then you make your classes inherit from this class:<\\\/p>\\n\\n<pre><code>class MailSub &lt; MailBase\\n  def test_email\\n    # email stuff goes here\\n    super\\n  end\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>super<\\\/code> method call here will call the <code>test_email<\\\/code> method in the superclass, thereby adding the Sendgrid headers.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4559245":{"id":"4559245","date":"2010-12","score":"30","body":"\"<p>In Ruby's standard library there is <code>SecureRandom<\\\/code> for this:<\\\/p>\\n\\n<pre><code>SecureRandom.hex(3)\\n<\\\/code><\\\/pre>\\n\\n<p>The length of the output is double of what the length input specified.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rubygems><ruby-on-rails-3>","commentcount":"3","accepted":""},"4559597":{"id":"4559597","date":"2010-12","score":"0","body":"\"<p>Your <code>get_skill<\\\/code> method should be creating a skill like this instead:<\\\/p>\\n\\n<pre><code>def get_skill\\n  user.skill || user.create_skill\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>form_for<\\\/code> for this because you've got skills nested inside of users in the routes should be this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [@user, @skill] do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><devise>","commentcount":"6","accepted":"yes"},"4559765":{"id":"4559765","date":"2010-12","score":"0","body":"\"<p>If you're running the server in production mode and you've made this change to the model, then the model will not be reloaded automatically and the new method would not be available. You must restart the server for it to take effect.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"4567076":{"id":"4567076","date":"2010-12","score":"1","body":"\"<p>If you're using Rails 3, you should be using <code>&lt;%= form_for ..<\\\/code> and <code>&lt;%= f.fields_for ...<\\\/code>, as the <code>=<\\\/code> on the tag indicates that it will output.<\\\/p>\\n\\n<p>Additionally, in your controller's action that renders this form you need to be building the object (<code>@poll_option.build_address<\\\/code> or similar) so that the <code>fields_for<\\\/code> has an object to render.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"4567130":{"id":"4567130","date":"2010-12","score":"3","body":"\"<p>Hey there, I'm one of the authors for this book so I think I'd be able to at least provide some insight to the question.<\\\/p>\\n\\n<p>I'm writing the book using Mac OS X and when I run this scenario with the <code>time<\\\/code> UNIX command:<\\\/p>\\n\\n<pre><code>time bundle exec cucumber features\\\/creating_projects.feature\\n<\\\/code><\\\/pre>\\n\\n<p>I get this output:<\\\/p>\\n\\n<pre><code>0m1.196s\\n\\nreal    0m10.741s\\nuser    0m9.195s\\n sys    0m1.519s\\n<\\\/code><\\\/pre>\\n\\n<p>The first time's output is from Cucumber and indicates the scenario took 1.196 seconds to run from top to toe. The <code>real<\\\/code> time here indicates how long the entire process took, which means everything including loading Rails and all the associated gems. Around about 10 and a half seconds.<\\\/p>\\n\\n<p>So this means that scenario should be running just as fast for you. It isn't, and I'm not sure why not and I am unable to test it because I don't have a Windows box to test on. <\\\/p>\\n\\n<p>The answer may lie in how you installed Ruby, although I am not 100% certain right now.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><cucumber>","commentcount":"2","accepted":""},"4573465":{"id":"4573465","date":"2011-01","score":"1","body":"\"<p>I created a gem just for this reason called <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/by_star\\\" rel=\\\"nofollow\\\">by_star<\\\/a>, You can find events for a given month using this syntax:<\\\/p>\\n\\n<pre><code>Event.by_month(2)\\n<\\\/code><\\\/pre>\\n\\n<p>That code would get you all the events for the 2nd month of the yeah. It also does month names and takes Date and Time objects.<\\\/p>\\n\\n<p>Should be perfect for your needs.<\\\/p>\\n\\n<p>A little additional tip: your model classes should be singularized. That's the convention in Rails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><activerecord>","commentcount":"4","accepted":"yes"},"4573864":{"id":"4573864","date":"2011-01","score":"1","body":"\"<p>To follow up on the Tin Man's answer:<\\\/p>\\n\\n<p>I wrote <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\" rel=\\\"nofollow\\\">a guide to installing Ruby and Rails on Ubuntu<\\\/a> which you may find useful for getting this all peachy again.<\\\/p>\\n\\n<p>Hope it helps!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><rubygems><gem>","commentcount":"0","accepted":""},"4582281":{"id":"4582281","date":"2011-01","score":"3","body":"\"<p>The easiest way to do this would be to access this through the hostname of your computer. For example, I would test it using <code>http:\\\/\\\/ryanbigg.local:3000\\\/<\\\/code>. To get the hostname, type <code>hostname<\\\/code> in your prompt.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"4582593":{"id":"4582593","date":"2011-01","score":"2","body":"\"<p>No, you must make a commit before you can push. What is being pushed is the commit (or commits).<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"0","accepted":""},"4591894":{"id":"4591894","date":"2011-01","score":"2","body":"\"<p>With the routes file you posted I get no such error. Perhaps it's a gem or a plugin that you're using that's giving you this? <\\\/p>\\n\\n<p>I did a Rails 3 upgrade recently and an old version of the <code>declarative_authorization<\\\/code> gem gave me this error.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"5","accepted":"yes"},"4591931":{"id":"4591931","date":"2011-01","score":"0","body":"\"<p>Use the <a href=\\\"https:\\\/\\\/github.com\\\/collectiveidea\\\/delayed_job\\\" rel=\\\"nofollow\\\">delayed_job<\\\/a> gem for this. It allows you to specify background tasks to be run.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"4600889":{"id":"4600889","date":"2011-01","score":"2","body":"\"<p>Rather than defining custom routes for this, just define the <code>to_param<\\\/code> method on the <code>User<\\\/code> class:<\\\/p>\\n\\n<pre><code>def to_param\\n  username.parameterize\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then for your routes, the <code>params[:id]<\\\/code> value will be the username's paramertized version. For instance, mine would be <code>ryan-bigg<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"5","accepted":""},"4611575":{"id":"4611575","date":"2011-01","score":"1","body":"\"<p>You could adapt <a href=\\\"https:\\\/\\\/github.com\\\/ddollar\\\/heroku-autoscale\\\" rel=\\\"nofollow\\\">this gem<\\\/a> to detect when there's a lot of jobs and then scale it up.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rubygems><ruby-on-rails-3><heroku>","commentcount":"2","accepted":""},"4611587":{"id":"4611587","date":"2011-01","score":"3","body":"\"<p>There's a number of these services. My favourites are <a href=\\\"http:\\\/\\\/getexceptional.com\\\" rel=\\\"nofollow\\\">Exceptional<\\\/a> and <a href=\\\"http:\\\/\\\/hoptoadapp.com\\\" rel=\\\"nofollow\\\">Hoptoad<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4622670":{"id":"4622670","date":"2011-01","score":"1","body":"\"<p>Personally I use Cucumber, RSpec and Factory Girl in my applications. As for a resource, I'm writing a book called <a href=\\\"http:\\\/\\\/manning.com\\\/katz\\\" rel=\\\"nofollow\\\">Rails 3 in Action<\\\/a> which goes through using these tools (and Rails itself, of course) to develop an application.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><unit-testing><testing><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"4625864":{"id":"4625864","date":"2011-01","score":"1","body":"\"<p>Define the routes such as this:<\\\/p>\\n\\n<pre><code>resources :meetings do\\n  member do\\n    get 'scores', :action =&gt; \\\"scores\\\"\\n    post 'scores', :action =&gt; \\\"post_scores\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>But it sounds to me like it would be much easier to create another controller to handle this, as scores to me feels like another resource entirely, even if they don't have their own model association.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rest><routing><ruby-on-rails-3><crud>","commentcount":"1","accepted":""},"4631453":{"id":"4631453","date":"2011-01","score":"1","body":"\"<p>Your <code>LegalDocument<\\\/code> model may be defined in a filename that is not correct. The file must be located in <em>any<\\\/em> subdirectory of <code>app<\\\/code> and be called <code>legal_document.rb<\\\/code>. The name is really important, as this is how Rails does autoloading.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><testing>","commentcount":"0","accepted":"yes"},"4631460":{"id":"4631460","date":"2011-01","score":"3","body":"\"<p>Rather than it being your own <code>config\\\/routes.rb<\\\/code> file, it could be one provided by a gem such as declarative_authorization or ckeditor. Check the gems you're using on the project if they contain a <code>config\\\/routes.rb<\\\/code> file.<\\\/p>\\n\\n<p>If none of them contain one, then please show us your <code>config\\\/routes.rb<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"4631705":{"id":"4631705","date":"2011-01","score":"1","body":"\"<p>This is because you're using the <code>=<\\\/code> output when you're using Rails 2. This is the new helper in Rails <em>3<\\\/em>. You want to use <code>-<\\\/code> for the <code>form_tag<\\\/code> in Rails 2.<\\\/p>\\n\\n<p>EDIT: OP pointed out in the comments that he was missing a <code>do<\\\/code> at the end of the <code>form_tag<\\\/code> as well.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><forms>","commentcount":"3","accepted":"yes"},"4631799":{"id":"4631799","date":"2011-01","score":"7","body":"\"<p>You can override the templates that Rails uses for its generators. In this instance, just place the file at <code>lib\\\/templates\\\/scaffold_controller\\\/controller.rb<\\\/code> and modify it how you wish. The next time you run <code>rails g scaffold [modelName]<\\\/code> it will pick up this new controller template and use it.<\\\/p>\\n\\n<p>This is covered in <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/generators.html#customizing-your-workflow-by-changing-generators-templates\\\">Section 6 of the Creating and Customizing Rails Generators<\\\/a> official guide.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"4631998":{"id":"4631998","date":"2011-01","score":"2","body":"\"<p>Git does not do this, nor does Ruby or Rails. There's some script you've ran that has done this. Think back, what did you do before you noticed this?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><sed><ruby-on-rails-3><github>","commentcount":"5","accepted":"yes"},"4632395":{"id":"4632395","date":"2011-01","score":"9","body":"\"<p>Wrap all your routes in a <a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActionDispatch\\\/Routing\\\/Mapper\\\/Scoping.html#method-i-constraints\\\"><code>constraints<\\\/code><\\\/a> block:<\\\/p>\\n\\n<pre><code>constraints :ip =&gt; \\\"your-ip-goes-here\\\" do\\n  # routes go here\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Your Rails app will deny all knowledge of routing if other people try to access this.<\\\/p>\\n\\n<p>This method is really handy if you want to constrain based on other things too, like the iPhone example the documentation shows.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"4641977":{"id":"4641977","date":"2011-01","score":"18","body":"\"<p>I would recommend using <code>fields_for<\\\/code> for this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for([@user, :reviews]) do |f| %&gt;\\n  &lt;% @reviews.each do |review| %&gt;\\n    &lt;%= fields_for review do |r| %&gt;\\n      &lt;%= render \\\"reviews\\\/form\\\", :r =&gt; r %&gt;\\n    &lt;% end %&gt;\\n  &lt;% end %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>To make this work, you will need to build as many review objects as you require in your controller:<\\\/p>\\n\\n<pre><code>def new\\n  # you could also have this in a before_filter...\\n  @user = User.find(params[:id])\\n  @reviews = Array.new(3) { @user.reviews.build }\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This would create new <em>instances<\\\/em> of review records for this user, which is different from new <em>records<\\\/em>. Instances are simply Ruby objects. Now because you've called <code>@user.reviews.build<\\\/code> three times, you'll see three reviews in your view.<\\\/p>\\n\\n<pre><code>def create\\n  @user = User.find(params[:id])\\n\\n  @reviews = Review.create(params[:reviews])\\n  # Some more logic for validating the parameters passed in\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This will create three new <code>Review<\\\/code> objects and link them to <code>@user<\\\/code>, assuming all three are valid.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><forms><ruby-on-rails-3>","commentcount":"3","accepted":"yes"},"4642078":{"id":"4642078","date":"2011-01","score":"1","body":"\"<p>The application is <a href=\\\"https:\\\/\\\/github.com\\\/potionfactory\\\/potionstore\\\/blob\\\/master\\\/config\\\/database.yml\\\" rel=\\\"nofollow\\\">configured to use PostgreSQ<\\\/a>L, as I already stated in the comment. You can change the adapter value here to <code>mysql<\\\/code> to change it to use MySQL. The README says it works, but it may not.<\\\/p>\\n\\n<p>I feel I need to elaborate further on what this application specifically <em>is<\\\/em>. It's a Ruby on Rails 2 application and if you've installed Rails 3 and you're trying to use it to boot the application then you're going to run into some headaches. <strong>3 is not backwards compatible with 2.<\\\/strong><\\\/p>\\n\\n<p>You've got three options.<\\\/p>\\n\\n<p>The first is to upgrade the application (which it sounds like you're not familiar with) to Rails 3 and get all the latest and greatest goodies, such as Bundler for example.<\\\/p>\\n\\n<p>The second is to ask the potionfactory guys \\\/ girls nicely if they wouldn't mind upgrading it to Rails 3 because \\\"it's a really great application and I want to use it\\\".<\\\/p>\\n\\n<p>The third is to leave it in it's old state and switch to using an older version of Rails (2.1 or \\\"higher\\\" the README states), anything in the 2.1.x - 2.3.x range should work, but for reasons that should be obvious, you should be using the latest 2.3.x release. This would be made much easier by using <a href=\\\"http:\\\/\\\/rvm.beginrescueend.com\\\" rel=\\\"nofollow\\\">RVM<\\\/a> and its gemsets functionality.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4642141":{"id":"4642141","date":"2011-01","score":"3","body":"\"<pre><code>current_user.projects.sum { |p| p.users.count - 1 }\\n<\\\/code><\\\/pre>\\n\\n<p>This will return the total number of users associated with projects that the user is associated with, minus'ing 1 per-project to remove the current user.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"4651690":{"id":"4651690","date":"2011-01","score":"1","body":"\"<p>Following on from David Sulc's answer:<\\\/p>\\n\\n<p>You're defining the routes as <code>get<\\\/code> requests, meaning to go to them you must perform a <code>GET \\\/admin\\\/login<\\\/code> request which is basically what happens when you type the URL into your address bar or follow a link that uses it.<\\\/p>\\n\\n<p>However when you try to use these URLs in a form, the form does a <code>POST<\\\/code> request and because you've defined all of these as <code>get<\\\/code>-only requests, Rails will not be able to find a compatible route.<\\\/p>\\n\\n<p>I definitely agree with David that you should look at an alternative system such as Devise.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routing><routes>","commentcount":"0","accepted":""},"4653818":{"id":"4653818","date":"2011-01","score":"1","body":"\"<p>Yes, just use hand-written tags. It is the easiest way I know of.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4653873":{"id":"4653873","date":"2011-01","score":"0","body":"\"<p>Solution: Don't use simply <code>Profile.create<\\\/code>, use the association builders instead. Protect the <code>user_id<\\\/code> attribute and use <code>user.profiles.create!(params[:profile])<\\\/code> to have it automatically set the <code>user_id<\\\/code> field for profiles to whatever the <code>user<\\\/code> object is.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><activeresource><attr-accessible>","commentcount":"3","accepted":""},"4653974":{"id":"4653974","date":"2011-01","score":"0","body":"\"<p>Try this, you should only need one <code>:include =&gt;<\\\/code>:<\\\/p>\\n\\n<pre><code>classA.to_json(:include =&gt; {:classB =&gt; [:classC, { :classE =&gt; :classD }] })\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><json>","commentcount":"1","accepted":""},"4665148":{"id":"4665148","date":"2011-01","score":"0","body":"\"<p>It looks to be a problem with how you set up Ruby. I'd recommend using RVM for this on all *NIX systems and I've written a guide on <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\" rel=\\\"nofollow\\\">exactly how to do that<\\\/a>. I hope it helps you.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><linux>","commentcount":"0","accepted":""},"4668209":{"id":"4668209","date":"2011-01","score":"0","body":"\"<p>actionwebservice is a very, very, very old gem. If you're looking to create an API then I would take a look at <a href=\\\"http:\\\/\\\/github.com\\\/intridea\\\/grape\\\" rel=\\\"nofollow\\\">Grape<\\\/a> and see if that fits your need.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4668261":{"id":"4668261","date":"2011-01","score":"0","body":"\"<p>Did you add this gem to your <code>Gemfile<\\\/code>? This file is responsible for loading all gems that your application depends on, and if this gem isn't specified in it then it will not be loaded.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"4688987":{"id":"4688987","date":"2011-01","score":"4","body":"\"<p><code>|<\\\/code> is not a command and as such does not have any arguments. However the commands used around the pipe can take commands. Consult the manpages for those commands.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<shell><unix>","commentcount":"0","accepted":""},"4697152":{"id":"4697152","date":"2011-01","score":"1","body":"\"<p>Not so much of a rule as a guideline.<\\\/p>\\n\\n<p>There are some cases which you can break it and I think this is just fine. For the <code>show<\\\/code> action of an account you can show the allocations and then you'll have the <code>\\\/offering\\\/1\\\/account\\\/2\\\/<\\\/code> URL.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"4698440":{"id":"4698440","date":"2011-01","score":"-1","body":"\"<p>Assuming:<\\\/p>\\n\\n<pre><code>some_var = [1,2,3,4]\\n<\\\/code><\\\/pre>\\n\\n<p><code>delete_if<\\\/code> sounds like a viable candidate for this:<\\\/p>\\n\\n<pre><code>some_var.delete_if { |a| a == 1 }\\np some_var\\n=&gt; [2,3,4]\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><loops><each>","commentcount":"2","accepted":""},"4698875":{"id":"4698875","date":"2011-01","score":"1","body":"\"<p>You cannot pass in other fields like that as Rails will assume they are options for the find. Instead, you will need to make your method call longer:<\\\/p>\\n\\n<pre><code>user.read_entries.find_or_create_by_entry_id_and_read(entry.id, false)\\n<\\\/code><\\\/pre>\\n\\n<p>Or alternatively use a shorter, custom syntax for that.<\\\/p>\\n\\n<p>For your final example, my thoughts are that Rails will take the second argument and use that as options. Other than that, I am not sure.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"1","accepted":""},"4718430":{"id":"4718430","date":"2011-01","score":"2","body":"\"<p>Assuming you meant to use <code>@designs<\\\/code> rather than <code>@patterns<\\\/code>:<\\\/p>\\n\\n<pre><code>@category = Category.find(params[:id])\\n@sub_categories = @category.sub_categories\\npagination_options = { :page =&gt; params[:page],\\n                       :order =&gt; 'name',\\n                       :per_page =&gt; @per_page\\n                     }\\nunless @sub_categories.empty?\\n  @designs = []\\n  @sub_categories.each do |sub_cat|\\n    @designs &lt;&lt; sub_cat.designs.paginate(pagination_options)\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I think what was missing were the brackets for the arguments to the <code>paginate<\\\/code> call.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"4","accepted":""},"4721419":{"id":"4721419","date":"2011-01","score":"0","body":"\"<p>Did you forget to specify this gem in your <code>Gemfile<\\\/code>?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><apache><osx><ruby-on-rails-3><paperclip>","commentcount":"1","accepted":""},"4742629":{"id":"4742629","date":"2011-01","score":"2","body":"\"<p>To receive the requests into your application, set up a route in <code>config\\\/routes.rb<\\\/code> for it. See the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing Guide<\\\/a> for more information. Route it to a controller and then to access the information sent through use the <code>params<\\\/code> method.<\\\/p>\\n\\n<p>As for sending back data... an alternative to andrea's answer, you could use the <a href=\\\"https:\\\/\\\/github.com\\\/dbalatero\\\/typhoeus\\\" rel=\\\"nofollow\\\">Typhoeus<\\\/a> gem to make the HTTP requests. It's got a really neat syntax to it and I've been using it recently with no worries.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><httpwebrequest>","commentcount":"1","accepted":""},"4744265":{"id":"4744265","date":"2011-01","score":"0","body":"\"<p>Why is this file in <code>config<\\\/code>? It belongs in the <code>lib<\\\/code> directory because it is code of your own that doesn't \\\"fit\\\" into the <code>app<\\\/code> directory. When you require \\\"spec_helper\\\" in your test this loads the Rails environment which should load all the models and therefore all the files that the models require (this is the important part) and so you'll be able to test it that way. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><rspec2>","commentcount":"2","accepted":""},"4744302":{"id":"4744302","date":"2011-01","score":"3","body":"\"<p>It's looking for an <code>authenticate<\\\/code> method in your <code>UsersController<\\\/code> and not finding one. It is defined in <a href=\\\"http:\\\/\\\/railstutorial.org\\\/chapters\\\/updating-showing-and-deleting-users#sec%3aprotecting_pages\\\" rel=\\\"nofollow\\\">Listing 10.11 in Section 10.2<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rspec><factory-girl>","commentcount":"1","accepted":""},"4746239":{"id":"4746239","date":"2011-01","score":"3","body":"\"<p>Alright first off: <strong>never <code>10000000000.times { puts \\\"ever\\\" }<\\\/code> use <code>eval<\\\/code><\\\/strong> when you don't know what you're doing. It is the nuclear bomb of the Ruby world in the way that it can wreak devestation across a wide area, causing similar symptoms to radiation poisoning throughout your code. Just don't.<\\\/p>\\n\\n<p>With that in mind:<\\\/p>\\n\\n<pre><code>class Event &lt; Registration\\n  serialize :fields, Hash\\n  Activities = ['Annonce', 'Butiksaktivitet', 'Salgskonkurrence']\\n\\n  CUSTOM_FIELDS = [:activity, \\n                 :description,\\n                 :date_from,\\n                 :date_to,\\n                 :budget_pieces,\\n                 :budget_amount,\\n                 :actual_pieces,\\n                 :actual_amount] #1\\n  attr_accessor *CUSTOM_FIELDS #2\\n\\n  before_save :gather_fields\\n  after_find :distribute_fields\\n\\n  private\\n\\n  def gather_fields\\n    CUSTOM_FIELDS.each do |cf|\\n      self.fields[cf] = send(cf) #3\\n    end\\n  end\\n\\n  def distribute_fields\\n    unless self.fields.empty?\\n      self.fields.each do |k,v|\\n        send(\\\"#{k.to_s}=\\\", v) #3\\n      end\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Now for some notes:<\\\/p>\\n\\n<ol>\\n<li>By putting each custom field on its own line, you increase code readability. I don't want to have to scroll to the end of the line to read all the possible custom fields or to add my own.<\\\/li>\\n<li>The <code>*CUSTOM_FIELDS<\\\/code> passed into <code>attr_accessor<\\\/code> uses what is referred to as the \\\"splat operator\\\". By calling it in this way, the elements of the <code>CUSTOM_FIELDS<\\\/code> array will be passed as individual arguments to the <code>attr_accessor<\\\/code> method rather than as one (the array itself)<\\\/li>\\n<li>Finally, we use the <code>send<\\\/code> method to call methods we don't know the names of during programming, rather than the evil <code>eval<\\\/code>.<\\\/li>\\n<\\\/ol>\\n\\n<p>Other than that, I cannot find anything else to refactor about this code.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"1","accepted":"yes"},"4753354":{"id":"4753354","date":"2011-01","score":"1","body":"\"<p>Your <code>name<\\\/code> and <code>email<\\\/code> fields should be database fields, not <code>attr_accessor<\\\/code>s. Perhaps you meant to make this <code>attr_accessible<\\\/code> instead?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"4754166":{"id":"4754166","date":"2011-01","score":"1","body":"\"<p>The tags on StackOverflow should give you a pretty good indication of the community support behind it. Currently the counts of questions are:<\\\/p>\\n\\n<ul>\\n<li><strong>Git<\\\/strong>: 5,789<\\\/li>\\n<li><strong>Mercurial<\\\/strong>: 1,845<\\\/li>\\n<li><strong>Bazaar<\\\/strong>: 188<\\\/li>\\n<\\\/ul>\\n\\n<p>Demonstrating this in pie chart form: <\\\/p>\\n\\n<p><img src=\\\"http:\\\/\\\/i.stack.imgur.com\\\/wjEOP.png\\\" alt=\\\"I LIKE PIE (charts)\\\"><\\\/p>\\n\\n<p>Now, this shouldn't be taken as a sign that Git is more difficult to use than Mercurial, but rather that there's a lot of people asking questions about it and receiving help about. This means that if your newbies got stuck they'd have a greater chance of receiving help in the <code>git<\\\/code> tag than in the <code>Bazaar<\\\/code> tag.<\\\/p>\\n\\n<p>I cover some of the basic git commits in <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/4467094\\\/should-a-developer-always-use-version-control\\\/4467171#4467171\\\">my answer to \\\"Should a developer always use version control\\\"<\\\/a>.<\\\/p>\\n\\n<p>Additionally, there's <a href=\\\"http:\\\/\\\/github.com\\\" rel=\\\"nofollow\\\">GitHub<\\\/a> which is a really awesome git repository hosting site that, much like a good Red, gets exceptionally better with age. Their new file browser, for example, had me nerdgasm'ing.<\\\/p>\\n\\n<p>In summary, I definitely think the newbies should use Git because there's a larger community of people out there using it, GitHub uses it and if they happen to use the Ruby programming language, it's effectively the de facto standard there.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><version-control><mercurial><bazaar>","commentcount":"8","accepted":""},"4755632":{"id":"4755632","date":"2011-01","score":"1","body":"\"<p>You cannot assign a constant inside a method, because that would make it \\\"dynamic constant assignment\\\". Instead, define this constant in your model class and then reference it in your controller by using <code>User::INVALID_EMAILS<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"3","accepted":""},"4756221":{"id":"4756221","date":"2011-01","score":"4","body":"\"<p>Call this controller <code>Admin::BaseController<\\\/code>, as it is more to act as the base of the namespace than to do anything for the appilcation. For it to do what you want to do, you will need to make all admin namespaced controllers inherit from this controller.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"3","accepted":"yes"},"4756742":{"id":"4756742","date":"2011-01","score":"21","body":"\"<p>Use <code>root_url<\\\/code>. The <code>_url<\\\/code> extension on the end gives the full URL, something like <code>http:\\\/\\\/localhost:3000\\\/projects\\\/1\\\/tickets\\\/2<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"4756758":{"id":"4756758","date":"2011-01","score":"0","body":"\"<p>The <code>size<\\\/code> of a file field isn't configurable due to how browsers choose to render them and has nothing to do with Rails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><database><ruby-on-rails-3><paperclip>","commentcount":"1","accepted":""},"4758027":{"id":"4758027","date":"2011-01","score":"0","body":"\"<p>This is because your application is running in <code>production<\\\/code> mode. That link is only available when your application is running in <code>development<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routing><setup><passenger>","commentcount":"1","accepted":"yes"},"4758069":{"id":"4758069","date":"2011-01","score":"2","body":"\"<p>You say you've got <code>has_many :skills<\\\/code>. but then you go on to say that you've got a <code>skill_id<\\\/code> on a the <code>persons<\\\/code> table, which is incongruent. Which is it that you want? <\\\/p>\\n\\n<p>Do you want a person to have a single specific skill in which case then what you've got now database-wise is fine, but model wise is not. The <code>Person<\\\/code> model in this case would have to have <code>belongs_to :skill<\\\/code> and the <code>Skill<\\\/code> model would have to have <code>has_many :people<\\\/code><\\\/p>\\n\\n<p>The other possible way around I can think that you'd want it is that a person <a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActiveRecord\\\/Associations\\\/ClassMethods.html#method-i-has_and_belongs_to_many\\\" rel=\\\"nofollow\\\">has_and_belongs_to_many<\\\/a> <code>:skills<\\\/code> and a skill <code>has_and_belongs_to_many :people<\\\/code>. This will allow many people to have many skills, which is what I truly think you want. Then in the view, you can do this:<\\\/p>\\n\\n<pre><code>&lt;% people.each do |p| %&gt;\\n  &lt;h2&gt;&lt;%= p.name %&gt;'s skills&lt;\\\/h2&gt;\\n  &lt;% p.skills.each do |skill| %&gt;\\n    &lt;%= skill.name %&gt;\\n  &lt;% end %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>So which is it? Your question says one thing and then the polar opposite which is greatly confusing. I hope this answer will help you make the right choice.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"8","accepted":""},"4758158":{"id":"4758158","date":"2011-01","score":"0","body":"\"<p>I think your <code>multiple<\\\/code> option should be <code>:multiple =&gt; true<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4758503":{"id":"4758503","date":"2011-01","score":"4","body":"\"<pre><code>git push origin :experimental\\n<\\\/code><\\\/pre>\\n\\n<p>As seen <a href=\\\"http:\\\/\\\/www.gitready.com\\\/beginner\\\/2009\\\/02\\\/02\\\/push-and-delete-branches.html\\\" rel=\\\"nofollow\\\">here<\\\/a>, a site which was the first link for \\\"git delete remote branch\\\"<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><github>","commentcount":"0","accepted":"yes"},"4763931":{"id":"4763931","date":"2011-01","score":"6","body":"\"<p>Rails 3.1 (will) generate a pretty good scaffold for engines. I'd recommend using RVM to create a new gemset called edge and switch to it:<\\\/p>\\n\\n<pre><code>rvm gemset create edge\\nrvm use @edge\\n<\\\/code><\\\/pre>\\n\\n<p>Then install edge rails:<\\\/p>\\n\\n<pre><code>git clone git:\\\/\\\/github.com\\\/rails\\\/rails.git\\ncd rails\\nrake install\\n<\\\/code><\\\/pre>\\n\\n<p>From there, you can follow <a href=\\\"http:\\\/\\\/piotrsarnacki.com\\\/2010\\\/12\\\/21\\\/mountable-apps-tutorial\\\/\\\" rel=\\\"nofollow\\\">Piotr Sarnacki's mountable app tutorial<\\\/a>, replacing calls such as:<\\\/p>\\n\\n<pre><code>bundle exec .\\\/bin\\\/rails plugin new ..\\\/blog --edge --mountable\\n<\\\/code><\\\/pre>\\n\\n<p>With simply:<\\\/p>\\n\\n<pre><code>rails plugin new blog --mountable --full\\n<\\\/code><\\\/pre>\\n\\n<p>The mountable option makes the application mountable, whilst the full option makes it an engine with tests already built-in. To test the engine, this generator generates a folder in <code>test<\\\/code> called <code>dummy<\\\/code> which contains a small Rails application. You can see how this is loaded in <code>test\\\/test_helper.rb<\\\/code>.<\\\/p>\\n\\n<p>Then it's up to you to massage the data to do what it needs to in order to work. I would recommend copying over the cucumber files from a standard <code>rails g cucumber:install<\\\/code> into the project and then messing about with it until it works. I've done this once before so  I know it's possible, but I cannot find the code right now.<\\\/p>\\n\\n<p>Let me know how you go. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rails-engines>","commentcount":"5","accepted":"yes"},"4765486":{"id":"4765486","date":"2011-01","score":"1","body":"\"<p>This plugin is not compatible with Rails 3. I would recommend finding a fork that is or forking it and updating yourself.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"4766076":{"id":"4766076","date":"2011-01","score":"-1","body":"\"<p>I dont recall functionality existing that allows you to do that. You could use this instead at the top of your action:<\\\/p>\\n\\n<pre><code>params[:links] ||= []\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><parameters>","commentcount":"0","accepted":""},"4766107":{"id":"4766107","date":"2011-01","score":"9","body":"\"<p>Looks like you are trying to reference a class that is not defined. Is there a file at <code>app\\\/models\\\/invitation.rb<\\\/code> that defines this <code>Invitation<\\\/code> class?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><cancan>","commentcount":"0","accepted":""},"4777155":{"id":"4777155","date":"2011-01","score":"2","body":"\"<p>For running things at a later time, <a href=\\\"https:\\\/\\\/github.com\\\/collectiveidea\\\/delayed_job\\\" rel=\\\"nofollow\\\">delayed_job<\\\/a> is the community standard. I would recommend learning how to use this and apply it to your situation.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"4778210":{"id":"4778210","date":"2011-01","score":"2","body":"\"<p>Did you try that? It just works like that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"2","accepted":"yes"},"4778218":{"id":"4778218","date":"2011-01","score":"9","body":"\"<p>Did you put this gem in your application's Gemfile?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ubuntu><rubygems><ruby-debug>","commentcount":"4","accepted":"yes"},"4779720":{"id":"4779720","date":"2011-01","score":"14","body":"\"<p>It looks like you're wanting to use this as a class method, and so you must define it like this:<\\\/p>\\n\\n<pre><code>def self.generate_list\\n  ...\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can call this as <code>Podcast.generate_list<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><methods><console>","commentcount":"4","accepted":"yes"},"4788096":{"id":"4788096","date":"2011-01","score":"8","body":"\"<p>Just use <code>params[:file]<\\\/code> to access the file. No need to do <code>params[:file].tempfile.path<\\\/code>. Paperclip takes a full <code>File<\\\/code>-like object.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><paperclip>","commentcount":"0","accepted":"yes"},"4788238":{"id":"4788238","date":"2011-01","score":"1","body":"\"<p>Did you forget to put it in <code>config\\\/application.rb<\\\/code>, inside your <code>Application<\\\/code> class?<\\\/p>\\n\\n<pre><code>config.active_record.observers = :photo_observer\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><observer-pattern>","commentcount":"1","accepted":""},"4789035":{"id":"4789035","date":"2011-01","score":"1","body":"\"<p>Try installing the <code>sqlite3<\\\/code> gem instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><sqlite3><sqlite3-ruby>","commentcount":"2","accepted":""},"4799193":{"id":"4799193","date":"2011-01","score":"0","body":"\"<p>There's the <code>Benchmark<\\\/code> module from the standard library that you could use. It shows th same kind of output as the <code>time<\\\/code> command.  I would link you but I am on my phone, sorry.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><performance>","commentcount":"0","accepted":""},"4811593":{"id":"4811593","date":"2011-01","score":"0","body":"\"<p>Have you specified Devise in your <code>Gemfile<\\\/code>? If you haven't, that would cause the \\\"undefined method <code>devise_for<\\\/code>\\\" error.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"4840433":{"id":"4840433","date":"2011-01","score":"2","body":"\"<p><code>rake db:create db:migrate db:seed<\\\/code> will do all that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><database><ruby-on-rails-3><rake>","commentcount":"1","accepted":""},"4841451":{"id":"4841451","date":"2011-01","score":"6","body":"\"<p><code>+=<\\\/code> adds a number to a variable, changing the variable itself in the process (whereas <code>+<\\\/code> would not). Similar to this, there are the following that also modifies the variable:<\\\/p>\\n\\n<ul>\\n<li><code>-=<\\\/code>, subtracts a value from variable, setting the variable to the result<\\\/li>\\n<li><code>*=<\\\/code>, multiplies the variable and a value, making the outcome the variable<\\\/li>\\n<li><code>\\\/=<\\\/code>, divides the variable by the value, making the outcome the variable<\\\/li>\\n<li><code>%=<\\\/code>, performs modulus on the variable, with the variable then being set to the result of it<\\\/li>\\n<\\\/ul>\\n\\n<p>There may be others. I am not a Python programmer.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<python><notation><shorthand>","commentcount":"0","accepted":""},"4841520":{"id":"4841520","date":"2011-01","score":"1","body":"\"<p>When I submit this form, the login button is submitted as <code>&amp;login=Login<\\\/code>. Perhaps this form requires that you submit that also?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<python><networking><internet>","commentcount":"1","accepted":""},"4845571":{"id":"4845571","date":"2011-01","score":"2","body":"\"<p>Use the array syntax for this:<\\\/p>\\n\\n<pre><code>Sitemap.all(:conditions =&gt; [\\\"controller = ? AND action &lt;&gt; ?\\\", 'sample', 'index']\\n<\\\/code><\\\/pre>\\n\\n<p>Hash syntax is only useful if you're checking for equality.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"1","accepted":"yes"},"4845585":{"id":"4845585","date":"2011-01","score":"2","body":"\"<p>Because this is a nested route you will need to pass the <code>user_id<\\\/code> through:<\\\/p>\\n\\n<pre><code>some_user = way_of_creating_a_user_goes_here\\npost :create, :user_id =&gt; some_user.id\\n<\\\/code><\\\/pre>\\n\\n<p>RSpec will attempt to go to the <code>\\\/microposts<\\\/code> route without this parameter.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rspec><nested-routes>","commentcount":"1","accepted":"yes"},"4845598":{"id":"4845598","date":"2011-01","score":"1","body":"\"<p>There's a free Railscast that may help you with this called <a href=\\\"http:\\\/\\\/railscasts.com\\\/episodes\\\/192-authorization-with-cancan\\\" rel=\\\"nofollow\\\">\\\"Authorization with CanCan\\\"<\\\/a>.<\\\/p>\\n\\n<p>If you feel like parting with some money, <a href=\\\"http:\\\/\\\/manning.com\\\/katz\\\" rel=\\\"nofollow\\\">Rails 3 in Action<\\\/a> also covers this sort of thing in Chapters 6 and 7.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"4845611":{"id":"4845611","date":"2011-01","score":"0","body":"\"<p><code>include<\\\/code> takes the name of an association, so you would have to give it either <code>followers<\\\/code> or <code>following<\\\/code>, depending on what you're trying to join.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"1","accepted":""},"4845667":{"id":"4845667","date":"2011-01","score":"1","body":"\"<p>In the view you must use an ERB output block (<code>&lt;%=<\\\/code>) to make this output the captcha:<\\\/p>\\n\\n<pre><code>&lt;%= raw(get_captcha(:options =&gt; {:theme =&gt; 'white', :tabindex =&gt; 10) %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Anything not in this (or it's brother, the ERB evaluation block (<code>&lt;%<\\\/code>)) will be treated as plain text.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><recaptcha>","commentcount":"3","accepted":"yes"},"4845702":{"id":"4845702","date":"2011-01","score":"1","body":"\"<p>That's not so pretty HTML. It should be this:<\\\/p>\\n\\n<pre><code>&lt;p&gt;\\n  &lt;label for='user_last_name'&gt;Last Name&lt;\\\/label&gt;\\n  &lt;input id='user_last_name' [ other stuff]&gt;\\n  &lt;small&gt;Some hint text here&lt;\\\/small&gt;\\n&lt;\\\/p&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Or in ActionView terms:<\\\/p>\\n\\n<pre><code>&lt;p&gt;\\n  &lt;%= f.label :last_name %&gt;\\n  &lt;%= f.text_field :last_name %&gt;\\n  &lt;small&gt;Some hint text here&lt;\\\/small&gt;\\n&lt;\\\/p&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><cucumber><webrat>","commentcount":"3","accepted":"yes"},"4845880":{"id":"4845880","date":"2011-01","score":"3","body":"\"<p>This is because you're using the block version of <code>link_to<\\\/code>. The first parameter in this case should be the URL, not a blank string.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"3","accepted":""},"4856168":{"id":"4856168","date":"2011-01","score":"3","body":"\"<p>In Rails 3 routes files you don't need to use the <code>map.<\\\/code> prefix. Just<\\\/p>\\n\\n<pre><code>devise_for :users\\n<\\\/code><\\\/pre>\\n\\n<p>Will do the trick.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><devise>","commentcount":"1","accepted":"yes"},"4856290":{"id":"4856290","date":"2011-01","score":"2","body":"\"<p>The correct route is <code>user_app_path(1,2)<\\\/code> The pluralized version goes to the <code>index<\\\/code> action, making the second argument the format \\\/ extension of the request.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routing>","commentcount":"1","accepted":"yes"},"4856313":{"id":"4856313","date":"2011-01","score":"4","body":"\"<p>As far as I know you'd have to pass it through as another local.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><partial-views>","commentcount":"0","accepted":"yes"},"4859691":{"id":"4859691","date":"2011-02","score":"2","body":"\"<p>This was posted on the issue tracker, by my count, 6 times now.<\\\/p>\\n\\n<p>Here's the one that I've been linking everybody to: <a href=\\\"https:\\\/\\\/github.com\\\/carlhuda\\\/bundler\\\/issues\\\/issue\\\/995\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/carlhuda\\\/bundler\\\/issues\\\/issue\\\/995<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><rubygems><bundler>","commentcount":"0","accepted":""},"4861039":{"id":"4861039","date":"2011-02","score":"4","body":"\"<p><code>request.env<\\\/code> contains Rack's \\\"thoughts\\\" on what the content type is. Generally, this is the content type of the request that you have made.<\\\/p>\\n\\n<p><code>request.content_type<\\\/code> on the other hand is Rails's interpretation of what it thinks the content type is, based off the format of the request. These are defined in a file called <code>mime_types.rb<\\\/code> in Rails (I can't recall which part, but with that you should be able to locate it), and additional ones can be specified in <code>config\\\/initializers\\\/mime_types.rb<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><content-type><httprequest><actiondispatch>","commentcount":"1","accepted":"yes"},"4862274":{"id":"4862274","date":"2011-02","score":"1","body":"\"<p>The migration's output is showing that <code>drop_table :boards<\\\/code> is happening, but it doesn't appear in your migration. Perhaps it is an earlier migration that is attempting to drop the <code>boards<\\\/code> table?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"4862333":{"id":"4862333","date":"2011-02","score":"2","body":"\"<p>Your first mistake was installing RubyGems from apt. I cover the proper way to set this all up in <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\/\\\" rel=\\\"nofollow\\\">my Ubuntu, Ruby, RVM, Rails and You post<\\\/a>. Give that a go and see if that helps you get passenger running.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><passenger>","commentcount":"2","accepted":"yes"},"4862748":{"id":"4862748","date":"2011-02","score":"0","body":"\"<p>The error there says that there's \\\"No such file or directory -- script\\\/generate\\\". This leads me to beleive that you're using Rails 3, where the command is now <code>rails generate<\\\/code> or <code>rails g<\\\/code> for short. Upgrade your Ruby on Rails TextMate bundle (follow <a href=\\\"https:\\\/\\\/github.com\\\/drnic\\\/ruby-on-rails-tmbundle\\\" rel=\\\"nofollow\\\">the instructions on the GitHub Page<\\\/a>) or alternatively run <code>rails g controller [name]<\\\/code> from the command line.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><textmate><generator>","commentcount":"1","accepted":""},"4862789":{"id":"4862789","date":"2011-02","score":"0","body":"\"<p>You're defining the <code>fullname<\\\/code> field in the <code>attr_accessible<\\\/code> list but, by the looks of things, there is no fullname field in your <code>users<\\\/code> table, nor is it listed in any <code>attr_accessor<\\\/code> call, like the one you've got commented out.<\\\/p>\\n\\n<p>Thus, undefined method.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><cucumber><devise>","commentcount":"0","accepted":""},"4871862":{"id":"4871862","date":"2011-02","score":"0","body":"\"<p>Based on the limited information I know about your system, I'm assuming you've got some model that tracks the emails. That's a good start.<\\\/p>\\n\\n<p>First I would like to clarify that in no situation should you be storing files <em>in the database<\\\/em>. Files go in the filesystem, where they can be read and written much faster.<\\\/p>\\n\\n<p>Now with that in mind, I would have a model that associates with your email model, possibly called <code>Part<\\\/code>. This model's purpose will be to use Paperclip to store the files. I would call the attachment <code>part<\\\/code> also, and so to create a new one you would do this:<\\\/p>\\n\\n<pre><code>email.parts.build(:part =&gt; some_file)\\n<\\\/code><\\\/pre>\\n\\n<p>In that case, Paperclip will take care of moving the file to where it needs to be. To read the file later, Paperclip has methods for that. Check out Paperclip's documentation, it's pretty good for this sort of thing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><paperclip>","commentcount":"0","accepted":""},"4881826":{"id":"4881826","date":"2011-02","score":"6","body":false,"title":"\"\"","favorite":null,"tags":"<ruby><chaining>","commentcount":"0","accepted":"yes"},"4911598":{"id":"4911598","date":"2011-02","score":"1","body":"\"<p>First off: Your HTML is invalid. <code>li<\\\/code> elements go inside <code>ul<\\\/code>'s or <code>ol<\\\/code>'s, not <code>div<\\\/code>'s. The code you're looking for is:<\\\/p>\\n\\n<pre><code>&lt;ul&gt;\\n  &lt;% hash.each do |project_id, unread_count| %&gt;\\n    &lt;li&gt;Project_id &lt;%= project_id %&gt;, unread count = &lt;%= unread_count %&gt;&lt;\\\/li&gt;\\n  &lt;% end %&gt;\\n&lt;\\\/ul&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><activerecord><activemodel>","commentcount":"0","accepted":""},"4917156":{"id":"4917156","date":"2011-02","score":"8","body":"\"<p>The correct key for <code>username<\\\/code> is, in fact, <code>username<\\\/code> and not <code>user<\\\/code>. Easy mistake, easy fix.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><postgresql>","commentcount":"1","accepted":"yes"},"4953390":{"id":"4953390","date":"2011-02","score":"8","body":"\"<p>I would go with dmarkow's answer, but as a little bit of additional trivia you can also do this:<\\\/p>\\n\\n<pre><code>Person.find_all_by_state_and_single(\\\"Wisconsin\\\", true)\\n<\\\/code><\\\/pre>\\n\\n<p>Chain as many fields using <code>_and_<\\\/code> as desired. The <code>where<\\\/code> syntax is much neater than this however.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"2","accepted":""},"4983305":{"id":"4983305","date":"2011-02","score":"0","body":"\"<p>You should be using the routing helpers rather than the options to get to this controller. Define a path helper in your routes file and use that instead. This way, you'll always be given the right URL.<\\\/p>\\n\\n<p>At the moment, your application is sending you to <code>users\\\/town<\\\/code> because that's what you're telling it to. The URL for sign in is <code>\\\/users\\\/sign_in<\\\/code> and by passing <code>:controller<\\\/code> you're saying \\\"go to <code>\\\/users\\\/town<\\\/code>. If you were using named routes this would not occur.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"4","accepted":"yes"},"4983306":{"id":"4983306","date":"2011-02","score":"0","body":"\"<p>These queries are in the same place as all other queries: your <code>log<\\\/code> folder. <code>tail<\\\/code> the files in this directory to view the queries.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"4983309":{"id":"4983309","date":"2011-02","score":"7","body":"\"<p>You'll want to put this custom route <em>above<\\\/em> the <code>resources :users<\\\/code>, so that it is matched first in the routes. <\\\/p>\\n\\n<pre><code>match 'photos\\\/:user' =&gt; 'photos#user', :as =&gt; :user_photo\\nresources :photos\\n<\\\/code><\\\/pre>\\n\\n<p>Additionally you can disable the <code>show<\\\/code> action altogether:<\\\/p>\\n\\n<pre><code>resources :photos, :except =&gt; :show\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><url><routes>","commentcount":"2","accepted":"yes"},"4988384":{"id":"4988384","date":"2011-02","score":"0","body":"\"<p>Try this at the very bottom of your routes file:<\\\/p>\\n\\n<pre><code>match ':id', :to =&gt; \\\"news#show\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routing>","commentcount":"0","accepted":""},"5023511":{"id":"5023511","date":"2011-02","score":"1","body":"\"<p>Perhaps you're after <code>attr_accessible<\\\/code>, which specifies the columns which are \\\"mass-assignable\\\" (as in, they can be passed into <code>create<\\\/code> and <code>update_attributes<\\\/code>). In effect this would mean they are protected from being written to.<\\\/p>\\n\\n<p>To set this attribute:<\\\/p>\\n\\n<pre><code>@user.admin = true\\n@user.save\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><security><activerecord>","commentcount":"1","accepted":""},"5034212":{"id":"5034212","date":"2011-02","score":"0","body":"\"<p>This is expecting your partial to be called <code>app\\\/views\\\/projects\\\/task.js.erb<\\\/code> (as figured out by the <code>formats<\\\/code> part of your error, not <code>app\\\/views\\\/projects\\\/task.html.erb<\\\/code>. You probably only have the <code>html<\\\/code> partial defined.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><google-chrome>","commentcount":"0","accepted":""},"5034300":{"id":"5034300","date":"2011-02","score":"0","body":"\"<p>There's code that's missing there...<\\\/p>\\n\\n<p>If you have a <code>has_and_belongs_to_many :watchers<\\\/code> you should be able to assign <code>watcher_ids<\\\/code> without having to do this custom module stuff.<\\\/p>\\n\\n<p>Then if you can't do that then that attribute is protected by some <code>attr_protected<\\\/code> or, more likely, <code>attr_accessible<\\\/code> call in your model. You can set it manually:<\\\/p>\\n\\n<pre><code>@conversation.watcher_ids = params[:conversation][:watcher_ids]\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><activerecord>","commentcount":"1","accepted":""},"5034877":{"id":"5034877","date":"2011-02","score":"11","body":"\"<p>The <code>timeout_in<\\\/code> will automatically log you out within 10 minutes of inactivity and is incompatible with the <code>remember_me<\\\/code> checkbox. You can have one, but not both.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><session><devise>","commentcount":"1","accepted":"yes"},"5055289":{"id":"5055289","date":"2011-02","score":"0","body":"\"<p>Use <code>rake jobs:work<\\\/code> in a <code>screen<\\\/code> session or, less hacky, run it using the <code>god<\\\/code> gem or <code>monit<\\\/code> so that if the process dies it will be \\\"resurrected\\\".<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><delayed-job>","commentcount":"0","accepted":""},"5055293":{"id":"5055293","date":"2011-02","score":"2","body":"\"<p><code>from_now<\\\/code> would do this:<\\\/p>\\n\\n<pre><code>10.days.from_now\\n<\\\/code><\\\/pre>\\n\\n<p>Or dynamically:<\\\/p>\\n\\n<pre><code>scope :expires_within, lambda {|time| where(\\\"created_at &gt; ?\\\", time.from_now)}\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><scope>","commentcount":"1","accepted":""},"5056779":{"id":"5056779","date":"2011-02","score":"0","body":"\"<p>Rails itself would never return a directory listing. Whatever you are using to run your Rails application is not configured correctly. More than likely you have configured it to point to the root of the Rails application rather than the public folder inside of it. <\\\/p>\\n\\n<p>Hard to tell, given the lack of information in the question.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><routing>","commentcount":"0","accepted":""},"5060258":{"id":"5060258","date":"2011-02","score":"4","body":"\"<p><code>find_by_*<\\\/code> returns a single record, you want to use <code>find_all_by_*<\\\/code> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"3","accepted":""},"5075058":{"id":"5075058","date":"2011-02","score":"5","body":"\"<p><code>-a-z<\\\/code> would be the hyphen character (-) and any letter between a and z. But then they've got it again later in the expression by itself which is redundant.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<php><regex><codeigniter>","commentcount":"0","accepted":"yes"},"5075219":{"id":"5075219","date":"2011-02","score":"16","body":"\"<p>You need to have <code>accepts_nested_attributes_for :address<\\\/code> on your <code>Person<\\\/code> model for this to work nicely. In your <code>create<\\\/code> action you can then do this:<\\\/p>\\n\\n<pre><code>def create\\n  @person = Person.new(params[:person])\\n  ...\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then Rails will take care of the rest.<\\\/p>\\n\\n<p>UPDATE: if the <code>address_id<\\\/code> column is in the <code>people<\\\/code> table then it should be <code>belongs_to :address<\\\/code>, not <code>has_one :address<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"5100319":{"id":"5100319","date":"2011-02","score":"3","body":"\"<pre><code>content_for?(:sidebar) ? yield(:sidebar) : render(:partial =&gt; \\\"shared\\\/default_sidebar\\\") \\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"5100337":{"id":"5100337","date":"2011-02","score":"0","body":"\"<p>I did an upgrade over a week in November and documented the process (after the fact, going by the commits) in this post: <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/11\\\/the-rails-3-upgrade\\\" rel=\\\"nofollow\\\">http:\\\/\\\/ryanbigg.com\\\/2010\\\/11\\\/the-rails-3-upgrade<\\\/a>. Pan's answer covers most of the problems that we encountered.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"5112360":{"id":"5112360","date":"2011-02","score":"4","body":"\"<p>Firstly, don't use hard-coded ids to find your roles as they may change.<\\\/p>\\n\\n<p>Secondly, use association builders, or just access the roles association yourself.<\\\/p>\\n\\n<p>Thirdly, follow the rule of \\\"Don't Make Me Think\\\" (DMMT) when naming your methods. <\\\/p>\\n\\n<p>With these three things in mind:<\\\/p>\\n\\n<pre><code>def assign_default_role\\n  self.roles &lt;&lt; Role.find_by_name(\\\"User\\\")\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><associations>","commentcount":"0","accepted":"yes"},"5137293":{"id":"5137293","date":"2011-02","score":"0","body":"\"<p>You're not setting <code>@user<\\\/code> before referencing it in your tests. This needs to be set to a <code>User<\\\/code> object. This is set in the <code>describe \\\"relationsips\\\"<\\\/code> block earlier, but doesn't  appear to be set there.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rspec><feeds>","commentcount":"0","accepted":"yes"},"5139281":{"id":"5139281","date":"2011-02","score":"3","body":"\"<p>Define a new method called <code>week_old_posts<\\\/code> in the <code>User<\\\/code> model:<\\\/p>\\n\\n<pre><code>def week_old_posts\\n  posts.where(\\\"created_at &gt; ?\\\", 1.week.ago)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then in your <code>to_json<\\\/code> call use <code>methods<\\\/code> rather than <code>include<\\\/code>:<\\\/p>\\n\\n<pre><code>user.to_json(:methods =&gt; :week_old_posts)\\n<\\\/code><\\\/pre>\\n\\n<p><code>:include<\\\/code> is more useful if you want to include a whole association, use methods for when you want to include parts of associations.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><json>","commentcount":"1","accepted":""},"5148183":{"id":"5148183","date":"2011-02","score":"1","body":"\"<p>First off I'd recommend using FasterCSV to parse this rather than using your array. This is just so you don't have to remember what number matches up with each field.<\\\/p>\\n\\n<p>Secondly, your model must have the singularized + \\\"classy\\\" name of the table. This is so that when you call <code>create<\\\/code> on the model, Active Record will map that to the correct table. For example, if you have a <code>Post<\\\/code> model, it's reasonably expected that you also have a <code>posts<\\\/code> table to go along with it.<\\\/p>\\n\\n<p>In this case, this isn't possible because of how your table is named. To force the table name, use <code>set_table_name<\\\/code> in your model like this:<\\\/p>\\n\\n<pre><code>class Part &lt; ActiveRecord::Base\\n  set_table_name :parts_info\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I've also taken the liberty of changing the class name to something more Ruby-esque too. You don't need to say it's a \\\"db\\\", that should be implicit.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><activerecord><filemaker>","commentcount":"1","accepted":"yes"},"5148666":{"id":"5148666","date":"2011-02","score":"35","body":"\"<p>When you run the <code>rails<\\\/code> executable within a Rails 3 application, it looks for the <code>script\\\/rails<\\\/code> file and, if it's present, executes that file with the arguments you passed to <code>rails<\\\/code>.<\\\/p>\\n\\n<p>The reason why you'd use <code>rails<\\\/code> over <code>script\\\/rails<\\\/code> generally falls down to the fact that it's shorter.<\\\/p>\\n\\n<p>One more thing to note, there's also the <code>rails c<\\\/code> command which, in a Rails 2 application, will generate an application folder called <code>c<\\\/code> inside the current directory. Using <code>script\\\/rails<\\\/code>, this wouldn't happen; instead it would complain that the <code>script\\\/rails<\\\/code> doesn't exist.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"5148675":{"id":"5148675","date":"2011-02","score":"3","body":"\"<p>You would get this error if <code>@search<\\\/code> is set to <code>nil<\\\/code>. Ensure that this is not the case.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><meta-search>","commentcount":"1","accepted":"yes"},"5149383":{"id":"5149383","date":"2011-03","score":"0","body":"\"<p>Check <code>.bundle\\\/config<\\\/code> at the root of your project. it is probably configured to do this.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><bundler>","commentcount":"2","accepted":"yes"},"5149408":{"id":"5149408","date":"2011-03","score":"1","body":"\"<p>It would be best to have this as a <code>comments<\\\/code> association so that you're not re-typing the word <code>blog<\\\/code> all the time:<\\\/p>\\n\\n<pre><code>has_many :comments, :class_name =&gt; \\\"BlogComment\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>This would still let you have your model called <code>BlogPost<\\\/code> and <code>BlogComment<\\\/code>, but when you go to  get the comments for a <code>BlogPost<\\\/code> object:<\\\/p>\\n\\n<pre><code>@blog_post.comments\\n<\\\/code><\\\/pre>\\n\\n<p>No more repetition.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"5160833":{"id":"5160833","date":"2011-03","score":"6","body":"\"<p>When the <code>AuthenticatedSystem<\\\/code> method is included using the <code>include<\\\/code> method, the <code>self.included<\\\/code> method is triggered with whatever it was included into being the argument of <code>base<\\\/code>.<\\\/p>\\n\\n<p>The code you've shown calls <code>helper_method<\\\/code> and defines some helpful helpers, but only if the <code>base<\\\/code> has a <code>helper_method<\\\/code> method. <\\\/p>\\n\\n<p>It's done that way so including the module can set up the helper methods as well as adding additional methods to the class.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><restful-authentication>","commentcount":"0","accepted":""},"5160977":{"id":"5160977","date":"2011-03","score":"0","body":"\"<p>Firstly: You're assigning the block variable of your fields_for to <code>f<\\\/code>, which is the same <code>f<\\\/code> your <code>form_for<\\\/code> uses. You should use a different name, like <code>user_fields<\\\/code>.<\\\/p>\\n\\n<p>With that:<\\\/p>\\n\\n<pre><code>&lt;%= f.fields_for :schools_users do |user_fields| %&gt;\\n  &lt;tr&gt;\\n    &lt;td&gt;&lt;%= user_fields.text_field :first_name %&gt;&lt;\\\/td&gt;\\n    ...\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"5161550":{"id":"5161550","date":"2011-03","score":"11","body":"\"<p>(by popular demand, posting as a real answer)<\\\/p>\\n\\n<p>What I don't like about <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/5160232\\\/rails-given-an-array-of-users-how-to-get-a-output-of-just-emails\\\/5160343#5160343\\\">fl00r's solution<\\\/a> is that it instantiates a new User object per record in the DB; which just doesn't scale. It's great for a table with just 10 emails in it, but once you start getting into the thousands you're going to run into problems, mostly with the memory consumption of Ruby.<\\\/p>\\n\\n<p>One can get around this little problem by using connection.select_values on a model, and a little bit of ARel goodness: <\\\/p>\\n\\n<pre><code>User.connection.select_values(User.select(\\\"email\\\").to_sql)\\n<\\\/code><\\\/pre>\\n\\n<p>This will give you the straight strings of the email addresses from the database. No faffing about with user objects and will scale better than a straight <code>User.select(\\\"email\\\")<\\\/code> query, but I wouldn't say it's the \\\"best scale\\\". There's probably better ways to do this that I am not aware of yet.<\\\/p>\\n\\n<p>The point is: a <code>String<\\\/code> object will use <em>way<\\\/em> less memory than a <code>User<\\\/code> object and so you can have more of them. It's also a quicker query and doesn't go the long way about it (running the query, then mapping the values). Oh, and <code>map<\\\/code> would also take longer too.<\\\/p>\\n\\n<h3>If you're using Rails 2.3...<\\\/h3>\\n\\n<p>Then you'll have to construct the SQL manually, I'm sorry to say.<\\\/p>\\n\\n<pre><code>User.connection.select_values(\\\"SELECT email FROM users\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>Just provides another example of the helpers that Rails 3 provides.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"5163419":{"id":"5163419","date":"2011-03","score":"4","body":"\"<p>All of the lovely configuration options should be documented in the lovely configuration guide: <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/configuring.html\\\" rel=\\\"nofollow\\\">http:\\\/\\\/guides.rubyonrails.org\\\/configuring.html<\\\/a>. If you find an option that isn't documented perfectly (or at all) then let us know over on <a href=\\\"http:\\\/\\\/groups.google.com\\\/group\\\/rubyonrails-docs\\\" rel=\\\"nofollow\\\">rubyonrails-docs<\\\/a> and we can fix that right up.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><api><documentation>","commentcount":"0","accepted":"yes"},"5173976":{"id":"5173976","date":"2011-03","score":"4","body":"\"<p><code>..<\\\/code> indicates a <code>Range<\\\/code> object going from the number on the left to the number on the right. This can be best shown by converting the object to an <code>Array<\\\/code> object, like this:<\\\/p>\\n\\n<pre><code>&gt;&gt; (1..10).to_a\\n=&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] \\n<\\\/code><\\\/pre>\\n\\n<p>See? This object provides a range of digits from 1 through to 10.<\\\/p>\\n\\n<p>It also works for sequential letters:<\\\/p>\\n\\n<pre><code>&gt;&gt; (\\\"a\\\"..\\\"j\\\").to_a\\n=&gt; [\\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"j\\\"]\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>Range<\\\/code> class includes the <code>Enumerable<\\\/code> module which gives us the <code>each<\\\/code> method, allowing us to iterate over each element inside the range.<\\\/p>\\n\\n<p><em><strong>Additonal trivia<\\\/em><\\\/strong>:<\\\/p>\\n\\n<p><code>...<\\\/code> is also used in Ruby, except it gets everything up to but not including the value on the right.<\\\/p>\\n\\n<pre><code>&gt;&gt; (1...10).to_a\\n=&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9] \\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"0","accepted":"yes"},"5177558":{"id":"5177558","date":"2011-03","score":"14","body":"\"<p>This is because you're using the singularized version of <code>resources<\\\/code> (<code>resource<\\\/code>). There is no <code>index<\\\/code> action route generated for these. You should change this to be the pluralized version, and remove <code>:controller<\\\/code> from the line too.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routes><rake>","commentcount":"2","accepted":"yes"},"5203463":{"id":"5203463","date":"2011-03","score":"0","body":"\"<p>Why would you do this?<\\\/p>\\n\\n<p>In your controllers \\\/ views use polymorphic routing instead:<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"View comment\\\", [@commentable, comment] %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><routing>","commentcount":"2","accepted":""},"5215129":{"id":"5215129","date":"2011-03","score":"-1","body":"\"<p>I've written a guide for deploying a Rails site using Ubuntu which may be helpful to you:  <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/deployment\\\/getting_started_ubuntu.html\\\" rel=\\\"nofollow\\\">http:\\\/\\\/ryanbigg.com\\\/deployment\\\/getting_started_ubuntu.html<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><git>","commentcount":"0","accepted":""},"5225522":{"id":"5225522","date":"2011-03","score":"2","body":"\"<p>A JSON object must have two octets, as in a key and a value. You can't just send through a string.<\\\/p>\\n\\n<p>Try this instead:<\\\/p>\\n\\n<pre><code>respond_with(:message =&gt; \\\"test\\\")\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"5240905":{"id":"5240905","date":"2011-03","score":"3","body":"\"<p>You can't do this in Rails 3.0. In Rails 3.1 I think this will be possible.<\\\/p>\\n\\n<p>Instead, you have to use the nested_has_many_through plugin: <a href=\\\"http:\\\/\\\/github.com\\\/ianwhite\\\/nested_has_many_through\\\" rel=\\\"nofollow\\\">http:\\\/\\\/github.com\\\/ianwhite\\\/nested_has_many_through<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"0","accepted":""},"5240937":{"id":"5240937","date":"2011-03","score":"1","body":"\"<p>The correct way to do this would be to <a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActiveRecord\\\/Persistence.html#method-i-touch\\\" rel=\\\"nofollow\\\"><code>touch<\\\/code><\\\/a> the record:<\\\/p>\\n\\n<pre><code>@course_enrollment.touch(:last_viewed)\\n<\\\/code><\\\/pre>\\n\\n<p>This would update the <code>last_viewed<\\\/code> and <code>updated_at<\\\/code> columns to the current time.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"5255470":{"id":"5255470","date":"2011-03","score":"2","body":"\"<p>You didn't run <code>rake db:test:prepare<\\\/code> to copy over the schema into your test database.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><factory-girl>","commentcount":"1","accepted":"yes"},"5255480":{"id":"5255480","date":"2011-03","score":"6","body":"\"<p>You can use the <code>params[:controller]<\\\/code> variable to determine this, or if you want something longer then <code>controller.controller_name<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><templates><view><controller>","commentcount":"1","accepted":"yes"},"5255504":{"id":"5255504","date":"2011-03","score":"1","body":"\"<p>Your mock doesn't do anything... perhaps you meant to use it somewhere?<\\\/p>\\n\\n<p>I personally dislike mocking in this case and feel it's obfuscation. If you are using Devise you could use <a href=\\\"https:\\\/\\\/github.com\\\/rails3book\\\/ticketee\\\/blob\\\/master\\\/spec\\\/support\\\/devise.rb#L1-3\\\" rel=\\\"nofollow\\\">their test helpers<\\\/a> to <a href=\\\"https:\\\/\\\/github.com\\\/rails3book\\\/ticketee\\\/blob\\\/master\\\/spec\\\/controllers\\\/projects_controller_spec.rb#L8\\\" rel=\\\"nofollow\\\">sign in as a user<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec>","commentcount":"6","accepted":""},"5255749":{"id":"5255749","date":"2011-03","score":"0","body":"\"<p>I wasn't aware there was Rails 3 mongrel support. <\\\/p>\\n\\n<p>Most people use Thin (you can enable it by specifying <code>gem 'thin'<\\\/code> in your <code>Gemfile<\\\/code> then launching <code>rails server thin<\\\/code> \\\/ Webrick these days. <\\\/p>\\n\\n<p>If this is for hosting then there's nginx and Passenger that'll help with that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><osx><mongrel>","commentcount":"1","accepted":""},"5268585":{"id":"5268585","date":"2011-03","score":"9","body":"\"<p>Your <code>test\\\/test_helper<\\\/code> file should have been created when you generated the application. It contains this valuable content:<\\\/p>\\n\\n<pre><code>ENV[\\\"RAILS_ENV\\\"] = \\\"test\\\"\\nrequire File.expand_path('..\\\/..\\\/config\\\/environment', __FILE__)\\nrequire 'rails\\\/test_help'\\n\\nclass ActiveSupport::TestCase\\n  # Setup all fixtures in test\\\/fixtures\\\/*.(yml|csv) for all tests in alphabetical order.\\n  #\\n  # Note: You'll currently still have to declare fixtures explicitly in integration tests\\n  # -- they do not yet inherit this setting\\n  fixtures :all\\n\\n  # Add more helper methods to be used by all tests here...\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The second line here is the most important: it requires the <code>config\\\/environment.rb<\\\/code> file at the root of your application, which in turn requires a lot of other things, including the valuable (I like that word today, ok?) <code>ActiveSupport<\\\/code> constant.<\\\/p>\\n\\n<p>When you generate a controller, model or scaffold it'll also generate tests for those. I just ran <code>rails g scaffold ticket<\\\/code> in my app and it generated <code>test\\\/unit\\\/ticket_test.rb<\\\/code> which contains this:<\\\/p>\\n\\n<pre><code>require 'test_helper'\\n\\nclass TicketTest &lt; ActiveSupport::TestCase\\n  # Replace this with your real tests.\\n  test \\\"the truth\\\" do\\n    assert true\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The first line of this file will require the <code>test\\\/test_helper.rb<\\\/code> file that we jut saw. This will load <code>ActiveSupport<\\\/code> and the <code>TestCase<\\\/code> class within it, thereby making this test feasible. Everything else just flows on from there.<\\\/p>\\n\\n<p>With all that explanation out of the way (even though it's something that you already know),  I'm placing a large wager on it's something that's masscaring your <code>LOAD_PATH<\\\/code>, causing the <code>test<\\\/code> directory to be removed from it.<\\\/p>\\n\\n<p>What's really unusual is that when you do specify the full path to the <code>test\\\/test_helper.rb<\\\/code> you're saying it loads it, but <code>ActiveSupport<\\\/code> is still undefined. Well, that should be loaded as-per the description above. Is it actually loading <code>config\\\/environment.rb<\\\/code>? Can you put something such as:<\\\/p>\\n\\n<pre><code>puts \\\"LOADING CONFIG\\\/ENVIRONMENT.RB\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>At the top of your <code>config\\\/environment.rb<\\\/code> file and then run the tests again? It should be output. Very unusual.<\\\/p>\\n\\n<p><s>Continuing on the thread about <code>LOAD_PATH<\\\/code>... Got a dirty little secret you're not telling us about?<\\\/s><\\\/p>\\n\\n<p>Actually, Dan Cheail makes a good point. You could be running the tests using <code>ruby test\\\/unit\\\/ticket_test.rb<\\\/code> in which case <code>test_helper<\\\/code> wouldn't be available, but still that still doesn't explain why when you specify the full path you're still getting an undefined constant <code>ActiveSupport<\\\/code>.<\\\/p>\\n\\n<p>If you want to run a single test you should be doing this:<\\\/p>\\n\\n<pre><code>ruby -Itest test\\\/unit\\\/ticket_test.rb\\n<\\\/code><\\\/pre>\\n\\n<p>That <code>-I<\\\/code> option there adds the <code>test<\\\/code> directory to the load path, meaning the <code>test_helper<\\\/code> file will be available through a straight <code>require 'test_helper'<\\\/code>. If it still errors after this, I reckon your <code>test\\\/test_helper.rb<\\\/code> is either empty or broken.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<unit-testing><ruby-on-rails-3><rake>","commentcount":"4","accepted":"yes"},"5280425":{"id":"5280425","date":"2011-03","score":"19","body":"\"<p>You will need to call the <code>reload!<\\\/code> method in the console to reload the changes. This method's magic is automatically called by <code>rails server<\\\/code> in development mode.<\\\/p>\\n\\n<p>As a comment's pointed out beneath and another answer here, if you change things to do with the <em>environment<\\\/em> of the application, such as adding new gems to the <code>Gemfile<\\\/code>, making changes to anything in <code>config<\\\/code> or adding a new plugin then you'll need to restart the console. Any changes to <code>app<\\\/code> will be reloadable with <code>reload!<\\\/code><\\\/p>\\n\\n<p>If you were using this particular way to test that a method was working, I wouldn't. Tests (as in, the Test::Unit or RSpec) variants are much nicer because you have a reproducible way of running them again and again. <code>rails console<\\\/code> is great for one-off testing, but if you want to write a maintainable application then write tests.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"5285934":{"id":"5285934","date":"2011-03","score":"0","body":"\"<pre><code>:subject =&gt; \\\"#{SITE_CONFIG[\\\"site_name\\\"]}\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Assuming you used <code>YAML.load<\\\/code> to load <code>SITE_CONFIG<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><yaml>","commentcount":"0","accepted":""},"5294889":{"id":"5294889","date":"2011-03","score":"14","body":"\"<p><code>update<\\\/code> is a private method for Active Record objects in Rails. You want to use <code>update_attributes<\\\/code> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"5304589":{"id":"5304589","date":"2011-03","score":"2","body":"\"<p>Cucumber has nothing to do with how Rails uses the database.<\\\/p>\\n\\n<p>You need to have your test environment set up correctly in your <code>config\\\/database.yml<\\\/code> file:<\\\/p>\\n\\n<pre><code>test:\\n  adapter: postgresql\\n  username: your_name\\n  database: a_database\\n<\\\/code><\\\/pre>\\n\\n<p>You will also need to specify the <code>pg<\\\/code> gem in your <code>Gemfile<\\\/code>:<\\\/p>\\n\\n<pre><code>gem 'pg'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><postgresql><cucumber>","commentcount":"0","accepted":"yes"},"5306306":{"id":"5306306","date":"2011-03","score":"67","body":"\"<p>You need to remove the heroku remote in <code>git<\\\/code> using this command:<\\\/p>\\n\\n<pre><code>git remote rm heroku\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can add a new remote using this one:<\\\/p>\\n\\n<pre><code>git remote add heroku git@heroku.com:your-app.git\\n<\\\/code><\\\/pre>\\n\\n<p>Then try running your <code>heroku<\\\/code> commands.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><heroku>","commentcount":"3","accepted":"yes"},"5306761":{"id":"5306761","date":"2011-03","score":"2","body":"\"<p>You could prevent this by not defining the route using <code>match<\\\/code>, but instead by using one of the HTTP verbs that isn't get. More than likely, you'll want to use <code>put<\\\/code>:<\\\/p>\\n\\n<pre><code>put \\\"\\\/jobs\\\/:id\\\/toggle_is_money_paid\\\" =&gt; \\\"jobs#toggle_is_money_paid\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then you'll change your <code>link_to<\\\/code> to this:<\\\/p>\\n\\n<pre><code>link_to(\\\"Toggle\\\", \\\"\\\/jobs\\\/#{job.id}\\\/toggle_is_money_paid\\\", :remote =&gt; true, :method =&gt; :put)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ajax><ruby-on-rails-3><link-to-remote>","commentcount":"4","accepted":"yes"},"5320650":{"id":"5320650","date":"2011-03","score":"1","body":"\"<p>Your <code>form_for<\\\/code> can just be:<\\\/p>\\n\\n<pre><code>&lt;%= form_for @product do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>If <code>@product<\\\/code> is an existing object then it will automatically know to go the <code>update<\\\/code> action of the <code>ProductsController<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routes>","commentcount":"0","accepted":""},"5322204":{"id":"5322204","date":"2011-03","score":"2","body":"\"<p>You should be using pure Capybara helpers here, <code>post_via_redirect<\\\/code> is a Rails method. You will first want to fill out the form then press some sort of submit button, like this:<\\\/p>\\n\\n<pre><code>visit admin_path\\nfill_in \\\"Login\\\", :with =&gt; \\\"username\\\"\\nfill_in \\\"Password\\\", :with =&gt; \\\"password\\\"\\nclick_button \\\"Submit\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Your final assert, I would be more precise and say in which selector that content should be shown, like this:<\\\/p>\\n\\n<pre><code>within_scope(\\\"h1\\\") do\\n  page.should have_content('Admin Dashboard')\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Now you're testing properly!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rspec2><capybara>","commentcount":"1","accepted":""},"5322230":{"id":"5322230","date":"2011-03","score":"1","body":"\"<p>You could run <code>rake db:schema:load<\\\/code> which will reload the table information from <code>db\\\/schema.rb<\\\/code>, but it will wipe the data in all the tables.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":""},"5383168":{"id":"5383168","date":"2011-03","score":"0","body":"\"<p>I would recommend setting a <code>locked_until<\\\/code> timestamp that's checked whenever someone attempts to buy one of these items. If there are no items with a <code>locked_until<\\\/code> time in the past, then all items are \\\"sold out\\\". For actual selling of the items, I would have a <code>sold<\\\/code> boolean field.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><locking><sqlite3>","commentcount":"0","accepted":""},"5388455":{"id":"5388455","date":"2011-03","score":"4","body":"\"<p>You can't check to see if somebody's received an email, but you can check to see if they've <em>opened<\\\/em> it. Email services these days use a small 1x1px image which contains some values in the query parameters to associate it to the user. <\\\/p>\\n\\n<p>Other than that, no.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><actionmailer>","commentcount":"2","accepted":"yes"},"5388476":{"id":"5388476","date":"2011-03","score":"0","body":"\"<p>It would change if you ran <code>gem install rails -v 2.3.5<\\\/code> or something similar. You can fix it by running <code>gem install rails -v 3.0.5<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"5400359":{"id":"5400359","date":"2011-03","score":"4","body":"\"<p>I wrote a <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\/\\\" rel=\\\"nofollow\\\">detailed how-to guide on installing Ruby and Rails on Ubuntu 10.10<\\\/a> that will help you with this.<\\\/p>\\n\\n<p>Guaranteed, or your money back!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ubuntu-10.10><rdoc>","commentcount":"4","accepted":"yes"},"5400989":{"id":"5400989","date":"2011-03","score":"5","body":"\"<p>You can do an outer join in Rails only by using an SQL literal in the <code>joins<\\\/code> method:<\\\/p>\\n\\n<pre><code>joins(\\\"OUTER JOIN table2 on table2.column = table1.column\\\")\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"7","accepted":""},"5445689":{"id":"5445689","date":"2011-03","score":"4","body":"\"<p>Your <code>app\\\/controllers\\\/contacts_controller.rb<\\\/code> is actually defining the <code>Contact::ContactsController<\\\/code>, not the <code>ContactsController<\\\/code> that Rails expects.<\\\/p>\\n\\n<p>The problem is with your routes,  they should be defined like this:<\\\/p>\\n\\n<pre><code>Rails.application.routes.draw do\\n  scope :module =&gt; 'contact' do\\n    get \\\"contact\\\", :to =&gt; 'contact\\\/contacts#new'\\n    get \\\"contact\\\/send_email\\\", :to =&gt; 'contact\\\/contacts#send_email', :as =&gt; 'send_email'\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routing><rails-routing>","commentcount":"3","accepted":""},"5465482":{"id":"5465482","date":"2011-03","score":"5","body":"\"<p>For a <code>has_many<\\\/code> &lt;-> <code>belongs_to<\\\/code> assoication, you're defining that one project is owned (<code>belongs_to<\\\/code>) by one client. Therefore, that client has many (<code>has_many<\\\/code>) projects. For a project to determine what client it belongs to it needs to have an <code>client_id<\\\/code> column so that it can look it up. This <code>client_id<\\\/code> column is used by Rails when you call the <code>client<\\\/code> method, much like this:<\\\/p>\\n\\n<pre><code>Client.find(project.client_id)\\n<\\\/code><\\\/pre>\\n\\n<p>That's how you can find a project's client. The <code>client_id<\\\/code> column is often referred to as a <em>foreign key<\\\/em>, because its a unique identifier (\\\"key\\\") in a table not of its origin (\\\"foreign\\\"). Boom.<\\\/p>\\n\\n<p>When you call the other way around, finding all the projects a client has, i.e. <code>client.projects<\\\/code>, Rails does the equivalent of this:<\\\/p>\\n\\n<pre><code>Project.find_all_by_client_id(client.id)\\n<\\\/code><\\\/pre>\\n\\n<p>This then returns all <code>Project<\\\/code> records which are associated with a particular client, based off the <code>client_id<\\\/code> field in the <code>projects<\\\/code> table.<\\\/p>\\n\\n<hr>\\n\\n<p>With a <code>has_and_belongs_to_many<\\\/code> association, such as your users &amp; groups example, you're declaring that a user <code>has_and_belongs_to_many :groups<\\\/code>. <\\\/p>\\n\\n<p>Now if it were simply a <code>has_many :groups<\\\/code>, the foreign key would go in the <code>groups<\\\/code> table, or if it were a <code>belongs_to<\\\/code> it would go in the <code>users<\\\/code> table. Good thing to remember: the foreign key always goes in the table of the model that has the <code>belongs_to<\\\/code>.<\\\/p>\\n\\n<p>You're also declaring that a group <code>has_and_belongs_to_many :users<\\\/code>, and so we come across the same problem. We can't declare the key in the users table because it doesn't belong there (because a user has many groups, you would need to store all the group ids the user belongs to) or the groups table for the same reasons.<\\\/p>\\n\\n<p>This is why for a <code>has_and_belongs_to_many<\\\/code> we need to create what's known as a <em>join table<\\\/em>. This table has two and only two fields (both of them foreign keys), one for one side of the association and another for the other. To create this table, we would put this in a migration's <code>self.up<\\\/code> method:<\\\/p>\\n\\n<pre><code>create_table :groups_users, :id =&gt; false do |t|\\n  t.integer :group_id\\n  t.integer :user_id\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>A couple of things to note here:<\\\/p>\\n\\n<ol>\\n<li>The table name is the two names of the two associations in alphabetical order. G comes before U and so the table name is <code>groups_users<\\\/code>.<\\\/li>\\n<li>There's the <code>:id<\\\/code> option here which, when given the value of <code>false<\\\/code> generates a table with no primary key. A join table doesn't need a primary key because its purpose is to just join other tables together.<\\\/li>\\n<li>We store the <code>group_id<\\\/code> and <code>user_id<\\\/code> as integer fields, just like we would on a <code>belongs_to<\\\/code> association.<\\\/li>\\n<\\\/ol>\\n\\n<p>This table will then keep track of what groups have what users and vice versa.<\\\/p>\\n\\n<p>There's no need to define additional columns on either the <code>users<\\\/code> or <code>groups<\\\/code> table because the join table has got that under control.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"5467521":{"id":"5467521","date":"2011-03","score":"7","body":"\"<p>the <code>pending<\\\/code> method needs to be called inside a test, rather than on the class:<\\\/p>\\n\\n<pre><code>test \\\"it works\\\" do\\n  pending \\\"well, it will eventually\\\"\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><testing><activesupport>","commentcount":"1","accepted":"yes"},"5479075":{"id":"5479075","date":"2011-03","score":"8","body":"\"<p>Add this line to your Gemfile:<\\\/p>\\n\\n<pre><code>gem 'database_cleaner'\\n<\\\/code><\\\/pre>\\n\\n<p>This is because <code>cucumber-rails<\\\/code> doesn't automatically depend on <code>database_cleaner<\\\/code> because you may be building a Rails application without a database, and so you must explicitly require it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><cucumber><integration-testing><capybara>","commentcount":"1","accepted":""},"5480152":{"id":"5480152","date":"2011-03","score":"0","body":"\"<p>You can reference this association using the <code>user<\\\/code> method defined on <code>Post<\\\/code> objects by the <code>belongs_to<\\\/code>:<\\\/p>\\n\\n<pre><code>&lt;%= post.user.name %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>You can read more in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/association_basics.html\\\" rel=\\\"nofollow\\\">associations guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><associations>","commentcount":"5","accepted":""},"5492037":{"id":"5492037","date":"2011-03","score":"0","body":"\"<p>Yes, try using <code>request.request_uri<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><url><routing><request>","commentcount":"0","accepted":""},"5492207":{"id":"5492207","date":"2011-03","score":"26","body":"\"<p>I think you answered your own question by mentioning <code>assert_queries<\\\/code>, but here goes:<\\\/p>\\n\\n<p>I would recommend taking a look at the code behind <code>assert_queries<\\\/code> and using that to build your own method which you can use to count queries. The main magic involved here is this line:<\\\/p>\\n\\n<pre><code>ActiveSupport::Notifications.subscribe('sql.active_record', SQLCounter.new)\\n<\\\/code><\\\/pre>\\n\\n<p>I had a bit of a tinker this morning and ripped out the parts of ActiveRecord that do the query counting and came up with this:<\\\/p>\\n\\n<pre><code>module ActiveRecord\\n  class QueryCounter\\n    cattr_accessor :query_count do\\n      0\\n    end\\n\\n    IGNORED_SQL = [\\\/^PRAGMA (?!(table_info))\\\/, \\\/^SELECT currval\\\/, \\\/^SELECT CAST\\\/, \\\/^SELECT @@IDENTITY\\\/, \\\/^SELECT @@ROWCOUNT\\\/, \\\/^SAVEPOINT\\\/, \\\/^ROLLBACK TO SAVEPOINT\\\/, \\\/^RELEASE SAVEPOINT\\\/, \\\/^SHOW max_identifier_length\\\/]\\n\\n    def call(name, start, finish, message_id, values)\\n      # FIXME: this seems bad. we should probably have a better way to indicate\\n      # the query was cached\\n      unless 'CACHE' == values[:name]\\n        self.class.query_count += 1 unless IGNORED_SQL.any? { |r| values[:sql] =~ r }\\n      end\\n    end\\n  end\\nend\\n\\nActiveSupport::Notifications.subscribe('sql.active_record', ActiveRecord::QueryCounter.new)\\n\\nmodule ActiveRecord\\n  class Base\\n    def self.count_queries(&amp;block)\\n      ActiveRecord::QueryCounter.query_count = 0\\n      yield\\n      ActiveRecord::QueryCounter.query_count\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>You will be able to reference the <code>ActiveRecord::Base.count_queries<\\\/code> method anywhere. Pass it a block wherein your queries are run and it will return the number of queries that have been executed:<\\\/p>\\n\\n<pre><code>ActiveRecord::Base.count_queries do\\n  Ticket.first\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Returns \\\"1\\\" for me. To make this work: put it in a file at <code>lib\\\/active_record\\\/query_counter.rb<\\\/code> and require it in your <code>config\\\/application.rb<\\\/code> file like this:<\\\/p>\\n\\n<pre><code>require 'active_record\\\/query_counter'\\n<\\\/code><\\\/pre>\\n\\n<p>Hey presto!<\\\/p>\\n\\n<hr>\\n\\n<p>A little bit of explanation probably is required. When we call this line:<\\\/p>\\n\\n<pre><code>    ActiveSupport::Notifications.subscribe('sql.active_record', ActiveRecord::QueryCounter.new)\\n<\\\/code><\\\/pre>\\n\\n<p>We hook into Rails 3's little notifications framework. It's a shiny little addition to the latest major version of Rails that nobody really knows about. It allows us to subscribe to notifications of events within Rails by using the <code>subscribe<\\\/code> method. We pass in the event we want to subscribe to as the first argument then any object that responds to <code>call<\\\/code> as the second.<\\\/p>\\n\\n<p>In this case when a query is executed our little query counter will dutifully increment the ActiveRecord::QueryCounter.query_count variable, but only for the <em>real<\\\/em> queries.<\\\/p>\\n\\n<p>Anyway, this was fun. I hope it comes useful to you.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<mysql><ruby-on-rails><rspec><rails-activerecord>","commentcount":"2","accepted":"yes"},"5492943":{"id":"5492943","date":"2011-03","score":"3","body":"\"<p>You haven't defined the <code>token<\\\/code> field in your <code>stages<\\\/code> table. You can do this by generating a migration that has this:<\\\/p>\\n\\n<pre><code>add_column :stages, :token, :string\\n<\\\/code><\\\/pre>\\n\\n<p>Or by simply running a migration that already has this (if there is one)<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"5520113":{"id":"5520113","date":"2011-04","score":"0","body":"\"<p>If <code>@topicable<\\\/code> is of a <code>Video<\\\/code> object then it will go to the <code>VideosController<\\\/code>. You need to set the path manually:<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"x\\\", topicable_path(@topicable), ... %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><delete><controller>","commentcount":"1","accepted":"yes"},"5521574":{"id":"5521574","date":"2011-04","score":"0","body":"\"<p>I'm assuming here that by something not being processed as AJAX that you mean that it's not rendering the <code>view.js.erb<\\\/code> file, but rather the <code>view.html.erb<\\\/code> file instead. You can fix this by forcing the format of the URL in your JS like this:<\\\/p>\\n\\n<pre><code>var url = $('.edit_video').attr('action') + \\\".js\\\";\\n<\\\/code><\\\/pre>\\n\\n<p>That would then send it to the right format for your action.  <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery><ruby-on-rails><ruby><ajax><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"5526115":{"id":"5526115","date":"2011-04","score":"0","body":"\"<p>You've got an older version of Bundler installed, you will need to run <code>gem install bundler<\\\/code> to update it to the latest version.<\\\/p>\\n\\n<p>Rails depends on a version of Bundler matching the dependency version of <code>~&gt; 1.0<\\\/code>. If you've got a version of Bundler installed, such as <code>1.0.0<\\\/code>, the process of <code>gem install rails<\\\/code> sees this dependency is matched already and so won't update Bundler. Therefore, you need to run <code>gem install bundler<\\\/code> to update it to the latest version.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><bundler>","commentcount":"4","accepted":"yes"},"5532302":{"id":"5532302","date":"2011-04","score":"2","body":"\"<p>This is happening because you're setting the <code>@store.user_id<\\\/code> AFTER saving it.<\\\/p>\\n\\n<p>Ideally, you should be using the association builder for this:<\\\/p>\\n\\n<pre><code>def new\\n  @store = @current_user.store.build(params[:store])\\n<\\\/code><\\\/pre>\\n\\n<p>More information about these can be found in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/assoication_basics.html\\\" rel=\\\"nofollow\\\">\\\"Association Basics\\\"<\\\/a> guide.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><associations><belongs-to><has-one>","commentcount":"1","accepted":"yes"},"5532644":{"id":"5532644","date":"2011-04","score":"0","body":"\"<p>The <code>edit<\\\/code> action here will provide a form which will allow you to edit the existing record as well as its nested attributes. This is why it's replacing the existing object. <\\\/p>\\n\\n<p>If you only want people to add new comment titles then I would recommend building a new object in your <code>edit<\\\/code> action like this:<\\\/p>\\n\\n<pre><code>def edit\\n  video = current_user.videos.find(params[:id])\\n  video.comment_titles.build\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then this will be available as an additional row in your <code>fields_for<\\\/code> call. To only make this show new objects:<\\\/p>\\n\\n<pre><code>&lt;% f.fields_for :comment_titles do |t| %&gt;\\n  &lt;% if t.object.new_record? %&gt;\\n    # stuff goes here\\n  &lt;% end %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>However this restricts people to being able to only <em>add<\\\/em> new items in an <code>edit<\\\/code> action, which may seen counter-intuitive to some users.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><nested-attributes>","commentcount":"0","accepted":"yes"},"5535238":{"id":"5535238","date":"2011-04","score":"2","body":"\"<p>Devise does not provide a functionality to set the length of this token. You would have to override the <code>generate_token<\\\/code> method on your model to change the outcome of this token.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><devise>","commentcount":"0","accepted":"yes"},"5544892":{"id":"5544892","date":"2011-04","score":"0","body":"\"<p>Your <code>@board_id<\\\/code> and <code>@conversation_id<\\\/code> variables are both nil, as it says in the error message:<\\\/p>\\n\\n<pre><code>No route matches {:controller=&gt;\\\"conversations\\\", \\n                  :action=&gt;\\\"reply\\\",\\n                  :id=&gt;nil,\\n                  :board_id=&gt;nil\\n                 }\\n<\\\/code><\\\/pre>\\n\\n<p>Note the <code>:id<\\\/code> and <code>:board_id<\\\/code> parameters here.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routing><rails-routing>","commentcount":"0","accepted":""},"5546818":{"id":"5546818","date":"2011-04","score":"1","body":"\"<p>I would recommend using the <a href=\\\"https:\\\/\\\/github.com\\\/pauldix\\\/typhoeus\\\" rel=\\\"nofollow\\\">Typhoeus<\\\/a> gem. It's got a pretty clean API and allows you to make concurrent requests.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><http><curl>","commentcount":"1","accepted":"yes"},"5558473":{"id":"5558473","date":"2011-04","score":"0","body":"\"<p>A couple of things. By doing this:<\\\/p>\\n\\n<pre><code> distribution_sheet = DistributionSheet.find(:all, :conditions =&gt; [\\\"lifecycle_state = ?\\\",\\\"open\\\"]).last\\n<\\\/code><\\\/pre>\\n\\n<p>You're loading the every single <code>DistributionSheet<\\\/code> object in your database that meets those conditions. It may seem quick now, but when you've got a ton of records it will take a while. Best to do this instead:<\\\/p>\\n\\n<pre><code>distribution_sheet = DistributionSheet.first(:conditions =&gt; \\\"lifecycle_state = 'open'\\\", :order =&gt; \\\"id DESC\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>That'll accomplish the same goal but won't load the entire association first of all, just the one record you need.<\\\/p>\\n\\n<p>Secondly, perhaps rather than checking <code>@result.size &gt; 1<\\\/code> you should be checking it on the association instead:<\\\/p>\\n\\n<pre><code>distribution_sheet.results.count &gt; 1\\n<\\\/code><\\\/pre>\\n\\n<p>This will do an SQL query to count the number of <code>results<\\\/code> for a <code>distribution_sheet<\\\/code> object. You need to have a <code>has_many :results<\\\/code> in the <code>DistributionSheet<\\\/code> model first.<\\\/p>\\n\\n<p>So a couple more things: I would recommend reading the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">Getting Started guide<\\\/a> as well as the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/association_basics.html\\\" rel=\\\"nofollow\\\">Association Basics guide<\\\/a> to learn the basics you need in order to solve this problem correctly.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"5560623":{"id":"5560623","date":"2011-04","score":"1","body":"\"<p>Why do both?<\\\/p>\\n\\n<p>This line:<\\\/p>\\n\\n<pre><code>facility.locations &lt;&lt; location\\n<\\\/code><\\\/pre>\\n\\n<p>Will already set the location's facility to be the specified <code>facility<\\\/code>. Both lines in this case are doing the same thing. What I would recommend doing is to use the association builder, like this:<\\\/p>\\n\\n<pre><code>facility.locations.create!(...)\\n<\\\/code><\\\/pre>\\n\\n<p>This way, Rails takes care of setting the <code>facility_id<\\\/code> field, rather than you doing a manual assignment after it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><associations>","commentcount":"2","accepted":"yes"},"5560629":{"id":"5560629","date":"2011-04","score":"3","body":"\"<p>I wrote a gem for this kind of operation, it's called <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/by_star\\\" rel=\\\"nofollow\\\"><code>by_star<\\\/code><\\\/a>. With it, you could do this to get all records created today:<\\\/p>\\n\\n<pre><code>current_user.workouts.today\\n<\\\/code><\\\/pre>\\n\\n<p>There's plenty of other helpful methods too. Give it a go.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"0","accepted":""},"5560644":{"id":"5560644","date":"2011-04","score":"10","body":"\"<p>McStretch's advice is incomplete.<\\\/p>\\n\\n<p>You will need to:<\\\/p>\\n\\n<ul>\\n<li>Remove the gem from your <code>Gemfile<\\\/code><\\\/li>\\n<li>Remove the <code>devise_for<\\\/code> call in your <code>config\\\/routes.rb<\\\/code> file<\\\/li>\\n<li>Remove the <code>devise<\\\/code> call from your <code>app\\\/models\\\/user.rb<\\\/code> file<\\\/li>\\n<li>Delete <code>config\\\/initializers\\\/devise.rb<\\\/code><\\\/li>\\n<li>Remove any custom overrides for devise's controllers or views that you may have in <code>app\\\/controllers<\\\/code> or <code>app\\\/views<\\\/code> respectively.<\\\/li>\\n<\\\/ul>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"5560651":{"id":"5560651","date":"2011-04","score":"4","body":"\"<p>You could attempt to call <code>flush<\\\/code> on the logger to force it to write to this file. Usually this would happen after every request:<\\\/p>\\n\\n<pre><code>logger.debug(\\\"asasd\\\")\\nlogger.flush\\n<\\\/code><\\\/pre>\\n\\n<p>There's also the <code>auto_flushing<\\\/code> setting on the <code>Rails.logger<\\\/code> instance itself:<\\\/p>\\n\\n<pre><code>Rails.logger.auto_flushing = true\\n<\\\/code><\\\/pre>\\n\\n<p>This will make the call to <code>logger.flush<\\\/code> unnecessary, as Rails will automatically flush the buffered output to the log file whenever it is written to.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"1","accepted":""},"5562187":{"id":"5562187","date":"2011-04","score":"0","body":"\"<p>Are you sure <code>Image.first<\\\/code> is returning this record that you just created. Double check that it contains the correct <code>photo_*<\\\/code> fields.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><database><file-upload><paperclip>","commentcount":"1","accepted":""},"5575483":{"id":"5575483","date":"2011-04","score":"1","body":"\"<p>Usually when something like this doesn't work it indicates you're missing a <code>has_many<\\\/code> association. You need to define <strong>both<\\\/strong> the <code>belongs_to<\\\/code> and <code>has_many<\\\/code> sides of the association if you wish to access them both.<\\\/p>\\n\\n<p>By the sounds of it, if it's working on your local machine but not Heroku then it would be because you haven't pushed the changes to the Heroku server and restarted the console there. Please make sure you have pushed the changes and try again.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><model-view-controller><heroku><associations><rails-routing>","commentcount":"2","accepted":"yes"},"5602105":{"id":"5602105","date":"2011-04","score":"1","body":"\"<p>Your address model should contain a <code>user_id<\\\/code> field, not a <code>id_user<\\\/code> field. It seems like you're just getting started with Rails, so I would recommend reading the official <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">Getting Started<\\\/a> and <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/association_basics.html\\\" rel=\\\"nofollow\\\">Association basics<\\\/a> guides to learn the basics.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"5603243":{"id":"5603243","date":"2011-04","score":"0","body":"\"<p>I've created a gem that will help with this kind of finding called <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/by_star\\\" rel=\\\"nofollow\\\">by_star<\\\/a>. It may be helpful to you rather than mucking about with how to build these types of queries yourself.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"5608322":{"id":"5608322","date":"2011-04","score":"0","body":"\"<p>I would recommend upgrading Devise to be the latest (1.2, at current writing) release.<\\\/p>\\n\\n<p>Then I would debug what's happening here by putting <code>Then show me the page<\\\/code> above the step that's failing. I think your flash message is wrong.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><cucumber><devise>","commentcount":"3","accepted":""},"5608519":{"id":"5608519","date":"2011-04","score":"1","body":"\"<p>This is because you're using <code>=<\\\/code> when you should be using <code>-<\\\/code> to iterate over the objects:<\\\/p>\\n\\n<pre><code>- @object.winner.prizes.each do |p|\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"5615322":{"id":"5615322","date":"2011-04","score":"3","body":"\"<pre><code>user_hash = {}\\nUser.where(:id =&gt; [1,2,3,4]).each do |user|\\n  user_hash[user.id] = user\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"5615329":{"id":"5615329","date":"2011-04","score":"3","body":"\"<p>No, marking the records as readonly is completely useless in this case and will possibly degrade performance because Rails would have to set the readonly flag on each of the objects returned rather than skipping that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"5616004":{"id":"5616004","date":"2011-04","score":"5","body":"\"<p>This is actually because GitHub's OAuth2 support doesn't mesh with the current draft of the OAuth2 specification. Basically, they want a parameter called \\\"access_token\\\" but the oauth2 gem's latest version (0.3.0 as of this writing) passes this through as \\\"oauth_token\\\", as the latest version of the draft requires.<\\\/p>\\n\\n<p>This basically works with every other provider except GitHub because they haven't yet updated their support for this alternatively named parameter.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"5616152":{"id":"5616152","date":"2011-04","score":"1","body":"\"<p>Use <code>scope<\\\/code> rather than <code>namespace<\\\/code> when you want a scoped route but not a controller within a module of the same name.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routing>","commentcount":"3","accepted":""},"5627576":{"id":"5627576","date":"2011-04","score":"1","body":"\"<p>RESTful routing is designed in such a way that you're scoping down what it is you want to do. Say you go to <code>http:\\\/\\\/example.com\\\/objects<\\\/code>. Here, you're telling the site you want a list objects.<\\\/p>\\n\\n<p>Now when you go to <code>http:\\\/\\\/example.com\\\/objects\\\/2<\\\/code> you're telling it you want to see the object with identifier of 2 in that list (or resource) of objects.<\\\/p>\\n\\n<p>Finally, when you go to <code>http:\\\/\\\/example.com\\\/objects\\\/2\\\/edit<\\\/code> you're saying you want to find the object again with identifier of 2 but this time you would like to edit it rather than view it.<\\\/p>\\n\\n<p>By going against the grain like you have suggested in routing helpers you will be causing a tremendous amount of unnecessary pain for yourself and for anybody else reading your code.<\\\/p>\\n\\n<p>However if you do choose to go this path (again, I advise against it) then yes, defining two routes is the only way.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><resources><routing>","commentcount":"6","accepted":"yes"},"5627631":{"id":"5627631","date":"2011-04","score":"0","body":"\"<p>Rather than finding the text:<\\\/p>\\n\\n<pre><code>html = Nokogiri::HTML(html)\\nhtml.css(\\\"div.amt\\\").children[1].text.gsub(\\\/^Total \\\/, '')\\n<\\\/code><\\\/pre>\\n\\n<p>I assume here that the HTML is structured in such a way that the second child of any <code>div.amt<\\\/code> tag is the value that you're after, and then we'll just grab the text of that and gsub it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><nokogiri>","commentcount":"0","accepted":""},"5627973":{"id":"5627973","date":"2011-04","score":"9","body":"\"<p>You're missing the <code>id<\\\/code> parameter from this helper:<\\\/p>\\n\\n<pre><code>current_page?(:controller =&gt; \\\"users\\\", :action =&gt; \\\"show\\\", :id =&gt; \\\"1\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>It expects you to pass a full route through. If you don't want this and only want to match on the controller and action then I would recommend coding your own.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><current-page>","commentcount":"1","accepted":"yes"},"5645333":{"id":"5645333","date":"2011-04","score":"4","body":"\"<p>Hey there, I have a gem called <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/by_star\\\" rel=\\\"nofollow\\\">by_star<\\\/a> which could help you with these kinds of queries. In your case you would only need to do this in your controller:<\\\/p>\\n\\n<pre><code>@sales = Sale.by_month\\n<\\\/code><\\\/pre>\\n\\n<p>by_star takes care of working out what month and year it is, as well as the messy SQL.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<sql><ruby-on-rails><date>","commentcount":"4","accepted":""},"5656160":{"id":"5656160","date":"2011-04","score":"0","body":"\"<p>You can't do that programatically other than manually specifying the prefix manually when the files are required. There's no way for Ruby to know other than if you tell it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><path><gem><require><rails-engines>","commentcount":"1","accepted":""},"5658738":{"id":"5658738","date":"2011-04","score":"2","body":"\"<p>You only need to require the <code>pg<\\\/code> gem and establish the connection to the DB:<\\\/p>\\n\\n<pre><code>require 'pg'\\n\\nActiveRecord::Base.establish_connection(:adapter =&gt; \\\"postgresql\\\"\\n                                        :username =&gt; \\\"username\\\",\\n                                        :password =&gt; \\\"password\\\",\\n                                        :database =&gt; \\\"database\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>When you define models to inherit from <code>ActiveRecord::Base<\\\/code> they will use this database connection. Everything else should work like it does in Rails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><postgresql>","commentcount":"3","accepted":"yes"},"5658854":{"id":"5658854","date":"2011-04","score":"1","body":"\"<p>It would only create the development and test databases if you ran <code>rake db:create:all<\\\/code>, not <code>rake db:create<\\\/code>. The latter will only create one or the other, depending on the environment you're working in.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><configuration>","commentcount":"1","accepted":""},"5670004":{"id":"5670004","date":"2011-04","score":"2","body":"\"<p>No, because every application is different. <a href=\\\"http:\\\/\\\/peepcode.com\\\/products\\\/rails-3-upgrade-handbook-pdf\\\" rel=\\\"nofollow\\\">The Rails 3 Upgrade Handbook<\\\/a> will get you started, as will the <a href=\\\"http:\\\/\\\/github.com\\\/rails\\\/rails_upgrade\\\" rel=\\\"nofollow\\\">rails_upgrade<\\\/a> plugin.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"5671441":{"id":"5671441","date":"2011-04","score":"7","body":"\"<p>You will need to clone it:<\\\/p>\\n\\n<pre><code>git clone git@heroku.com:your-app.git\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><heroku>","commentcount":"4","accepted":""},"5672322":{"id":"5672322","date":"2011-04","score":"6","body":"\"<p>Your best bet at this stage is to read the <code>CHANGELOG<\\\/code> files from the individual parts of Rails and attempt to glean from that what you can:<\\\/p>\\n\\n<ul>\\n<li><a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/master\\\/actionpack\\\/CHANGELOG\\\" rel=\\\"nofollow\\\">actionpack<\\\/a><\\\/li>\\n<li><a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/master\\\/activesupport\\\/CHANGELOG\\\" rel=\\\"nofollow\\\">activesupport<\\\/a><\\\/li>\\n<li><a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/master\\\/activerecord\\\/CHANGELOG\\\" rel=\\\"nofollow\\\">activerecord<\\\/a><\\\/li>\\n<li><a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/master\\\/activemodel\\\/CHANGELOG\\\" rel=\\\"nofollow\\\">activemodel<\\\/a><\\\/li>\\n<li><a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/master\\\/actionmailer\\\/CHANGELOG\\\" rel=\\\"nofollow\\\">actionmailer<\\\/a><\\\/li>\\n<li><a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/master\\\/activeresource\\\/CHANGELOG\\\" rel=\\\"nofollow\\\">activeresource<\\\/a><\\\/li>\\n<li><a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/master\\\/railties\\\/CHANGELOG\\\" rel=\\\"nofollow\\\">railties<\\\/a><\\\/li>\\n<\\\/ul>\\n\\n<p>Other than that, there's the GitHub commits which may offer more insight (hahaha, I'm funny, hey?) or the Lighthouse which is sometimes good for finding the reasonings behind changes.<\\\/p>\\n\\n<p>I would expect when Rails 3.1 is released there would be a write-up much like the <a href=\\\"http:\\\/\\\/edgeguides.rubyonrails.org\\\/3_0_release_notes.html\\\" rel=\\\"nofollow\\\">3.0 Release Notes<\\\/a> detailing the changes. As to who's responsible for that, nobody knows.<\\\/p>\\n\\n<p>As for Refinery and Spree, both of these projects would need to separate their code out into separate modules rather than polluting the global namespace. Controllers such as say, <code>PagesController<\\\/code>, would need to become <code>Refinery::PagesController<\\\/code>. Views for this controller would need to be moved into <code>app\\\/views\\\/refinery\\\/pages<\\\/code> and the model would be in <code>app\\\/models\\\/refinery<\\\/code> within the engine itself.<\\\/p>\\n\\n<p>The reasoning for this is so that applications are able to pollute the \\\"global\\\" namespace themselves with their own classes without overriding the functionality of the engines. It also stops engines from stepping on each other's toes.<\\\/p>\\n\\n<p>The problem with getting Refinery and Spree to both do this would be twofold. 1) if you've heard of the phrase \\\"herding cats\\\" it would be similar, except replace cats with rabid zombie lions. 2) You would break backwards compatibility with EVERY SINGLE APPLICATION that has used Spree or Refinery.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"5690802":{"id":"5690802","date":"2011-04","score":"0","body":"\"<p>A couple of things:<\\\/p>\\n\\n<p>1) I wouldn't recommend using <code>:controller<\\\/code> or <code>:action<\\\/code> anywhere in your views, because RESTful helpers are much shorter. For instance:<\\\/p>\\n\\n<pre><code>:controller =&gt; :projects, :action =&gt; \\\"show\\\", :id =&gt; 1\\n<\\\/code><\\\/pre>\\n\\n<p>vs. <\\\/p>\\n\\n<pre><code>project_path(1)\\n<\\\/code><\\\/pre>\\n\\n<p>2) Rather than testing for syntax errors this way, have proper integration tests which test your application, performing the same actions a user would. Commonly, this is provided by RSpec+Capybara or Cucumber.<\\\/p>\\n\\n<hr>\\n\\n<p>Now that we have the formalities out of the way, you can change the <code>describe<\\\/code> of your controller tests to this:<\\\/p>\\n\\n<pre><code> describe ProjectsController\\n   render_views\\n<\\\/code><\\\/pre>\\n\\n<p>By default, views in RSpec controller tests are stubbed out, meaning they are not accessed <em>at all<\\\/em>. By putting <code>render_views<\\\/code> inside your <code>describe<\\\/code> (or <code>context<\\\/code>) blocks, you enable this option.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rspec>","commentcount":"0","accepted":""},"5690805":{"id":"5690805","date":"2011-04","score":"1","body":"\"<p>This isn't automatically generated for you, you must have a <code>submitting_user_id<\\\/code> field added to your table by a migration.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><belongs-to>","commentcount":"0","accepted":"yes"},"5691737":{"id":"5691737","date":"2011-04","score":"3","body":"\"<p>You have to restart your server before the changes to this file takes effect.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><actioncontroller>","commentcount":"2","accepted":""},"5723357":{"id":"5723357","date":"2011-04","score":"3","body":"\"<p>Think about it like this:<\\\/p>\\n\\n<p>In the first example, you're telling Active Record to find the record in the users table with the ID of 4, and it <em>must<\\\/em> exist.<\\\/p>\\n\\n<p>In the second example, you're going to the long way and telling it \\\"please search for records that have the id attribute equal to 4 and if there's any, return the first one\\\". This is why it won't return anything.<\\\/p>\\n\\n<p>The shorter way to do this would be to use <code>find_by_id<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><database><activerecord>","commentcount":"4","accepted":"yes"},"5725341":{"id":"5725341","date":"2011-04","score":"1","body":"\"<p>Add the <code>hashed_password<\\\/code> field to your <code>users<\\\/code> table by using a migration. It's currently missing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"1","accepted":""},"5769913":{"id":"5769913","date":"2011-04","score":"8","body":"\"<p>Type <code>rake stats<\\\/code> into a terminal. It will output Code Lines of Code as well as Test Lines of Code.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><textmate><loc>","commentcount":"1","accepted":""},"5783955":{"id":"5783955","date":"2011-04","score":"11","body":"\"<p>The Rails logger is an <code>ActiveSupport::BufferedLogger<\\\/code> object, but can be re-assigned to any other kind of <code>Logger<\\\/code> object (or any object that responds to the <code>Logger<\\\/code> methods) that you wish, including something like this:<\\\/p>\\n\\n<pre><code>dev_null = Logger.new(\\\"\\\/dev\\\/null\\\")\\nRails.logger = dev_null\\nActiveRecord::Base.logger = dev_null\\n<\\\/code><\\\/pre>\\n\\n<p>Put these lines at the top of your Rake task and all logging output will be inexpensively sent to <code>\\\/dev\\\/null<\\\/code>, which is best explained by its <a href=\\\"http:\\\/\\\/en.wikipedia.org\\\/wiki\\\/\\\/dev\\\/null\\\">Wikipedia<\\\/a> article.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rake>","commentcount":"4","accepted":"yes"},"5801456":{"id":"5801456","date":"2011-04","score":"4","body":"\"<p>Use the association builder method:<\\\/p>\\n\\n<pre><code>current_user.score_cards.build(params[:score_card])\\n<\\\/code><\\\/pre>\\n\\n<p>Alternatively to <code>build<\\\/code> you can use <code>create<\\\/code> or <code>create!<\\\/code> if you don't care about the validations in the controller.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><associations>","commentcount":"0","accepted":""},"5813224":{"id":"5813224","date":"2011-04","score":"5","body":"\"<p><code>@event.start_at - some_count.minutes<\\\/code> will always work within Rails. There's also <code>seconds<\\\/code>, <code>hours<\\\/code>, <code>days<\\\/code>, <code>weeks<\\\/code>, <code>months<\\\/code>, and <code>years<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><datetime><time><timezone>","commentcount":"2","accepted":"yes"},"5827607":{"id":"5827607","date":"2011-04","score":"1","body":"\"<p>Firstly I would write the <code>work_days<\\\/code> method like this:<\\\/p>\\n\\n<pre><code>def work_days\\n  WorkDay.where(:user_id =&gt; user_id, :company_id =&gt; company_id)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Next, <code>accepts_nested_attributes_for<\\\/code> is really only for <em>real<\\\/em> associations, and so I would define a method like this:<\\\/p>\\n\\n<pre><code>def work_days=(work_day_params)\\n  # iterate over work_day_params and define new work day objects as required\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>(I may have the method name wrong)<\\\/p>\\n\\n<p>In your form you would have something like this:<\\\/p>\\n\\n<pre><code>&lt;% f.fields_for :work_days do |work_day| %&gt;\\n  &lt;%= render :partial =&gt; \\\"work_days\\\/fields\\\", :locals =&gt; { :f =&gt; work_day } %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>In that partial you would have whatever is necessary for a work day. Once this form is submitted the params should be sent through to the controller as <code>params[:nest][:work_days]<\\\/code> and with the <code>work_days=<\\\/code> method defined on your model, it should accept them and create them just like <code>accepts_nested_attributes_for<\\\/code> does.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"2","accepted":"yes"},"5827683":{"id":"5827683","date":"2011-04","score":"7","body":"\"<p>Yes, I have suggestion: test different things on different lines.<\\\/p>\\n\\n<pre><code>response.should redirect_to(new_thing_path)\\nflash[:notice].should eql(\\\"its a good thing!\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>This way, if the <code>redirect_to<\\\/code> fails it will fail on that line, and if the <code>flash[:notice]<\\\/code> is broken it will fail on that line.<\\\/p>\\n\\n<p>Additionally, your test should work.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><redirect><rspec>","commentcount":"3","accepted":"yes"},"5827724":{"id":"5827724","date":"2011-04","score":"1","body":"\"<p>Parsing the message into a particular format and then re-saving it in the database where it can then be edited at a later date is silly. I'm sorry to be so blunt, but doing it this way is fundamentally broken for one major reason: when a user goes to edit the message later on, they'll see the formatted text <strong>unless you format it back<\\\/strong>. Do you really want to be responsible for doing this?<\\\/p>\\n\\n<p>I would hope not. Because you're a programmer, you're naturally lazy and would like to do things in as few steps as possible.<\\\/p>\\n\\n<p>What I would recommend doing to solve this problem is to parse the message when you display it on the page. Before you go screaming at me that this is computationally intensive if you've got a large amount of hits, hear me out. When it's displayed on the page, you can then cache it like this:<\\\/p>\\n\\n<pre><code>&lt;% cache comment do %&gt;\\n  # code goes here\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This will store <em>the final output<\\\/em> in whatever cache you've set up with Rails, possibly Memcached or Redis, using a cache key which includes the comment's <code>updated_at<\\\/code> timestamp. Pay attention to this, it'll be useful later.<\\\/p>\\n\\n<p>Retrieval from this cache will be faster than parsing it, and will be easier for you than to convert the message back and forth between its versions.<\\\/p>\\n\\n<p>When a comment is updated, the <code>updated_at<\\\/code> timestamp will be different and so the new comment will be rendered first, then cached. In Memcached (so I'm told) it will clear the oldest cache key that hasn't been referenced if it needs more memory, thereby cleaning out the older comments.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><twitter>","commentcount":"2","accepted":""},"5845722":{"id":"5845722","date":"2011-05","score":"3","body":"\"<p>You're attempting to run code after your controller has responded. You want to move this line:<\\\/p>\\n\\n<pre><code> current_user.update_space\\n<\\\/code><\\\/pre>\\n\\n<p>to above the <code>respond_to<\\\/code> call.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"3","accepted":"yes"},"5845913":{"id":"5845913","date":"2011-05","score":"1","body":"\"<p>You can clone it using the same URL you used to push the code: <code>git clone git@heroku.com:your-app.git<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><ruby-on-rails-3><heroku>","commentcount":"0","accepted":""},"5854009":{"id":"5854009","date":"2011-05","score":"2","body":"\"<p>You cannot have a module called \\\"1.0\\\" for obvious reasons. Consider calling this <code>V1<\\\/code> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><api>","commentcount":"3","accepted":"yes"},"5854022":{"id":"5854022","date":"2011-05","score":"1","body":"\"<p>Use <code>render :template =&gt; \\\"topics\\\/show\\\"<\\\/code> and be sure to set up the <code>@topic<\\\/code> variable identically to how you do it in the <code>TopicsController#show<\\\/code> action. You will not be able to call this <code>show<\\\/code> method from the <code>PostsController<\\\/code> though.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":""},"5854372":{"id":"5854372","date":"2011-05","score":"0","body":"\"<p>To my knowledge (disclaimer: I used to work with him), it is unmaintained and therefore probably doesn't work with Rails 3.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rubygems><compatibility>","commentcount":"1","accepted":"yes"},"5882297":{"id":"5882297","date":"2011-05","score":"7","body":"\"<p>Robots are required (by common sense \\\/ courtesy more than any kind of law) to send along a User-Agent with their request. You can check for this using <code>request.env[\\\"HTTP_USER_AGENT\\\"]<\\\/code> and filter as you please.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><search-engine><spider>","commentcount":"4","accepted":"yes"},"5918372":{"id":"5918372","date":"2011-05","score":"0","body":"\"<p>Storing it in a cache is one idea, yes.<\\\/p>\\n\\n<p>But storing it in a <code>counter_cache<\\\/code> column is probably a better idea. That way even if your server was restarted somehow you wouldn't loose the cached values. See <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/association_basics.html\\\" rel=\\\"nofollow\\\">http:\\\/\\\/guides.rubyonrails.org\\\/association_basics.html<\\\/a>, section 4.1.2.4.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":""},"5925263":{"id":"5925263","date":"2011-05","score":"1","body":"\"<p>The <code>post<\\\/code> method here expects parameters as the second argument, not objects. This is because the <code>create<\\\/code> action in your controller is going to be using the <code>params<\\\/code> method to retrieve these parameters and use them in the process of creating a new topic, using code like this:<\\\/p>\\n\\n<pre><code>Topic.new(params[:topic])\\n<\\\/code><\\\/pre>\\n\\n<p>So therefore your <code>params[:topic]<\\\/code> needs to be the <em>attributes<\\\/em> of the project you want to create, not an existing <code>Topic<\\\/code> object. However, you could use <code>Factory.build :topic<\\\/code> to get an instantiated <code>Topic<\\\/code> object and then do this to make it work:<\\\/p>\\n\\n<pre><code>post :create, :topic =&gt; topic.attributes\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><factory-girl><testunit>","commentcount":"1","accepted":"yes"},"5925939":{"id":"5925939","date":"2011-05","score":"2","body":"\"<p>Do you have the build tools from XCode installed? You will need them if you want to <code>make<\\\/code> things.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><rvm><compilation>","commentcount":"2","accepted":""},"5931394":{"id":"5931394","date":"2011-05","score":"2","body":"\"<p>The <code>exist?<\\\/code> method was made for this:<\\\/p>\\n\\n<pre><code>Record.exist?\\n<\\\/code><\\\/pre>\\n\\n<p>It will do a query to check if a single record for the table exists and will return <code>true<\\\/code> if it does.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><activerecord>","commentcount":"0","accepted":""},"5942966":{"id":"5942966","date":"2011-05","score":"5","body":"\"<p>Did you run <code>rake db:test:prepare<\\\/code>? It looks to me like your <code>Post<\\\/code> model has <code>published_date<\\\/code>, but your Factory is saying it doesn't exist. Not running this rake task would be the major thing that would cause this.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><activerecord><rspec><factory-girl>","commentcount":"1","accepted":"yes"},"5942988":{"id":"5942988","date":"2011-05","score":"0","body":"\"<p>You could use this instead:<\\\/p>\\n\\n<pre><code>resources :courses, :except =&gt; :index\\nmatch '\\\/courses', :to =&gt; 'courses#new'\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>except<\\\/code> option takes a symbol or an array of actions in the controller you do not want to define resource routes for. In this case, we turn off the route for the <code>index<\\\/code> action, <code>\\\/courses\\\/<\\\/code>.<\\\/p>\\n\\n<p>Next, we define the same route that would have been defined for the <code>index<\\\/code> action, but point it at <code>CoursesController#new<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routing>","commentcount":"0","accepted":""},"5957603":{"id":"5957603","date":"2011-05","score":"2","body":"\"<p>Use <code>build<\\\/code> for building associations, instead of <code>new<\\\/code>, as it will define the foreign key correctly. To solve your problem, use <code>merge<\\\/code> to merge in the user to the parameters for the post:<\\\/p>\\n\\n<pre><code>@topic.posts.build(params[:post].merge(:user =&gt; current_user))\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"3","accepted":"yes"},"5958990":{"id":"5958990","date":"2011-05","score":"2","body":"\"<p>This is because you've defined two servers which are listening on port 80. Remove the first one and it should work.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><ubuntu><nginx><natty>","commentcount":"2","accepted":"yes"},"5961008":{"id":"5961008","date":"2011-05","score":"1","body":"\"<p>You may be a victim of <code>ActiveSupport::BufferedLogger<\\\/code>, which buffers the log output and flushes it when asked to. Because you're not asking it to do it in your <code>lib<\\\/code> files (hint: it automatically does it in controllers \\\/ models \\\/ whatever is used in a request), then it simply won't.<\\\/p>\\n\\n<p>What you need to do is tell it you want to do it wherever you need it:<\\\/p>\\n\\n<pre><code>Rails.logger.auto_flushing = true\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can call the other <code>Rails.logger<\\\/code> methods to your heart's content.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"1","accepted":""},"5961513":{"id":"5961513","date":"2011-05","score":"1","body":"\"<p>You can't do this without a user sending a screenshot themselves.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"6044697":{"id":"6044697","date":"2011-05","score":"1","body":"\"<p>You could define <code>serializable_hash<\\\/code> on your model which defines the keys and values to return. Rails will then return JSON \\\/ XML based on this hash:<\\\/p>\\n\\n<pre><code>def serializable_hash\\n  { :name =&gt; \\\"Stack Overflow\\\",\\n    :created_at =&gt; created_at\\\",\\n    :posts_count =&gt; posts.count\\n  }\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><json><ruby-on-rails-3>","commentcount":"0","accepted":""},"6044719":{"id":"6044719","date":"2011-05","score":"5","body":"\"<p>The <code>authorize<\\\/code> method is not working because you re-defined it as a blank method at the bottom of <code>PhotosController<\\\/code>. Remove this re-definition and then it will work.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><authentication>","commentcount":"0","accepted":""},"6049054":{"id":"6049054","date":"2011-05","score":"23","body":"\"<p>You're looking for <code>Rack::Utils.parse_nested_query(query)<\\\/code>, which will convert it back into a <code>Hash<\\\/code>. You can get it by using this line:<\\\/p>\\n\\n<pre><code>require 'rack\\\/utils'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"3","accepted":"yes"},"6060485":{"id":"6060485","date":"2011-05","score":"25","body":"\"<p>You should be able to do this: <code>Time.zone.now<\\\/code>. That would display the current time in Melbourne if that's what <code>Time.zone<\\\/code> is set to.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><date><timezone>","commentcount":"4","accepted":"yes"},"6072889":{"id":"6072889","date":"2011-05","score":"2","body":"\"<p>You cannot do this at the moment in Rails 3.0, although it may be possible in Rails 3.1 due to the identity map. You will have to save the object to the database before you can read the attribute like that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><activerecord>","commentcount":"2","accepted":""},"6084912":{"id":"6084912","date":"2011-05","score":"2","body":"\"<p>(I assume 2.3.11, given it's the latest)<\\\/p>\\n\\n<p><code>rails _2.3.11_ new app<\\\/code> will do this for you without you having to muck about.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"6087146":{"id":"6087146","date":"2011-05","score":"1","body":"\"<p>Where <code>obj<\\\/code> is an instance of your <code>User<\\\/code> (?) model.<\\\/p>\\n\\n<pre><code>obj.username = nil\\nobj.password = nil\\nobj.save\\n<\\\/code><\\\/pre>\\n\\n<p>This will set the username and password fields to null (<code>nil<\\\/code>) and update the record in the database<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"6087166":{"id":"6087166","date":"2011-05","score":"3","body":"\"<p>No, it's not possible. Once a gem has been loaded it will be available for all controllers \\\/ models \\\/ everything. This should not be a primary concern for you. RAM and CPU time is cheap, programmer's time is not.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"6087175":{"id":"6087175","date":"2011-05","score":"2","body":"\"<p>You've got a space in your <code>order_received<\\\/code> definition:<\\\/p>\\n\\n<pre><code>def order_received (order)\\n<\\\/code><\\\/pre>\\n\\n<p>That should be this:<\\\/p>\\n\\n<pre><code>def order_received(order)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><gmail><mailer>","commentcount":"0","accepted":"yes"},"6090818":{"id":"6090818","date":"2011-05","score":"35","body":"\"<p>You don't need to use the FasterCSV gem with Ruby 1.9.2 as it is already included as standard library's <code>CSV<\\\/code>. Just change references in your application from <code>FasterCSV<\\\/code> to <code>CSV<\\\/code> and remove the <code>vendor\\\/gems\\\/fastercsv<\\\/code> folder and it should Just Work(tm)<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><gem><fastercsv>","commentcount":"3","accepted":""},"6091634":{"id":"6091634","date":"2011-05","score":"10","body":"\"<p>This is happening because the latest version of Rake (0.9.0) is broken on Rails 3.0 applications and we are currently awaiting a solid fix.<\\\/p>\\n\\n<p>Right now, a way around this error is to add this line above the <code>load_tasks<\\\/code> line in your application's <code>Rakefile<\\\/code>:<\\\/p>\\n\\n<pre><code>&lt;AppName&gt;::Application.send :include, ::Rake::DSL if defined?(::Rake::DSL)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"6102827":{"id":"6102827","date":"2011-05","score":"0","body":"\"<p>I think this is happening because your RubyGems version is out of date. Try running <code>gem update --system<\\\/code> to update it to the latest version<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><windows>","commentcount":"1","accepted":""},"6130071":{"id":"6130071","date":"2011-05","score":"0","body":"\"<p>Try putting your <code>bind<\\\/code> call on the same line as the <code>new_comment<\\\/code> reference:<\\\/p>\\n\\n<pre><code>$('#new_comment').bind('ajax:success', function(evt, data, status, xhr){\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><ruby-on-rails><ajax><syntax-error>","commentcount":"1","accepted":""},"6131783":{"id":"6131783","date":"2011-05","score":"7","body":"\"<p>The way I view this is that acceptance tests (i.e. Cucumber \\\/ Capybara), test the interactions that a user would normally perform on the application. This usually includes things like can a user create a specific resource with valid data and then do they see errors if they enter <em>invalid<\\\/em> data. A controller test is more for things that a user <em>shouldn't<\\\/em> be able to normally do or extreme edge cases that would be too (cu)cumbersome to test with Cucumber.<\\\/p>\\n\\n<p>Usually when people write controller tests, they are effectively testing the <em>same thing<\\\/em>. The only reason to test a controller's method in a controller test are for edge cases.<\\\/p>\\n\\n<p>Edge cases such as if a user enters an invalid ID to a show page they should be shown a 404 page. This is a very simple kind of thing to test with a controller test, and I would recommend doing that. You want to make sure that when they hit the action that they receive a 404 response, boom, simple.<\\\/p>\\n\\n<p>Making sure that your <code>new<\\\/code> action responds successfully and doesn't syntax error? Please. That's what your Cucumber features would tell you. If the action suddenly develops a <em>Case of the Whoops<\\\/em>, your feature will break and then you will fix that. <\\\/p>\\n\\n<p>Another way of thinking about it is do you want to test a specific action responds in a certain way (i.e. controller tests), or do you care more about that a user can go to that <code>new<\\\/code> action and actually go through the whole motions of creating that resource (i.e. acceptance tests)?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rspec><bdd>","commentcount":"0","accepted":""},"6146593":{"id":"6146593","date":"2011-05","score":"3","body":"\"<p>You're telling it to install any patch version greater than or equal to 2.0.9. If you want to specifically install that version just do this:<\\\/p>\\n\\n<pre><code>gem 'arel', '2.0.9'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><gem>","commentcount":"0","accepted":"yes"},"6146735":{"id":"6146735","date":"2011-05","score":"1","body":"\"<p>Alright, there's about 50 different questions there, but let's see how we go.<\\\/p>\\n\\n<p>First: the <code>params<\\\/code> method returns a list of parameters received by your controller's action. These are often (99%) sent through by the request, but also can be  set by <em>middleware<\\\/em>. These two parameters, <code>params[:session][:email]<\\\/code> and <code>params[:session][:password]<\\\/code>are coming through like that because on the page before hand you've defined a text_field like this (I'm guessing):<\\\/p>\\n\\n<pre><code> &lt;%= text_field \\\"session\\\", \\\"email\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>The first argument to this method tells Rails what object to operate on, namely a <code>@session<\\\/code> (or <code>@user_session<\\\/code>) object (which is not the same as the <code>session<\\\/code> object you may see in controllers). The second argument gives a special, unique name to this field. In this case, it's <code>email<\\\/code>. Because it's been defined like this, it will be passed back to the controller as <code>params[:session][:email]<\\\/code> and not simply <code>params[:email]<\\\/code>. It is done this way so that you can differentiate different fields which may send back similarly named values.<\\\/p>\\n\\n<p>That should answer what <code>session<\\\/code> is. The <code>:session<\\\/code> \\\"thing\\\" itself is actually a symbol. If you've <a href=\\\"http:\\\/\\\/manning.com\\\/black2\\\" rel=\\\"nofollow\\\">done some reading about Ruby<\\\/a> you would know what they are.<\\\/p>\\n\\n<p>Finally: the <code>class &lt;&lt; self<\\\/code> 'special sauce' is actually defining a class-level method for the class that it's in. You could also define this by doing it this way:<\\\/p>\\n\\n<pre><code>def self.authenticate(arguments)\\n  # code goes here\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Some people prefer <code>class &lt;&lt; self<\\\/code> as it allows you to group class methods into a big block of them, but others prefer the explicit statement of <code>def self.method<\\\/code> (there's even some who do <code>def SomeClass.method<\\\/code>! Don't listen to them...). It's up to you what path you choose here.<\\\/p>\\n\\n<p>Okay, so my estimate of 50 questions was a little off (by 48) but I think this should help you understand some things. If you're still confused, see a doctor or read <a href=\\\"http:\\\/\\\/manning.com\\\/katz\\\" rel=\\\"nofollow\\\">a Rails book<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"6172041":{"id":"6172041","date":"2011-05","score":"7","body":"\"<p>You're not calling the method there, you're actually referencing the same variable you're in the process of defining! This is a little gotcha in Ruby.<\\\/p>\\n\\n<p>What would be better is if you referenced and set the instance variable instead:<\\\/p>\\n\\n<pre><code>@my_variable = @my_variable + 3\\n<\\\/code><\\\/pre>\\n\\n<p>Or shorter:<\\\/p>\\n\\n<pre><code>@my_variable += 3\\n<\\\/code><\\\/pre>\\n\\n<p>Or you could call the setter method, as you found (and <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/6172017\\\/why-arent-these-methods-resolving\\\/6172032#6172032\\\">Jits pointed<\\\/a>) out:<\\\/p>\\n\\n<pre><code>self.my_variable += 3\\n<\\\/code><\\\/pre>\\n\\n<p>This last one will call the <code>my_variable=<\\\/code> method defined by the <code>attr_accessor<\\\/code>, where the other two will only modify a variable. If you did it this way, you could override <code>my_variable=<\\\/code> to do something different to the value passed in:<\\\/p>\\n\\n<pre><code>def my_variable=(value)\\n  # do something here\\n  @my_variable = value\\nend\\n<\\\/code><\\\/pre>\\n\\n<p><strong>BONUS<\\\/strong><\\\/p>\\n\\n<p>Or you could call the method explicitly by passing an empty set of arguments through:<\\\/p>\\n\\n<pre><code>my_variable = my_variable() + 3\\n<\\\/code><\\\/pre>\\n\\n<p>This is not \\\"The Ruby Way\\\" to go about it, but it's still interesting to know that you can still call a method this way if you have a local variable of the same name.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"1","accepted":"yes"},"6172183":{"id":"6172183","date":"2011-05","score":"2","body":"\"<p>This is an expansion of Devin M's answer.<\\\/p>\\n\\n<p>To do this, you don't have to use JavaScript. You could simply pass the ids of the objects you want to delete to a routing helper like this:<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"Delete these\\\", destroy_many_items_path(:ids =&gt; [1,2,3]), :method =&gt; :delete ... %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Then you would have to define this route in your <code>config\\\/routes.rb<\\\/code> file:<\\\/p>\\n\\n<pre><code>resources :items do\\n  collection do\\n    delete :destroy_many\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>And then in your controller:<\\\/p>\\n\\n<pre><code>def destroy_many\\n  items = Item.find(params[:ids])\\n  items.each { |item| item.destroy }\\n  ...\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Or as mischa points out in the comments:<\\\/p>\\n\\n<pre><code>def destroy_many\\n  Item.where(:id =&gt; params[:ids]).delete_all\\n  ...\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":""},"6181859":{"id":"6181859","date":"2011-05","score":"5","body":"\"<p>After the action is complete it renders the template automatically, thus you cannot render \\\/ redirect after the request is complete. You could solve this by putting the <code>redirect_to<\\\/code> at the end of the actions that you need it for. This is not what <code>around_filters<\\\/code> were designed to do.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><redirect><filter>","commentcount":"0","accepted":"yes"},"6182769":{"id":"6182769","date":"2011-05","score":"4","body":"\"<p>If you're namespacing like this, Rails requires the controllers to be at their correct paths, such as <code>app\\\/controllers\\\/account\\\/users_controller.rb<\\\/code>. If you don't want to do this, then use <code>scope<\\\/code> instead:<\\\/p>\\n\\n<pre><code>scope :path =&gt; \\\"account\\\" do\\n  resources :users\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><namespaces><routes><production-environment>","commentcount":"2","accepted":"yes"},"6183760":{"id":"6183760","date":"2011-05","score":"2","body":"\"<p>You need to require that file, as constants aren't autoloaded from <code>lib<\\\/code> in Rails 3:<\\\/p>\\n\\n<pre><code>require 'clear_company'\\n<\\\/code><\\\/pre>\\n\\n<p>You could also add <code>lib<\\\/code> back to the load paths by putting this in your <code>Application<\\\/code>'s class:<\\\/p>\\n\\n<pre><code>config.autoload_paths += %W(#{Rails.root}\\\/lib)  \\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><upgrade><initializer>","commentcount":"3","accepted":"yes"},"6198945":{"id":"6198945","date":"2011-06","score":"2","body":"\"<p>Your application is attempting to compile your javascript files into one and then cache it on the disk, which Heroku won't allow as it does not allow write access to disk. Remove the <code>:cache =&gt; true<\\\/code> from your <code>javascript_include_tag<\\\/code> line and find an alternate method to doing this for Heroku.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"6221366":{"id":"6221366","date":"2011-06","score":"6","body":"\"<p>You're not doing <code>require 'time'<\\\/code> before it, and so the <code>Time.parse<\\\/code> method (and every other method in the <code>Time<\\\/code> class) will be unavailable.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"1","accepted":"yes"},"6221512":{"id":"6221512","date":"2011-06","score":"1","body":"\"<p>Nope, that's how you do it. There is no shorter way, at least with vanilla ARel. You may find something within <a href=\\\"https:\\\/\\\/github.com\\\/ernie\\\/meta_where\\\" rel=\\\"nofollow\\\">meta_where<\\\/a> that could do it though.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"1","accepted":"yes"},"6223628":{"id":"6223628","date":"2011-06","score":"3","body":"\"<p>You're not supposed to have a space between the method name and the arguments list for that method. It should be:<\\\/p>\\n\\n<pre><code>def initialize(product_id, category_id, category_name)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><syntax><ubuntu><gedit>","commentcount":"0","accepted":"yes"},"6224825":{"id":"6224825","date":"2011-06","score":"2","body":"\"<p>The <code>:from<\\\/code> key there is actually the email you're sending it from. GMail does not allow this to be overriden, as it can lead to abuse.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><gmail>","commentcount":"3","accepted":""},"6261662":{"id":"6261662","date":"2011-06","score":"3","body":"\"<p>First:<\\\/p>\\n\\n<p>Use a path:<\\\/p>\\n\\n<pre><code>gem \\\"blah\\\", :path =&gt; \\\"~\\\/Code\\\/blah\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Second (to answer Zabba's question-as-a-comment): No it's currently not possible to automatically reload your gems in development mode. You must restart your server each time you change your gem.<\\\/p>\\n\\n<p>A better way would be to generate your gem with a dummy application included in its test suite and test against that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><git><gem><bundler>","commentcount":"1","accepted":"yes"},"6271675":{"id":"6271675","date":"2011-06","score":"9","body":"\"<p>This is what the <code>db\\\/schema.rb<\\\/code> file is for. If you've only got structural changes in your migrations you will be able to run <code>rake db:schema:load<\\\/code> rather than running <code>rake db:migrate<\\\/code> to get the absolute structure for your tables.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><migration>","commentcount":"2","accepted":"yes"},"6271703":{"id":"6271703","date":"2011-06","score":"3","body":"\"<p>I fixed this by switching to the <code>master<\\\/code> branch of Devise on my <code>3-1-stable<\\\/code> Rails application.<\\\/p>\\n\\n<pre><code>gem 'devise', :git =&gt; \\\"git:\\\/\\\/github.com\\\/plataformatec\\\/devise\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"6273311":{"id":"6273311","date":"2011-06","score":"8","body":"\"<p>You must use a <code>lambda<\\\/code> \\\/ <code>Proc<\\\/code> object:<\\\/p>\\n\\n<pre><code>validates_presence_of :mobile_number, :unless =&gt; lambda { self.home_phone.blank? }\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"7","accepted":""},"6287130":{"id":"6287130","date":"2011-06","score":"0","body":"\"<p>This will be fixed when this issue is solved: <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/issues\\\/1589\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/rails\\\/rails\\\/issues\\\/1589<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"6288151":{"id":"6288151","date":"2011-06","score":"1","body":"\"<p>Use <code>simple_format<\\\/code> for this as it will automatically convert new lines into breaks.<\\\/p>\\n\\n<pre><code>&lt;%= simple_format(@post.description) %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"6299159":{"id":"6299159","date":"2011-06","score":"3","body":"\"<p>Define a class method to do this:<\\\/p>\\n\\n<pre><code>def profile\\n  where(:association =&gt; \\\"owner\\\", :resource_type =&gt; 'Profile').first\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>first<\\\/code> already does an implicit <code>limit 1<\\\/code> on the query, AND will order it by the primary key of the table so you'll always get the first.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><named-scope>","commentcount":"1","accepted":""},"6381008":{"id":"6381008","date":"2011-06","score":"4","body":"\"<p>You would have to define the <code>javascript_expansions<\\\/code> differently in <code>config\\\/environments\\\/development.rb<\\\/code> and <code>config\\\/environments\\\/production.rb<\\\/code>.<\\\/p>\\n\\n<p>For example, in <code>development.rb<\\\/code> you could have this:<\\\/p>\\n\\n<pre><code>config.action_view.javascript_expansions = { :default =&gt; [:jquery] }\\n<\\\/code><\\\/pre>\\n\\n<p>and in <code>production.rb<\\\/code>, this:<\\\/p>\\n\\n<pre><code>config.action_view.javascript_expansions = { :default =&gt; [\\\"jquery.min\\\"] }\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"6383776":{"id":"6383776","date":"2011-06","score":"0","body":"\"<p>The problem is that your route for the form that is generated goes to <code>\\\/posts\\\/:post_id\\\/comments<\\\/code>, which is the route defined in your <em>application<\\\/em>, but not your <em>engine<\\\/em>. Your engine only defines this route:<\\\/p>\\n\\n<pre><code>resources :comments\\n<\\\/code><\\\/pre>\\n\\n<p>This is (almost) working because the engine sees that the application has the route which matches to <code>CommentsController<\\\/code>, it's just that there's no <code>CommentsController<\\\/code> for it to go to.<\\\/p>\\n\\n<p>I downloaded the application from GitHub and had a play around and changed the <code>form_for<\\\/code> in <code>app\\\/views\\\/kurakani\\\/comments\\\/_form.html.erb<\\\/code> to be this:<\\\/p>\\n\\n<pre><code>form_for(Kurakani::Comment.new, :url =&gt; kurakani.comments_path)\\n<\\\/code><\\\/pre>\\n\\n<p>This makes the test pass, but I am not sure if it actually gives you what you want. You're probably going to want to play around with that URL part yourself.<\\\/p>\\n\\n<p>What's happening here is that this view is rendered by the main application using the <code>kurakani_list<\\\/code> helper in <code>spec\\\/dummy\\\/app\\\/posts\\\/show.html.erb<\\\/code>, meaning that any URL helper that you reference (directly or indirectly) will point to the <em>application<\\\/em> and not to the engine, like I think you want it to.<\\\/p>\\n\\n<p>So in order to tell Rails what the true route is that we want our form to go to we <em>must<\\\/em> specify the <code>:url<\\\/code> option and tell it we want to go to <code>kurakani.comments_path<\\\/code>, rather than the <code>comments_path<\\\/code> which <em>may<\\\/em> be defined by the application.<\\\/p>\\n\\n<p>If we wanted to do the reverse (reference an application route from within an engine), we would use <code>main_app<\\\/code> rather than <code>kurakani<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><ruby-on-rails-3.1>","commentcount":"0","accepted":""},"6384198":{"id":"6384198","date":"2011-06","score":"6","body":"\"<p>Use Active Record's awesome <code>sum<\\\/code> method, available for classes:<\\\/p>\\n\\n<pre><code>Transaction.sum(:value)\\n<\\\/code><\\\/pre>\\n\\n<p>Or, like you want, associations:<\\\/p>\\n\\n<pre><code>activity.transactions.sum(:value)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"6401722":{"id":"6401722","date":"2011-06","score":"0","body":"\"<p>You're not passing <code>params[:id]<\\\/code> to the <code>create<\\\/code> action at all.  This is why you're getting this error.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"6417514":{"id":"6417514","date":"2011-06","score":"3","body":"\"<p>I believe you are able to do <code>params[:controller].split(\\\"\\\/\\\").first<\\\/code>. This will return that namespace.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><namespaces>","commentcount":"0","accepted":"yes"},"6418011":{"id":"6418011","date":"2011-06","score":"2","body":"\"<p>Why aren't you building the message when it's rendered out to the page and then caching it using something like this?<\\\/p>\\n\\n<pre><code>&lt;% cache do %&gt;\\n  &lt;%= render user.notifications %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This would save  you having to do a hack in the observer and would be more \\\"standards compliant\\\" in Rails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><observer-pattern><link-to><url-helper>","commentcount":"2","accepted":""},"6419810":{"id":"6419810","date":"2011-06","score":"3","body":"\"<p>Generally for this I would define the tag like this:<\\\/p>\\n\\n<pre><code>&lt;td class=\\\"&lt;%= @priority_level %&gt;\\\"&gt;&lt;%= @priority_level %&gt;&lt;\\\/td&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>There's no reason to make Rails do more work than it really needs to do.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><html>","commentcount":"2","accepted":""},"6433694":{"id":"6433694","date":"2011-06","score":"11","body":"\"<p>In Rails 3.0, this <code>:defaults<\\\/code> argument was actually what was known as a <em>JavaScript expansion<\\\/em>, configured by Rails to expand out to include the Prototype files at <em>public\\\/javascripts<\\\/em>. <\\\/p>\\n\\n<p>In Rails 3.1, there is no longer these JavaScript expansions, but rather there's <em>manifest files<\\\/em>. Therefore you should not be using <code>javascript_include_tag :defaults<\\\/code> for this, but rather <code>javascript_include_tag :application<\\\/code>, which is the default JavaScript manifest file for your application.<\\\/p>\\n\\n<p>In a default Rails 3.1 application, there's a <code>app\\\/assets\\\/javascripts\\\/application.js<\\\/code> file which contains directives for Sprockets for which files to require. I've <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/guides\\\/asset_pipeline.html\\\">begun work on an Asset Pipeline guide<\\\/a> for Rails which explains how these files work and what the directives mean.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"5","accepted":"yes"},"6434577":{"id":"6434577","date":"2011-06","score":"0","body":"\"<p>You're calling it the wrong name. You're saying it's <code>:default<\\\/code> when it should be <code>:defaults<\\\/code>. The code in your <code>config\\\/environment.rb<\\\/code> and <code>config\\\/environments\\\/*<\\\/code> files will be overriding whatever it is that is in <code>application.rb<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"6461164":{"id":"6461164","date":"2011-06","score":"0","body":"\"<p>I use this code to parse my emails.<\\\/p>\\n\\n<pre><code>class Receiver &lt; ActionMailer::Base\\n\\n  def self.parse(email)\\n    reply_separator = \\\/(.*?)\\\\s?== ADD YOUR REPLY ABOVE THIS LINE ==\\\/m\\n    comment_text = reply_separator.match(email.body.to_s)\\n    # ...\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>email<\\\/code> object here is just a <code>Mail::Message<\\\/code> object which I get from using the <code>gmail<\\\/code> gem to read an inbox. If you're not using GMail then you should be able to use plain ol' vanilla Mail gem to connect to the mail server and then get the <code>Mail::Message<\\\/code> objects that way.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><email>","commentcount":"1","accepted":""},"6463948":{"id":"6463948","date":"2011-06","score":"1","body":"\"<p>There's two errors happening here.<\\\/p>\\n\\n<p>The first is that there is no longer a <code>public\\\/images<\\\/code>, <code>public\\\/stylesheets<\\\/code> or <code>public\\\/javascripts<\\\/code> folder within a Rails 3.1 application. They have all been moved into <code>app\\\/assets<\\\/code>. However, if you run <code>rake assets:precompile<\\\/code> then there <em>will<\\\/em> be a <code>public\\\/assets<\\\/code> folder. This is where the static assets for your application will be served out of.<\\\/p>\\n\\n<p>Whatever it is in your deploy script that is referencing these three folders needs to stop doing so or otherwise you'll continue to get this error.<\\\/p>\\n\\n<hr>\\n\\n<p>The second error is that, just like the two other people before me have kind of suggested, you need to have the Bundler gem installed on the server.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":""},"6463997":{"id":"6463997","date":"2011-06","score":"2","body":"\"<p>Set <code>@user<\\\/code> before calling <code>render<\\\/code>:<\\\/p>\\n\\n<pre><code>@user = @users.first\\nrender :file=&gt;'console\\\/users\\\/show.html.erb'\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>:locals<\\\/code> option should only be used if you are passing local variables through.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><render>","commentcount":"0","accepted":"yes"},"6464238":{"id":"6464238","date":"2011-06","score":"0","body":"\"<p>As Brian and Nate have said, read the documentation about it.<\\\/p>\\n\\n<p>I personally have a <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/ryanbigg.com\\\" rel=\\\"nofollow\\\">Jekyll-powered site<\\\/a> that you could use as an example if you're stuck. The documentation contains pretty good examples as well.<\\\/p>\\n\\n<p>But to get you started: Jekyll doesn't really have any database backing to it. You must create the directory structure--as outlined in the <a href=\\\"https:\\\/\\\/github.com\\\/mojombo\\\/jekyll\\\/wiki\\\/Usage\\\" rel=\\\"nofollow\\\">Usage guide<\\\/a>--yourself. <\\\/p>\\n\\n<p>For generating new posts, I have a script called <code>new.rb<\\\/code> in my repository. Simply because I can't be bothered remembering what the Wordpress ID was for the previous post (I imported from Wordpress).<\\\/p>\\n\\n<p>Once you've got a post written, install the <code>jekyll<\\\/code> gem:<\\\/p>\\n\\n<pre><code>gem install jekyll\\n<\\\/code><\\\/pre>\\n\\n<p>Then run <code>jekyll --server<\\\/code>. This will parse the post into beautiful HTML which you can view at <a href=\\\"http:\\\/\\\/localhost:4000\\\" rel=\\\"nofollow\\\">http:\\\/\\\/localhost:4000<\\\/a>. Once you're satisfied with it, put it online somewhere with Apache or Nginx serving it as it would any other static HTML site.<\\\/p>\\n\\n<hr>\\n\\n<p>Finally, if you're ever looking for an alternative, I've heard good things about <a href=\\\"http:\\\/\\\/nanoc.stoneship.org\\\/\\\" rel=\\\"nofollow\\\">nanoc<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"6480778":{"id":"6480778","date":"2011-06","score":"2","body":"\"<p>Yes, there is a better way. Use nested resources as described in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html#nested-resources\\\" rel=\\\"nofollow\\\">official Routing guide<\\\/a> or in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">Getting Started<\\\/a> guide. The Getting Started guide even covers this exact example of posts and comments!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"6487207":{"id":"6487207","date":"2011-06","score":"2","body":"\"<p>If you use <code>delete_all<\\\/code>, it will skip all the destroy callbacks for the records that you're deleting (helpful for when you don't want these to run) and it will return the number of records that have been deleted.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"6488349":{"id":"6488349","date":"2011-06","score":"1","body":"\"<p>That looks like YAML escaped data. You should be able to get rid of it by first parsing it through <code>YAML.load<\\\/code> and then processing it as you wish.<\\\/p>\\n\\n<hr>\\n\\n<p>As a small aside, I've personally re-implemented the basic functions of rubycas-server as a Rails engine called <a href=\\\"https:\\\/\\\/github.com\\\/reInteractive\\\/cassy\\\" rel=\\\"nofollow\\\">cassy<\\\/a>. However, I don't think it supports sending through extra attributes at the moment.<\\\/p>\\n\\n<p>I just thought I'd mention it as it gives you an alternative to try if rubycas-server doesn't work out.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><ldap><rubycas>","commentcount":"1","accepted":"yes"},"6489201":{"id":"6489201","date":"2011-06","score":"1","body":"\"<p>This error means that <code>Rails.application<\\\/code> isn't initialized. I didn't actually know that, <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/v3.0.8\\\/railties\\\/lib\\\/rails\\\/commands.rb#L29\\\" rel=\\\"nofollow\\\">I \\ncheated<\\\/a>.<\\\/p>\\n\\n<p>So that then begs the question: how did you set up this application?<\\\/p>\\n\\n<p>Perhaps this application doesn't contain a <code>config\\\/application.rb<\\\/code> file that defines a class that inherits from <code>Rails::Application<\\\/code> and therefore is causing this problem. In my application here, I've got <a href=\\\"https:\\\/\\\/github.com\\\/rails3book\\\/ticketee\\\/blob\\\/master\\\/config\\\/application.rb\\\" rel=\\\"nofollow\\\">this one<\\\/a> you could use as an example.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rake><server-error>","commentcount":"3","accepted":"yes"},"6512916":{"id":"6512916","date":"2011-06","score":"2","body":"\"<p>Your <code>select<\\\/code> field should be called <code>related_ids<\\\/code>, since it will be passing back the IDs for the selected objects, not the actual objects themselves.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"6515973":{"id":"6515973","date":"2011-06","score":"7","body":"\"<p>Try setting this directly on your <code>Comment<\\\/code> model.<\\\/p>\\n\\n<pre><code>class Comment &lt; ActiveRecord::Base\\n  self.include_root_in_json = true\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"6517916":{"id":"6517916","date":"2011-06","score":"1","body":"\"<p>You call <code>Tag.first<\\\/code> and pass it a <code>conditions<\\\/code> option.<\\\/p>\\n\\n<pre><code>@tag = Tag.first(:conditions =&gt; [\\\"LOWER (tag) LIKE ?\\\", \\\"%#{@query}%\\\"])\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"3","accepted":""},"6527684":{"id":"6527684","date":"2011-06","score":"4","body":"\"<p>A request to a Sprockets-provided asset, or really any asset on the system, is served by an entirely separate request and so it won't have access to the instance variables set up in the controller.<\\\/p>\\n\\n<p>What I would do is to have that JS in a partial somewhere that is rendered by the controller's view. That way it would have access to those variables.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"6527877":{"id":"6527877","date":"2011-06","score":"1","body":"\"<p>Your <code>form_for<\\\/code> needs to be namespaced too:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [:admin, @country] do |f| %&gt;\\n   ...\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>When you pass <code>@country<\\\/code> to <code>form_for<\\\/code> it's not going to know what namespace you want this form to go to and so it will default to just the standard <code>POST \\\/countries<\\\/code> URL.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><controller><routes><admin>","commentcount":"1","accepted":"yes"},"6542499":{"id":"6542499","date":"2011-07","score":"0","body":"\"<p>This strongly indicates you didn't set up the <code>@user<\\\/code> instance variable in <code>before<\\\/code> block for these tests. I would say that was for certain if I could see the whole test, but it certainly looks like it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"6","accepted":""},"6556136":{"id":"6556136","date":"2011-07","score":"1","body":"\"<p>This is because <code>rspec<\\\/code> is being launched as a separate process. The spec file you're defining in your Cucumber feature does not require these extensions and so they won't be made available. The reason it's working in your RSpec tests is because you <em>do<\\\/em> require these extensions.<\\\/p>\\n\\n<p>To fix this, you can add one line to the top of your Cucumber feature to require the <code>rspec\\\/subject\\\/extensions.rb<\\\/code> file:<\\\/p>\\n\\n<pre><code>Given a file named \\\"example_spec.rb\\\" with:\\n\\\"\\\"\\\"\\n  require 'rspec\\\/subject\\\/extensions'\\n\\n  class Movie\\n    def ratings\\n      [9, 7, 9]\\n    end\\n  end\\n\\n  describe Movie do\\n    each(:rating) { should be_an(Integer) }\\n  end\\n\\\"\\\"\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>This will fix the problem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><load><cucumber><gem>","commentcount":"0","accepted":"yes"},"6577781":{"id":"6577781","date":"2011-07","score":"1","body":"\"<p>Define the association like this:<\\\/p>\\n\\n<pre><code>has_many :books, :class_name =&gt; \\\"Admin::Book\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then define the <code>accepts_nested_attributes_for<\\\/code> like this:<\\\/p>\\n\\n<pre><code>accepts_nested_attributes_for :books\\n<\\\/code><\\\/pre>\\n\\n<p>This way, Rails will look to the association to get the correct class for the ANAF objects.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"0","accepted":"yes"},"6658365":{"id":"6658365","date":"2011-07","score":"9","body":"\"<p>Use the standard <code>after_create<\\\/code> callback provided by Rails.<\\\/p>\\n\\n<pre><code>class User &lt; ActiveRecord::Base\\n  after_create :do_something\\n\\n  def do_something\\n    puts \\\"Doing something\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><devise>","commentcount":"0","accepted":"yes"},"6658382":{"id":"6658382","date":"2011-07","score":"3","body":"\"<p>The problem is that Rails is expecting there to be a controller within a module called <code>Users<\\\/code> because that's what <code>namespace :user<\\\/code> infers. Perhaps you meant to use <code>scope<\\\/code> instead of <code>namespace<\\\/code>?<\\\/p>\\n\\n<pre><code>scope :path =&gt; \\\"user\\\" do\\n  root :to =&gt; \\\"users#profile\\\"\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Note: in this situation if you've only got one route it would not be wise to use <code>scope<\\\/code>, but if you've got multiple ones with the <code>\\\/user<\\\/code> prefix then it would be fine to. If you only had one, I would do this instead:<\\\/p>\\n\\n<pre><code>get '\\\/user', :to =&gt; \\\"users#profile\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><heroku><routes>","commentcount":"2","accepted":""},"6675464":{"id":"6675464","date":"2011-07","score":"2","body":"\"<p>Why are you calling <code>sort<\\\/code> here? That seems unnecessary, and probably would result in it finding all videos and calling pagination on that rather than paying any attention to any variable defined in your <code>Video<\\\/code> model. Instead, move the sorting logic into the <code>Video<\\\/code> model by using a scope or use the <code>order<\\\/code> method.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><will-paginate>","commentcount":"5","accepted":""},"6714075":{"id":"6714075","date":"2011-07","score":"33","body":"\"<p>A six sided question! Oh my. Let's <em>ahem<\\\/em> roll.<sup>1<\\\/sup> Here's hoping I receive 6 times the upvotes for it then? :)<\\\/p>\\n\\n<p><strong>1. MyApp is a module?<\\\/strong><\\\/p>\\n\\n<p>Yes, it's a module. It acts as a \\\"container\\\" for all things pertaining to your application. For instance you could define a class like this:<\\\/p>\\n\\n<pre><code>module MyApp\\n  class MyFunClass\\n    def my_fun_method\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then if someone else has a <code>MyFunClass<\\\/code>, it won't interfere with your <code>MyFunClass<\\\/code>. It's just a nice way of separating out the code.<\\\/p>\\n\\n<p><strong>2. MyApp::Application is a ...? What, a module too?<\\\/strong><\\\/p>\\n\\n<p><code>MyApp::Application<\\\/code> is actually a class, which inherits from <code>Rails::Application<\\\/code>. This does a quite a lot of things, including setting up the <code>Rails.application<\\\/code> object which is actually an instance of <code>MyApp::Application<\\\/code> that you can do all sorts of fun things on like making requests to your application (in a <code>rails console<\\\/code> or <code>rails c<\\\/code> session). This code for instance would make a dummy request to the root path of your application, returning a 3-sized Array which is just a plain Rack response:<\\\/p>\\n\\n<pre><code> Rails.application.call(Rack::MockRequest.env_for(\\\"\\\/\\\"))\\n<\\\/code><\\\/pre>\\n\\n<p>You can also get the routes for your application by calling this:<\\\/p>\\n\\n<pre><code> Rails.application.routes\\n<\\\/code><\\\/pre>\\n\\n<p>The main <em>purpose<\\\/em> of defining <code>MyApp::Application<\\\/code> is not these fun things that you'll probably never use, but rather so that you can define application-specific configuration inside <code>config\\\/application.rb<\\\/code>. Things like what parameters are filtered, the time zone of the application or what directories should be autoloaded. These are all covered in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/configuring.html\\\">Configuration Guide for Rails<\\\/a>.<\\\/p>\\n\\n<p><strong>3. MyApp::Application.configure is a method?<\\\/strong><\\\/p>\\n\\n<p>Indeed it is a method, and it allows you to add further configuration options to your application's configuration after <code>config\\\/application.rb<\\\/code> has been loaded. You've probably seen this used in <code>config\\\/environments\\\/development.rb<\\\/code> or one of the other two files in that directory, but basically they all use the same options as shown in that <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/configuring.html\\\">Configuration Guide<\\\/a> linked to earlier.<\\\/p>\\n\\n<p><strong>4. config is a variable? How do I see it in console?<\\\/strong><\\\/p>\\n\\n<p>The <code>config<\\\/code> \\\"variable\\\" is actually a method defined within the code used for <code>Rails::Application<\\\/code> and returns quite simply a configuration object which stores the configuration for the application.<\\\/p>\\n\\n<p>To access it in the console, just use <code>Rails.application.config<\\\/code>. This will return quite a large <code>Rails::Application::Configuration<\\\/code> object for your viewing pleasure.<\\\/p>\\n\\n<p><strong>5. config.logger is a ???<\\\/strong><\\\/p>\\n\\n<p>The method you're referring to, I assume, comes from this line in <code>config\\\/environments\\\/production.rb<\\\/code>:<\\\/p>\\n\\n<pre><code># Use a different logger for distributed setups\\n# config.logger = SyslogLogger.new\\n<\\\/code><\\\/pre>\\n\\n<p>The method in this example is not <code>config.logger<\\\/code>, but rather <code>config.logger=<\\\/code>, which is referred to as a \\\"setter\\\" method in Ruby-land. The one without the equal sign is referred to as a \\\"getter\\\". This method sets up an alternative logger for the production environment in Rails, which then can be accessed by using <code>Rails.logger<\\\/code> within the console or the application itself. <\\\/p>\\n\\n<p>This is useful if you want to output something to the logs, as you can simply call this code:<\\\/p>\\n\\n<pre><code>Rails.logger.info(\\\"DEBUG INFO GOES HERE\\\")\\n<\\\/code><\\\/pre>\\n\\n<p><strong>6. config.paths.log.first is a ...?? --in console I can see \\\"MyApp::Application.configure.config.paths.log.first\\\" but don't know what that means or how to extract info from it!?!<\\\/strong><\\\/p>\\n\\n<p>Within a Rails application, you can modify the locations of certain directories. And so, this <code>config.paths<\\\/code> method is a way of keeping track of where these directories map to. In my entire Rails life I have never had to use or modify this variable and that can mean either one of two things:<\\\/p>\\n\\n<ol>\\n<li>It's not used often by Rails programmers, or;<\\\/li>\\n<li>I don't live a very varied life.<\\\/li>\\n<\\\/ol>\\n\\n<p>Interpret it as you will. My main point is that you're probably never going to use it either.<\\\/p>\\n\\n<hr>\\n\\n<p>I hope these help you understand Rails a little more!<\\\/p>\\n\\n<p><sup>1<\\\/sup> Terrible dice joke.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><config>","commentcount":"3","accepted":"yes"},"6729074":{"id":"6729074","date":"2011-07","score":"1","body":"\"<p>Use this:<\\\/p>\\n\\n<pre><code>Child.find_all_by_father_id_and_mother_id(father.id, mother_id)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><parent-child>","commentcount":"3","accepted":"yes"},"6740635":{"id":"6740635","date":"2011-07","score":"1","body":"\"<p>Within a relational database you'll see that IDs are usually sequential. This happens to be an automatically incrementing field called <code>id<\\\/code> by default in these databases with Rails. This is the 99% case, meaning that 99% of the time you can expect to see it done this way. It's the sane way.<\\\/p>\\n\\n<p>However, There are some cases in which the \\\"id\\\" field within the database may not be automatically incrementing and may instead be a string. In a database I am working with at the moment, the id field is called <code>client_id<\\\/code>, is a 6-character string such as \\\"RAB001\\\" and needs to be manually assigned by the code itself. This is due to a legacy system we are supporting and there's nothing we can do to fix that. It's just how it is.<\\\/p>\\n\\n<p>In other databases such as Mongoid the ids are, once again, generated automatically. There's a difference here though: instead of them being automatically incrementing numbers they are a hash. In a Mongo database I happen to have handy, one of the object's <code>_id<\\\/code> fields (note the underscore) is this lovely, easy-to-understand<sup>1<\\\/sup> hash: <code>4e22b5812f8b7d6f6d000001<\\\/code>. This is automatically generated by Mongo and I don't really care what it is except for when I need to find an object and there's no other way of finding it by another unique value.<\\\/p>\\n\\n<p>I would recommend sticking with an automatically generating ID system, be it something provided by the traditional database systems such as PostgreSQL or MySQL or something by Mongo.<\\\/p>\\n\\n<p>Any system where you need to generate the primary key for a record manually needs to have a huge \\\"HERE BE DRAGONS\\\" label on it and should be handled like a case of nitroglycerin or <a href=\\\"https:\\\/\\\/twitter.com\\\/ryanbigg\\\/status\\\/92063317211881474\\\" rel=\\\"nofollow\\\">similarly to this apt analogy<\\\/a>. <em>Avoid this system if you can<\\\/em>.<\\\/p>\\n\\n<hr>\\n\\n<p><sup>1<\\\/sup> I am being sarcastic here.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord><rails-models>","commentcount":"0","accepted":""},"6784282":{"id":"6784282","date":"2011-07","score":"2","body":"\"<p>Where are you running this command from? It looks like you are running it from your home directory where you've accidentally run <code>rails new .<\\\/code> and then deleted <code>config\\\/boot.rb<\\\/code> but <em>not<\\\/em> deleted <code>script\\\/rails<\\\/code>. Then, when you run <code>rails -v<\\\/code> that command is detecting there is a <code>script\\\/rails<\\\/code> folder there and attempting to load the stack as if your home directory were a Rails application.<\\\/p>\\n\\n<p>Remove <code>script\\\/rails<\\\/code> from your home directory and try again.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"6785750":{"id":"6785750","date":"2011-07","score":"36","body":"\"<p>The instructions are probably a bit confusing. It's saying that you've modified your <code>Gemfile<\\\/code> on your development machine and just pushed those changes rather than running <code>bundle install<\\\/code> BEFORE committing the changes.<\\\/p>\\n\\n<p>By running <code>bundle install<\\\/code> you will update your <code>Gemfile.lock<\\\/code> file. This should be pushed to your server as it's more important than <code>Gemfile<\\\/code>. Consider the <code>Gemfile<\\\/code> the plans for the <code>Gemfile.lock<\\\/code> file.<\\\/p>\\n\\n<p>Always remember to:<\\\/p>\\n\\n<ol>\\n<li>Run <code>bundle install<\\\/code> if you change your <code>Gemfile<\\\/code>, even just to make sure. If it's too slow, pass <code>--local<\\\/code> through which forces it to only use local gems to resolve its dependencies.<\\\/li>\\n<li>Commit <em>both<\\\/em> the <code>Gemfile<\\\/code> and <code>Gemfile.lock<\\\/code> file to your repository<\\\/li>\\n<li>Deploy both the <code>Gemfile<\\\/code> and <code>Gemfile.lock<\\\/code> to your production servers to ensure that they're running the exact same dependencies as your development environment.<\\\/li>\\n<\\\/ol>\\n\\n<hr>\\n\\n<p>Running <code>bundle update<\\\/code> by itself can be construed as dangerous that will update <em>all<\\\/em> the dependencies of your application. It's mainly dangerous if you don't have solid version numbers specified in the <code>Gemfile<\\\/code>. I <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2011\\\/01\\\/why-you-should-run-bundle-update\\\/\\\">wrote about it here.<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"3","accepted":"yes"},"6810552":{"id":"6810552","date":"2011-07","score":"1","body":"\"<p>It sounds like you want to use <code>send(\\\"#{link}_path\\\")<\\\/code> here. That would generate the link using the routing helper which I think it is what you want.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><cucumber><integration-testing><rspec2>","commentcount":"2","accepted":"yes"},"6815607":{"id":"6815607","date":"2011-07","score":"2","body":"\"<p>When you're running the generators they are actually running in the <code>development<\\\/code> environment, not <code>test<\\\/code>. Therefore these dependencies won't be loaded. Put them in a group like this instead:<\\\/p>\\n\\n<pre><code>group :development, :test do\\n  gem 'cucumber-rails'\\n  ...\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Secondly, you don't need to specify <code>cucumber<\\\/code> as well as <code>cucumber-rails<\\\/code>, as the <code>cucumber<\\\/code> gem is a dependency of the <code>cucumber-rails<\\\/code> gem and will be automatically included.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><cucumber><bundler>","commentcount":"2","accepted":""},"6823840":{"id":"6823840","date":"2011-07","score":"3","body":"\"<p>Build a new post with <code>Post.new<\\\/code> and use that in a <code>form_for<\\\/code>:<\\\/p>\\n\\n<pre><code>&lt;%= form_for Post.new %&gt;\\n  &lt;%= render \\\"form\\\" %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Of course this means you'll need to remove the <code>form_for<\\\/code> from your form partial if you have it in there, but that's a small sacrifice to make.<\\\/p>\\n\\n<p>However if you really don't want to do that then you will have to pass through a local variable to the form partial to indicate which post you want to display. On the <code>show<\\\/code> page you'd have this:<\\\/p>\\n\\n<pre><code>&lt;%= render :partial =&gt; \\\"form\\\", :locals =&gt; { :post =&gt; Post.new } %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>In the <code>new<\\\/code> and <code>edit<\\\/code> views you'd do this:<\\\/p>\\n\\n<pre><code>&lt;%= render :partial =&gt; \\\"form\\\", :locals =&gt; { :post =&gt; @post } %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>The line is a little bit longer, but that would allow you to keep the <code>form_for<\\\/code> tag inside the form partial and not clog up the three other views with it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><custom-action>","commentcount":"2","accepted":"yes"},"6823887":{"id":"6823887","date":"2011-07","score":"0","body":"\"<p>You're going to need to move them to out a module and then include that module inside the Rack application and inside the <code>ApplicationController<\\\/code> as well. I cannot think of another way to do it, and this is the cleanest.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><model-view-controller><rack>","commentcount":"0","accepted":""},"6823909":{"id":"6823909","date":"2011-07","score":"4","body":"\"<p>Your URL should not be <code>new_project_todo_task_path(@project, @todo)<\\\/code>. You don't need to specify the URL here as Rails will imply it from the parameters passed in to <code>form_for<\\\/code>. <\\\/p>\\n\\n<p>If the final object is a new object and not persisted in the database then it will make a <code>POST<\\\/code> request to, in this case, <code>\\\/projects\\\/:project_id\\\/todos<\\\/code>. You're declaring in your example that you want to make a <code>POST<\\\/code> request to <code>\\\/projects\\\/:project_id\\\/todos\\\/new<\\\/code>, for which there is no <code>POST<\\\/code> route and that is why it's failing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><resources><routes>","commentcount":"1","accepted":"yes"},"6868864":{"id":"6868864","date":"2011-07","score":"3","body":"\"<p>Have you tried calling it?<\\\/p>\\n\\n<p>Controllers and models aren't linked by some inexplicable magic. You are able to reference any class (i.e. model) from any other class you want (i.e. controller). There is no restriction.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"3","accepted":"yes"},"6868909":{"id":"6868909","date":"2011-07","score":"4","body":"\"<p>Why are you doing <code>fields_for \\\"..\\\"<\\\/code> ?<\\\/p>\\n\\n<p>What you want to do is <code>&lt;%= f.fields_for :characters %&gt;<\\\/code> as that will iterate through all the characters and render the fields as required in the account form. By calling <code>fields_for<\\\/code> on the <code>f<\\\/code> object you're telling the parent form that it contains nested attributes.<\\\/p>\\n\\n<p>Secondly, you'll need to use the <code>@account<\\\/code> object in your form rather than building another one with <code>@user.accounts.build<\\\/code>. By doing it this wrong way, you're actually creating a new account object which wouldn't have any character objects pre-built for it.<\\\/p>\\n\\n<p>In addition to this you will need to specify <code>accepts_nested_attributes_for :characters<\\\/code> in your <code>Account<\\\/code> model so that the form accepts them along with the account parameters.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><nested-forms>","commentcount":"5","accepted":"yes"},"6868925":{"id":"6868925","date":"2011-07","score":"8","body":"\"<p>Your <code>:class_name<\\\/code> option should be a String, not a Class object. This is so that ActiveRecord does not attempt to load \\\"class B\\\" which may reference \\\"class A\\\" which would reference \\\"class B\\\" and so on and so forth.<\\\/p>\\n\\n<pre><code>belongs_to  :loyalty_coupon, :class_name =&gt; \\\"Coupon\\\"\\n<\\\/code><\\\/pre>\\n\\n<p><code>String<\\\/code> objects have the <code>match<\\\/code> method while <code>Class<\\\/code> objects do not.<\\\/p>\\n\\n<p>You don't need to include the <code>:foreign_key<\\\/code> option, as it is inferred from the association's name.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><associations><belongs-to>","commentcount":"1","accepted":"yes"},"6880703":{"id":"6880703","date":"2011-07","score":"3","body":"\"<p>You could use <code>Rack::Utils<\\\/code> which has a method called <code>parse_nested_query<\\\/code> which you could pass in the query string from the URL:<\\\/p>\\n\\n<pre><code>Rack::Utils.parse_nested_query(uri.query_string)\\n<\\\/code><\\\/pre>\\n\\n<p>This will then return a <code>Hash<\\\/code> object representing the query string allowing you to gain access to the <code>code<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><parsing><uri><ruby-1.8>","commentcount":"3","accepted":""},"6886336":{"id":"6886336","date":"2011-07","score":"0","body":"\"<p>This sounds like you do not have the Passenger module enabled. Double check your Apache config to see if this is the case.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><capistrano>","commentcount":"2","accepted":""},"6886443":{"id":"6886443","date":"2011-07","score":"15","body":"\"<p>In Rails 3.1 there is no longer a \\\"defaults\\\" as such, but rather what is specified in your <code>application.js<\\\/code> file are the \\\"defaults\\\". You would include this file using this line:<\\\/p>\\n\\n<pre><code> javascript_include_tag \\\"application\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>jquery<\\\/code> and <code>jquery_ujs<\\\/code> files come with the <code>jquery-rails<\\\/code> gem which is in the default Rails 3.1 <code>Gemfile<\\\/code>.<\\\/p>\\n\\n<p>The <code>\\\/\\\/= require<\\\/code> line in that file tells Sprockets that you want to require a file which in this case would be <code>jquery.js<\\\/code> from within <code>jquery-rails<\\\/code>, where the <code>\\\/\\\/= require_tree .<\\\/code> will require all other JavaScript files in the same directory as <code>application.js<\\\/code> and concatenate them all into one file.<\\\/p>\\n\\n<p>You can read more about <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/guides\\\/asset_pipeline.html\\\">the asset pipeline here<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3.1>","commentcount":"1","accepted":"yes"},"6895005":{"id":"6895005","date":"2011-08","score":"1","body":"\"<p>Remove the line in one of your <code>config\\\/environments<\\\/code> files that references it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><warnings>","commentcount":"0","accepted":""},"6905558":{"id":"6905558","date":"2011-08","score":"4","body":"\"<p>Your <code>cucumber-rails<\\\/code> gem is out of date. Your version is 0.4.1 when the latest is 1.0.2. Run <code>bundle update cucumber-rails<\\\/code> to update that and try again.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><selenium><cucumber><capybara>","commentcount":"2","accepted":"yes"},"6906364":{"id":"6906364","date":"2011-08","score":"1","body":"\"<p>So you figured out yourself why this was failing, which is good.<\\\/p>\\n\\n<p>You shouldn't need to give this a custom <code>id<\\\/code> attribute as it will already have one called <code>comment_comment<\\\/code> based on the name of the field. Best not to mess with that.<\\\/p>\\n\\n<p>Unfortunately, I do not know the answer as to <em>why<\\\/em> it wasn't accepting this weirdly named parameter. The code probably lies within the <code>rails.js<\\\/code> or <code>jquery_ujs.js<\\\/code> file in your application.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><forms>","commentcount":"2","accepted":""},"6922623":{"id":"6922623","date":"2011-08","score":"2","body":"\"<p>Simply change:<\\\/p>\\n\\n<pre><code>namespace :my_namespace do\\n<\\\/code><\\\/pre>\\n\\n<p>To:<\\\/p>\\n\\n<pre><code>namespace :\\\"my-namespace\\\" do\\n<\\\/code><\\\/pre>\\n\\n<p>You must use quotes as symbols do not support hyphens without quotes.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routing>","commentcount":"1","accepted":"yes"},"6922929":{"id":"6922929","date":"2011-08","score":"1","body":"\"<p>You should use a <code>counter_cache<\\\/code> (described in <a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActiveRecord\\\/Associations\\\/ClassMethods.html#method-i-belongs_to\\\" rel=\\\"nofollow\\\">the documentation for <code>belongs_to<\\\/code><\\\/a>) to store the count of the activities in the <code>users<\\\/code> table. Then:<\\\/p>\\n\\n<pre><code>User.where(:admin =&gt; false).where(\\\"created_at &gt;= ?\\\", 3.months.ago).where(\\\"activities_count &gt;= 5)\\n<\\\/code><\\\/pre>\\n\\n<p>This will find all the users who aren't admins, who were created at a time greater than or equal to (\\\"within the\\\") last 3 months who have an <code>activities_count<\\\/code> (this is the <code>counter_cache<\\\/code>field) greater than or equal to 5 (my interpretation of \\\"5+).<\\\/p>\\n\\n<p>Sound good? :)<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><conditional>","commentcount":"0","accepted":"yes"},"6950358":{"id":"6950358","date":"2011-08","score":"2","body":"\"<p>Yes, they are killed when they have been idle for a period of time. <a href=\\\"http:\\\/\\\/modrails.com\\\/documentation\\\/Users%20guide%20Apache.html#PassengerPoolIdleTime\\\" rel=\\\"nofollow\\\">The documentation for PassengerPoolIdleTime<\\\/a> says this is 5 minutes.<\\\/p>\\n\\n<p>If you do not wish them to shut down set this setting to 0 in your config.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><nginx><passenger>","commentcount":"2","accepted":"yes"},"6950377":{"id":"6950377","date":"2011-08","score":"1","body":"\"<p>Why are you putting spaces between the <code>src<\\\/code>, <code>=<\\\/code> and value for this attribute? Try not putting these spaces there and see what results. I believe that HTML is parsing each space-separated value as its own attribute.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><ruby-on-rails><ruby><unobtrusive-javascript>","commentcount":"1","accepted":"yes"},"6951664":{"id":"6951664","date":"2011-08","score":"2","body":"\"<p>You cannot do this, as JavaScript is a client-side language and Ruby is a server-side language. Ruby is parsed not only <em>before<\\\/em> JavaScript, but also on a completely separate machine with no way of interacting between the two.<\\\/p>\\n\\n<p>Work out an alternative solution to your problem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><ruby-on-rails-3>","commentcount":"0","accepted":""},"6978355":{"id":"6978355","date":"2011-08","score":"0","body":"\"<p>I am not confident that Heroku is running in the <code>staging<\\\/code> environment, I think it's running in the <code>production<\\\/code> environment instead and this is why your settings are not being applied.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><heroku><thin>","commentcount":"1","accepted":""},"6990910":{"id":"6990910","date":"2011-08","score":"0","body":"\"<pre><code>Consider using bundle exec.\\n<\\\/code><\\\/pre>\\n\\n<p>There's your clue. Try this instead:<\\\/p>\\n\\n<pre><code>bundle exec rake db:migrate\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><migration>","commentcount":"2","accepted":"yes"},"7004877":{"id":"7004877","date":"2011-08","score":"17","body":"\"<p>Mongoid already provides you the attributes for an object: <\\\/p>\\n\\n<pre><code>Model.new.attributes\\n<\\\/code><\\\/pre>\\n\\n<p>To get the names for these attributes:<\\\/p>\\n\\n<pre><code>Model.fields.keys\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><mongodb><mongoid>","commentcount":"7","accepted":"yes"},"7019144":{"id":"7019144","date":"2011-08","score":"1","body":"\"<p>First of all: what?<\\\/p>\\n\\n<pre><code>msg = current_user.msgs.build(params[:msg])\\nmsg.message = msg.message[0..140]\\nmsg.created_at = Time.now # HACK\\n<\\\/code><\\\/pre>\\n\\n<p>This confuses us. Why would you:<\\\/p>\\n\\n<p>1) Limit the message length <em>in the controller<\\\/em> and not as a <code>before_save<\\\/code> on the model?<\\\/p>\\n\\n<pre><code>before_save :only_140_characters\\n\\ndef only_140_characters\\n  self.message = self.message[0..140]\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>2) Set <code>created_at<\\\/code> yourself <em>in the controller<\\\/em>? This is taken care of by Rails automatically. When a record is created, the <code>created_at<\\\/code> field will be set to a value by ActiveRecord. Similarly, when you update a record <code>updated_at<\\\/code> will be set to the current time as well. Rails will only do this if your fields actually exist.<\\\/p>\\n\\n<hr>\\n\\n<p>Now on to the real question: Why are you getting that undefined method error?<\\\/p>\\n\\n<p>apneadiving points out correctly in the comments you need to add a migration to add that column to the <code>messages<\\\/code> table. You can do this by running this command:<\\\/p>\\n\\n<pre><code>rails g migration add_title_to_messages title:string\\n<\\\/code><\\\/pre>\\n\\n<p>Then by running <code>rake db:migrate<\\\/code> will that column be added to the <code>messages<\\\/code> table in the database. Keep in mind that you'll need to run <code>RAILS_ENV=production rake db:migrate<\\\/code> to add it to your production database too, if you are at that point.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"7019478":{"id":"7019478","date":"2011-08","score":"1","body":"\"<p>As far as I am aware, you're going to need to call <code>authorize_resource<\\\/code> in your controller as a before filter so that this works.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><devise><cancan>","commentcount":"5","accepted":"yes"},"7020074":{"id":"7020074","date":"2011-08","score":"1","body":"\"<p>Set it up under a namespace:<\\\/p>\\n\\n<pre><code>namespace :api do\\n  namespace :v1 do\\n    resources :items\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then you would need to move this controller into <code>app\\\/controllers\\\/api\\\/v1\\\/items_controller.rb<\\\/code> and call the class defined in it <code>Api::V1::ItemsController<\\\/code>. <\\\/p>\\n\\n<p>Chances are that you're going to h ave some custom logic you want for API actions, so you may want to put that logic in another controller <em>other<\\\/em> than <code>ApplicationController<\\\/code>. This means this new controller would inherit from <code>Api::V1::BaseController<\\\/code> rather than <code>ApplicationController<\\\/code>.<\\\/p>\\n\\n<p>On a side note, I cover this kind of thing in the \\\"Designing an API\\\" chapter of my book, <a href=\\\"http:\\\/\\\/manning.com\\\/katz\\\" rel=\\\"nofollow\\\">Rails 3 in Action<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routes>","commentcount":"1","accepted":""},"7020094":{"id":"7020094","date":"2011-08","score":"1","body":"\"<p>The problem is because you're doing <code>location.addresses.build<\\\/code> when you've defined the Address association for this model as a <code>has_one<\\\/code>. As such, you will need to do <code>location.build_address<\\\/code>. The same thing goes for if you were ever looking to build a <code>belongs_to<\\\/code> association.<\\\/p>\\n\\n<p>It is not possible for the <code>build<\\\/code> method to be called on the <code>address<\\\/code> association itself, as the <code>address<\\\/code> method would attempt to load the associated object and return <code>nil<\\\/code> if it can't, and calling <code>build<\\\/code> on <code>nil<\\\/code> is just not allowed. Therefore, you need to do <code>build_address<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"7020573":{"id":"7020573","date":"2011-08","score":"1","body":"\"<p>On this line: <a href=\\\"https:\\\/\\\/github.com\\\/kyledecot\\\/skateparks-web\\\/blob\\\/master\\\/app\\\/models\\\/skatepark\\\/comment.rb#L33\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/kyledecot\\\/skateparks-web\\\/blob\\\/master\\\/app\\\/models\\\/skatepark\\\/comment.rb#L33<\\\/a><\\\/p>\\n\\n<p>You are making a call to the <code>User<\\\/code> model which attempts to load the <code>users<\\\/code> table. Rather than doing this, why not have a foreign key constraint?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><sqlite><sqlite3>","commentcount":"1","accepted":"yes"},"7021617":{"id":"7021617","date":"2011-08","score":"2","body":"\"<p>If this is being passed through as a nested attribute of a form then you would have to override the <code>posts_attributes=<\\\/code> method of the <code>Discussion<\\\/code> model:<\\\/p>\\n\\n<pre><code>def posts_attributes=(attribute_sets)\\n  attribute_sets.each do |attributes|\\n    Post.new_with_ip(ip_goes_here, attributes)\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Of course you're going to need to modify that a little if you're going to be getting nested posts in an update kind of fashion, as you'll want to update existing posts rather than creating new ones. Sounds like a good exercise in learning :)<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"7021644":{"id":"7021644","date":"2011-08","score":"2","body":"\"<p>In that particular case I would write them both for the <em>positive and negative<\\\/em>. This is because you really want to make sure that people with valid usernames are allowed to have them and that people who attempt to have invalid usernames can't do that.<\\\/p>\\n\\n<p>Also this way if a username that should \\\/ shouldn't be valid comes through as the opposite to what it should be you'll have those tests already and it's just a simple matter of adding a failing test to the correct category in your tests, confirming that the test does indeed fail, fixing it and then confirming that the test then passes.<\\\/p>\\n\\n<p>So yes, test for both in this case. Not simply one or the other.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><bdd><rspec2><rspec-rails>","commentcount":"1","accepted":""},"7021810":{"id":"7021810","date":"2011-08","score":"0","body":"\"<p>Put simply: you can't do it with a <code>date_select<\\\/code>. You would need to build it using either the <code>select<\\\/code> or <code>collection_select<\\\/code> helpers and work out the values for the dates yourself. There is no helper in Rails to do that as far as I am aware.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"7054274":{"id":"7054274","date":"2011-08","score":"5","body":"\"<p>I wouldn't use a single scope for this, but two:<\\\/p>\\n\\n<pre><code>scope :with_missing_coins, joins(:coins).where(\\\"coins.is_missing = ?\\\", true)\\nscope :without_missing_coins, joins(:coins).where(\\\"coins.is_missing = ?\\\", false)\\n<\\\/code><\\\/pre>\\n\\n<p>That way, when these scopes are used then it's explicit what it's happening. With what numbers1311407 suggests, it is not immediately clear what the <code>false<\\\/code> argument to <code>with_missing_coins<\\\/code> is doing. <\\\/p>\\n\\n<p>We should try to write code as clear as possible and if that means being less of a zealot about DRY once in while then so be it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><named-scope>","commentcount":"1","accepted":"yes"},"7054436":{"id":"7054436","date":"2011-08","score":"0","body":"\"<p>Judging by the fact that the warning comes out of <code>whiny_nil.rb<\\\/code>, I'm willing to bet that <code>@user.account<\\\/code> is returning <code>nil<\\\/code> rather than an actual <code>Account<\\\/code> object. Search through your database for users without an account, I reckon there's at least one.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><actionmailer>","commentcount":"2","accepted":""},"7054518":{"id":"7054518","date":"2011-08","score":"2","body":"\"<p>The adapter is <code>mysql2<\\\/code> as that is the gem you will be using to connect. There are two gems, <code>mysql<\\\/code> and <code>mysql2<\\\/code>. The correct gem to use for Rails 3 is <code>mysql2<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"7060736":{"id":"7060736","date":"2011-08","score":"3","body":"\"<p>You're splitting up the parts of your test incorrectly. Each <code>it<\\\/code> call is actually a new example and the state is reset before\\\/after each one.<\\\/p>\\n\\n<p>What you should be doing is:<\\\/p>\\n\\n<pre><code>describe \\\"with invalid params\\\" do\\n  before do\\n    @article = Article.create(valid_params_go_here)\\n  end\\n\\n  it \\\"should find the article and return the object\\\" do\\n    put :update, { :id =&gt; @article.id, :article =&gt; { :title =&gt; \\\"\\\" } }\\n    response.should render_template(\\\"edit\\\")\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>By doing it this way, the <code>@article<\\\/code> is set up before hand (although you could use a mock one if you <em>really<\\\/em> wanted to) and the request to the <code>update<\\\/code> action and the assertion that it actually renders the <code>edit<\\\/code> template all happen in the one example.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><tdd><bdd><rspec2>","commentcount":"2","accepted":"yes"},"7061180":{"id":"7061180","date":"2011-08","score":"1","body":"\"<p>I have a suspicion that you do not have the <code>test<\\\/code> key in your <code>database.yml<\\\/code> file and Rails is attempting to use that and not finding it. However, I could be wrong. That does look like that kind of issue though.<\\\/p>\\n\\n<p>What does <code>--trace<\\\/code> at the end of that command make it output extra? Perhaps you could update the question with that output to help us?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><postgresql><rspec><rspec2>","commentcount":"1","accepted":"yes"},"7076243":{"id":"7076243","date":"2011-08","score":"1","body":"\"<p>Run <code>bundle install<\\\/code>. This will fix the problem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rake>","commentcount":"1","accepted":""},"7102192":{"id":"7102192","date":"2011-08","score":"2","body":"\"<p>Use a routing constraint as described here: <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html#advanced-constraints\\\" rel=\\\"nofollow\\\">http:\\\/\\\/guides.rubyonrails.org\\\/routing.html#advanced-constraints<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"7102702":{"id":"7102702","date":"2011-08","score":"0","body":"\"<p>I would not be pass this through using a <code>hidden_field<\\\/code>. Instead, use nested resources:<\\\/p>\\n\\n<pre><code>resources :account do\\n  resources :people\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then have an account object for the form:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [@account, @person] do |f| %&gt;\\n  ...\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This <code>@account<\\\/code> object should be set up in the action that renders the form with a line like this:<\\\/p>\\n\\n<pre><code>@acccount = Account.find(params[:account_id])\\n<\\\/code><\\\/pre>\\n\\n<p>Then when the form is submitted you'll have <code>params[:account_id]<\\\/code> in that action without the ugly <code>hidden_field<\\\/code> hack to get it there.<\\\/p>\\n\\n<p>Yippee!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":""},"7114294":{"id":"7114294","date":"2011-08","score":"2","body":"\"<p>I like Gazler's answer if it's only a one-off route, but if you've already got resource routes for customers then I would define this route like this:<\\\/p>\\n\\n<pre><code>resources :customers do\\n  member do\\n    get :payments\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This way, you would still have the standard <code>customers_path<\\\/code> and <code>customer_path<\\\/code> helpers you'd normally get from a resource route, but it would also generate <code>customer_payments_path<\\\/code> in a shorter syntax.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routing>","commentcount":"4","accepted":""},"7115346":{"id":"7115346","date":"2011-08","score":"0","body":"\"<p>You're not requiring this file anywhere. That is why it cannot find the constant. Files in the <code>lib<\\\/code> directory are not automatically loaded in Rails 3. Require this file manually.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rack><middleware>","commentcount":"0","accepted":""},"7115403":{"id":"7115403","date":"2011-08","score":"2","body":"\"<p>I think your routes are all flavours of messed up. Sorry, was not sure how to sugar coat that so I didn't.<\\\/p>\\n\\n<p>Why are your routes called members? Why not call them users or rename the <code>User<\\\/code> model to be called <code>Member<\\\/code> instead?<\\\/p>\\n\\n<hr>\\n\\n<p><strong>Solution #1<\\\/strong><\\\/p>\\n\\n<p>Change your routes to this (simplified, adjust as necessary):<\\\/p>\\n\\n<pre><code>resources :users do\\n  resources :tattoos\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Routes will then be <code>\\\/users\\\/1\\\/tattoos<\\\/code> for example.  You would then be able to use the <code>form_for<\\\/code> like this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [current_user, @tattoo], :html =&gt; { :multipart =&gt; true } %&gt;\\n<\\\/code><\\\/pre>\\n\\n<hr>\\n\\n<p><strong>Solution #2<\\\/strong><\\\/p>\\n\\n<p>Leave routes as is and rename <code>User<\\\/code> model to <code>Member<\\\/code>. You need to rename the model, the table, tell Devise that you want <code>devise_for :members<\\\/code> rather than <code>devise_for :users<\\\/code> in your <code>config\\\/routes.rb<\\\/code> file and maybe some other things I am forgetting right now.<\\\/p>\\n\\n<hr>\\n\\n<p>The whole point I am trying to get across: please try to have consistent in your code and the front-facing part of your application. You do not want to have your users referring to themselves as \\\"members\\\" while you are referring to them as \\\"users\\\". It is almost akin to speaking different languages for the sake of doing so. It will only lead to heart(ache|break).<\\\/p>\\n\\n<p>Please, name things consistently <em>everywhere<\\\/em>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routes>","commentcount":"1","accepted":"yes"},"7115432":{"id":"7115432","date":"2011-08","score":"1","body":"\"<p>You need to install the <code>rails<\\\/code> gem. You could probably do this by running <code>bundle install<\\\/code> inside that project.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":""},"7115560":{"id":"7115560","date":"2011-08","score":"8","body":"\"<p>Alright, that is somewhat of a three-part question. A <em>threstion<\\\/em>, or triesti... actually that doesn't work. <em>Threstion<\\\/em> it is then.<\\\/p>\\n\\n<p>One thing to understand about Rails is that it <em>isn't<\\\/em> magical. It's code, written by mortal humans who have faults (such as oversized-egos) but who are also  <em>incredibly damn smart<\\\/em>. Therefore, we can understand it after perhaps a little bit of studying their work.<\\\/p>\\n\\n<p><strong>1. Rails environments are lovely<\\\/strong><\\\/p>\\n\\n<p>The code behind the Rails environment management is actually quite simple. You have a default environment which is set to <code>development<\\\/code> by <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-1-stable\\\/railties\\\/lib\\\/rails\\\/commands\\\/server.rb#L53-55\\\" rel=\\\"nofollow\\\">this line in <code>railties\\\/lib\\\/rails\\\/commands\\\/server.rb<\\\/code><\\\/a>. You could do much the same thing in your application. Run a bit of initialization code that defines <code>YourAwesomeThing.environment = ENV[\\\"AWESOME_ENV\\\"] || \\\"development\\\"<\\\/code>. Then it's a matter of requiring <code>config\\\/environments\\\/#{YourAwesomeThing.environment}.rb<\\\/code> where you need it. Then it's a matter of having configuration in those files that modify how your library works depending on the environment.<\\\/p>\\n\\n<p>I couldn't find the line that does that in <code>3-1-stable<\\\/code> (it's gone walkies), so <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-0-stable\\\/railties\\\/lib\\\/rails\\\/application\\\/configuration.rb#L53\\\" rel=\\\"nofollow\\\">here's one that I think does it in the <code>3-0-stable<\\\/code> branch.<\\\/a>.<\\\/p>\\n\\n<p>As for the lovely methods such as <code>Rails.env.production?<\\\/code>, they are provided by the <code>ActiveSupport::StringInquirer<\\\/code> class.<\\\/p>\\n\\n<p><strong>2. Rails console is the Second Coming<\\\/strong> <\\\/p>\\n\\n<p>I think <code>rails console<\\\/code> is amazing. I don't want to create a new file just to manually test some code like I would have done back in the Black Days of PHP. I can jump into the console and try it out there and then type <code>exit<\\\/code> when I'm done. <em>Amazing<\\\/em>. I think Rails developers don't appreciate the console nearly enough.<\\\/p>\\n\\n<p>Anyway, this is just an <code>irb<\\\/code> session that has the Rails environment loaded before it! I'll restate it again: Rails is <em>not magical<\\\/em>. If you typed <code>irb<\\\/code> and then inside that irb session typed <code>require 'config\\\/environment'<\\\/code> you would get (at least as far as I am aware...) an identical thing to the Rails console!<\\\/p>\\n\\n<p>This is due to the magic that goes on in the initialization part of Rails which is <em>almost magic, but not<\\\/em> and I've explained it in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/initialization.html\\\" rel=\\\"nofollow\\\">Initialization Guide Which Will Be Finished And Updated For Rails 3.1 Real Soon I Promise Cross My Heart And Hope to Die If Only I Had The Time<\\\/a>!<\\\/p>\\n\\n<p>You could probably learn a lot by reading that text seemingly of a similar length to a book written by George R. R. Martin or Robert Jordan. I definitely learned a lot writing it!<\\\/p>\\n\\n<p><strong>3. The Others<\\\/strong> <\\\/p>\\n\\n<p>This is where I falter. What other utilities do you need from Rake \\\/ Rails? It's all <em>there<\\\/em>, you just need to pick out the parts you need which is actually quite simple... but I can't tell you how to do that unless you go ahead and paint those targets.<\\\/p>\\n\\n<hr>\\n\\n<p>Anyway, this is the kind of question that is exciting for me to answer. Thanks for giving me that bit of entertainment :)<\\\/p>\\n\\n<p><strong>Edit<\\\/strong><\\\/p>\\n\\n<p>I just noticed the BONUS fourth question at the end of your question. What would be the point of versioning your project? Why not use a version control system such as Git to do this and just <code>git tag<\\\/code> versions as you see fit? I think that would make the most sense.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><frameworks>","commentcount":"2","accepted":"yes"},"7117558":{"id":"7117558","date":"2011-08","score":"2","body":"\"<p>You can do this with <code>git notes<\\\/code>:<\\\/p>\\n\\n<pre><code> git notes add your_branch -m \\\"BRANCH_DESCRIPTION: A descriptive name for this branch\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can read it back out using this command:<\\\/p>\\n\\n<pre><code> git notes show your_branch\\n<\\\/code><\\\/pre>\\n\\n<p>You can store your notes as a file and use that instead, switching the <code>-m<\\\/code> option for the <code>-f<\\\/code> option and of course passing a filename rather than a string.<\\\/p>\\n\\n<pre><code> git notes add your_branch -f mynotes.txt\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"3","accepted":""},"7137830":{"id":"7137830","date":"2011-08","score":"5","body":"\"<p>Ask yourself: what would be the benefits of switching to Rails 3.1? <\\\/p>\\n\\n<p>You'll have access to the latest and greatest upgrades to the framework such as the <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/guides\\\/asset_pipeline.md\\\">Asset Pipeline<\\\/a> and better engine support. Rails 3.1 is where Rails is headed, so why not make the switch now?<\\\/p>\\n\\n<p>As for staying on Rails 3.0, I don't see any reason to do that at all.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rubygems><ruby-on-rails-plugins><ruby-on-rails-3.1>","commentcount":"1","accepted":"yes"},"7155580":{"id":"7155580","date":"2011-08","score":"3","body":"\"<p>The context of <code>self<\\\/code> is not going to be changing here. It will still be the same <code>Podcast<\\\/code> object that you have. <\\\/p>\\n\\n<p>The problem is that you are calling this method <code>before_validation<\\\/code> which happens before the object is saved and therefore before the object is given an id. You probably want to call this <code>after_create<\\\/code> rather than <code>before_validation<\\\/code>, as that's when the object's ID will  have been assigned.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"7174163":{"id":"7174163","date":"2011-08","score":"3","body":"\"<p>Use the <code>Pathname<\\\/code> class to generate paths which then will be correct on your system:<\\\/p>\\n\\n<pre><code>a_path = Pathname.new(\\\"a_path_goes_here\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>The benefit of this is that it will allow you to chain directories by using the <code>+<\\\/code> operator:<\\\/p>\\n\\n<pre><code>a_path + \\\"another_path\\\" + \\\"and another\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Calling <code>a_path.to_s<\\\/code> will then generate the correct path for the system that you are on.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><path>","commentcount":"1","accepted":""},"7183822":{"id":"7183822","date":"2011-08","score":"2","body":"\"<p>There is no elegant solution as far as I am aware, you would have to check every time in the controller, but this is simple by defining this method in your controller:<\\\/p>\\n\\n<pre><code>def find_task\\n  @task = Task.find(params[:id])\\n  if @task.locked?\\n    flash[:error] = \\\"This task is locked and cannot be altered at this stage.\\\"\\n    redirect_to tasks_path and return\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can call this method as a <code>before_filter<\\\/code> for those actions you care about. By returning <code>nil<\\\/code> (that's what <code>return<\\\/code> does), the <code>before_filter<\\\/code> will halt and the action will not be executed.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord><locking>","commentcount":"2","accepted":"yes"},"7183837":{"id":"7183837","date":"2011-08","score":"1","body":"\"<p>Somewhere you've referenced the constant <code>AuthLogic<\\\/code>, when you should have referenced <code>Authlogic<\\\/code>. Lower-case L.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><ruby-on-rails-plugins><authlogic>","commentcount":"2","accepted":"yes"},"7183855":{"id":"7183855","date":"2011-08","score":"1","body":"\"<p>First thing I notice is that the first line of your request is <code>env:Envelope<\\\/code> in the \\\"Not Working\\\" example and <code>soap:Envelope<\\\/code> in the \\\"Working\\\" example.<\\\/p>\\n\\n<p>Aside from that, there's a couple of attributes that are also missing from this tag. They could be important, but I reckon it's the naming of that outer element which is causing the breakage.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><soap><savon>","commentcount":"0","accepted":"yes"},"7183868":{"id":"7183868","date":"2011-08","score":"0","body":"\"<p>You need to use nested resources for this, which is explained in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">official Routing Guide<\\\/a>. Another great example of this nested resources is in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">official Getting Started Guide<\\\/a>.<\\\/p>\\n\\n<p>With this, you should receive a <code>params[:territory_id]<\\\/code> variable in your <code>AddressesController<\\\/code> when you make a new address for that territory, and from that you can then find the <code>Territory<\\\/code> by doing this:<\\\/p>\\n\\n<pre><code>Territory.find(params[:territory_id])\\n<\\\/code><\\\/pre>\\n\\n<p>But rather than me repeating it here, I would really recommend you read both those guides.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"3","accepted":""},"7186407":{"id":"7186407","date":"2011-08","score":"0","body":"\"<p>I reckon what that is is the <code>s3.yml<\\\/code> doesn't contain a key for your current Rails environment, probably <code>test<\\\/code>? Add one. That should fix it!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><testing><rspec><paperclip>","commentcount":"1","accepted":""},"7201091":{"id":"7201091","date":"2011-08","score":"1","body":"\"<p>My guess is that <code>filter_resource_access<\\\/code> is treating all the actions in the controller as if they're dealing with a single resource and attempting to do <code>Coupon.find(params[:id])<\\\/code>. By changing it to this:<\\\/p>\\n\\n<pre><code>filter_access_to :all, :except =&gt; :generate\\n<\\\/code><\\\/pre>\\n\\n<p>You are telling it to <em>not<\\\/em> run that method before that action, meaning it won't try to find a coupon.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><declarative-authorization>","commentcount":"1","accepted":""},"7202804":{"id":"7202804","date":"2011-08","score":"2","body":"\"<p>You should not use <code>attr_accessor<\\\/code> as that is defining virtual attributes, overriding the setters uses for the fields. Remove those lines using it from your models and it should be fine.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"7224555":{"id":"7224555","date":"2011-08","score":"4","body":"\"<p>You should not ever alter existing migrations. If you have checked them in to your version control system and somebody else runs them and then you add a new field to them and commit that change, they will not know to get that change. Then you must tell them and it's a pain in the butt to fix.<\\\/p>\\n\\n<p>If you've not committed it yet then rollback the migration (<code>rake db:rollback<\\\/code>), make the necessary modification and re-run it again (<code>rake db:migrate<\\\/code>).<\\\/p>\\n\\n<p>But in the Real World, you would create a <em>new<\\\/em> migration which adds this field using <code>rails g migration add_total_votes_to_users total_votes:integer<\\\/code>.<\\\/p>\\n\\n<p>Rails will interpret this migration name and know what to do with it, generating a migration that contains this line:<\\\/p>\\n\\n<pre><code>add_column :users, :total_votes, :integer\\n<\\\/code><\\\/pre>\\n\\n<p>Then when you run this migration it will add this <code>total_votes<\\\/code> field to the <code>users<\\\/code> table which will make an attribute of the same name for all <code>User<\\\/code> objects.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><migration>","commentcount":"3","accepted":"yes"},"7228934":{"id":"7228934","date":"2011-08","score":"0","body":"\"<p>If the first one is shown then you're missing the <code>script\\\/rails<\\\/code> file that Rails depends on to determine if it is inside a Rails application or not. Restore this file and you should be good to go.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":""},"7237611":{"id":"7237611","date":"2011-08","score":"11","body":"\"<p>For this to work you need to have a locale file at <code>config\\\/locales\\\/fr.yml<\\\/code> for this to work. You can get it from here: <a href=\\\"https:\\\/\\\/github.com\\\/svenfuchs\\\/rails-i18n\\\/blob\\\/master\\\/rails\\\/locale\\\/fr.yml\\\">https:\\\/\\\/github.com\\\/svenfuchs\\\/rails-i18n\\\/blob\\\/master\\\/rails\\\/locale\\\/fr.yml<\\\/a>. <\\\/p>\\n\\n<p>The <code>:locale<\\\/code> option only declares to Rails what locale you want it to be. Rails does not have all the translations for every language in the project, and so you must include these translation files yourself.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><localization><locale><number-to-currency>","commentcount":"0","accepted":"yes"},"7238440":{"id":"7238440","date":"2011-08","score":"0","body":"\"<p>I've built the <code>dotiw<\\\/code> library to do exactly this: <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/dotiw\\\" rel=\\\"nofollow\\\">http:\\\/\\\/github.com\\\/radar\\\/dotiw<\\\/a>.<\\\/p>\\n\\n<p>This is based off the <code>distance_of_time_in_words<\\\/code> method in Rails which is not quite accurate enough, and so I've made it more accurate with <code>dotiw<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><timestamp>","commentcount":"1","accepted":""},"7238537":{"id":"7238537","date":"2011-08","score":"1","body":"\"<p>Your route is declared as a <code>POST<\\\/code> but you're doing a <code>PUT<\\\/code> in the form. Fix either the route or the form and you'll nail it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routes><cucumber>","commentcount":"1","accepted":""},"7251439":{"id":"7251439","date":"2011-08","score":"4","body":"\"<p>The method is not deprecated, just <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-0-stable\\\/actionpack\\\/lib\\\/abstract_controller\\\/callbacks.rb#L80-110\\\" rel=\\\"nofollow\\\">how they are defined<\\\/a> has changed.<\\\/p>\\n\\n<p>The docs should not be trusted. Keep calm and carry on. Keep using <code>before_filter<\\\/code>s as you wish.<\\\/p>\\n\\n<p>If something was truly deprecated in Rails you would see deprecation warnings when you run your server or tests.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"7265047":{"id":"7265047","date":"2011-09","score":"2","body":"\"<p>Do you have any validations on this user? They are probably blocking this <code>save<\\\/code>. The <code>redirect_to<\\\/code> will be called regardless of whether or not the <code>save<\\\/code> passes or fails.<\\\/p>\\n\\n<p>I would recommend doing it like this instead:<\\\/p>\\n\\n<pre><code>if @user.save\\n  redirect_to '\\\/posts'\\nelse\\n  render :feed_preference\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Where <code>:feed_preference<\\\/code> is the form where users enter their feed preferences.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"7265055":{"id":"7265055","date":"2011-09","score":"4","body":"\"<p>You need to run the <code>rake jobs:work<\\\/code> task to have a process by Delayed Job work off jobs from that table. Without this, you will not receive any emails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><delayed-job>","commentcount":"1","accepted":"yes"},"7265774":{"id":"7265774","date":"2011-09","score":"1","body":"\"<p>Don't reference panel, but rather reference <code>this.parent()<\\\/code>. <code>this<\\\/code> in this case should be the button itself, where the <code>parent()<\\\/code> will return the parent object. You should then animate that:<\\\/p>\\n\\n<pre><code>this.parent().animate({ backgroundColor: \\\"#006600\\\" }, 500);\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery><ruby-on-rails><ruby><ruby-on-rails-3><jquery-selectors>","commentcount":"3","accepted":"yes"},"7265869":{"id":"7265869","date":"2011-09","score":"2","body":"\"<p>The \\\"standard\\\" route would be that it is a singular named route: <code>doc_path<\\\/code>. You are using <code>docs_path<\\\/code>. Use the singular name when you want to link to a specific doc and use the plural when you want to get a list of those. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routes><integration-testing><helper>","commentcount":"1","accepted":"yes"},"7278384":{"id":"7278384","date":"2011-09","score":"0","body":"\"<p>The problem is that the <code>omnisocial<\\\/code> gem's dependencies have not been updated to match the latest <code>oa-core<\\\/code> release. Bundler will attempt to resolve all the dependencies for all the gems.<\\\/p>\\n\\n<p>In this situation, <code>omnisocial<\\\/code> says it is quite happy with any of the <code>0.1.x<\\\/code> releases (as long as it's the <code>0.1.2<\\\/code> release or one after that) of <code>oa-core<\\\/code> (this is what the <code>~&gt;<\\\/code> operator means) but <code>omniauth<\\\/code> says it <em>must<\\\/em> have <code>0.2.6<\\\/code>. Obviously, <code>0.2.6<\\\/code> is <em>not<\\\/em> a part of the <code>0.1.x<\\\/code> set of releases and so you are getting this error. <\\\/p>\\n\\n<p><code>omnisocial<\\\/code>'s gem dependencies must be upgraded to match the latest <code>oa-core<\\\/code> version. That is the problem.<\\\/p>\\n\\n<p>Alternatively, you could use <code>omniauth<\\\/code> which is designed to work with this latest version of the <code>oauth<\\\/code> suite, rather than using <code>omnisocial<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><authentication><rubygems><omniauth>","commentcount":"1","accepted":"yes"},"7344514":{"id":"7344514","date":"2011-09","score":"2","body":"\"<p>It's because you're using <code>get<\\\/code> when you should be using <code>visit<\\\/code> inside the <code>before<\\\/code> block. This:<\\\/p>\\n\\n<pre><code>before(:each) do\\n  get signup_path\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Should be this:<\\\/p>\\n\\n<pre><code>before(:each) do\\n    visit signup_path\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Otherwise you're telling <code>Rack::Test<\\\/code> to visit that path, <em>not<\\\/em> Capybara! A small distinction that trips quite a few people up frequently!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><capybara>","commentcount":"0","accepted":"yes"},"7354722":{"id":"7354722","date":"2011-09","score":"2","body":"\"<p>I reckon you've committed this file already to the repository, and so Git will be tracking the changes on it. You will have to remove the file using <code>git rm<\\\/code> before it will ignore it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><gitignore>","commentcount":"0","accepted":"yes"},"7382631":{"id":"7382631","date":"2011-09","score":"7","body":"\"<p><a href=\\\"http:\\\/\\\/en.wikipedia.org\\\/wiki\\\/Localhost\\\">Wikipedia sums this up well:<\\\/a><\\\/p>\\n\\n<blockquote>\\n  <p>On modern computer systems, localhost as a hostname translates to an IPv4 address in the 127.0.0.0\\\/8 (loopback) net block, usually 127.0.0.1, or ::1 in IPv6.<\\\/p>\\n<\\\/blockquote>\\n\\n<p>The only difference is that it would be looking up in the DNS for the system what <code>localhost<\\\/code> resolves to. This lookup is really, really quick. For instance, to get to <code>stackoverflow.com<\\\/code> you typed in that to the address bar (or used a bookmarklet that pointed here). Either way, you got here through a hostname. <code>localhost<\\\/code> provides a similar functionality.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<sockets><networking><dns><localhost>","commentcount":"2","accepted":""},"7383706":{"id":"7383706","date":"2011-09","score":"0","body":"\"<p>You're probably getting a different page because you're not passing a User-Agent HTTP Header along with your request. Try passing one along and see if that alters what you get back. (Hint: \\\"Steal\\\" Chrome's).<\\\/p>\\n\\n<p>Next, I would not use Hpricot anymore as it is unmaintained and superseded by <a href=\\\"http:\\\/\\\/nokogiri.org\\\" rel=\\\"nofollow\\\">Nokogiri<\\\/a>. With Nokogiri you would find this element using <code>doc.css(\\\"span.dpOurPrice\\\")<\\\/code>, for instance.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"7395143":{"id":"7395143","date":"2011-09","score":"1","body":"\"<p>First up: you're getting that error you're seeing because you've defined the associations in the <code>Membership<\\\/code> and <code>Ownership<\\\/code> table as this:<\\\/p>\\n\\n<pre><code>belongs_to :users\\n<\\\/code><\\\/pre>\\n\\n<p>When they should belong to only one user, i.e. singular <code>user<\\\/code>:<\\\/p>\\n\\n<pre><code>belongs_to :user\\n<\\\/code><\\\/pre>\\n\\n<p>But even then you will run into problems!<\\\/p>\\n\\n<p>I think having a <code>Membership<\\\/code> model and an <code>Ownership<\\\/code> model are what will trip you up next. I don't understand what the purpose of having an <code>Ownership<\\\/code> model provides, other than signifying ownership of a group, which could be done by a field on the <code>memberships<\\\/code> table's records called <code>owner<\\\/code> for instance. It's over-engineering.<\\\/p>\\n\\n<p>The problem with the Rails code you've got there is that you're defining that you have many posts through one association and then you're telling it that you have many posts through another association. In effect, you're doing this:<\\\/p>\\n\\n<pre><code> def posts\\n   # find posts for the groups that I own\\n end\\n\\n def posts\\n   # find posts for the groups I belong to\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>It is not mistake here that there are two identically-named methods. This is <em>exactly<\\\/em> what you are doing by defining two <code>has_many<\\\/code> associations with the same name.<\\\/p>\\n\\n<p>So hopefully now you can see why having an <code>Ownership<\\\/code> and a <code>Membership<\\\/code> model is the path to <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/1732348\\\/regex-match-open-tags-except-xhtml-self-contained-tags\\\/1732454#1732454\\\">madness<\\\/a>.<\\\/p>\\n\\n<p>I would really recommend that you just have a <code>Membership<\\\/code> model that has a boolean attribute declaring an owner for a group. This would also mean that, if you wanted to, you could have new owners for a group in a very easy fashion: just flip the boolean. No need to create <em>another<\\\/em> record in <em>another<\\\/em> table.<\\\/p>\\n\\n<p>One <code>Membership<\\\/code> model to rule them all.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><relationships>","commentcount":"1","accepted":"yes"},"7395270":{"id":"7395270","date":"2011-09","score":"1","body":"\"<p>The <code>form_tag<\\\/code> method takes a block, and you are not giving it one. You should be doing something like this:<\\\/p>\\n\\n<pre><code>&lt;%= form_tag(:action =&gt; 'update_limits' ,:id =&gt; params[:id]) do %&gt;\\n# form goes here\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Or even better, if this is acting on a real object, using a <code>form_for<\\\/code> tag:<\\\/p>\\n\\n<pre><code>&lt;%= form_for(@object) do |f| %&gt;\\n# form_goes here\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>For more information, please read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">Getting Started  guide for Rails<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"7439056":{"id":"7439056","date":"2011-09","score":"1","body":"\"<p>Yes, define <code>to_param<\\\/code> in your <code>User<\\\/code> model:<\\\/p>\\n\\n<pre><code>def to_param\\n  timestamp\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>And define the <code>timestamp<\\\/code> attribute on your model and set it in a <code>before_create<\\\/code>:<\\\/p>\\n\\n<pre><code>class User &lt; ActiveRecord::Base\\n  before_create :set_timestamp\\n\\n  # model code goes here\\n  def set_timestamp\\n    self.timestamp = created_at.to_i\\n  end\\n<\\\/code><\\\/pre>\\n\\n<p>But if two users were created at precisely the same second, you will run into trouble. You may want to make this slightly more random than that. You will also now need to find them based on that field:<\\\/p>\\n\\n<pre><code>  User.find_by_timestamp(params[:id])\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<database><ruby-on-rails-3><url><user><routes>","commentcount":"1","accepted":"yes"},"7473215":{"id":"7473215","date":"2011-09","score":"1","body":"\"<p>By installing this gem as a plugin, you're not going to get the dependencies that the gem requires. The <code>paperclip<\\\/code> gem depends on another gem called <code>cocaine<\\\/code>. <\\\/p>\\n\\n<p>I would really recommend installing the <code>paperclip<\\\/code> gem by putting it into your <code>Gemfile<\\\/code> and running <code>bundle install<\\\/code>.<\\\/p>\\n\\n<p>This is why you should use gems rather than plugins.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"7473235":{"id":"7473235","date":"2011-09","score":"4","body":"\"<p>Your <code>form_for<\\\/code> will do a <code>PUT<\\\/code> request rather than a <code>POST<\\\/code> request, because it's acting on an existing object. I would recommend changing the line in your routes file from this:<\\\/p>\\n\\n<pre><code>post 'update_assigned_video'\\n<\\\/code><\\\/pre>\\n\\n<p>To this:<\\\/p>\\n\\n<pre><code>put 'update_assigned_video'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"7473270":{"id":"7473270","date":"2011-09","score":"3","body":"\"<p>Did you define a class called <code>Mail<\\\/code> accidentally? This is a reserved class in Rails, as the <code>actionmailer<\\\/code> gem that comes with Rails depends on the <code>Mail<\\\/code> gem. You will have to choose another name.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><actionmailer>","commentcount":"2","accepted":"yes"},"7473290":{"id":"7473290","date":"2011-09","score":"2","body":"\"<p>You can alter the controller that is used by Devise by specifying it in your <code>config\\\/routes.rb<\\\/code> file:<\\\/p>\\n\\n<pre><code>devise_for :users, :controllers =&gt; { :users =&gt; \\\"users\\\" } \\n<\\\/code><\\\/pre>\\n\\n<p>Then you would create a <code>UsersController<\\\/code> in your application that inherits from the <code>Devise::UsersController<\\\/code> and define a <code>before_filter<\\\/code> at the beginning of this controller:<\\\/p>\\n\\n<pre><code>class UsersController &lt; Devise::UsersController\\n  before_filter :some_filter\\n\\n  private\\n    def some_filter\\n      # some code\\n    end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>You don't need to define the actions in this controller unless you want to completely override them.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><devise>","commentcount":"0","accepted":"yes"},"7476130":{"id":"7476130","date":"2011-09","score":"9","body":"\"<p>An an alternative to James Schorr's answer: <\\\/p>\\n\\n<pre><code>posts = Post.order('created_at DESC').limit(10)\\n<\\\/code><\\\/pre>\\n\\n<p>The benefit of this alternative is that it allows you to continue to chain more relational scopes on the end of it:<\\\/p>\\n\\n<pre><code>posts.where(:user_id =&gt; 1)\\n<\\\/code><\\\/pre>\\n\\n<p>It's not until the object is iterated over or <code>inspect<\\\/code>ed that the SQL query actually runs.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><sorting>","commentcount":"2","accepted":""},"7476607":{"id":"7476607","date":"2011-09","score":"5","body":"\"<p>No, you are not able to have multiple gem versions loaded at the same time. This is because, as knut highlighted, the code would conflict. How would a gem know to use the <code>1.2.4<\\\/code> version of Rack as opposed to the <code>1.3.3<\\\/code> version of Rack? It can't.<\\\/p>\\n\\n<p>Also: with Bundler, all gem dependencies <em>must<\\\/em> be satisfied in order for the bundling process to complete. If you have a gem that <em>explicitly requires<\\\/em> Rack 1.2.4 (i.e <code>= 1.2.4<\\\/code> is in the <code>gemspec<\\\/code> for that gem) and then another gem that requires a version of Rack such as <code>&gt;= 1.3<\\\/code> then these gem versions will conflict and Bundler will tell you so.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><rubygems><bundler>","commentcount":"2","accepted":""},"7478165":{"id":"7478165","date":"2011-09","score":"34","body":"\"<p>You will have to refer to it as <code>ActiveRecord::Fixtures<\\\/code> now.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><ruby-on-rails-3.1>","commentcount":"0","accepted":"yes"},"7491707":{"id":"7491707","date":"2011-09","score":"49","body":"\"<p>You can define a new class in your application at <code>lib\\\/ext\\\/string.rb<\\\/code> and put this content in it:<\\\/p>\\n\\n<pre><code>class String\\n  def to_magic\\n    \\\"magic\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>To load this class, you will need to require it in your <code>config\\\/application.rb<\\\/code> file or in an initializer. If you had many of these extensions, an initializer is better! The way to load it is simple:<\\\/p>\\n\\n<pre><code>require 'ext\\\/string'\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>to_magic<\\\/code> method will then be available on <em>instances<\\\/em> of the <code>String<\\\/code> class inside your application \\\/ console, i.e.:<\\\/p>\\n\\n<pre><code>&gt;&gt; \\\"not magic\\\".to_magic\\n=&gt; \\\"magic\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>No plugins necessary.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><monkeypatching>","commentcount":"5","accepted":"yes"},"7516961":{"id":"7516961","date":"2011-09","score":"0","body":"\"<p>You cannot fix or get rid of this warning without submitting a patch to the gem that would fix it. I do not know what is causing it, so I cannot advise on that part.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"7518576":{"id":"7518576","date":"2011-09","score":"2","body":"\"<p>You've set up your <code>form_for<\\\/code> like this, I reckon:<\\\/p>\\n\\n<pre><code>&lt;%= form_for @user do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Because the route is in a namespace, you need to tell the form that also:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [:admin, @user] do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>That should help you fix that issue.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routing><model><admin>","commentcount":"0","accepted":"yes"},"7519659":{"id":"7519659","date":"2011-09","score":"1","body":"\"<p>You're only using the scope to tell it the module where the controller can be found in. If you want to use the <code>physical<\\\/code> prefix on your routes then you could do this:<\\\/p>\\n\\n<pre><code>scope :module =&gt; \\\"physical\\\", :as =&gt; \\\"physical\\\" do\\n  resources :mymodel\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Alternatively, you could just use the <code>namespace<\\\/code> method which will do the same thing:<\\\/p>\\n\\n<pre><code>namespace :physical do\\n  resources :mymodel\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routing><urlhelper>","commentcount":"2","accepted":"yes"},"7521310":{"id":"7521310","date":"2011-09","score":"0","body":"\"<p>I would <em>not<\\\/em> define this in the controller as Sebes suggests, but rather in the <code>User<\\\/code> model. <\\\/p>\\n\\n<p>Adapting his idea:<\\\/p>\\n\\n<pre><code>def galleries\\n  Gallery.joins(:groups =&gt; :users).where(\\\"users.id = ?\\\", self.id)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then to get a collection of the galleries for the <code>current_user<\\\/code> object:<\\\/p>\\n\\n<pre><code>current_user.galleries\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"0","accepted":""},"7562463":{"id":"7562463","date":"2011-09","score":"0","body":"\"<p><code>HEAD<\\\/code> is the current revision. It's best answered by <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/2304087\\\/what-is-git-head-exactly\\\">this question<\\\/a> right here. It will be exactly the same as the currently checked out ref.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><git-branch><master><head>","commentcount":"0","accepted":""},"7575570":{"id":"7575570","date":"2011-09","score":"0","body":"\"<p>I would recommend using a routing helper for this instead of a hash. Create routes for the site parts like this:<\\\/p>\\n\\n<pre><code>scope :controller =&gt; \\\"sites\\\" do\\n  get 'somewhere', :as =&gt; \\\"somewhere\\\"\\n  # etc...\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then reference them in your view as <code>somewhere_url<\\\/code> or <code>somewhere_path<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><routing>","commentcount":"0","accepted":""},"7624336":{"id":"7624336","date":"2011-10","score":"3","body":"\"<p>You're on the right line of thinking with templates + engines. <\\\/p>\\n\\n<p>Templates are great for one-time use. They allow you to generate an application that conforms to a specific, um, template, which provides an excellent base for you to build on top of. You can find more information about templates in <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/generators.html\\\" rel=\\\"nofollow\\\">this wonderful guide<\\\/a>.<\\\/p>\\n\\n<p>Engines, I think, are the better of the two. They allow you to provide that same base that templates would, but then <em>also<\\\/em> allow you to expand on that base for later. Within an engine you can have all the things you want. You can generate one of these fabulous creations by running this command:<\\\/p>\\n\\n<pre><code>rails plugin new pixelearth_base --mountable\\n<\\\/code><\\\/pre>\\n\\n<p>This will generate the base of an engine, which then you can have all the things you wanted.<\\\/p>\\n\\n<p>Let me show you the ways.<\\\/p>\\n\\n<p><strong>CSS files \\\/ images<\\\/strong><\\\/p>\\n\\n<p>CSS files go into <code>app\\\/assets<\\\/code>, just like in a Rails 3.1 application, and are then processed the same way. You can read more about them in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/asset_pipeline.html\\\" rel=\\\"nofollow\\\">Asset Pipeline guide<\\\/a>. You can reference them exactly the same way you would reference them if they were inside your application. Of course, any asset inside your application named identically to one inside your engine will take precedence.<\\\/p>\\n\\n<p><strong>Initializers<\\\/strong><\\\/p>\\n\\n<p>These go in <code>config\\\/initializers<\\\/code>, just like an application (hint: this is a running theme with engines). They work the same way and are explained in <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/configuring.html#using-initializer-files\\\" rel=\\\"nofollow\\\">this section of the Configuring Guide<\\\/a>, although I reckon you know that much already.<\\\/p>\\n\\n<p><strong>Shared views<\\\/strong><\\\/p>\\n\\n<p>These go into <code>app\\\/views\\\/shared<\\\/code> in your engine. Any file in your application named identically will take precedence over the file in the engine. The application will be able to seamlessly access any file in this directory, since engines have their view paths added to the application's.<\\\/p>\\n\\n<p><strong>Partials<\\\/strong><\\\/p>\\n\\n<p>Ditto.<\\\/p>\\n\\n<p><strong>Admin<\\\/strong><\\\/p>\\n\\n<p>Have you tried the wonderful <a href=\\\"http:\\\/\\\/github.com\\\/sferik\\\/rails_admin\\\" rel=\\\"nofollow\\\">rails_admin<\\\/a> engine for this? Perhaps that would suit you. If not, you can build this functionality into your engine just as you would in an application.<\\\/p>\\n\\n<p><strong>Helpers<\\\/strong><\\\/p>\\n\\n<p>Work in much the same way as everything else. Add them to your engine and you'll be good to go. Although I am not confident in that last point, you may have to do <code>helper SomeHelper<\\\/code> at the top of the controller to get them included.<\\\/p>\\n\\n<p><strong>Haml<\\\/strong><\\\/p>\\n\\n<p>Specify this as a dependency of the engine in the engine's <code>pixelearth_base.gemspec<\\\/code> file using a line like this:<\\\/p>\\n\\n<pre><code>s.add_dependency 'haml', '3.1.3'\\n<\\\/code><\\\/pre>\\n\\n<p>Your engine (and by extension, your application) would be able to use haml in views.<\\\/p>\\n\\n<p><strong>Templates<\\\/strong><\\\/p>\\n\\n<p>I am not sure what you mean by this, so I am going to gloss over it.<\\\/p>\\n\\n<p><strong>Gems<\\\/strong><\\\/p>\\n\\n<p>Shared gem dependencies should be specified in the <code>pixelearth_base.gemspec<\\\/code> just like the haml example.<\\\/p>\\n\\n<hr>\\n\\n<p><strong>Including the engine<\\\/strong> <\\\/p>\\n\\n<p>Now, you're going to need to include this engine into your application but you don't want to go through the pain of updating a gem all the time. I reckon the best way to do this is to push the gem to GitHub and then specify a line like this inside your application's <code>Gemfile<\\\/code>:<\\\/p>\\n\\n<pre><code>gem 'pixelearth_base', :git =&gt; \\\"git:\\\/\\\/github.com\\\/pixelearth\\\/pixelearth_base\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Whenever you update this gem and push new changes to GitHub, you will need to run <code>bundle update pixelearth_base<\\\/code> to update your application with the latest version. Each time you run <code>bundle update<\\\/code> it will be locked to that specific version. Any further changes to the engine won't be acknowledged until you run <code>bundle update ...<\\\/code> again.<\\\/p>\\n\\n<hr>\\n\\n<p><strong>Mounting the engine<\\\/strong><\\\/p>\\n\\n<p>One final thing which you asked about in IRC is mounting. If you happen to go the route of having shared functionality in your engine (i.e. controllers and so on) then you'll need to mount your engine within your application. This is very easy and can be done by putting this line in your <code>config\\\/routes.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>mount PixelEarth::Engine, :at =&gt; \\\"pixelearth\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>PixelEarth::Engine<\\\/code> class is defined in your engine at <code>lib\\\/pixel_earth\\\/engine.rb<\\\/code> and provides all the functionality it needs by inheriting from <code>Rails::Engine<\\\/code>. Any functionality from your application will now be available at <code>\\\/pixelearth<\\\/code> in your application.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><plugins><modularity>","commentcount":"1","accepted":""},"7628974":{"id":"7628974","date":"2011-10","score":"1","body":"\"<p>The gem you are using is incompatible with your version of Rails, probably because the gem is out of date. Look around for a more up-to-date version or patch it yourself.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rubygems><redmine>","commentcount":"1","accepted":""},"7643298":{"id":"7643298","date":"2011-10","score":"4","body":"\"<p>It doesn't make sense to me to have the role on the users table if you want it to determine what the user can do within the context of a group.<\\\/p>\\n\\n<p>Where it <em>would<\\\/em> make sense is to have it on the <code>memberships<\\\/code> table for groups and users. Records in this table would then have three columns: <code>user_id<\\\/code>, <code>group_id<\\\/code> and <code>role<\\\/code>.<\\\/p>\\n\\n<p>Then to retrieve the leader for the group you would execute a query like this:<\\\/p>\\n\\n<pre><code>group.users.where(\\\"memberships.role = 'leader'\\\").first\\n<\\\/code><\\\/pre>\\n\\n<p>Where <code>group<\\\/code> is a <code>Group<\\\/code> object, i.e. <code>Group.first<\\\/code> or <code>Group.find(13)<\\\/code>.<\\\/p>\\n\\n<p>This then leaves open the possibility that you can have more than one leader for a group further down the track if required.<\\\/p>\\n\\n<hr>\\n\\n<p>If your roles are in a separate table, then you can do this:<\\\/p>\\n\\n<pre><code>group.users.where(\\\"memberships.role_id = ?\\\", Role.find_by_name(\\\"leader\\\").id).first\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><cancan>","commentcount":"4","accepted":"yes"},"7643331":{"id":"7643331","date":"2011-10","score":"0","body":"\"<p>You will need a controller that accepts the form's input. You cannot simply connect together a form to the mailer and have it sent out. You need an intermediary step in there.<\\\/p>\\n\\n<p>You should create a controller, or at least an action in a controller, which takes the request along with the email and passes it on to a mailer:<\\\/p>\\n\\n<pre><code>def send_invitation_email\\n  UserMailer.invitation(params[:email]).deliver\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"7643450":{"id":"7643450","date":"2011-10","score":"7","body":"\"<p>To test that kind of thing you're going to want to use anonymous controllers within RSpec. <a href=\\\"https:\\\/\\\/www.relishapp.com\\\/rspec\\\/rspec-rails\\\/docs\\\/controller-specs\\\/anonymous-controller\\\">Relish has a fantastic example here<\\\/a> about them. <\\\/p>\\n\\n<p>Be sure to have a look around in other parts of that documentation too. I've learned a lot by just going through the examples they have there.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rspec>","commentcount":"4","accepted":"yes"},"7643523":{"id":"7643523","date":"2011-10","score":"7","body":"\"<p>Why not just require these in the view? Is it important that they are loaded in the asset? To load them in the view:<\\\/p>\\n\\n<pre><code>&lt;% if Rails.env.development? %&gt;\\n  &lt;%= javascript_include_tag \\\"application\\\/badglobals\\\" %&gt;\\n  &lt;%= javascript_include_tag \\\"application\\\/consul\\\" %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><sprockets><asset-pipeline>","commentcount":"3","accepted":"yes"},"7654775":{"id":"7654775","date":"2011-10","score":"10","body":"\"<p>You wrote this:<\\\/p>\\n\\n<pre><code>@day_tasks = DayTask.find { |x| x.task.goal.user == @user &amp;&amp; x.target_date == Date.today }\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>find<\\\/code> method here is actually falling back to <code>Enumerable<\\\/code>'s <code>find<\\\/code>, which is an alias for <code>detect<\\\/code>, which takes a block and will return the first element in that collection that matches the block's conditions <em>or<\\\/em> will return <code>nil<\\\/code>.<\\\/p>\\n\\n<p>In order to fix this, you're going to need to use ARel's query stuff that's built-in to ActiveRecord.<\\\/p>\\n\\n<pre><code>DayTask.joins(:task =&gt; { :goals =&gt; :user }).where(\\\"users.id = ? AND day_tasks.target_date = ?\\\", @user.id, Date.today)\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>joins<\\\/code> method here will join the tables that match the <em>association<\\\/em> names in your <code>DayTask<\\\/code> model and related models. This means you must have a <code>task<\\\/code> association on the <code>DayTask<\\\/code> model and on that model have a <code>goals<\\\/code> association and on the goals model  have one for <code>user<\\\/code>. <\\\/p>\\n\\n<p>The <code>where<\\\/code> will then construct an SQL condition that will query the joins to find all records that belong to a user and have a <code>target_date<\\\/code> of today.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"4","accepted":"yes"},"7654801":{"id":"7654801","date":"2011-10","score":"0","body":"\"<p>My bet isn't that you've specified the <code>geometry<\\\/code> gem in your <code>Gemfile<\\\/code> and another gem (or perhaps you) is trying to load it. I don't know the exact name of this gem so I can't tell you exactly the line to put in your Gemfile, but it looks like this:<\\\/p>\\n\\n<pre><code>gem 'ruby-geometry', '0.2.8'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><gem>","commentcount":"0","accepted":""},"7656653":{"id":"7656653","date":"2011-10","score":"20","body":"\"<p>I worked around this issue by overriding the <code>get<\\\/code>, <code>post<\\\/code>, <code>put<\\\/code>, and <code>delete<\\\/code> methods  that are provided, making it so they always pass <code>use_route<\\\/code> as a parameter. <\\\/p>\\n\\n<p>I used Benoit's answer as a basis for this. Thanks buddy!<\\\/p>\\n\\n<pre><code>module ControllerHacks\\n  def get(action, parameters = nil, session = nil, flash = nil)\\n    process_action(action, parameters, session, flash, \\\"GET\\\")\\n  end\\n\\n  # Executes a request simulating POST HTTP method and set\\\/volley the response\\n  def post(action, parameters = nil, session = nil, flash = nil)\\n    process_action(action, parameters, session, flash, \\\"POST\\\")\\n  end\\n\\n  # Executes a request simulating PUT HTTP method and set\\\/volley the response\\n  def put(action, parameters = nil, session = nil, flash = nil)\\n    process_action(action, parameters, session, flash, \\\"PUT\\\")\\n  end\\n\\n  # Executes a request simulating DELETE HTTP method and set\\\/volley the response\\n  def delete(action, parameters = nil, session = nil, flash = nil)\\n    process_action(action, parameters, session, flash, \\\"DELETE\\\")\\n  end\\n\\n  private\\n\\n  def process_action(action, parameters = nil, session = nil, flash = nil, method = \\\"GET\\\")\\n    parameters ||= {}\\n    process(action, parameters.merge!(:use_route =&gt; :my_engine), session, flash, method)\\n  end\\nend\\n\\nRSpec.configure do |c|\\n  c.include ControllerHacks, :type =&gt; :controller\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rspec><ruby-on-rails-3.1><routes>","commentcount":"3","accepted":""},"7667398":{"id":"7667398","date":"2011-10","score":"8","body":"\"<p>No, please do not do this.<\\\/p>\\n\\n<p>The reason for it being this way is that it provides a common interface for nested resources across every single application. By making it different in your application, you're effectively going \\\"against the grain\\\" of Rails. Rails has a strict set of conventions that you should stick to. When you stray from this path, things get messy.<\\\/p>\\n\\n<hr>\\n\\n<p>However, if you do want to shoot yourself in the foot, metaphorically speaking, you will need to define the routes manually. Here's the routes for the seven standard actions in a controller:<\\\/p>\\n\\n<pre><code>get 'leagues\\\/:id\\\/schedules', :to =&gt; \\\"schedules#index\\\", :as =&gt; \\\"league_schedules\\\"\\nget 'leagues\\\/:id\\\/schedule\\\/:schedule_id', :to =&gt; \\\"schedules#show\\\", :as =&gt; \\\"league_schedule\\\"\\nget 'leagues\\\/:id\\\/schedules\\\/new', :to =&gt; \\\"schedules#new\\\", :as =&gt; \\\"new_league_schedule\\\"\\npost 'leagues\\\/:id\\\/schedules', :to =&gt; \\\"schedules#create\\\"\\nget 'leagues\\\/:id\\\/schedule\\\/:schedule_id\\\/edit', :to =&gt; \\\"schedules#edit\\\", :as =&gt; \\\"ed it_league_schedule\\\"\\nput 'leagues\\\/:id\\\/schedule\\\/:schedule_id', :to =&gt; \\\"schedules#update\\\"\\ndelete 'leagues\\\/:id\\\/schedule\\\/:schedule_id', :to =&gt; \\\"schedules#destroy\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>As you can see, it's quite ugly. But, if you <em>really really really<\\\/em> want to do it this way, that's how you'd do it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routes><nested-routes>","commentcount":"0","accepted":""},"7681114":{"id":"7681114","date":"2011-10","score":"1","body":"\"<p>There is a free option, but it is very restricted, coming with a 5mb database and one \\\"dyno\\\" (a server for requests to your application) and no worker processes.<\\\/p>\\n\\n<p>With one dyno and one worker your server hosting costs will be <em>at most<\\\/em> $35 a month. I say \\\"at most\\\" because you are able to spool up and shut down workers as you need them, meaning that you could reduce your costs by managing the uptime and downtime for your workers.<\\\/p>\\n\\n<p>To start a worker, run this command from your computer while in the Heroku application's directory.<\\\/p>\\n\\n<pre><code>heroku workers 1\\n<\\\/code><\\\/pre>\\n\\n<p>To stop that worker, run this command:<\\\/p>\\n\\n<pre><code>heroku workers 0\\n<\\\/code><\\\/pre>\\n\\n<p>For more information see this page: <a href=\\\"http:\\\/\\\/devcenter.heroku.com\\\/articles\\\/delayed-job\\\" rel=\\\"nofollow\\\">http:\\\/\\\/devcenter.heroku.com\\\/articles\\\/delayed-job<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><heroku>","commentcount":"1","accepted":"yes"},"7681195":{"id":"7681195","date":"2011-10","score":"1","body":"\"<p>The <code>dreams<\\\/code> call is returning an <code>ActiveRecord::Relation<\\\/code> object because it's a collection of objects. If you want all the content for all the dreams you will have to treat it like an array:<\\\/p>\\n\\n<pre><code>@user.dreams.map(&amp;:content)\\n<\\\/code><\\\/pre>\\n\\n<p>Also, <code>@user.content<\\\/code> won't work because <code>content<\\\/code> is an attribute on a <code>Dream<\\\/code> object, not a <code>User<\\\/code> object.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":""},"7681736":{"id":"7681736","date":"2011-10","score":"3","body":"\"<p>Define your route like this:<\\\/p>\\n\\n<pre><code>get '\\\/users\\\/:name\\\/:id', :to =&gt; 'users#show', :as =&gt; \\\"user\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then redirect to it using this helper:<\\\/p>\\n\\n<pre><code>redirect_to(user_path(@user.name, @user.id))\\n<\\\/code><\\\/pre>\\n\\n<hr>\\n\\n<p>Alternatively, you could just stick with <code>resources :users<\\\/code> and not have to define your own route. The difference here is that your route would be something like <code>\\\/users\\\/1-testing<\\\/code> rather than <code>users\\\/1\\\/testing<\\\/code>, but the advantage is that you would be more Rails standard.<\\\/p>\\n\\n<p>To do this, define a <code>to_param<\\\/code> method in your model, like this:<\\\/p>\\n\\n<pre><code>def to_param\\n  \\\"#{id}-#{name.parameterize}\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then Rails will use the output of the <code>to_param<\\\/code> method in your routes.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><url><routing>","commentcount":"1","accepted":"yes"},"7682614":{"id":"7682614","date":"2011-10","score":"5","body":"\"<p>This is because <code>HomeController<\\\/code> inherits from <code>Spree::BaseController<\\\/code> which isn't loaded at this point in time due to some unknown reason. You should be able to fix it by putting <code>require 'spree\\\/base_controller'<\\\/code> at the top of your decorator.<\\\/p>\\n\\n<p>Could you please also submit a GitHub issue for this on <a href=\\\"http:\\\/\\\/github.com\\\/spree\\\/spree\\\">http:\\\/\\\/github.com\\\/spree\\\/spree<\\\/a>? It would be helpful for anybody else who ran into this issue too.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><spree>","commentcount":"0","accepted":"yes"},"7683322":{"id":"7683322","date":"2011-10","score":"3","body":"\"<p>A multi-part question! Let me answer them in the proper parts.<\\\/p>\\n\\n<p><strong>[Question 1] Does it make sense to rename the file names, if there is a spelling mistake.<\\\/strong><\\\/p>\\n\\n<p>If it bothers you that much, yes. It would also bother me too.<\\\/p>\\n\\n<p><strong>[Question 2] [Wall of text about removing a migration]<\\\/strong><\\\/p>\\n\\n<p>Once a migration has been committed to your version control system, it should remain untouched. If it's modified, then you and other developers would need to roll it back and forward in order to get its changes again. It would be much better if you were to never touch old migrations and to fix any issues in new migrations. There are exceptions to this rule, which will be obvious when you encounter them. <\\\/p>\\n\\n<p>Such as migrations that drop entire tables by accident.<\\\/p>\\n\\n<p><strong>[Question 3] Handling of migrations committed to version control<\\\/strong><\\\/p>\\n\\n<p>It's best practice to work in your own branch if you're going to be committing work that is incomplete. By doing this, you will leave the main branch (\\\"master\\\", probably) pristine and complete, allowing for other developers to continue on their own work.<\\\/p>\\n\\n<p>Once you've got that migration sorted, then you will merge that branch back into master.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><database-migration><dbmigrate>","commentcount":"0","accepted":"yes"},"7707227":{"id":"7707227","date":"2011-10","score":"1","body":"\"<p>I wouldn't store this in cookies or even session. You should track these in <code>votes<\\\/code> table which contains the <code>user_id<\\\/code> and a <code>link_id<\\\/code>. <\\\/p>\\n\\n<p>Every time a user votes, check for a record in this table and if one exists then throw an error. If one doesn't exist then insert a record into this table and increment the votes count on the links table, perhaps using a counter cache.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><cookies>","commentcount":"2","accepted":""},"7710668":{"id":"7710668","date":"2011-10","score":"4","body":"\"<p>You must define a <code>hook_for<\\\/code> the other generator in your generator class. The <code>ScaffoldGenerator<\\\/code> is probably the best example of this, as it <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-1-stable\\\/railties\\\/lib\\\/rails\\\/generators\\\/rails\\\/scaffold\\\/scaffold_generator.rb#L12\\\" rel=\\\"nofollow\\\">has a hook for the <code>scaffold_controller<\\\/code> generator.<\\\/a><\\\/p>\\n\\n<p>If you want to pass in arguments to your generator, it's probably better to use something like the <code>hook_for<\\\/code> examples further down in this file for assets and stylesheet engine.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><thor>","commentcount":"2","accepted":"yes"},"7711233":{"id":"7711233","date":"2011-10","score":"9","body":"\"<p>I think you'll find the <code>message<\\\/code> method is <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-1-stable\\\/actionmailer\\\/lib\\\/action_mailer\\\/base.rb#L460\\\">reserved by Action Mailer<\\\/a>. I would recommend calling your method different from this to prevent this conflict.<\\\/p>\\n\\n<p>Thanks to Ben Lee in the comments for pointing out where this comes from.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><sendmail><actionmailer>","commentcount":"3","accepted":"yes"},"7733658":{"id":"7733658","date":"2011-10","score":"1","body":"\"<p>I reckon this is because you're passing through a full <code>@contest<\\\/code> object to the parameters of the <code>create<\\\/code> action, when it's actually going to be expecting a <code>Hash<\\\/code> of attributes.<\\\/p>\\n\\n<p>You can fix this by changing your call to that action to this:<\\\/p>\\n\\n<pre><code>post :create,\\n     :contest =&gt; @contest.attributes,\\n     ...\\n<\\\/code><\\\/pre>\\n\\n<p>I would also <em>not<\\\/em> get FactoryGirl to create the object for you, as that may lead to uniqueness validations or whatever possibly failing. You should be using <code>FactoryGirl.build<\\\/code>, and not <code>FactoryGirl.create<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><ruby-on-rails-3.1><mongoid>","commentcount":"1","accepted":""},"7733938":{"id":"7733938","date":"2011-10","score":"1","body":"\"<p>Yes, you can reference the parent application assets just by referencing them in your application like normal:<\\\/p>\\n\\n<pre><code>  &lt;%= stylesheet_link_tag \\\"application %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Although, not sure why you would want to do that because...<\\\/p>\\n\\n<p>I'm going to answer your first question with the answer to your second question.<\\\/p>\\n\\n<p>To use the application's layout you will need to modify the <code>ApplicationController<\\\/code> in the engine (which is namespaced) and have it inherit from <code>ApplicationController<\\\/code> in the engine.<\\\/p>\\n\\n<p>That will then have the controllers for the engine using the layout provided by the engine. I'm <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/forem\\\/blob\\\/master\\\/app\\\/controllers\\\/forem\\\/application_controller.rb\\\" rel=\\\"nofollow\\\">doing this in my engine, forem<\\\/a>.<\\\/p>\\n\\n<p>One day, this will be covered in <a href=\\\"https:\\\/\\\/github.com\\\/lifo\\\/docrails\\\/blob\\\/master\\\/railties\\\/guides\\\/source\\\/engines.textile\\\" rel=\\\"nofollow\\\">the Engines Guide<\\\/a> that, at this time of writing, is currently being written.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><ruby-on-rails-3.1><rails-engines>","commentcount":"1","accepted":""},"7760140":{"id":"7760140","date":"2011-10","score":"94","body":"\"<p>To turn it off:<\\\/p>\\n\\n<pre><code>old_logger = ActiveRecord::Base.logger\\nActiveRecord::Base.logger = nil\\n<\\\/code><\\\/pre>\\n\\n<p>To turn it back on:<\\\/p>\\n\\n<pre><code>ActiveRecord::Base.logger = old_logger\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<sql><ruby-on-rails><ruby-on-rails-3><console>","commentcount":"8","accepted":"yes"},"7780740":{"id":"7780740","date":"2011-10","score":"0","body":"\"<p><code>distance_of_time_in_words<\\\/code> takes two times and then works out the distance between them. In your code, you're passing a time and then a hash and then <code>dotiw<\\\/code> is attempting to compare the two.<\\\/p>\\n\\n<p>If you're only interested in the distance of one time to now, how about using <code>time_ago_in_words<\\\/code>?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><date><mongodb><time>","commentcount":"3","accepted":"yes"},"7781706":{"id":"7781706","date":"2011-10","score":"0","body":"\"<p>It looks like you're missing a field called <code>parent_id<\\\/code> on the <code>comments<\\\/code> table.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><nested><nested-sets>","commentcount":"2","accepted":"yes"},"7787828":{"id":"7787828","date":"2011-10","score":"1","body":"\"<p>I think you're not truly using Rails 3.1.<\\\/p>\\n\\n<p>The expansion stuff was taken out of that in favour of using the Asset Pipeline. If you're still convinced that you really are using Rails 3.1, then perhaps try using a string:<\\\/p>\\n\\n<pre><code>&lt;%= javascript_include_tag \\\"application\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>In <em>my<\\\/em> Rails 3.1 install, both strings and symbols work fine.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><ruby-on-rails><ruby-on-rails-3.1>","commentcount":"1","accepted":"yes"},"7787900":{"id":"7787900","date":"2011-10","score":"2","body":"\"<p>Agreed with daniel. The asset pipeline stuff will work flawlessly on the Cedar stack on Heroku.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><heroku><assets>","commentcount":"1","accepted":"yes"},"7799952":{"id":"7799952","date":"2011-10","score":"1","body":"\"<p>Please do not pass your field in as a <code>hidden_field<\\\/code> in the form. A better way to do this would be to go like this: <\\\/p>\\n\\n<pre><code>&lt;%= form_for :comment,\\n             :remote =&gt; true,\\n             :url    =&gt; post_comments_path(post)\\n             :html =&gt; { :id =&gt; 'new-comment'} do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>By using the routing helpers that Rails provides you, this will clean up your form by:<\\\/p>\\n\\n<ol>\\n<li>Not having you use the ugly hash syntax to generate the URL for your form<\\\/li>\\n<li>Not have you place a <code>hidden_field<\\\/code> in the form to send through the URL; and<\\\/li>\\n<li>Automatically send through the post parameter as <code>params[:post_id]<\\\/code> just like <s>God<\\\/s> DHH intended.<\\\/li>\\n<\\\/ol>\\n\\n<p>This means you would be able to find it in your action with this line of code:<\\\/p>\\n\\n<pre><code>Post.find(params[:post_id])\\n<\\\/code><\\\/pre>\\n\\n<p>Rather than this, which is unnecessarily longer and therefore more painful to type:<\\\/p>\\n\\n<pre><code>Post.find(params[:comment][:post_id])\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routes><ruby-on-rails-3.1>","commentcount":"0","accepted":""},"7828887":{"id":"7828887","date":"2011-10","score":"1","body":"\"<p>The <code>Rails.groups<\\\/code> method was something that was added in Rails 3.1. By the look of it, you're still using Rails 3.0.9. Change the version number for Rails in your Gemfile to <code>3.1.1<\\\/code> and run <code>bundle update rails<\\\/code> to fix this problem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"1","accepted":"yes"},"7828920":{"id":"7828920","date":"2011-10","score":"0","body":"\"<p>Fork the plugin on GitHub and find the calls to <code>class_inheritable_attribute<\\\/code> and change them to <code>class_attribute<\\\/code>. Remove the old plugin from your <code>vendor\\\/plugins<\\\/code> directory and add the new one. That would remove the deprecation warning.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><plugins><deprecated>","commentcount":"0","accepted":"yes"},"7828993":{"id":"7828993","date":"2011-10","score":"41","body":"\"<p>500 messages really isn't that much to SendGrid. It's not even a blip on their radar. I worked for a company that sent out 2.7 million emails in a single month, and even then it's only <em>just<\\\/em> a blip.<\\\/p>\\n\\n<p>With the SendGrid API's capabilities, you wouldn't be sending out 500 emails, you would send <em>one<\\\/em> email which has a specific SendGrid API header set. Why? Because have you ever tried to send <em>500 individual email messages<\\\/em> and timed how long that takes? How about <em>a single email<\\\/em>? The single email's going to be quicker.<\\\/p>\\n\\n<p>The SendGrid API has a Ruby example which is here: <a href=\\\"http:\\\/\\\/docs.sendgrid.com\\\/documentation\\\/api\\\/smtp-api\\\/ruby-example\\\/\\\">http:\\\/\\\/docs.sendgrid.com\\\/documentation\\\/api\\\/smtp-api\\\/ruby-example\\\/<\\\/a>.<\\\/p>\\n\\n<p>That's quite long winded and messy, so let me simplify it for you. Basically, you set this in your email:<\\\/p>\\n\\n<pre><code>headers[\\\"X-SMTPAPI\\\"] = { :to =&gt; array_of_recipients }.to_json\\n<\\\/code><\\\/pre>\\n\\n<p>SendGrid will then parse this and then send that <em>one<\\\/em> email you sent it out to that array of recipients. I seem to recall that they ask you to limit this to about 1000 recipients per email, so it would be wise to split it up over multiple emails if you wanted that. <em>That<\\\/em> is when you would bring in something like the <code>delayed_job<\\\/code> or <code>resque<\\\/code> gems to deal with it.<\\\/p>\\n\\n<p>Oh, and by the way you'll still need to specify a <code>to<\\\/code> address for this email just to make the Mail gem happy. We had <code>info@ourcompany.com<\\\/code> for that.<\\\/p>\\n\\n<p>The SendGrid API will also support filters in their emails, so you can have placeholder strings such as <code>{{ firstname }}<\\\/code> and, assuming you send it through with the SMTPAPI header, it will do the \\\"mail merge\\\" on the email and customize them.<\\\/p>\\n\\n<p>It would do you a great deal of good if you read the SendGrid API documentation. It's really useful and what they provide is super powerful.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><heroku><sendgrid>","commentcount":"3","accepted":"yes"},"7829852":{"id":"7829852","date":"2011-10","score":"141","body":"\"<p>In production mode, Rails will not be responsible for serving static assets. Therefore, you are getting this error. Thin won't do it either, since it's just a wrapper around Rails.<\\\/p>\\n\\n<p>This is controlled by this setting in <code>config\\\/environments\\\/production.rb<\\\/code> in your application:<\\\/p>\\n\\n<pre><code>config.serve_static_assets = false\\n<\\\/code><\\\/pre>\\n\\n<p>You can either set to that <code>true<\\\/code> or use a real server like Apache or Nginx which will serve the static assets. I suspect Pow may also do it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><asset-pipeline>","commentcount":"4","accepted":"yes"},"7829859":{"id":"7829859","date":"2011-10","score":"0","body":"\"<p>If you use the polymorphic <code>form_for<\\\/code> syntax, this will fix it:<\\\/p>\\n\\n<pre><code>= form_for([@group, @event]) do |f|\\n<\\\/code><\\\/pre>\\n\\n<p>Now if that <code>@event<\\\/code> object is persisted in the database then it will use the <code>update<\\\/code> route, and if it's not then it will use the <code>create<\\\/code> route.<\\\/p>\\n\\n<p>You can do the same thing with the normal <code>form_for<\\\/code> call:<\\\/p>\\n\\n<pre><code> = form_for(@event) do |f|\\n<\\\/code><\\\/pre>\\n\\n<p>There's absolutely no reason to specify the <code>:url<\\\/code> option other than to customize the URL to be something different from what Rails infers.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routing>","commentcount":"1","accepted":""},"7830875":{"id":"7830875","date":"2011-10","score":"25","body":"\"<p>Yes, you need to call <code>reload!<\\\/code> as this will clear the loaded constants that have been loaded and will load them as they're referenced in the console.<\\\/p>\\n\\n<p>If you have old objects from before the <code>reload!<\\\/code> you will need to call <code>reload<\\\/code> on these individual objects or find new objects and work with them if you want to try out the new method.<\\\/p>\\n\\n<p>As an alternative, I would really recommend looking into a testing framework such as RSpec which gives you repeatable tests and a safety net for your application.<\\\/p>\\n\\n<p>It looks like you're trying to use the console as a testing tool for new functionality in your application, which is what RSpec is better suited for. The console is really good for experimentation.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><irb>","commentcount":"0","accepted":"yes"},"7843469":{"id":"7843469","date":"2011-10","score":"3","body":"\"<p>You can't stop it without editing the Apache config and taking out or commenting out the <code>VirtualHost<\\\/code> block for the Rails application and then restarting the Apache server.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><apache2><phusion-passenger>","commentcount":"1","accepted":"yes"},"7871094":{"id":"7871094","date":"2011-10","score":"0","body":"\"<p>Heroku is a read-only filesystem and you're attempting to create a new file on that system. You cannot do this.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><heroku><pdf-generation><wicked-pdf>","commentcount":"2","accepted":""},"7884571":{"id":"7884571","date":"2011-10","score":"3","body":"\"<p>You should call <code>reset_column_information<\\\/code> on the class inside the migration which will reload the columns in that class.<\\\/p>\\n\\n<p>You would ideally do something like this:<\\\/p>\\n\\n<pre><code>add_column :posts, :rank\\nPost.reset_column_information\\n# calculate rank here\\n<\\\/code><\\\/pre>\\n\\n<p>Do not use an <code>attr_accessor<\\\/code> <em>ever<\\\/em> for any <em>real column<\\\/em> in your database. This overrides the default setter and getter methods for your column and will mean that attempting to set any value to this column won't work. This is because you're now using a virtual attribute, rather than a real one.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><migration>","commentcount":"1","accepted":"yes"},"7884623":{"id":"7884623","date":"2011-10","score":"2","body":false,"title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rails-engines>","commentcount":"1","accepted":""},"7884703":{"id":"7884703","date":"2011-10","score":"4","body":"\"<p>They are virtual attributes, not real attributes. Active Record provides the <code>inspect<\\\/code> method (<a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-1-stable\\\/activerecord\\\/lib\\\/active_record\\\/base.rb#L837-848\\\" rel=\\\"nofollow\\\">definition is here<\\\/a>) and it iterates through all the columns of the model which obviously don't include the virtual attributes.<\\\/p>\\n\\n<p>If you want to find out what the virtual attributes are on the model then there's no easy way to do that. You would have to assign them into a list somewhere and then read from that list.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"4","accepted":"yes"},"7896818":{"id":"7896818","date":"2011-10","score":"0","body":"\"<p>The checkbox sent back from the view is going to be a number, either \\\"0\\\" or \\\"1\\\" depending on if the checkbox is unchecked or checked respectively. You will need to convert this in your model to a <code>false<\\\/code> or <code>true<\\\/code> value if that is what your DB adapter requires it to be.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><oracle><activerecord>","commentcount":"1","accepted":""},"7898386":{"id":"7898386","date":"2011-10","score":"1","body":"\"<p>It will only send you an email if you have enabled the <code>:confirmable<\\\/code> module, which is off by default.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"7898568":{"id":"7898568","date":"2011-10","score":"1","body":"\"<p>The <code>fields_for<\\\/code> helper is designed to take an object for which you are building the fields for or, alternatively, the name of the collection of objects which to build fields for.<\\\/p>\\n\\n<p>The first example is something like this:<\\\/p>\\n\\n<pre><code>&lt;%= f.fields_for :object do |object_fields| %&gt;\\n  # fields go here\\n<\\\/code><\\\/pre>\\n\\n<p>In this case, it will build the fields for that object.<\\\/p>\\n\\n<p>The second example is the same, but different:<\\\/p>\\n\\n<pre><code>&lt;%= f.fields_for :questions do |question_fields| 5&gt;\\n  # fields go here\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Assuming you have a <code>questions<\\\/code> method on whatever object <code>f<\\\/code> is representing, this will iterate through all those objects in that collection and present the same fields for each of the objects.<\\\/p>\\n\\n<p>Please note: <em>it is not necessary to specify <code>:questions<\\\/code> a second time<\\\/em>. You only need to tell Rails <em>once<\\\/em>.<\\\/p>\\n\\n<p>Now, if you're doing this you're probably going to want to have <code>accepts_nested_attributes_for :questions<\\\/code> in the parent model (whatever it is that <code>has_many :questions<\\\/code>) so that the fields are passed through to the controller and into the model's <code>create<\\\/code> or <code>update_attributes<\\\/code> calls successfully.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><nested-forms>","commentcount":"1","accepted":""},"7924299":{"id":"7924299","date":"2011-10","score":"0","body":"\"<p>You cannot do this, this is not how Git works. Clone the repository to your computer, make the change, stage &amp; commit it and then push it back to the other repository.<\\\/p>\\n\\n<p>If your project was on a service like GitHub which supports editing the files on the site, then you wouldn't need do any of that. Modifying the file on the site would be incredibly simple.<\\\/p>\\n\\n<p>Have you considered splitting up that repository into many different sub-repositories rather than having such a large one?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"5","accepted":""},"7926564":{"id":"7926564","date":"2011-10","score":"5","body":"\"<p>You will need to define a class within your plugin that inherits from <code>Rails::Engine<\\\/code>. In effect, the feature you want <em>is an engine<\\\/em>.<\\\/p>\\n\\n<p>Define the class like this:<\\\/p>\\n\\n<p><strong>lib\\\/your_thing\\\/engine.rb<\\\/strong><\\\/p>\\n\\n<pre><code>module YourThing\\n  class Engine &lt; Rails::Engine\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>You can then define your engine's controllers at <code>app\\\/controllers<\\\/code> within that plugin and for them to work neatly you will also need to define routes for them, which you can do inside <code>config\\\/routes.rb<\\\/code> inside the engine like this:<\\\/p>\\n\\n<pre><code>YourThing::Engine.routes.draw do\\n  resources :things\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Next, you'll need to mount your engine inside your application:<\\\/p>\\n\\n<pre><code>mount YourThing::Engine, :at =&gt; \\\"\\\/\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>The application then will be able to use routes from your engine.<\\\/p>\\n\\n<p>For more information, I'm in the progress of writing the official Rails Engine guide which <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/guides\\\/engines.html\\\">you can reference here.<\\\/a> Please let me know if you have any further questions and I'll try to answer them in the guide.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><plugins><controllers>","commentcount":"3","accepted":""},"7934833":{"id":"7934833","date":"2011-10","score":"5","body":"\"<pre><code>Book.where(\\\"title LIKE ? OR tags like ?\\\" , \\\"%#{query}%\\\", \\\"%#{query}%\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>You should have the \\\"full\\\" SQL query first which contains the placeholders (<code>?<\\\/code>) as the first argument for the <code>where<\\\/code> query and then the remaining arguments are simply the replacements for the placeholders.<\\\/p>\\n\\n<p>For more information please see the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/active_record_querying.html\\\">Active Record Querying guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<mysql><ruby-on-rails><search><where>","commentcount":"2","accepted":"yes"},"7934956":{"id":"7934956","date":"2011-10","score":"4","body":"\"<p>I wouldn't use Capybara to test a remote API because Capybara is made for testing applications is used for testing applications with a HTML UI (as Aslak points out in the comments).<\\\/p>\\n\\n<p>Instead, I would use Cucumber* in conjunction with something like HTTParty which would be the tool used to make the HTTP requests and parse them neatly. Here's an idea:<\\\/p>\\n\\n<pre><code>When \\\/^I visit the API path '(.*?)'\\\/ do |path|\\n  @result = HTTParty.get(\\\"http:\\\/\\\/theapi.com\\\/#{path}\\\")\\nend\\n\\nThen \\\/^I should see the following result:$\\\/ do |result|\\n  @result.should == result\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The final step here you would use like this:<\\\/p>\\n\\n<pre><code>Then I should see the following result:\\n   \\\"\\\"\\\"\\n     { success: true }\\n   \\\"\\\"\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>* <em>I would actually use RSpec personally, I find the syntax less clumsy.<\\\/em><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><tdd><cucumber><bdd><capybara>","commentcount":"5","accepted":"yes"},"7942125":{"id":"7942125","date":"2011-10","score":"7","body":"\"<p>Did you try defining a <code>to_s<\\\/code> method on the <code>ErnetClient<\\\/code> model?<\\\/p>\\n\\n<pre><code>def to_s\\n  display_name\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>It looks like this is the method that is being called automatically, as if you did call <code>to_s<\\\/code> on one of these objects in the console you would get a similar result.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><activeadmin>","commentcount":"5","accepted":"yes"},"7942227":{"id":"7942227","date":"2011-10","score":"0","body":"\"<p>Your <code>DocumentRoot<\\\/code> includes a space.<\\\/p>\\n\\n<pre><code>\\\"\\\/home\\\/username\\\/Sites\\\/railsapp\\\/public \\\"\\n<\\\/code><\\\/pre>\\n\\n<p>I would recommend not quoting this string.<\\\/p>\\n\\n<pre><code>\\\/home\\\/username\\\/Sites\\\/railsapp\\\/public\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><apache2><passenger><phusion-passenger>","commentcount":"1","accepted":""},"7950205":{"id":"7950205","date":"2011-10","score":"1","body":"\"<p>That error happens when your  <code>database.yml<\\\/code> file contain invalid characters, perhaps tabs instead of spaces. Double check this and see if that fixes it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rake><spree>","commentcount":"0","accepted":"yes"},"7950221":{"id":"7950221","date":"2011-10","score":"2","body":"\"<p>I would recommend creating conditional rendering inside the existing application, primarily because you will have access to the models and utility classes within that application. <\\\/p>\\n\\n<p>If that's a significant problem for you, you could separate out the two codebases and have the mobile site be an engine of the application, so you would still have access to the main application's classes.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><mobile><sencha-touch>","commentcount":"2","accepted":""},"7972087":{"id":"7972087","date":"2011-11","score":"1","body":"\"<p>The Rails wiki has been broken for quite a long time. I would really recommend just ignoring it. It was never maintained as a \\\"core\\\" part of the Rails ecosystem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><wiki>","commentcount":"0","accepted":"yes"},"7972358":{"id":"7972358","date":"2011-11","score":"2","body":"\"<p>Your <code>spree<\\\/code> version is (for some reason) set to <code>0.40.0<\\\/code>. I would recommend upgrading this to  <code>0.70.1<\\\/code>, which you can do by putting this line in your <code>Gemfile<\\\/code>:<\\\/p>\\n\\n<pre><code>gem 'spree', '~&gt; 0.70.1'\\n<\\\/code><\\\/pre>\\n\\n<p><strong>EDIT<\\\/strong><\\\/p>\\n\\n<p>You mentioned that you were using Rails 3.1.1.rc2, which is something I should have noticed in the stacktrace in the question.<\\\/p>\\n\\n<p><em>Whoops.<\\\/em><\\\/p>\\n\\n<p>Anyway, when you <em>don't<\\\/em> specify a version for Spree, Bundler will attempt to resolve all the dependencies as best it can. Partly because you were using Rails 3.1.1.rc2 and partly because Spree was silly enough to specify a <code>&gt;=<\\\/code> dependency on Rails for 0.40.0 that this problem is encountered.<\\\/p>\\n\\n<p>Spree 0.40.0 attempts to find the <em>bestest<\\\/em> Rails  version that's <code>&gt;= 3.0.3<\\\/code>, and <code>3.1.1.rc2<\\\/code> satisfies that criteria nicely, so it carries on.<\\\/p>\\n\\n<p>So then <em>that<\\\/em> begs the question of \\\"Why isn't Spree using the latest version?\\\". That's easily explainable if you understand dependency resolution, which many people make out as hard to understand but is actually quite easy. Think computers in the 1970s.<\\\/p>\\n\\n<p>All versions of Spree <code>&gt;= 0.40.0<\\\/code> <em>do not<\\\/em> have Rails specified as <code>&gt;= [something]<\\\/code>, mainly because the Spree guys wisened up here and decided that it was a silly idea. By using <code>&gt;=<\\\/code> you mean to get all versions of a gem that are <code>&gt;=<\\\/code> to the specified version, which includes major versions. And we all know how different Rails 2 was from Rails 3, and so we should assume Rails 3 -> Rails 4 is going to be just as \\\"fun\\\".<\\\/p>\\n\\n<p>So it's only  Spree 0.40.0 that has this dependency that matches your specific (3.1.1.rc2) Rails version. There's no non-beta \\\/ RC version of Spree above that that matches that particular dependency, and so Spree 0.40.0 is used instead.<\\\/p>\\n\\n<p>In closing, it seems that this issue would only be prevalent for people who attempting to use a version of Rails that there isn't a corresponding version of Spree out for. One way to solve this problem would be to yank the 0.40.0 gem, but that leads to its own problems, as versions before that also have the same dependency. Therefore, you should always be checking that the current version of Rails that you're using is supported by at least one Spree version.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><generator><spree>","commentcount":"2","accepted":"yes"},"7973466":{"id":"7973466","date":"2011-11","score":"7","body":false,"title":"\"\"","favorite":null,"tags":"<ruby-on-rails><cucumber>","commentcount":"0","accepted":"yes"},"8025497":{"id":"8025497","date":"2011-11","score":"16","body":"\"<p>I believe an <code>includes<\\\/code> will use a <code>LEFT OUTER JOIN<\\\/code> query if you do a condition on the table that the <code>includes<\\\/code> association uses:<\\\/p>\\n\\n<pre><code>Group.includes(:user_group_cmb).where(\\\"user_group_cmbs.user_id = ?\\\", 1)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><activerecord>","commentcount":"4","accepted":"yes"},"8032417":{"id":"8032417","date":"2011-11","score":"1","body":"\"<p>I would suspect that you have something in your <code>Note<\\\/code> model that is processing the text. Check for callbacks in this model.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><forms><textarea>","commentcount":"1","accepted":""},"8090000":{"id":"8090000","date":"2011-11","score":"1","body":"\"<p>The migrations are automatically renamed to cause them to <em>not<\\\/em> conflict with the migrations in your application. They will all be grouped together in one cohesive series of migrations rather than split out through your application.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><migration>","commentcount":"0","accepted":"yes"},"8127728":{"id":"8127728","date":"2011-11","score":"17","body":"\"<p>I would suggest making a new file in <code>spec\\\/support<\\\/code> called <code>purchase_helpers.rb<\\\/code> and put this content in it:<\\\/p>\\n\\n<pre><code>module PurchaseHelpers\\n  def purchase_widgets(user, count=1)\\n    # Code goes here\\n  end\\n\\n  def cancel_purchase(user, count=1)\\n    # Code goes here\\n  end\\nend\\n\\nRSpec.configure do |c|\\n  c.include PurchaseHelpers\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The benefit of doing this rather than chucking it into <code>spec\\\/spec_helper.rb<\\\/code> is that it is not crowding up that file with a lot of unrelated-to-the-setup-of-RSpec code. Separating things out is the better way to do things.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><unit-testing><rspec>","commentcount":"2","accepted":"yes"},"8143301":{"id":"8143301","date":"2011-11","score":"0","body":"\"<p>There was a supposed fix for this <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/pull\\\/766\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/spree\\\/spree\\\/pull\\\/766<\\\/a>. See if that fixes your issue<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree>","commentcount":"0","accepted":""},"8143311":{"id":"8143311","date":"2011-11","score":"1","body":"\"<p>This is a known issue with Spree and will be fixed when Rails 3.2 comes out. Please just disregard this warning.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3.1><spree>","commentcount":"1","accepted":"yes"},"8145904":{"id":"8145904","date":"2011-11","score":"0","body":"\"<p>This is because it's loading <em>your<\\\/em> Devise module before Devise's. They're named the same and placed at identical (at least, according to the load path) paths.<\\\/p>\\n\\n<p>If you want to define new methods on this module then how about defining a different module entirely and including that into Devise's?<\\\/p>\\n\\n<p><strong>lib\\\/devise\\\/mailers\\\/helpers_extensions.rb<\\\/strong><\\\/p>\\n\\n<pre><code>module Devise\\n  module Mailers\\n    module HelpersExtensions\\n      # your code\\n    end\\n  end\\nend\\n\\nDevise::Mailers::Helpers.send :include, Devise::Mailers::HelpersExtensions\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"8176115":{"id":"8176115","date":"2011-11","score":"1","body":"\"<p>Just use paperclip. By default it won't use the image processing unless you give it a <code>:styles<\\\/code> hash.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"8176132":{"id":"8176132","date":"2011-11","score":"1","body":"\"<p>It's looking for a javascript template: <code>show.js.erb<\\\/code>. If you're making a javascript request you'll need to generate a template for this format as well as <code>html<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><templates>","commentcount":"0","accepted":"yes"},"8197180":{"id":"8197180","date":"2011-11","score":"6","body":"\"<p><code>RAILS_ROOT<\\\/code>no longer exists. Use <code>Rails.root<\\\/code> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><root>","commentcount":"1","accepted":""},"8223549":{"id":"8223549","date":"2011-11","score":"0","body":"\"<p>You need to specify <em>what<\\\/em> app this is for:<\\\/p>\\n\\n<pre><code>new_app_issue_path(an_app_object_or_an_app_objects_id)\\n<\\\/code><\\\/pre>\\n\\n<p>Rails would only \\\"guess\\\" this if <code>params[:app_id]<\\\/code> was available, which doesn't appear to be the case here.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routes>","commentcount":"0","accepted":"yes"},"8238679":{"id":"8238679","date":"2011-11","score":"4","body":"\"<p>You would normally use <code>build_experience<\\\/code> when using a <code>has_one<\\\/code> or a <code>belongs_to<\\\/code> association. It's working for <code>webconnection<\\\/code> because it is a <code>has_one<\\\/code> association.<\\\/p>\\n\\n<p>There's a difference with <code>has_many<\\\/code> associations though: you must call the <code>build<\\\/code> method on the association, like this: <code>resume.experiences.build<\\\/code>. This indicates<\\\/p>\\n\\n<p>Because this is a <code>has_many<\\\/code> association and not a <code>has_one<\\\/code> or a <code>belongs_to<\\\/code>, you should be using <code>resume.experiences.build<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1><associations>","commentcount":"0","accepted":"yes"},"8248624":{"id":"8248624","date":"2011-11","score":"1","body":"\"<p>My guess is that you'll want to put this into a JSON array, which you can do with this:<\\\/p>\\n\\n<pre><code>@currentfruit.map(&amp;:prices).to_json\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<arrays><ruby-on-rails-3><highcharts>","commentcount":"2","accepted":"yes"},"8276353":{"id":"8276353","date":"2011-11","score":"9","body":"\"<p>thanks for reading my book!<\\\/p>\\n\\n<p>As JacobM and dbalatero have already explained, this is a new feature in Rails 3.1. This particular feature was added by Aaron Patterson as a way to simplify the migration syntax. In earlier versions of Rails, you would have to do as the book shows:<\\\/p>\\n\\n<pre><code>class CreatePurchases &lt; ActiveRecord::Migration\\n  def self.up\\n    create_table :purchases do |t|\\n      t.string :name\\n      t.float :cost\\n      t.timestamps\\n    end\\n  end\\n\\n  def self.down\\n    drop_table :purchases\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>But that's kind of repeating yourself. Aaron created a migration syntax that looks good and is simpler, calling only the methods necessary for migrating forward, but also allowing the migrations backwards (known as a \\\"rollback\\\") too. The same migration written with the Rails 3.1 syntax is this:<\\\/p>\\n\\n<pre><code>class CreatePurchases &lt; ActiveRecord::Migration\\n  def change\\n    create_table :purchases do |t|\\n      t.string :name\\n      t.float :cost\\n      t.timestamps\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>So when this migration runs \\\"forwards\\\", Rails will create the purchases table with the fields. When you roll it back (or run it \\\"backwards\\\") then Rails will know to drop the table.<\\\/p>\\n\\n<p>This syntax isn't entirely perfect however, and you'll run into problems with methods such as <code>change_column<\\\/code>. When that happens, it's best to stick with defining both the <code>def up<\\\/code> and <code>def down<\\\/code> methods in the migrations:<\\\/p>\\n\\n<pre><code>class CreatePurchases &lt; ActiveRecord::Migration\\n  def up\\n    change_column :purchases, :cost, :integer\\n  end\\n\\n  def down\\n    change_column :purchases, :cost, :float \\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>That's because in this example Rails won't know how to switch it back to the previous type. I hope this explains it better!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"8283017":{"id":"8283017","date":"2011-11","score":"1","body":"\"<p><code>Thread<\\\/code> in general is just a bad model name, because it will clash with the <code>Thread<\\\/code> class defined in Ruby. I implemented this just recently. In my example, I have forums and topics. A person shouldn't be able to create a new topic in a forum they don't have read access to.<\\\/p>\\n\\n<p>I defined a custom permission on the Forum object called <code>create_topic<\\\/code> for this:<\\\/p>\\n\\n<pre><code>can :create_topic, Forem::Forum do |forum|\\n  can?(:read, forum) &amp;&amp; user.can_create_forem_topics?(forum)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Where <code>can_create_forem_topics?<\\\/code> is just defined on the <code>User<\\\/code> model like this:<\\\/p>\\n\\n<pre><code>def can_create_forem_topics?(forum)\\n  # code goes here\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then I just use this custom <code>:create_topic<\\\/code> ability in the <code>new<\\\/code> and <code>create<\\\/code> actions in my <code>TopicsController<\\\/code>, where <code>@forum<\\\/code> is defined by a <code>before_filter<\\\/code>:<\\\/p>\\n\\n<pre><code>authorize! :create_topic, @forum\\n<\\\/code><\\\/pre>\\n\\n<p>And if I need to use it in views:<\\\/p>\\n\\n<pre><code>can? :create_topic, @forum\\n<\\\/code><\\\/pre>\\n\\n<p>by defining a custom permission on the parent object,<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><cancan>","commentcount":"0","accepted":""},"8290127":{"id":"8290127","date":"2011-11","score":"3","body":"\"<p>You should be using <a href=\\\"http:\\\/\\\/github.com\\\/jnicklas\\\/capybara\\\" rel=\\\"nofollow\\\">Capybara<\\\/a> to test this stuff instead. It uses selenium-webdriver internally to provide JavaScript testing support.<\\\/p>\\n\\n<p>with Capybara, you put this test in either the <code>spec\\\/integration<\\\/code> or <code>spec\\\/requests<\\\/code> folder and write it like this:<\\\/p>\\n\\n<pre><code>require 'spec_helper'\\ndescribe 'The first tab' do\\n  it \\\"shows the list\\\", :js =&gt; true do\\n    visit list_path\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>By putting <code>:js =&gt; true<\\\/code> after the example's name Capybara will know to run this as a JavaScript test.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><selenium><rspec><selenium2>","commentcount":"17","accepted":""},"8290158":{"id":"8290158","date":"2011-11","score":"3","body":"\"<p>The version is used to determine what migration was run <em>last<\\\/em>. This will only increase over time. The migration you've run here was <em>created<\\\/em> (not <em>run<\\\/em>) on the 27th November, 2011 at 09:05:05AM in UTC time. This is what the number is: a timestamp.<\\\/p>\\n\\n<p>The number will increase every time you run a newly created migration, this is so Rails will know which one has run last and which one to run next. The next migration to be run will be the one with the first one with the greater number than this number.<\\\/p>\\n\\n<p>And yes, migration files are run in the order they are created.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rails-migrations>","commentcount":"3","accepted":"yes"},"8320487":{"id":"8320487","date":"2011-11","score":"5","body":"\"<p>By simply putting the views there Devise won't use them. You would need to point <code>Devise::RegistrationsController<\\\/code> to the right controller which has these views, which you can  do by calling this:<\\\/p>\\n\\n<pre><code> devise_for :reps, :controllers =&gt; { :registrations =&gt; \\\"reps\\\/registrations\\\" }\\n<\\\/code><\\\/pre>\\n\\n<p>This needs to have a new controller defined at <code>app\\\/controllers\\\/reps\\\/registrations_controller.rb<\\\/code>:<\\\/p>\\n\\n<pre><code> class Reps::RegistrationsController &lt; Devise::RegistrationsController\\n\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>You would then have the views in the right directory for this controller to use.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><devise>","commentcount":"2","accepted":"yes"},"8336537":{"id":"8336537","date":"2011-12","score":"1","body":"\"<p>Yes, see how the <code>rails plugin new --full --mountable<\\\/code> command's output contains the <code>test\\\/dummy<\\\/code>  Rails application.<\\\/p>\\n\\n<p>This command will actually generate a gem structure for a Rails engine.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rubygems>","commentcount":"1","accepted":"yes"},"8352264":{"id":"8352264","date":"2011-12","score":"2","body":"\"<pre><code> response.headers[\\\"Expires\\\"] = Time.at(Time.now.to_i + cache_expire).strftime(\\\"%D, %d %M % Y %H:%i:%s)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><facebook>","commentcount":"0","accepted":"yes"},"8379931":{"id":"8379931","date":"2011-12","score":"3","body":"\"<p>No, there is nothing similar to this for Rails. With Rails, you must define the routes in <code>config\\\/routes.rb<\\\/code> and have the controller actions separate. You could then put comments on the actions declaring what routes go to it, but most people don't do this.<\\\/p>\\n\\n<p>If it <em>really<\\\/em> bothers you, you could use Sinatra which doesn't even have the concept of controllers. Instead, you define methods like this:<\\\/p>\\n\\n<pre><code>get '\\\/' do\\n  \\\"Hello world\\\"\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Any <code>GET<\\\/code> request going to <code>\\\/<\\\/code> will show \\\"Hello World\\\" on the screen.<\\\/p>\\n\\n<p>Sinatra is something that I would personally only use for featherweight applications, dipping into other things like Padrino or Rails for anything heavier.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><symfony2><routing>","commentcount":"16","accepted":""},"8380521":{"id":"8380521","date":"2011-12","score":"1","body":"\"<p>Sounds like you've run <code>rake assets:precompile<\\\/code>, which caches these files in <code>public\\\/assets. Run<\\\/code>rake assets:clean` to clear this.<\\\/p>\\n\\n<p>Read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/asset_pipeline.html\\\" rel=\\\"nofollow\\\">Asset Pipeline<\\\/a> guide for more explanation.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<css><ruby><ruby-on-rails-3><ruby-on-rails-3.1><assets>","commentcount":"1","accepted":"yes"},"8380537":{"id":"8380537","date":"2011-12","score":"0","body":"\"<p><code>rspec_controller<\\\/code> is deprecated in favour of the standard <code>controller<\\\/code> generator in Rails. It works now by you including <code>rspec-rails<\\\/code> within your <code>Gemfile<\\\/code> like this:<\\\/p>\\n\\n<pre><code>group :development, :test do\\n  gem 'rspec-rails'\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This then will load <a href=\\\"https:\\\/\\\/github.com\\\/rspec\\\/rspec-rails\\\/blob\\\/master\\\/lib\\\/rspec-rails.rb\\\" rel=\\\"nofollow\\\">this file<\\\/a>, which customizes what tools the Rails <code>controller<\\\/code> generator uses with <a href=\\\"https:\\\/\\\/github.com\\\/rspec\\\/rspec-rails\\\/blob\\\/master\\\/lib\\\/rspec-rails.rb#L6-7\\\" rel=\\\"nofollow\\\">these two lines<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec>","commentcount":"0","accepted":""},"8380614":{"id":"8380614","date":"2011-12","score":"1","body":"\"<p>This error does indeed seem to because you're missing the <code>main_app<\\\/code> before the links. Your <code>new_user_session_path<\\\/code> should be <code>main_app.new_user_session_path<\\\/code>.<\\\/p>\\n\\n<p>This is because the partial is being used by the engine (by way of the application layout), and so it doesn't see <code>new_user_session_path<\\\/code> helper within the context of the <em>engine<\\\/em>, because it's only available in the application.<\\\/p>\\n\\n<p>So yeah, just put <code>main_app.<\\\/code> before those routes and it should fix it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><plugins>","commentcount":"2","accepted":"yes"},"8380625":{"id":"8380625","date":"2011-12","score":"4","body":"\"<p>These steps are no longer defined in more recent <code>cucumber-rails<\\\/code> versions. See here for a better explanation of why: <a href=\\\"http:\\\/\\\/aslakhellesoy.com\\\/post\\\/11055981222\\\/the-training-wheels-came-off\\\" rel=\\\"nofollow\\\">http:\\\/\\\/aslakhellesoy.com\\\/post\\\/11055981222\\\/the-training-wheels-came-off<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><cucumber><capybara>","commentcount":"9","accepted":"yes"},"8396189":{"id":"8396189","date":"2011-12","score":"0","body":"\"<p>I don't think this gem has been updated to be compatible with Rails 3. The only other alternative is grabbing yourself a copy of the <a href=\\\"http:\\\/\\\/rails3upgradehandbook.com\\\" rel=\\\"nofollow\\\">Rails 3 Upgrade Handbook<\\\/a> and using that to go through the upgrade process.<\\\/p>\\n\\n<p>I wrote a blog post about upgrading a Rails 2 application to Rails 3 here: <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/11\\\/the-rails-3-upgrade\\\/\\\" rel=\\\"nofollow\\\">http:\\\/\\\/ryanbigg.com\\\/2010\\\/11\\\/the-rails-3-upgrade\\\/<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"8409258":{"id":"8409258","date":"2011-12","score":"3","body":"\"<p>You will need to add the <code>mysql2<\\\/code> gem to your <code>Gemfile<\\\/code>:<\\\/p>\\n\\n<pre><code>gem 'mysql2'\\n<\\\/code><\\\/pre>\\n\\n<p>And also use the <code>mysql2<\\\/code> adapter in your <code>config\\\/database.yml<\\\/code>:<\\\/p>\\n\\n<pre><code>adapter: mysql2\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<mysql><ruby-on-rails><rake>","commentcount":"3","accepted":""},"8411579":{"id":"8411579","date":"2011-12","score":"9","body":"\"<p>TL;DR You need to specify both a <code>:trunk_id<\\\/code> and a <code>root_id<\\\/code> in your URL or use <code>form_for<\\\/code> like this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [@trunk, @root, @comment] do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Rails is attempting to build a URL from the hash you're giving it, but that hash doesn't match anything in its routing table. You could do this:<\\\/p>\\n\\n<pre><code>{ :controller =&gt; \\\"comments\\\", :action =&gt; \\\"create\\\", :trunk_id =&gt; trunk.id, :root_id =&gt; root.id }\\n<\\\/code><\\\/pre>\\n\\n<p>But that's really a bit <em>tl;dr<\\\/em>.<\\\/p>\\n\\n<p>The cooler way to do it is this:<\\\/p>\\n\\n<pre><code>trunk_root_comments_path(trunk, root)\\n<\\\/code><\\\/pre>\\n\\n<p>Where <code>trunk<\\\/code> and <code>root<\\\/code> are <code>Trunk<\\\/code> and <code>Root<\\\/code> instances respectively.<\\\/p>\\n\\n<p>Now, if you want to be <em>super-wicked-cool<\\\/em>, do it like this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [trunk, root, comment] do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Science!<\\\/p>\\n\\n<p><strong>So how does this work? Elementary, my dear:<\\\/strong><\\\/p>\\n\\n<p>Rails first recognises that we're using <code>form_for<\\\/code> using an Array and that <em>we mean business<\\\/em>. Rails uses this array passed in and builds a URL out of it. It does this by using the routing helpers that are defined by the routes. Unfortunately, you've defined your routes in a funny way that don't play nice with this, but <em>don't fear!<\\\/em> We can fix this.<\\\/p>\\n\\n<p>The way you can do it is this where you have this in <code>config\\\/routes.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>post '\\\/t\\\/:trunk_id\\\/r\\\/:root_id\\\/comments'\\n<\\\/code><\\\/pre>\\n\\n<p>Instead put this:<\\\/p>\\n\\n<pre><code>post '\\\/t\\\/:trunk_id\\\/r\\\/:root_id\\\/comments', :as =&gt; \\\"trunk_root_comments\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>You may <em>alternatively<\\\/em> already have this:<\\\/p>\\n\\n<pre><code>match '\\\/t\\\/:trunk_id\\\/r\\\/:root_id\\\/comments', :via =&gt; :post\\n<\\\/code><\\\/pre>\\n\\n<p>Which should become this:<\\\/p>\\n\\n<pre><code>match '\\\/t\\\/:trunk_id\\\/r\\\/:root_id\\\/comments', :via =&gt; :post, :as =&gt; \\\"trunk_root_comments\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Either way, you've now got <em>not one, but <strong>two(!!)<\\\/em><\\\/strong> path helpers defined by the routes. These are<code>trunk_root_comments_path<\\\/code> and <code>trunk_root_comments_url<\\\/code> respectively. <strong>The names of these methods are super important for what I am about to explain to you. Pay attention!<\\\/strong><\\\/p>\\n\\n<p>So, back to our little <code>form_for<\\\/code> call:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [trunk, root, comment] do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Rails knows that we're using an Array because it can see it. What it does with this Array may <em>seem<\\\/em> like magic, but isn't really. <\\\/p>\\n\\n<p>Rails will take each element of this array and build a routing helper method <em>name<\\\/em> up from the different parts. This isn't actually part of <code>form_for<\\\/code>, but another method called <code>url_for<\\\/code> that you can use by itself:<\\\/p>\\n\\n<pre><code> url_for([trunk, root, comment])\\n<\\\/code><\\\/pre>\\n\\n<p>In the beginning, this routing helper method name generated by <code>url_for<\\\/code> is simply an empty array (<code>[]<\\\/code>). Nothing special at all.<\\\/p>\\n\\n<p>But then what happens <em>is<\\\/em> special!<\\\/p>\\n\\n<p>The first element is going to be a <em>persisted instance<\\\/em> of the <code>Trunk<\\\/code> class. By \\\"persisted\\\" I mean that it's an object that maps <em>directly<\\\/em> to a record in the database. Yay ORMs!<\\\/p>\\n\\n<p>Rails will know this, and so will turn the routing helper into this: <code>[:trunk]<\\\/code>.<\\\/p>\\n\\n<p>The second element is going to be a <em>persisted instance<\\\/em> of the <code>Root<\\\/code> class. Rails also knows this (damn, Rails is <em>smart<\\\/em>!) and will then append this to the array, turning it into <code>[:trunk, :root]<\\\/code>. Awesome.<\\\/p>\\n\\n<p>The third (and final) element is then checked by Rails. It sees that (in this case) it's a non-persisted element, i.e. it's not been saved to the database.. yet. Rails treats this differently and will instead append <code>[:comments]<\\\/code> to the array, turning it into this:<\\\/p>\\n\\n<pre><code>[:trunk, :root, :comments]\\n<\\\/code><\\\/pre>\\n\\n<p>See where I'm going with this now?<\\\/p>\\n\\n<p>Now that Rails has done it's thing (or <em>thang<\\\/em>, if you like) it will join these three parts together like this: <code>trunk_root_comments<\\\/code>, and just for good measure it'll put <code>_path<\\\/code> on the end of it, turning it into the final <code>trunk_root_comments_path<\\\/code> helper.<\\\/p>\\n\\n<p>And then! Man, and then... Rails calls this method and passes it arguments! Just like this:<\\\/p>\\n\\n<pre><code>trunk_root_comments_path(:trunk_id =&gt; trunk.id, :root_id =&gt; root_id)\\n<\\\/code><\\\/pre>\\n\\n<p>This generates a full path to the resource like this:<\\\/p>\\n\\n<pre><code>\\\/t\\\/:trunk_id\\\/r\\\/:root_id\\\/comments\\n<\\\/code><\\\/pre>\\n\\n<p>And <em>bam!<\\\/em> Full circle! That's how Rails will know to generate the URL and you don't have to use ugly hashes anymore.<\\\/p>\\n\\n<p>Success!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><routing><ruby-on-rails-3.1>","commentcount":"2","accepted":"yes"},"8439494":{"id":"8439494","date":"2011-12","score":"3","body":"\"<p>I wrote Forem. I think I can answer this question.<\\\/p>\\n\\n<p>The sample code lives at <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/forem.heroku.com\\\" rel=\\\"nofollow\\\">http:\\\/\\\/github.com\\\/radar\\\/forem.heroku.com<\\\/a>. This example app contains a theme, installed exactly (or at least, I think exactly) the way that it suggests to install one in the README. The theme is the \\\"twist\\\" theme.<\\\/p>\\n\\n<p>The system (as of this writing) doesn't come with a forum pre-built, but it's on <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/forem\\\/issues\\\/91\\\" rel=\\\"nofollow\\\">the todo list<\\\/a>. So you'll just have to create one yourself.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"8439535":{"id":"8439535","date":"2011-12","score":"2","body":"\"<p>The <code>:domain<\\\/code> key is set up for <a href=\\\"http:\\\/\\\/en.wikipedia.org\\\/wiki\\\/Anti-spam_techniques#HELO.2FEHLO_checking\\\" rel=\\\"nofollow\\\"><code>HELO<\\\/code> checking<\\\/a>. You don't need to specify this if you're using GMail.<\\\/p>\\n\\n<p>The STARTTLS call starts an encrypted connection with your mail server, which is required to use GMail's SMTP.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><gmail><actionmailer>","commentcount":"0","accepted":"yes"},"8439555":{"id":"8439555","date":"2011-12","score":"1","body":"\"<p>Use this:<\\\/p>\\n\\n<pre><code>@log_in_user.roles.map(&amp;:type_of_role)\\n<\\\/code><\\\/pre>\\n\\n<p>That will return an array of the <code>type_of_role<\\\/code> attribute for each role the user has.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><model><relationship><has-and-belongs-to-many>","commentcount":"0","accepted":"yes"},"8460619":{"id":"8460619","date":"2011-12","score":"2","body":"\"<p>The problem here is that you're using <code>list_tasks_path<\\\/code> when you should be using <code>list_task_path<\\\/code>.<\\\/p>\\n\\n<p>The <code>list_tasks_path<\\\/code> method will generate a URL to the <code>index<\\\/code> action, as you know already, and will make the second argument be the format for this request.<\\\/p>\\n\\n<p>For more information please read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><link-to>","commentcount":"2","accepted":"yes"},"8463069":{"id":"8463069","date":"2011-12","score":"1","body":"\"<p>You could do this by creating a model in the middle of this association, rather than using a <code>has_and_belongs_to_many<\\\/code>. For lack of a better name, I would call this model <code>Authorship<\\\/code> and it would look like this:<\\\/p>\\n\\n<pre><code>class Authorship &lt; ActiveRecord::Base\\n  belongs_to :author\\n  belongs_to :book\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then you would define associations in your <code>Author<\\\/code> model to books like this:<\\\/p>\\n\\n<pre><code>class Author &lt; ActiveRecord::Base\\n  has_many :authorships\\n  has_many :books, :through =&gt; :authorships\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>And the reverse, in your <code>Book<\\\/code> model:<\\\/p>\\n\\n<pre><code>class Book &lt; ActiveRecord::Base\\n  has_many :authorships\\n  has_many :authors, :through =&gt; :authorships\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This way, you'd still have the \\\"has and belongs to many\\\" functionality that you want, except you would now be able to access records in the join table through the newly created model.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"8469065":{"id":"8469065","date":"2011-12","score":"2","body":"\"<p>Are you not building a <code>showing<\\\/code> object in your controller?<\\\/p>\\n\\n<pre><code>@company.build_showing\\n<\\\/code><\\\/pre>\\n\\n<p>If you've defined <code>accepts_nested_attributes_for<\\\/code> on your <code>Company<\\\/code> model, then you'll need to set up the nested objects in the controller as well as the parent objects.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><view><fields-for>","commentcount":"0","accepted":"yes"},"8472181":{"id":"8472181","date":"2011-12","score":"0","body":"\"<p>You need to <code>downcase<\\\/code> your headline:<\\\/p>\\n\\n<pre><code>selected.headline.downcase\\n<\\\/code><\\\/pre>\\n\\n<p>This is because you're going to be rendering a partial like this: <code>product_pages\\\/Elektronik<\\\/code>, and when you call <code>render :partial<\\\/code> it'll attempt to define a local variable that has the same name as the partial, which is why you're getting this error: the code <em>isn't<\\\/em> defining a local variable but is actually defining a constant.<\\\/p>\\n\\n<p>If you <code>downcase<\\\/code> it, it will define a local variable rather than this constant.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><view><partial>","commentcount":"1","accepted":"yes"},"8482173":{"id":"8482173","date":"2011-12","score":"0","body":"\"<p>Rather than performing a require check, how about checking for another component that should be there instead? Something outside the scope of Ruby. You'd need to do this because of the gem being unavailable in the bundle.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><bundler><capybara>","commentcount":"2","accepted":""},"8482302":{"id":"8482302","date":"2011-12","score":"1","body":"\"<p>You need to set up your models like this:<\\\/p>\\n\\n<p><strong>app\\\/models\\\/account.rb<\\\/strong><\\\/p>\\n\\n<pre><code>class Account &lt; ActiveRecord::Base\\n  has_many :organizations\\n  accepts_nested_attributes_for :organizations\\nend\\n<\\\/code><\\\/pre>\\n\\n<p><strong>app\\\/models\\\/organization.rb<\\\/strong><\\\/p>\\n\\n<pre><code>class Organization &lt; ActiveRecord::Base\\n  has_many :people\\n  accepts_nested_attributes_for :people\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then you will set up the <code>new<\\\/code> action in your <code>AccountsController<\\\/code> like this:<\\\/p>\\n\\n<pre><code>class AccountsController &lt; ApplicationController\\n  def new\\n    @account = Account.new\\n    organization = @account.organizations.build\\n    person = @account.people.build\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Why? Well, because you'll set up the form in <code>app\\\/views\\\/accounts\\\/new.html.erb<\\\/code> like this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for(@account) do |account| %&gt;\\n  &lt;%# account fields go here, like this: %&gt;\\n  &lt;p&gt;\\n    &lt;%= account.label :name %&gt;\\n    &lt;%= account.text_field :name %&gt;\\n  &lt;\\\/p&gt;\\n\\n  &lt;%# then organization fields, nested inside the account (which is what account represents) %&gt;\\n  &lt;%# this will create a new set of fields for each organization linked to the account %&gt;\\n\\n  &lt;%= account.fields_for :organizations do |organization| %&gt;\\n    &lt;p&gt;\\n      &lt;%= account.label :name %&gt;\\n      &lt;%= account.text_field :name %&gt;\\n    &lt;\\\/p&gt;\\n\\n    &lt;%# and finally, people %&gt;\\n    &lt;%= organization.fields_for :people do |person| %&gt;\\n      &lt;p&gt;\\n        &lt;%= person.label :name %&gt;\\n        &lt;%= account.text_field :name %&gt;\\n      &lt;\\\/p&gt;\\n    &lt;% end %&gt;\\n  &lt;% end %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>These fields will then all be passed back to the <code>create<\\\/code> action in <code>AccountsController<\\\/code> nested inside <code>params[:account]<\\\/code>. You deal with them like this:<\\\/p>\\n\\n<pre><code>class AccountsController &lt; ApplicationController\\n  def create\\n    @account = Account.new(params[:account])\\n    if @account.save\\n      # do something here like...\\n      redirect_to root_path, :notice =&gt; \\\"Account created!\\\"\\n    else\\n      #\\n      flash[:error] = \\\"Account creation failed!\\\"\\n      render :new\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Because you've defined <code>accepts_nested_attributes_for<\\\/code> in both the <code>Account<\\\/code> and <code>Organization<\\\/code> models, the params will be parsed successfully and when it creates the account it will create the organization and link it to the account, and then create the person and link it to the organization also.<\\\/p>\\n\\n<p>Done!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><associations>","commentcount":"4","accepted":""},"8482393":{"id":"8482393","date":"2011-12","score":"1","body":"\"<p>There's no way to change it globally, you'll have to use <code>-b<\\\/code>.<\\\/p>\\n\\n<p><code>rails s -b &lt;ip address&gt;<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><security><networking>","commentcount":"1","accepted":""},"8483459":{"id":"8483459","date":"2011-12","score":"0","body":"\"<p>The <code>@imagery_requests<\\\/code> variable is actually a <code>Relation<\\\/code> object which will always be a collection of records once its called. You're calling an instance method on this object, which won't work because you calling it on the <em>whole<\\\/em> collection and not an object inside this collection.<\\\/p>\\n\\n<p>Besides that, calling the method in a <code>link_to<\\\/code> like you're doing there just won't work full-stop. The link should go to a controller action which parses these requests and returns the CSV correctly.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><csv>","commentcount":"1","accepted":""},"8499197":{"id":"8499197","date":"2011-12","score":"8","body":"\"<p>This is fixed by including the <code>:token_authenticatable<\\\/code> module into the <code>devise<\\\/code> user model:<\\\/p>\\n\\n<pre><code>devise :token_authenticatable, ...\\n<\\\/code><\\\/pre>\\n\\n<p>Also the method is defined on the class itself, not an instance. Call it as <code>User.authentication_token<\\\/code>.<\\\/p>\\n\\n<p>See here: <a href=\\\"https:\\\/\\\/github.com\\\/plataformatec\\\/devise\\\/blob\\\/master\\\/lib\\\/devise\\\/models\\\/token_authenticatable.rb#L61-63\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/plataformatec\\\/devise\\\/blob\\\/master\\\/lib\\\/devise\\\/models\\\/token_authenticatable.rb#L61-63<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><devise><gem>","commentcount":"2","accepted":""},"8515200":{"id":"8515200","date":"2011-12","score":"66","body":"\"<p>I've seen this error happen before, usually when people attempt to call <code>update_attributes<\\\/code> like this:<\\\/p>\\n\\n<pre><code>update_attributes(params[:image])\\n<\\\/code><\\\/pre>\\n\\n<p>The call should actually be this:<\\\/p>\\n\\n<pre><code>update_attributes(:image =&gt; params[:image])\\n<\\\/code><\\\/pre>\\n\\n<p>A bit of a shot in the dark, but if that's it I'm sure we'll all be impressed.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><file-upload><paperclip>","commentcount":"6","accepted":""},"8549877":{"id":"8549877","date":"2011-12","score":"1","body":"\"<p>The code for your action seems wrong...<\\\/p>\\n\\n<p>It should be this:<\\\/p>\\n\\n<pre><code>def show \\n  @user = User.find(params[:id])\\n  #@photo = @user.photos.find(params[:id])\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I commented out the third line on purpose, because I'm not sure what it is you want to do there, yet.<\\\/p>\\n\\n<p>The <code>@user<\\\/code> variable needs to be defined using <code>params[:id]<\\\/code>, given that this is the <code>show<\\\/code> action for the <code>UsersController<\\\/code>, so the id for the user will be passed through as <code>params[:id]<\\\/code>.<\\\/p>\\n\\n<p>But then you go and use this to find the photo for the user, which is what confuses me... the <code>Photo<\\\/code> record's <code>id<\\\/code> attribute is probably not going to be the same as the <code>User<\\\/code> record's <code>id<\\\/code> attribute.<\\\/p>\\n\\n<p>So what is it?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"8551250":{"id":"8551250","date":"2011-12","score":"3","body":"\"<p>A couple of things are wrong with this.<\\\/p>\\n\\n<p>The first <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/a\\\/8550132\\\/15245\\\">is what David Grayson pointed out<\\\/a>. You can't call a method send.<\\\/p>\\n\\n<p>The second, is how you've defined that action in your <code>config\\\/routes.rb<\\\/code>, it should not be this:<\\\/p>\\n\\n<pre><code>resources :messages do\\n  member 'send'\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>As that isn't defining an action at all. In fact, I'm not even sure what that does. It should be this (taking into account you can't call it <code>send<\\\/code> as well):<\\\/p>\\n\\n<pre><code>resources :messages do\\n  member do\\n    get 'deliver'\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>For more information, see the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing guide<\\\/a>.<\\\/p>\\n\\n<p>The third thing you're doing wrong is that in your test, you need to reference the action for the controller and not use the route. This is because you're writing a functional controller test that tests a controller.<\\\/p>\\n\\n<p>It should not be this:<\\\/p>\\n\\n<pre><code>get target_app_messages_path(message.target_app.id)\\n<\\\/code><\\\/pre>\\n\\n<p>But rather, this:<\\\/p>\\n\\n<pre><code>get :deliver, :id =&gt; message.target_app.id\\n<\\\/code><\\\/pre>\\n\\n<p>The method takes the action as the first argument, parameters as the second argument and session data as the third argument.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rspec><rspec2><rspec-rails>","commentcount":"4","accepted":""},"8551293":{"id":"8551293","date":"2011-12","score":"1","body":"\"<p>This is a Rails 2 application, and so as ennuikiller said, you'll need to run <code>script\\\/server<\\\/code>.<\\\/p>\\n\\n<p>You may run into problems with dependencies not being installed in this application, which is a problem that normally (now) would be solved with Bundler. Due to this being a Rails 2 application, it doesn't support Bundler out of the box <em>and<\\\/em> the owner of the repo hasn't updated it to support that, and so you're dead outta luck there.<\\\/p>\\n\\n<p>What you'll need to do is attempt to run <code>rake gems:install<\\\/code> (which may or may not work, depending on the sun's positioning) which will install the gems specified in <code>config\\\/environment.rb<\\\/code> and the proper <code>config\\\/environments<\\\/code> files using the <code>config.gem<\\\/code> methodology. This was how it was done in Rails 2, and caused so many problems that Bundler was created.<\\\/p>\\n\\n<p>If that doesn't work, contact that banker guy on GitHub and ask him what the deps are or work out the dependencies yourself.<\\\/p>\\n\\n<p>Good luck!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"8560488":{"id":"8560488","date":"2011-12","score":"2","body":"\"<p>No, never update an object like this:<\\\/p>\\n\\n<pre><code>@car.update_attributes(:name=&gt;params[:car][:name], :brand=&gt;params[:car][:brand])\\n<\\\/code><\\\/pre>\\n\\n<p>This is wrong. This would only be useful if you only want to update these attributes.<\\\/p>\\n\\n<p>Always use this instead:<\\\/p>\\n\\n<pre><code>@car.update_attributes(params[:car])\\n<\\\/code><\\\/pre>\\n\\n<p>Assuming your params don't have anything more in them besides <code>name<\\\/code> and <code>brand<\\\/code> then these two statements are identical.<\\\/p>\\n\\n<p>What you're doing in the first one is that you're building this hash:<\\\/p>\\n\\n<pre><code>{ :name =&gt; \\\"mycar\\\", :brand =&gt; \\\"Toyota\\\" }\\n<\\\/code><\\\/pre>\\n\\n<p>And in the second one, you're passing through a hash that is basically identical, with the only difference being the object's id.<\\\/p>\\n\\n<p>As for why the object is not saving, try calling <code>update_attributes<\\\/code> and then call <code>.errors<\\\/code> on the object after that and that will return any validation errors that were encountered when saving.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-2>","commentcount":"0","accepted":""},"8568296":{"id":"8568296","date":"2011-12","score":"3","body":"\"<p>I'm the guy who started Forem (its the volunteers who did most of the hard work, though!), I think I can answer this question.<\\\/p>\\n\\n<p>If you want only certain groups to have access to one and only one forum then you can put the <code>forum_id<\\\/code> field on the <code>groups<\\\/code> table and do it that way. What you can do then is override the <code>can_read_forem_forum?<\\\/code> method in your <code>User<\\\/code> model to perform a permission check for that user:<\\\/p>\\n\\n<pre><code>def can_read_forem_forum?(forum)\\n  groups.where(:forum_id =&gt; forum.id).any?\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This is used in <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/forem\\\/blob\\\/master\\\/app\\\/models\\\/forem\\\/ability.rb#L23\\\" rel=\\\"nofollow\\\">Forem's ability model<\\\/a> to determine whether or not a person can access a forum. What this method is going to do is that it will only return groups for that user that have link that specific forum. If there are any, then it's known that the user can access that forum.<\\\/p>\\n\\n<p>Now if you're going the other route where a group may have access to many forums, well then you'd define a joins table between <code>groups<\\\/code> and <code>forem_forums<\\\/code> (called <code>forum_groups<\\\/code>) and define it as an association in your <code>Group<\\\/code> model like this:<\\\/p>\\n\\n<pre><code>has_many :forum_groups\\nhas_many :forums, :through =&gt; :forum_groups, :class_name =&gt; \\\"Forem::Forum\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>You would need to also define a new model inside your application for this <code>forum_groups<\\\/code> association, it would be called <code>ForumGroup<\\\/code> and go a little like this:<\\\/p>\\n\\n<pre><code>class ForumGroup &lt; ActiveRecord::Base\\n  belongs_to :forum, :class_name =&gt; \\\"Forem::Forum\\\"\\n  belongs_to :group\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>We're doing it this way so you have an easy way to manage the associations between forums and groups. If you did <code>has_and_belongs_to_many<\\\/code>, it generally only provides a gigantic pain in the ass when you want to delete one specific record from that join table.<\\\/p>\\n\\n<p>Now, with that all nicely set up, the method you want to define in your <code>User<\\\/code> model is this one:<\\\/p>\\n\\n<pre><code>def can_read_forem_forum?(forum)\\n  groups.joins(:forums).where(\\\"forem_forums.id = ?\\\", forum.id).any?\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Same thing, except this time we find all the groups that are linked to a specific forum through that association we set up earlier. This will do an <code>INNER JOIN<\\\/code> on the <code>forum_groups<\\\/code> table, and then another on the <code>forem_forums<\\\/code> table, getting the data required.<\\\/p>\\n\\n<p>I hope this helps you, and thanks for using Forem!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><model><gem>","commentcount":"1","accepted":"yes"},"8582934":{"id":"8582934","date":"2011-12","score":"0","body":"\"<p>Looks like you didn't <code>apt-get install openssl<\\\/code> before hand. You'll need to install that package before re-compiling Ruby to get it to work.<\\\/p>\\n\\n<p>If you were using RVM (and you should!) then this whole process would be a lot easier!<\\\/p>\\n\\n<p>I warn about the dangers of installing Ruby from <code>apt-get<\\\/code>  and explain <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\/\\\" rel=\\\"nofollow\\\">how to install Ruby properly with RVM<\\\/a> in this post. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"2","accepted":""},"8583131":{"id":"8583131","date":"2011-12","score":"2","body":"\"<p>You need to first define the <code>facebook_friends_cache<\\\/code> association:<\\\/p>\\n\\n<pre><code>has_many :facebook_friend_cache, :class_name =&gt; \\\"FacebookFriendCache\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then you need to define the <code>:through<\\\/code> association after that:<\\\/p>\\n\\n<pre><code>has_many :fb_friends, :through =&gt; :facebook_friend_cache, :foreign_key =&gt; :user_id\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>foreign_key<\\\/code> here needs to be the field that represents the id of the <code>User<\\\/code> object in the foreign table, so it needs to be <code>user_id<\\\/code> and not <code>fb_user_id<\\\/code>.<\\\/p>\\n\\n<p>I would really give <code>facebook_friend_cache<\\\/code> a better name, too.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"6","accepted":""},"8583214":{"id":"8583214","date":"2011-12","score":"1","body":"\"<p>In this case, your <code>current_user<\\\/code> object is <code>nil<\\\/code>, which results in the error you're getting. You will want to check that the user is logged in first before trying to call a method on <code>current_user<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"8583392":{"id":"8583392","date":"2011-12","score":"6","body":"\"<p>I'm the Community Manager for Spree, so I think I may be able to answer your question.<\\\/p>\\n\\n<p>Yes, there is work going on that will allow Spree to be a true Rails engine. In fact, that was my first task that I did when I was hired by Spree. The work is on the <code>master<\\\/code> branch (https:\\\/\\\/github.com\\\/spree\\\/spree) and we're looking to release this code as a 1.0.0.rc around Christmas time.<\\\/p>\\n\\n<p>With this code, a couple of changes have been made. For starters, Spree is now a proper Rails engine meaning that you <em>can now<\\\/em> have it mounted at \\\/spree or \\\/shop or \\\/whatever and Spree's cool with that. Secondly, all the models and other classes are namespaced so they won't conflict with anything in your application.<\\\/p>\\n\\n<p>I'm not sure what you mean about Deface being \\\"clever\\\", though. What problems do you forsee with this? If you want to override an entire view you could do this by overriding the path in <code>app\\\/views\\\/spree\\\/products\\\/show.html.erb<\\\/code>. Mind you, this overrides the <em>whole<\\\/em> view, and if you only want to override a part of it that's when you'd use Deface.<\\\/p>\\n\\n<p>Could you perhaps elaborate on the issues you're having with Deface? Would be interested to help you sort them out.<\\\/p>\\n\\n<p>Thanks for using Spree!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree><rails-engines>","commentcount":"5","accepted":""},"8584899":{"id":"8584899","date":"2011-12","score":"0","body":"\"<p>I can confirm what Maletor suggests, the <code>type<\\\/code> attribute is not mass-assignable by default. This is because it is set to being the <code>inheritance_column<\\\/code> in Active Record, which is used for single-table-inheritance. The field is normally set automatically by STI.<\\\/p>\\n\\n<p>To make it so you can assign it, set this in your model:<\\\/p>\\n\\n<pre><code>class ResTypes &lt; ActiveRecord::Base\\n  self.inheritance_column = nil\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"8589322":{"id":"8589322","date":"2011-12","score":"0","body":"\"<p>This is because <code>rails_admin<\\\/code> automatically disables this field for safety reasons. To re-enable it, you can set the <code>config.attr_accessible_role<\\\/code> field in <code>config\\\/initializers\\\/rails_admin.rb<\\\/code>, like this:<\\\/p>\\n\\n<pre><code>config.attr_accessible_role { nil } \\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3.1><devise><rails-admin>","commentcount":"0","accepted":"yes"},"8597674":{"id":"8597674","date":"2011-12","score":"0","body":"\"<p>First you need to install 1.8.7:<\\\/p>\\n\\n<pre><code>rvm install 1.8.7\\n<\\\/code><\\\/pre>\\n\\n<p>Then you need to tell RVM you want to use this one as the default:<\\\/p>\\n\\n<pre><code>rvm use 1.8.7 --default\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><osx><rvm>","commentcount":"6","accepted":""},"8598390":{"id":"8598390","date":"2011-12","score":"2","body":"\"<p>That screencast uses the bcrypt-ruby library, which is a Ruby implementation of <a href=\\\"http:\\\/\\\/en.wikipedia.org\\\/wiki\\\/Bcrypt\\\" rel=\\\"nofollow\\\">bcrypt<\\\/a>, which is based on the <a href=\\\"http:\\\/\\\/en.wikipedia.org\\\/wiki\\\/Blowfish_%28cipher%29\\\" rel=\\\"nofollow\\\">Blowfish cipher<\\\/a>. The benefit of bcrypt is that it's computationally expensive to crack a password generated by this system, and that the cost of generating these passwords can be increased as required in order to make it more secure, at the expense of the computation time it would take to generate time.<\\\/p>\\n\\n<p>For more information, check out the <a href=\\\"http:\\\/\\\/bcrypt-ruby.rubyforge.org\\\/classes\\\/BCrypt\\\/Password.html#M000007\\\" rel=\\\"nofollow\\\">BCrypt::Password<\\\/a> RDoc.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><authentication><devise>","commentcount":"0","accepted":""},"8621215":{"id":"8621215","date":"2011-12","score":"0","body":"\"<p>You should fork <a href=\\\"https:\\\/\\\/github.com\\\/NoamB\\\/sorcery\\\" rel=\\\"nofollow\\\">the sorcery gem<\\\/a> and change <a href=\\\"https:\\\/\\\/github.com\\\/NoamB\\\/sorcery\\\/blob\\\/master\\\/Rakefile#L30\\\" rel=\\\"nofollow\\\">this line<\\\/a> to be this:<\\\/p>\\n\\n<pre><code>gem.add_runtime_dependency 'oauth2', '~&gt; 0.5.0'\\n<\\\/code><\\\/pre>\\n\\n<p>Then make a commit, push it to GitHub and then reference it in your application like this:<\\\/p>\\n\\n<pre><code>gem 'sorcery', :git =&gt; \\\"git:\\\/\\\/github.com\\\/regedarek\\\/sorcery.git\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>For bonus points, submit that patch as a pull request to the original sorcery repository.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><oauth><gem><omniauth>","commentcount":"2","accepted":"yes"},"8621233":{"id":"8621233","date":"2011-12","score":"3","body":"\"<p>Depends on your <code>max_allowed_packet<\\\/code> setting in your MySQL configuration. That's the number of bytes that your MySQL server will accept.<\\\/p>\\n\\n<p>I would agree with Pekka that the best way to see how large you can go is to try with fake values.<\\\/p>\\n\\n<p>Also, you can write that query like this:<\\\/p>\\n\\n<pre><code>User.select(:id).where(:email =&gt; emails)\\n<\\\/code><\\\/pre>\\n\\n<p>And Rails will automatically do the <code>IN<\\\/code> query.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<mysql><ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"8621341":{"id":"8621341","date":"2011-12","score":"0","body":"\"<p>This looks like it's installing the dependencies for the gem, as it depends on activerecord and these are the dependencies for the activerecord gem. You should check to see if the gem is not already installed.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rubygems><gem><searchlogic>","commentcount":"1","accepted":""},"8624456":{"id":"8624456","date":"2011-12","score":"7","body":"\"<p>The parameters to set it up can be found in the <code>config\\\/database.yml<\\\/code> configuration for the application. By default, Rails applications use SQLite3, and so you'd need to swap your <code>database.yml<\\\/code> over to using MySQL if you're wanting to use Sequel Pro:<\\\/p>\\n\\n<pre><code>development:\\n  adapter: mysql \\n  username: your_username\\n  password: your_password\\n  database: your_database\\n<\\\/code><\\\/pre>\\n\\n<p>You may also need to specify a <code>socket<\\\/code> parameter as well (underneath database, at the same indentation level). This is usually the case on Ubuntu.<\\\/p>\\n\\n<pre><code>  socket: \\\/var\\\/run\\\/mysqld\\\/mysqld.run\\n<\\\/code><\\\/pre>\\n\\n<p>From there, you can then run <code>rake db:create<\\\/code> and <code>rake db:migrate<\\\/code> inside your application's folder to create and setup the database. If that works OK, then you should be able to connect to it using Sequel Pro and the credentials that you entered into your <code>config\\\/database.yml<\\\/code> file.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><database><ruby-on-rails-3.1><database-management>","commentcount":"3","accepted":""},"8628187":{"id":"8628187","date":"2011-12","score":"0","body":"\"<p>If this JS is rendered at all by Rails (i.e. it's not something that comes from the Asset Pipeline) then you can use the routing helpers, like this:<\\\/p>\\n\\n<pre><code>&lt;script&gt;$.getJSON(\\\"&lt;%= item_news_stuff_path(3, :format =&gt; :json) %&gt;\\\")&lt;\\\/script&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This would generate a relative-to-root path to the resource, building the route up correctly.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><jquery><ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":""},"8628200":{"id":"8628200","date":"2011-12","score":"1","body":"\"<p>You're missing this line from <code>config\\\/application.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>require 'active_record\\\/railtie'\\n<\\\/code><\\\/pre>\\n\\n<p>This will load ActiveRecord when your Rails application starts up, providing the ORM functionality for it that it needs for the generator.<\\\/p>\\n\\n<p>If you don't want to use ActiveRecord, then you should look into DataMapper or even something like Mongoid if NoSQL databases are what floats your boat.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"8628263":{"id":"8628263","date":"2011-12","score":"1","body":"\"<p>Redmine requires Rails 2.3.14, and by the looks of it you've installed Rails 3.1.1. <\\\/p>\\n\\n<p>You must install Rails 2.3.14 using this command:<\\\/p>\\n\\n<pre><code>gem install rails -v 2.3.14\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"8628268":{"id":"8628268","date":"2011-12","score":"2","body":"\"<p>First, <strong>never ever ever interpolate values into <code>where<\\\/code><\\\/strong>. This can lead to SQL injection of parameters. For example, this is bad:<\\\/p>\\n\\n<pre><code>WishList.select(\\\"content\\\").where(\\\"user_id = #{@user.id}\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>And this is OK:<\\\/p>\\n\\n<pre><code>WishList.select(\\\"content\\\").where(:user_id =&gt; @user.id)\\n<\\\/code><\\\/pre>\\n\\n<p>This will <em>automatically<\\\/em> escape the <code>@user.id<\\\/code> portion of the query, which there isn't really a need for in in this query, but imagine you were doing something like this:<\\\/p>\\n\\n<pre><code>User.select(\\\"email, password\\\").where(\\\"admin = #{params[:admin]}\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>Then anybody could pass through any value in <code>params[:admin]<\\\/code> they want.<\\\/p>\\n\\n<p>So.<\\\/p>\\n\\n<hr>\\n\\n<p>Anyway, access it through an association:<\\\/p>\\n\\n<pre><code>wishes = @user.wishlist.select(\\\"content\\\") \\n<\\\/code><\\\/pre>\\n\\n<p>Then as Carl Lazlo recommended:<\\\/p>\\n\\n<pre><code>wishes.map(&amp;:content)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"8632147":{"id":"8632147","date":"2011-12","score":"2","body":"\"<p>Yes, this is wrong due to a bug in the RDoc parser that Rails uses. See here for more information: <a href=\\\"http:\\\/\\\/groups.google.com\\\/group\\\/rubyonrails-docs\\\/browse_thread\\\/thread\\\/bc1ae76aa8179406\\\" rel=\\\"nofollow\\\">http:\\\/\\\/groups.google.com\\\/group\\\/rubyonrails-docs\\\/browse_thread\\\/thread\\\/bc1ae76aa8179406<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"8632209":{"id":"8632209","date":"2011-12","score":"0","body":"\"<p><strong>I know the original question says <em>\\\"like GitHub, but except CVS or SVN\\\"<\\\/em>, but bear with me.<\\\/strong><\\\/p>\\n\\n<p>It sounds like you're relatively new to using version control systems, given that you don't have a strong opinion of any of them at the moment. What usually happens is that people will tend to use one and defend it so strongly they make a battle between Star Trek and Star Wars fanbois look tame.<\\\/p>\\n\\n<p>I would encourage you to investigate Git still. There's a little bias involved here -- as <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\" rel=\\\"nofollow\\\">I am a Git and GitHub user<\\\/a> -- but I came from the Hell that is SVN so I kind of understand that too. I switched from SVN to Git mostly due to GitHub, but I've stayed due to the extremely powerful features and relative ease-of-use it has. Oh, and <a href=\\\"http:\\\/\\\/whygitisbetterthanx.com\\\/\\\" rel=\\\"nofollow\\\">this convinced me further<\\\/a>.<\\\/p>\\n\\n<p>You can use GitHub like a centralized repo, and in fact that's what I'm doing most of the time that I'm doing open-source work. They also offer unlimited free public repositories and the pricing for private repositories is cheap.<\\\/p>\\n\\n<p>A difference is that other people can very, very easily create copies of the repository, make a change and then they can <a href=\\\"http:\\\/\\\/help.github.com\\\/send-pull-requests\\\/\\\" rel=\\\"nofollow\\\">send a pull request<\\\/a> to me asking me to merge their changes into my repository. GitHub makes this mode of development so very easy. <\\\/p>\\n\\n<p>If you don't want to use GitHub then there's also <a href=\\\"http:\\\/\\\/codebasehq.com\\\" rel=\\\"nofollow\\\">CodebaseHQ<\\\/a> which offers a similar service to GitHub with some unique twists.<\\\/p>\\n\\n<p>There's also this <a href=\\\"https:\\\/\\\/git.wiki.kernel.org\\\/articles\\\/g\\\/i\\\/t\\\/GitSvnCrashCourse_512d.html\\\" rel=\\\"nofollow\\\">SVN to Git crash course<\\\/a> to help you learn what the comparative Git commands are to the SVN commands. If you've got some knowledge of SVN I think you would find that useful.<\\\/p>\\n\\n<p>Finally, I would really discourage you to use CVS at all. Both SVN and Git offer much, much better version control. There's also <a href=\\\"http:\\\/\\\/mercurial.selenic.com\\\/\\\" rel=\\\"nofollow\\\">Mercurial<\\\/a> which uses a model similar to Git. Whatever you choose is up to you, but please don't choose CVS!<\\\/p>\\n\\n<p>(p.s. Git is the best!)<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<svn><version-control><cvs>","commentcount":"3","accepted":""},"8649415":{"id":"8649415","date":"2011-12","score":"1","body":"\"<p>Why is this method that you're defining on the <code>User<\\\/code> model taking a <code>user<\\\/code> object as a parameter? You should define it like this:<\\\/p>\\n\\n<pre><code>def enroll!(course)\\n  enrollments.create!(:course =&gt; course, :active =&gt; true)\\n  self.hours_taught = self.hours_taught + (course.hours_long)\\n  self.save!\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This method will be defined as an instance method on this class so you can call it like this:<\\\/p>\\n\\n<pre><code>user.enroll!(course)\\n<\\\/code><\\\/pre>\\n\\n<p>This means that you won't need to pass through user as an argument this method. Inside the method, we take the <code>course<\\\/code> object and assign it to the enrolment, do the hours math and then save it using <code>save!<\\\/code>, which will raise an exception if the reocrd is invalid (either an <code>ActiveRecord::RecordInvalid<\\\/code> or <code>ActiveRecord::RecordNotSaved<\\\/code>)<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><attributes><devise>","commentcount":"0","accepted":"yes"},"8651871":{"id":"8651871","date":"2011-12","score":"2","body":"\"<p>If you just don't want the methods then use <code>remove_method<\\\/code> to remove them.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><activerecord><dry>","commentcount":"3","accepted":"yes"},"8675167":{"id":"8675167","date":"2011-12","score":"3","body":"\"<p>The problem here is that you're not calling <code>valid?<\\\/code> <em>in that example<\\\/em> before checking for  errors. You're calling it (indirectly) in the previous example, but not the one that you're asserting that has errors.<\\\/p>\\n\\n<p>The correct way is this:<\\\/p>\\n\\n<pre><code>[:title, :category_id, :email, :ad_content, :name, :price].each do |attr|\\n  it \\\"should require a #{attr}\\\" do\\n    subject.valid?\\n    subject.errors[attr].should include(\\\"blank\\\")\\n  end\\n end\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><validation><rspec>","commentcount":"1","accepted":"yes"},"8675995":{"id":"8675995","date":"2011-12","score":"3","body":"\"<p>The <code>users\\\/sign_out<\\\/code> route in your routes output there is a GET request, not a DELETE.<\\\/p>\\n\\n<p>I suspect you have something like this in your <code>config\\\/initializers\\\/devise.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>config.sign_out_via = :get\\n<\\\/code><\\\/pre>\\n\\n<p>By default, this option is set to <code>:delete<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><devise>","commentcount":"0","accepted":""},"8705975":{"id":"8705975","date":"2012-01","score":"1","body":"\"<p>Remove the <code>turn<\\\/code> gem from your <code>Gemfile<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><testing>","commentcount":"0","accepted":"yes"},"8705982":{"id":"8705982","date":"2012-01","score":"1","body":"\"<p>Use this:<\\\/p>\\n\\n<pre><code>get ':id', :to =&gt; \\\"users#show\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can do things like <a href=\\\"http:\\\/\\\/mysite.com\\\/theirusername\\\" rel=\\\"nofollow\\\">http:\\\/\\\/mysite.com\\\/theirusername<\\\/a>. Inside the <code>UsersController#show<\\\/code> action you will need to use <code>User.find_by_username(params[:id])<\\\/code>.<\\\/p>\\n\\n<p>If someone is already using a username that you want to use in the future, send them an email advising them of the change (you should have something to this effect in your Terms and Conditions as well) and give them a period of time to make the change.<\\\/p>\\n\\n<p>You should aim to have some blacklisting feature, which is easy enough to do with a list of words in your <code>User<\\\/code> model which is then checked with <code>validates_exclusion_of<\\\/code>. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routes><url-scheme>","commentcount":"4","accepted":""},"8708484":{"id":"8708484","date":"2012-01","score":"0","body":"\"<p>According to <a href=\\\"http:\\\/\\\/mark.aufflick.com\\\/blog\\\/2009\\\/05\\\/10\\\/ruby-1-9-issue-on-mac-macports-bug-unknown-type-0x22-oxc-given\\\" rel=\\\"nofollow\\\">this post by Mark Aufflick<\\\/a>, it could be due to how you installed Ruby.<\\\/p>\\n\\n<p>I would recommend uninstalling Ruby and then re-installing it using <a href=\\\"http:\\\/\\\/rvm.beginrescueend.com\\\" rel=\\\"nofollow\\\">RVM<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rake>","commentcount":"1","accepted":""},"8718156":{"id":"8718156","date":"2012-01","score":"9","body":"\"<p>You can change the constraints for this route:<\\\/p>\\n\\n<pre><code>get ':\\\/id' =&gt; \\\"categories#show\\\", :as =&gt; :category, :constraints =&gt; { :id =&gt; \\\/[\\\\w+\\\\.]+\\\/ }\\n<\\\/code><\\\/pre>\\n\\n<p>This route will now match <code>:id<\\\/code> to any string containing any word character or a dot.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routes><rails-routing>","commentcount":"2","accepted":"yes"},"8722869":{"id":"8722869","date":"2012-01","score":"7","body":"\"<p>Yes it is.<\\\/p>\\n\\n<p>You can use the <code>type<\\\/code> column if you define this in your model:<\\\/p>\\n\\n<pre><code>class Model &lt; ActiveRecord::Base\\n  self.inheritance_column = nil\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Having a table called <code>article_type<\\\/code> wouldn't matter to Rails. It's only the <code>type<\\\/code> column that it is protective of.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-3.1><naming>","commentcount":"6","accepted":"yes"},"8723032":{"id":"8723032","date":"2012-01","score":"3","body":"\"<p>You should use a <a href=\\\"http:\\\/\\\/en.wikipedia.org\\\/wiki\\\/Cron\\\" rel=\\\"nofollow\\\">Cron<\\\/a> job to do it. Check out the examples on <a href=\\\"http:\\\/\\\/en.wikipedia.org\\\/wiki\\\/Cron#Examples\\\" rel=\\\"nofollow\\\">the Wikipedia page<\\\/a>.<\\\/p>\\n\\n<p>The Cron Job should call a script using the <code>php<\\\/code> executable that runs the necessary task.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<php><mysql><linux>","commentcount":"0","accepted":""},"8735209":{"id":"8735209","date":"2012-01","score":"1","body":"\"<p>In Spree's dummy generator we run the <code>AppGenerator<\\\/code> from within Rails using <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/master\\\/core\\\/lib\\\/generators\\\/spree\\\/dummy\\\/dummy_generator.rb#L32-33\\\" rel=\\\"nofollow\\\">this code<\\\/a>. This generator is actually <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/master\\\/core\\\/lib\\\/spree\\\/core\\\/testing_support\\\/common_rake.rb#L10\\\" rel=\\\"nofollow\\\">called from within a Rake task called <code>common:test_app<\\\/code><\\\/a> which is called when we run <code>bundle exec rake test_app<\\\/code> at the root of Spree or in the directory for any component of Spree.<\\\/p>\\n\\n<p>I hope this provides you with a decent enough example to get started.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><generator>","commentcount":"2","accepted":"yes"},"8735250":{"id":"8735250","date":"2012-01","score":"2","body":"\"<p>If you want to set it up so you have a route like you show, do this:<\\\/p>\\n\\n<pre><code>get '\\\/:id', :to =&gt; \\\"customer_accounts#show\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>If you want the <code>disabled<\\\/code> and <code>update_billing<\\\/code> actions underneath this:<\\\/p>\\n\\n<pre><code>get '\\\/:id\\\/disabled', :to =&gt; \\\"customer_accounts#disabled\\\"\\npost '\\\/:id\\\/update_billing', :to =&gt; \\\"customer_accounts#update_billing\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Alternatively (and <em>much<\\\/em> neater):<\\\/p>\\n\\n<pre><code>scope '\\\/:id' do\\n  controller \\\"customer_accounts\\\" do\\n    root :action =&gt; \\\"show\\\"\\n    get 'disabled'\\n    get 'update_billing'\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routes>","commentcount":"1","accepted":"yes"},"8737123":{"id":"8737123","date":"2012-01","score":"20","body":"\"<p>You could cheat and get it to return a number:<\\\/p>\\n\\n<pre><code>sort_by { |a| a.thing ? 0 : 1 }\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><sorting><boolean>","commentcount":"1","accepted":"yes"},"8737448":{"id":"8737448","date":"2012-01","score":"20","body":"\"<p>You can interact with that instance variable from other methods belonging to that instance, even if there is no getter:<\\\/p>\\n\\n<pre><code>def noise=(noise)\\n  @noise = noise\\nend\\n\\ndef last_noise\\n  @noise\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>There doesn't need to be a getter defined with the same name as the method; the two are not linked at all. The getter is needed to \\\"get\\\" the value of the instance variable, but only in a <em>short<\\\/em> syntax. <\\\/p>\\n\\n<p>What's happening in your example is that you're initializing a new object (<code>Human.new<\\\/code>), and then using a method (<code>noise=<\\\/code>, yes the method name contains the <code>=<\\\/code> symbol) that just-so-happens to define an instance variable (that is, a variable <em>just<\\\/em> for that instance), and then finally retrieving that instance variable with <em>another<\\\/em> method call.<\\\/p>\\n\\n<p>You can actually use <code>instance_variable_get<\\\/code> to get the instance variable without defining <em>any<\\\/em> getter at all:<\\\/p>\\n\\n<pre><code>man = Human.new\\nman.noise = \\\"Howdie\\\"\\nman.instance_variable_get(\\\"@noise\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>This will return \\\"Howdie\\\", even though there is no getter defined.<\\\/p>\\n\\n<p>And no, I don't think he's using an older version of Ruby.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"7","accepted":"yes"},"8749979":{"id":"8749979","date":"2012-01","score":"2","body":"\"<p>You could define the method to check for the presence of another attribute, such as a <code>running<\\\/code> boolean attribute. If this attribute is <code>true<\\\/code>, then the method is un-usable.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"8750039":{"id":"8750039","date":"2012-01","score":"0","body":"\"<p>You're using the wrong version of this extension. Please check the extension's Version for the correct version to use with the version of Spree that you're using.<\\\/p>\\n\\n<p>For example, with Spree 0.70.x you should be using <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree_paypal_express\\\/blob\\\/master\\\/Versionfile#L2\\\" rel=\\\"nofollow\\\">this ref.<\\\/a><\\\/p>\\n\\n<p>Your problem is caused by using a too-new version of the extension for the version of Spree that you're on.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree>","commentcount":"0","accepted":""},"8752964":{"id":"8752964","date":"2012-01","score":"3","body":"\"<p>You should mark your scenario \\\/ feature to run as a JavaScript feature by tagging it with <code>@javascript<\\\/code>:<\\\/p>\\n\\n<pre><code>@javascript\\nScenario: Title goes here\\n<\\\/code><\\\/pre>\\n\\n<p>What this will do is to tell Cucumber to run the selenium-webdriver gem which will launch a real browser (Firefox) and run the test inside that browser. The browser will of course evaluate the JavaScript and then Capybara will be able to see what it outputs.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ajax><json><cucumber><capybara>","commentcount":"1","accepted":""},"8766074":{"id":"8766074","date":"2012-01","score":"5","body":"\"<p>Here's two I've created:<\\\/p>\\n\\n<ul>\\n<li><a href=\\\"http:\\\/\\\/github.com\\\/rails3book\\\/ticketee\\\">http:\\\/\\\/github.com\\\/rails3book\\\/ticketee<\\\/a> - A light-weight project management system from the Rails 3 in Action book.<\\\/li>\\n<li><a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/forem\\\">http:\\\/\\\/github.com\\\/radar\\\/forem<\\\/a> - A forum engine for Rails 3 applications.<\\\/li>\\n<\\\/ul>\\n\\n<p>Both should have pretty good examples of intermediate code, along with tests.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><github>","commentcount":"1","accepted":"yes"},"8773746":{"id":"8773746","date":"2012-01","score":"1","body":"\"<p>Yup, creating a generic repo and storing the issues there is the only way. There's no way to create an issue for an entire organization.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<github><issue-tracking>","commentcount":"0","accepted":"yes"},"8888219":{"id":"8888219","date":"2012-01","score":"1","body":"\"<p>A new version of Mail, Mail 2.4.0, was released this weekend. I would recommend upgrading to this latest version and seeing if that has fixed your issue.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><heroku><actionmailer>","commentcount":"1","accepted":""},"8890967":{"id":"8890967","date":"2012-01","score":"7","body":"\"<p>The problem is within the needle gem itself. It does this:<\\\/p>\\n\\n<pre><code>public_instance_methods -\\n[ \\\"instance_eval\\\", \\\"object_id\\\", \\\"__id__\\\", \\\"__send__\\\", \\\"initialize\\\",\\n  \\\"remove_const\\\", \\\"method_missing\\\", \\\"method\\\", \\\"class\\\", \\\"inspect\\\", \\\"to_s\\\",\\n  \\\"instance_variables\\\", \\\"block_given?\\\" ]\\n<\\\/code><\\\/pre>\\n\\n<p>But in Ruby 1.9, the <code>public_instance_methods<\\\/code> method returns objects of the <code>Symbol<\\\/code> variety, not <code>String<\\\/code>. So what happens is effectively this:<\\\/p>\\n\\n<pre><code>[:__send__, &lt;and other methods&gt;] - [\\\"__send__\\\", &lt;and other methods&gt;]\\n=&gt; [:__send__, &lt;and other methods&gt;]\\n<\\\/code><\\\/pre>\\n\\n<p>When it should be NOT removing those methods in the provided <code>Array<\\\/code>.<\\\/p>\\n\\n<p>This indicates to me that the library hasn't been updated (or at least tested) for Ruby 1.9. I would recommend finding where the code is for this library, forking it and then applying a patch that converts the array to symbols using something like <code>map(&amp;:to_sym)<\\\/code> to fix this problem.<\\\/p>\\n\\n<p>But be aware: there may be other cases where these differences between 1.8 and 1.9 are present.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1>","commentcount":"2","accepted":"yes"},"8902887":{"id":"8902887","date":"2012-01","score":"1","body":"\"<p>Putting the commit messages inside the file will only lead to the file size ballooning over the course of the project. What exactly is the need to have these messages at the top of the file?<\\\/p>\\n\\n<p>Why can't you use <code>git log &lt;that file&gt; --oneline<\\\/code> instead to see all the commits made to this file?<\\\/p>\\n\\n<p>This would let you see the commits <em>just<\\\/em> for that file.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"1","accepted":""},"8903084":{"id":"8903084","date":"2012-01","score":"2","body":"\"<p>I generally make them gems (by creating them with the <code>bundle gem<\\\/code> command) and keep them as <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/forem\\\" rel=\\\"nofollow\\\">separate projects<\\\/a> on GitHub. Then I can include them into my application like this:<\\\/p>\\n\\n<pre><code>gem 'forem', :git =&gt; \\\"git:\\\/\\\/github.com\\\/radar\\\/forem\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>This way, I can make commits to my application and have them be separate to the commits for my engine. <\\\/p>\\n\\n<p>The reasoning for doing it this way is because the engine may be shared across multiple applications and I'd rather not have to make the same change multiple times.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":""},"8916871":{"id":"8916871","date":"2012-01","score":"1","body":"\"<p>Looks like you're specifying an explicit dependency on a future version of Rails, probably something like <code>gem 'rails', '3.2.0'<\\\/code>. If you indeed want to use this version, you'll have to settle for one of the release candidates for now:<\\\/p>\\n\\n<pre><code>gem 'rails', '3.2.0.rc2'\\n<\\\/code><\\\/pre>\\n\\n<p>Or borrow a time machine.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":""},"8958879":{"id":"8958879","date":"2012-01","score":"2","body":"\"<p>If it's for some <em>particular<\\\/em> actions inside a controller then I would use a <em>decorator<\\\/em> for that. Simply put this file in <code>app\\\/decorators\\\/forem\\\/forums_controller_decorator.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>Forem::ForumsController.class_eval do\\n  layout \\\"my_special_layout\\\", :only =&gt; :show\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>If you want it for all the actions in a specific controller then you should use an intializer:<\\\/p>\\n\\n<pre><code>Rails.application.config.to_prepare do\\n  Forem::ForumsController.layout \\\"my_special_layout\\\"\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><layout><forum>","commentcount":"3","accepted":""},"8966932":{"id":"8966932","date":"2012-01","score":"2","body":"\"<p>You should be using the form builder to build out your object, rather than just <code>fields_for<\\\/code> by itself.<\\\/p>\\n\\n<p>You have this:<\\\/p>\\n\\n<pre><code>= fields_for :course do |builder|\\n<\\\/code><\\\/pre>\\n\\n<p>Where you should have this:<\\\/p>\\n\\n<pre><code>= f.fields_for :course do |builder|\\n<\\\/code><\\\/pre>\\n\\n<p>The difference is that by calling it on the initial form builder, Rails will check to see if there is a <code>course_attributes=<\\\/code> method on the object from the initial <code>form_for<\\\/code> call (in this case, that'd be <code>@project<\\\/code>) and if there is then it'll define the fields inside this form as being <code>course_attributes<\\\/code>.<\\\/p>\\n\\n<p>Go ahead and inspect the form before and after this change, just to see. I'll wait.<\\\/p>\\n\\n<p>This is made possible by the <code>accepts_nested_attributes_for<\\\/code> call in your model. It's this method that defines the <code>course_attributes=<\\\/code> method that allows for the nested attributes to work. Once you create the project, it should then also create the course.<\\\/p>\\n\\n<p>Also, no need to make <code>course_id<\\\/code> an accessible attribute, as your form's not going to be setting that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><forms><nested-forms><belongs-to><fields-for>","commentcount":"5","accepted":"yes"},"8980919":{"id":"8980919","date":"2012-01","score":"0","body":"\"<p>You (or someone else) has generated the application using Ruby 1.9. This means that it is using the new-to-1.9 variant of hashes (<code>key: value<\\\/code>) rather than the 1.8 version (<code>:key =&gt; value<\\\/code>). <\\\/p>\\n\\n<p>You will need to update this to be the latter inside <code>config\\\/initializers\\\/session_store.rb<\\\/code> if you want to use this application on 1.8.7.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3>","commentcount":"4","accepted":"yes"},"8981530":{"id":"8981530","date":"2012-01","score":"5","body":"\"<p>I would really encourage you to get used to working inside the <em>one<\\\/em> directory. Git is on-purpose designed for this. <\\\/p>\\n\\n<p>If the reason you're doing this is because you can't immediately tell what branch you're on by using something <em>other<\\\/em> than the directory name, then I would encourage looking into things that set your prompt to include the branch name. I have something like this in my personal dot files (<a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/dot-files\\\/blob\\\/master\\\/bashrc#L28\\\">bash prompt setting here<\\\/a> and <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/dot-files\\\/blob\\\/master\\\/git-completion.bash#L65-115\\\"><code>__git_ps_1<\\\/code> command here<\\\/a>.<\\\/p>\\n\\n<p>This has saved me <em>so many times<\\\/em> it's worth its weight in gold. <\\\/p>\\n\\n<hr>\\n\\n<p>Now that we've got the multiple directories problem solved, you should read this great post called <a href=\\\"http:\\\/\\\/nvie.com\\\/posts\\\/a-successful-git-branching-model\\\/\\\">\\\"A successful Git branching model\\\"<\\\/a> that covers using several different branches for development, albeit on a single repository.<\\\/p>\\n\\n<p>Once you're done there, now you're ready to apply this same thing to other repositories. First, you're going to need to add the remote repository to the list of remotes tracked by git. This is just helpful as you can reference by <em>name<\\\/em> rather than <em>address<\\\/em>, with the name generally being much shorter than the address.<\\\/p>\\n\\n<pre><code>git remote add main git@github.com:organization\\\/main.git\\n<\\\/code><\\\/pre>\\n\\n<p>I am going to assume here that the remote is what has this <code>release<\\\/code> branch on it. The first thing you're going to want to do here is update the information about this repository, which you can do with this command:<\\\/p>\\n\\n<pre><code>git fetch main\\n<\\\/code><\\\/pre>\\n\\n<p>If you're working with <em>multiple<\\\/em> remotes (which would indicate some level of insanity on your part), you can fetch them all with <code>git fetch --all<\\\/code>. <\\\/p>\\n\\n<p>Anyway, once you've done that initial fetch, you can then checkout <code>main<\\\/code>'s <code>release<\\\/code> branch into your repository:<\\\/p>\\n\\n<pre><code>git checkout main\\\/release -b release\\n<\\\/code><\\\/pre>\\n\\n<p>This tells git, \\\"Hey, get me main\\\/release's branch, and call it release in this repository (please)\\\".<\\\/p>\\n\\n<p>Now, assuming that you've been a good developer, you should be able to directly merge your commits across into this branch from your <code>master<\\\/code> branch. Right now, you'll be in the <code>release<\\\/code> branch that is based off <code>main\\\/release<\\\/code> so you'll just need to do this:<\\\/p>\\n\\n<pre><code>git merge master\\n<\\\/code><\\\/pre>\\n\\n<p>Some people here would ask you to <code>rebase<\\\/code> instead (<a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/457927\\\/git-workflow-and-rebase-vs-merge-questions\\\">There's an interesting discussion about this here<\\\/a>. That has the same syntax as merge: <code>git rebase release<\\\/code>.<\\\/p>\\n\\n<p>Now you need to <em>really really<\\\/em> make sure that everything's working as it should. That's up to you.<\\\/p>\\n\\n<p>Once you're super-confident about that, you can push your <code>release<\\\/code> branch to the <code>main<\\\/code> repository by running this command:<\\\/p>\\n\\n<pre><code>git push main release\\n<\\\/code><\\\/pre>\\n\\n<p>Now go forth and Git :)<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"2","accepted":"yes"},"9002673":{"id":"9002673","date":"2012-01","score":"5","body":"\"<p>You need to add Spree as a gem to your <code>Gemfile<\\\/code> like this:<\\\/p>\\n\\n<pre><code>gem 'spree', '0.70.3'\\n<\\\/code><\\\/pre>\\n\\n<p>This will install the latest stable version of Spree. The problem seems to be that Bundler is picking a very old version (0.40.0) of Spree to run, which is just plain wrong.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><spree>","commentcount":"2","accepted":"yes"},"9073362":{"id":"9073362","date":"2012-01","score":"4","body":"\"<p>I had a similar problem with the dummy application not loading Devise. What I had to do was require it inside <code>config\\\/application.rb<\\\/code> and then it worked. Perhaps you just need to <code>require 'slim'<\\\/code> there and it will work too?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><template-engine><rails-engines><slim-lang>","commentcount":"4","accepted":"yes"},"9102288":{"id":"9102288","date":"2012-02","score":"2","body":"\"<p>Gmail displays the first 100 or so characters of an email, minus the subject length. If the first paragraph ends before this limit, it will only show this much.<\\\/p>\\n\\n<p>iOS devices show about 80 characters, again with much the same rules.<\\\/p>\\n\\n<p>There's no setting that you can send through to determine what gets displayed as the preview in an email.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ios><email><gmail>","commentcount":"0","accepted":""},"9102573":{"id":"9102573","date":"2012-02","score":"9","body":"\"<p>Rails serving static files is turned off in production (<code>config\\\/environments\\\/production.rb<\\\/code>) by default:<\\\/p>\\n\\n<pre><code># Disable Rails's static asset server (Apache or nginx will already do this)\\nconfig.serve_static_assets = false\\n<\\\/code><\\\/pre>\\n\\n<p>The Thin server is not configured to serve the static assets, and so requests to your assets are failing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><asset-pipeline><thin>","commentcount":"5","accepted":"yes"},"9107344":{"id":"9107344","date":"2012-02","score":"0","body":"\"<p>I think this line is your problem:<\\\/p>\\n\\n<pre><code>if @signup.send_once == \\\"1\\\" or @signup.send_any_time == \\\"1\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>By the time the parameters have gone through the model, they're probably <code>true<\\\/code>, not <code>\\\"1\\\"<\\\/code>. There's a very subtle difference to these in Ruby and Rails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"9144977":{"id":"9144977","date":"2012-02","score":"2","body":"\"<p>The problem here is that your recipe fixture is not setting up any categories. When it attempts to render <code>app\\\/views\\\/recipes\\\/show.html.erb<\\\/code>, it calls the <code>comma_separated_links_for<\\\/code> method which assumes that <code>@recipe.categories<\\\/code> is populated.<\\\/p>\\n\\n<p>Inside this method, it calls <code>pop<\\\/code> on it which gets the latest element in this array. Because there's no categories, this returns <code>nil<\\\/code>.<\\\/p>\\n\\n<p>Later on, around line 10 in this method, you attempt to call <code>name<\\\/code> on <code>nil<\\\/code>, which results in your test failing.<\\\/p>\\n\\n<p>To fix this, assign a category to the recipe fixture. I've not used fixtures in a very, very long time, so I cannot advise on how to do this. I use things like <a href=\\\"https:\\\/\\\/github.com\\\/thoughtbot\\\/factory_girl\\\" rel=\\\"nofollow\\\">factory_girl<\\\/a> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"3","accepted":"yes"},"9153645":{"id":"9153645","date":"2012-02","score":"0","body":"\"<p>You need to have <a href=\\\"https:\\\/\\\/github.com\\\/plataformatec\\\/simple_form\\\" rel=\\\"nofollow\\\">simple_form<\\\/a> installed for this to work.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><simple-form><nested-form-for>","commentcount":"4","accepted":""},"9154253":{"id":"9154253","date":"2012-02","score":"4","body":"\"<p>You're putting a space between get and the arguments for the method. Don't do that.<\\\/p>\\n\\n<p>You have this:<\\\/p>\\n\\n<pre><code>it \\\"routes to #active\\\" do\\n  get (\\\"\\\/parties\\\/active\\\").should route_to(\\\"parties#active\\\")\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>When it should be this:<\\\/p>\\n\\n<pre><code>it \\\"routes to #active\\\" do\\n  get(\\\"\\\/parties\\\/active\\\").should route_to(\\\"parties#active\\\")\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Otherwise it's going to evaluate like this:<\\\/p>\\n\\n<pre><code>  get((\\\"\\\/parties\\\/active\\\").should route_to(\\\"parties#active\\\"))\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec-rails><rails-routing><ruby-on-rails-3.2.1>","commentcount":"1","accepted":"yes"},"9174367":{"id":"9174367","date":"2012-02","score":"1","body":"\"<p>You can call <code>to_sql<\\\/code> on relation objects (like that returned when you call <code>where<\\\/code>) to get the SQL for those queries.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<sql><ruby><ruby-on-rails-3><activerecord>","commentcount":"0","accepted":""},"9281022":{"id":"9281022","date":"2012-02","score":"5","body":"\"<p>Spree 1.0 only works with Rails 3.1.3. We'll be looking at supporting Rails 3.2 in the next minor release of Spree. Until that comes out, use 3.1.3, like this:<\\\/p>\\n\\n<pre><code>gem install rails -v 3.1.3\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><gem><rvm><spree>","commentcount":"1","accepted":""},"9281626":{"id":"9281626","date":"2012-02","score":"0","body":"\"<p>Why are your factories being loaded in the development environment? Did you mistakenly do this?<\\\/p>\\n\\n<pre><code>group :development, :test do\\n  gem 'factory_girl_rails'\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Rather than this?<\\\/p>\\n\\n<pre><code>group :test do\\n  gem 'factory_girl_rails'\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<mysql><ruby><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"9284806":{"id":"9284806","date":"2012-02","score":"0","body":"\"<p>The best place for this would be a file inside your <code>app\\\/controllers<\\\/code> directory at <code>forem\\\/application_controller-decorator.rb<\\\/code> that contains this content:<\\\/p>\\n\\n<pre><code>Forem::ApplicationController.class_eval do\\n  skip_before_filter :authenticate_member!\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>You would then need to include this file using lines like this in a file called <code>config\\\/initiailizers\\\/load_decorators.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>Dir.glob(Rails.root.join(\\\"app\\\/**\\\/*_decorator*.rb\\\")) do |c|\\n  Rails.configuration.cache_classes ? require(c) : load(c)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This would allow you to specify other decorators as well, for any other class of Forem, if you so desired.<\\\/p>\\n\\n<p>I stole this idea from Spree (which I work on full-time now), and I think it's pretty solid. You can see the original implementation of it <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/master\\\/auth\\\/lib\\\/spree\\\/auth\\\/engine.rb#L12-15\\\" rel=\\\"nofollow\\\">here<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3.1>","commentcount":"2","accepted":"yes"},"9287313":{"id":"9287313","date":"2012-02","score":"2","body":"\"<p>Four things.<\\\/p>\\n\\n<p>One: No need for the <code>:url<\\\/code> option. You can just pass the hash as the second argument to <code>link_to_remote<\\\/code> and it'll work.<\\\/p>\\n\\n<p>Two: You should use the URL helpers for this. Also, if you're using the <code>destroy<\\\/code> action you'll probably want to pass through an id. This means that you would do something like this instead:<\\\/p>\\n\\n<pre><code>link_to_remote 'Delete', registration_path(id)\\n<\\\/code><\\\/pre>\\n\\n<p>You would be doing something like <code>resources :registrations<\\\/code> for this. Although, not sure what registrations <em>are<\\\/em> within your application, so I can really advise on this.<\\\/p>\\n\\n<p>Three: most importantly, you're missing the end curly bracket for the hash on the <code>link_to_remote<\\\/code> line. This would raise a syntax error if you left it out.<\\\/p>\\n\\n<p>Four: <code>link_to_remote<\\\/code> is deprecated in Rails 3.0. You should use <code>link_to 'Delete', registration_path(id), :remote =&gt; true<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><ruby-on-rails><ruby><ruby-on-rails-3><erb>","commentcount":"1","accepted":""},"9289135":{"id":"9289135","date":"2012-02","score":"0","body":"\"<p>Why are you passing <code>posts_attributes<\\\/code> to <code>user.posts.create<\\\/code>? It looks to me like you're wanting to create a <em>topic<\\\/em> that has many posts, in which case you should be doing <code>user.topics.create<\\\/code> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><activemodel>","commentcount":"1","accepted":"yes"},"9299860":{"id":"9299860","date":"2012-02","score":"2","body":"\"<p>You could have a <code>questions_count<\\\/code> column on the <code>surveys<\\\/code> table which can be used to cache this number. This could be done automatically if you had specified the <code>belongs_to :survey<\\\/code> in your <code>Question<\\\/code> model like this:<\\\/p>\\n\\n<pre><code>belongs_to :survey, :counter_cache =&gt; true\\n<\\\/code><\\\/pre>\\n\\n<p>But now that you've actually got surveys and questions, you're going to need to create this column and then in a migration update the count to be correct:<\\\/p>\\n\\n<pre><code>def up\\n  add_column :surveys, :questions_count, :integer, :default =&gt; 0\\n  Survey.all.each do |survey|\\n    survey.questions_count = survey.questions.count\\n    survey.save\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then, once you've got this column, it's a simple ARel query to find the average:<\\\/p>\\n\\n<pre><code>Survey.average(:questions_count)\\n<\\\/code><\\\/pre>\\n\\n<p>In addition to this, you can now get the questions count automatically without having to do another query on the questions table after you load the surveys. This would be greatly helpful if you want to display this somewhere.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"9299936":{"id":"9299936","date":"2012-02","score":"2","body":"\"<p>Why are you using <code>attr_accessor<\\\/code>? This method is actually going to be defining both a setter and getter method for a key, keeping track of a virtual attribute.<\\\/p>\\n\\n<p>Perhaps you meant to use <code>attr_accessible<\\\/code>, but even then that is unnecessary, because you're setting the attribute directly.<\\\/p>\\n\\n<p>Really, you don't need either <code>attr_accessor :key<\\\/code> or <code>attr_accessible :key<\\\/code> in your model at all if you're just setting it like this. Remove the <code>attr_accessor<\\\/code> and it will work.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><callback>","commentcount":"2","accepted":"yes"},"9299953":{"id":"9299953","date":"2012-02","score":"0","body":"\"<p>I think it would be most efficient for the second example. This is because you won't have to joins through an intermediary table to find the photos for the user. <\\\/p>\\n\\n<p>The <code>photos<\\\/code> table then would be storing both the <code>page_id<\\\/code> and the <code>user_id<\\\/code> foreign keys.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"9299984":{"id":"9299984","date":"2012-02","score":"4","body":"\"<p>Did you run the new migrations for Spree 1.0?<\\\/p>\\n\\n<pre><code>rake railties:install:migrations\\nrake db:migrate\\n<\\\/code><\\\/pre>\\n\\n<p>These migrations that'll be copied over will rename your tables correctly.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree>","commentcount":"0","accepted":"yes"},"9318020":{"id":"9318020","date":"2012-02","score":"1","body":"\"<p>If your model is called <code>User<\\\/code>, then define a <code>user_root<\\\/code> route in your <code>config\\\/routes.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>match '\\\/profile', :to =&gt; \\\"user#profile\\\", :as =&gt; \\\"user_root\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Devise will then automatically redirect the user to this path.<\\\/p>\\n\\n<p>There's a page in the Wiki that explains this: <a href=\\\"https:\\\/\\\/github.com\\\/plataformatec\\\/devise\\\/wiki\\\/How-To:-Redirect-to-a-specific-page-on-successful-sign-in-out\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/plataformatec\\\/devise\\\/wiki\\\/How-To:-Redirect-to-a-specific-page-on-successful-sign-in-out<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><devise>","commentcount":"0","accepted":""},"9343181":{"id":"9343181","date":"2012-02","score":"32","body":"\"<p>If you want to sign in a user, use the <code>sign_in<\\\/code> helper inside your controller's action:<\\\/p>\\n\\n<pre><code>sign_in(:user, user)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><devise><warden>","commentcount":"6","accepted":""},"9353280":{"id":"9353280","date":"2012-02","score":"1","body":"\"<p>The controller is the <em>perfect<\\\/em> place for calls to your model's methods. It's <em>not<\\\/em> the perfect place for model logic, though.<\\\/p>\\n\\n<p>Hint: the perfect place for that begins with 'M', ends with 'odel'.<\\\/p>\\n\\n<p>The controller <em>should<\\\/em> call <code>User.find_by_username<\\\/code>. There should be no <code>find_by_username<\\\/code> method for the controller itself, because that's one layer of abstraction too many and \\\"hides\\\" what exactly the <code>find_by_username<\\\/code> method is doing.<\\\/p>\\n\\n<p>Call the model method from your controller. You're obsessing about cleaning up when you don't need to.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-3.1>","commentcount":"2","accepted":""},"9418607":{"id":"9418607","date":"2012-02","score":"2","body":"\"<p>You should remove the <code>:registerable<\\\/code> symbol from the list of devise stuff in your <code>User<\\\/code> model. This will disable the sign up feature.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><devise>","commentcount":"0","accepted":"yes"},"9457729":{"id":"9457729","date":"2012-02","score":"3","body":"\"<p>Assign the leader in the controller:<\\\/p>\\n\\n<pre><code>@clan.leader = @clan\\n@clan.save\\n<\\\/code><\\\/pre>\\n\\n<p>Then your model would look like this:<\\\/p>\\n\\n<pre><code>class Clan &lt; ActiveRecord::Base\\n  belongs_to :leader\\n  after_create :assign_leader\\n\\n# the person who created the clan is the leader\\ndef assign_leader\\n  self.clan_memberships.create(:user =&gt; self.leader)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This means then you could check <code>clan.leader<\\\/code> for the leader, rather than having to query another association such as <code>clan.memberships<\\\/code> to find out who that is. It also leads to cleaner code in <code>assign_leader<\\\/code>.<\\\/p>\\n\\n<p>You will, of course, need to add <code>leader_id<\\\/code> as a field to your <code>clans<\\\/code> table.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"3","accepted":"yes"},"9498456":{"id":"9498456","date":"2012-02","score":"1","body":"\"<p>Why do you have this method defined at the bottom of your controller?<\\\/p>\\n\\n<pre><code>def diary_slot_day_time_path(*args)\\n  @template.diary_slot_day_time_path(*args)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This is attempting to reference an undefined instance variable called <code>@template<\\\/code>, which is why you're getting that error.<\\\/p>\\n\\n<p>You should be defining this method in your routes, by using nested routes like this:<\\\/p>\\n\\n<pre><code>match '\\\/diary\\\/:day\\\/:time', :to =&gt; \\\"some_controller#some_action\\\", :as =&gt; \\\"diary_slot_day_time\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><ruby-on-rails-3.1>","commentcount":"2","accepted":"yes"},"9498819":{"id":"9498819","date":"2012-02","score":"3","body":"\"<p>You should be doing <code>match.build_score<\\\/code>. This is because when you call the <code>score<\\\/code> method it would attempt to fetch the association, and because it's not defined yet, it will return <code>nil<\\\/code>. Then you call <code>build<\\\/code> on <code>nil<\\\/code> and that's why it blows up.<\\\/p>\\n\\n<p><code>has_many<\\\/code> association methods return a sort of \\\"proxy\\\" object to the objects returned by calls to them, so this is why things like <code>posts.comments.build<\\\/code> works. The methods for <code>belongs_to<\\\/code> and <code>has_one<\\\/code> associations attempt to fetch the associations straight off, and so you need to do <code>build_association<\\\/code> rather than <code>association.build<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"9498918":{"id":"9498918","date":"2012-02","score":"2","body":"\"<p>You have a route in your application that catches all unknown requests and routes to the <code>biogas_calculator<\\\/code> controller. It's attempting to use <code>biowatts<\\\/code> as the <code>:id<\\\/code> parameter for the request.<\\\/p>\\n\\n<p>Are you super super sure you put the <code>biowatts.ico<\\\/code> in the <code>public<\\\/code> folder of your application?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><favicon>","commentcount":"1","accepted":""},"9500414":{"id":"9500414","date":"2012-02","score":"0","body":"\"<p>How did you create the field? It looks like the model isn't recognizing that the field is there which could be one of two things.<\\\/p>\\n\\n<p>First, you've not run the migration to add the field to the table in the database. This is the most common mistake of people when this error is encountered.<\\\/p>\\n\\n<p>Second, you <em>did<\\\/em> add the field, but you added it to the wrong database. Less common, but still a potential possibility.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><devise>","commentcount":"3","accepted":"yes"},"9505361":{"id":"9505361","date":"2012-02","score":"4","body":"\"<p>I cannot think of a case where it wouldn't. <\\\/p>\\n\\n<p>I just tried the following words and it doesn't change after a second pluralizaation. However, some of them <em>do<\\\/em> \\\"break\\\" in interesting ways because of two reasons: 1) Rails' pluralization rules are actually quite dumb and 2) English is <strong><em>hard<\\\/em><\\\/strong>.<\\\/p>\\n\\n<ul>\\n<li>analysis -> analyses -> analysis<\\\/li>\\n<li>media -> media -> media<\\\/li>\\n<li>news -> news -> news<\\\/li>\\n<li>cactii -> cactiis -> cactiis<\\\/li>\\n<li>criterion -> criterions -> criterions<\\\/li>\\n<li>foot -> foots -> foots<\\\/li>\\n<li>loaf -> loafs -> loafs<\\\/li>\\n<li>person -> people -> people<\\\/li>\\n<\\\/ul>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><string><plural><idempotent>","commentcount":"12","accepted":""},"9511714":{"id":"9511714","date":"2012-03","score":"0","body":"\"<p>You will need to add the <code>password_salt<\\\/code> column to your users table. It appears to be missing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><devise>","commentcount":"1","accepted":""},"9520602":{"id":"9520602","date":"2012-03","score":"3","body":"\"<p>I think that HTTParty has a better API, is better maintained and more flexible than ActiveResource. I would use HTTParty.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><activeresource><httparty>","commentcount":"0","accepted":"yes"},"9537559":{"id":"9537559","date":"2012-03","score":"2","body":"\"<p>The Rails controller generator will not allow you to specify the superclass. You will need to edit this file and set the superclass manually.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><model-view-controller><inheritance><controllers>","commentcount":"0","accepted":"yes"},"9571551":{"id":"9571551","date":"2012-03","score":"13","body":"\"<p>This is what happens when something (a gem, for instance), has a line that does something as simple as this:<\\\/p>\\n\\n<pre><code>require 'test\\\/unit'\\n<\\\/code><\\\/pre>\\n\\n<p>This file <a href=\\\"https:\\\/\\\/github.com\\\/test-unit\\\/test-unit\\\/blob\\\/99d13bda8bb1ff7729b23736db1adbff47e09ff1\\\/lib\\\/test\\\/unit.rb#L324-328\\\" rel=\\\"nofollow\\\">has an <code>at_exit<\\\/code> hook<\\\/a> which will automatically attempt to run tests, using the last \\\"phrase\\\" in your command as the name of the test which to run. This is why it reports <code>db:test:prepare<\\\/code> can't be found.<\\\/p>\\n\\n<p>For instance, the <code>shoulda-context<\\\/code> gem does this. We were using it in Spree and got the same problem as you. I opened a <a href=\\\"https:\\\/\\\/github.com\\\/thoughtbot\\\/shoulda-context\\\/pull\\\/4\\\" rel=\\\"nofollow\\\">pull request to fix this issue<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><rake>","commentcount":"5","accepted":"yes"},"9613091":{"id":"9613091","date":"2012-03","score":"2","body":"\"<pre><code>validates :fname, :length =&gt; { :minimum =&gt; 1, :maximum =&gt; 100 }, :unless =&gt; :new_record?\\nvalidates :fname, :length =&gt; { :minimum =&gt; 1, :maximum =&gt; 100 }, :unless =&gt; :new_record?\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><devise>","commentcount":"0","accepted":"yes"},"9627796":{"id":"9627796","date":"2012-03","score":"232","body":"\"<p><a href=\\\"http:\\\/\\\/stackoverflow.com\\\/revisions\\\/9627796\\\/2\\\">The original form of this answer is wildly different, and can be found here<\\\/a>. Just proof that there's more than one way to skin a cat.<\\\/p>\\n\\n<p>I've updated the answer since to use namespaces and to use 301 redirects -- rather than the default of 302. Thanks to pixeltrix and Bo Jeanes for the prompting on those things.<\\\/p>\\n\\n<hr>\\n\\n<p>You might want to wear a <em>really<\\\/em> strong helmet because this is going to <strong>blow your mind<\\\/strong>. <\\\/p>\\n\\n<p>The Rails 3 routing API is super wicked. To write the routes for your API, as per your requirements above, you need just this:<\\\/p>\\n\\n<pre><code>namespace :api do\\n  namespace :v1 do\\n    resources :users\\n  end\\n\\n  namespace :v2 do\\n    resources :users\\n  end\\n  match 'v:api\\\/*path', :to =&gt; redirect(\\\"\\\/api\\\/v2\\\/%{path}\\\")\\n  match '*path', :to =&gt; redirect(\\\"\\\/api\\\/v2\\\/%{path}\\\")\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>If your mind is still intact after this point, let me explain.<\\\/p>\\n\\n<p>First, we call <code>namespace<\\\/code> which is super handy for when you want a bunch of routes scoped to a specific path and module that are similarly named. In this case, we want all routes inside the block for our <code>namespace<\\\/code> to be scoped to controllers within the <code>Api<\\\/code> module and all requests to paths inside this route will be prefixed with <code>api<\\\/code>. Requests such as <code>\\\/api\\\/v2\\\/users<\\\/code>, ya know?<\\\/p>\\n\\n<p>Inside the namespace, we define two more namespaces (woah!). This time we're defining the \\\"v1\\\" namespace, so all routes for the controllers here will be inside the <code>V1<\\\/code> module inside the <code>Api<\\\/code> module: <code>Api::V1<\\\/code>. By defining <code>resources :users<\\\/code> inside this route, the controller will be located at <code>Api::V1::UsersController<\\\/code>. This is version 1, and you get there by making requests like <code>\\\/api\\\/v1\\\/users<\\\/code>.<\\\/p>\\n\\n<p>Version 2 is only a <em>tiny<\\\/em> bit different. Instead of the controller serving it being at <code>Api::V1::UsersController<\\\/code>, it's now at <code>Api::V2::UsersController<\\\/code>. You get there by making requests like <code>\\\/api\\\/v2\\\/users<\\\/code>.<\\\/p>\\n\\n<p>Next, a <code>match<\\\/code> is used. This will match all API routes that go to things like <code>\\\/api\\\/v3\\\/users<\\\/code>.<\\\/p>\\n\\n<p>This is the part I had to look up. The <code>:to =&gt;<\\\/code> option allows you to specify that a specific request should be redirected somewhere else -- I knew that much -- but I didn't know how to get it to redirect to somewhere else and pass in a piece of the original request along with it.<\\\/p>\\n\\n<p>To do this, we call the <code>redirect<\\\/code> method and pass it a string with a special-interpolated <code>%{path}<\\\/code> parameter. When a request comes in that matches this final <code>match<\\\/code>, it will interpolate the <code>path<\\\/code> parameter into the location of <code>%{path}<\\\/code> inside the string and redirect the user to where they need to go.<\\\/p>\\n\\n<p>Finally, we use another <code>match<\\\/code> to route all remaining paths prefixed with <code>\\\/api<\\\/code> and redirect them to <code>\\\/api\\\/v2\\\/%{path}<\\\/code>. This means requests like <code>\\\/api\\\/users<\\\/code> will go to <code>\\\/api\\\/v2\\\/users<\\\/code>.<\\\/p>\\n\\n<p>I couldn't figure out how to get <code>\\\/api\\\/asdf\\\/users<\\\/code> to match, because how do you determine if that is supposed to be a request to <code>\\\/api\\\/&lt;resource&gt;\\\/&lt;identifier&gt;<\\\/code> or <code>\\\/api\\\/&lt;version&gt;\\\/&lt;resource&gt;<\\\/code>?<\\\/p>\\n\\n<p>Anyway, this was fun to research and I hope it helps you!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routes><versioning>","commentcount":"14","accepted":"yes"},"9628189":{"id":"9628189","date":"2012-03","score":"3","body":"\"<p>If you're nesting like that, you need to link to both a page and a lesson:<\\\/p>\\n\\n<pre><code>lesson_page_path(lesson, page)\\n<\\\/code><\\\/pre>\\n\\n<p>If you just want the first one, define another route:<\\\/p>\\n\\n<pre><code>get '\\\/lesson\\\/:lesson_id\\\/page_one', :to =&gt; \\\"pages#show\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"9638893":{"id":"9638893","date":"2012-03","score":"2","body":"\"<p>Use <code>Time.zone.now<\\\/code>. That will use an <code>ActiveSupport::TimeWithZone<\\\/code> object that will be automatically converted to UTC when used in your database search.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><timezone>","commentcount":"1","accepted":""},"9672547":{"id":"9672547","date":"2012-03","score":"1","body":"\"<p>Rails engines provide their routing helpers through a routing proxy. You don't need to define <code>root_path<\\\/code> methods like this.<\\\/p>\\n\\n<p>Instead, call the method which is your engine's name and then the routing helper on it like this:<\\\/p>\\n\\n<pre><code>blog.root_path\\n<\\\/code><\\\/pre>\\n\\n<p>For more information, read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/engines.html\\\" rel=\\\"nofollow\\\">Engines Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><assets><rails-engines>","commentcount":"2","accepted":""},"9676243":{"id":"9676243","date":"2012-03","score":"0","body":"\"<p>Please don't use Active Scaffold. It's a really old and buggy project. I would recommend the use of <a href=\\\"http:\\\/\\\/github.com\\\/sferik\\\/rails_admin\\\" rel=\\\"nofollow\\\">rails_admin<\\\/a> instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><infinite-loop><activescaffold>","commentcount":"2","accepted":"yes"},"9709902":{"id":"9709902","date":"2012-03","score":"13","body":"\"<p>I'm thinking you have a scope like this:<\\\/p>\\n\\n<pre><code>users = User.where(\\\"something\\\").limit(20).order(\\\"name ASC\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>With this in mind...<\\\/p>\\n\\n<p>To remove the <code>limit<\\\/code> pass <code>nil<\\\/code> to <code>limit<\\\/code>:<\\\/p>\\n\\n<pre><code>users.limit(nil)\\n<\\\/code><\\\/pre>\\n\\n<p>Then to remove the ordering, use <code>reorder<\\\/code>, also passing it <code>nil<\\\/code>:<\\\/p>\\n\\n<pre><code>users.limit(nil).reorder(nil)\\n<\\\/code><\\\/pre>\\n\\n<p>That will remove both the limit and the order from your scope, preserving all other things. If you were to use <code>unscoped<\\\/code>, it would remove <em>all<\\\/em> scoping.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"1","accepted":"yes"},"9710327":{"id":"9710327","date":"2012-03","score":"1","body":"\"<p>This is more of a Ruby thing. You can define <em>optional arguments<\\\/em> for a method like this:<\\\/p>\\n\\n<pre><code>def initialize(name=\\\"\\\", age=0)\\n  @name = name\\n  @age = age\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>By doing it this way, you will be able to call <code>Person.new<\\\/code> and then have name default to a blank string if it's not passed and age default to 0. If you want age to be something but name to be blank you'll need to pass an empty string anyway:<\\\/p>\\n\\n<pre><code>Person.new(\\\"\\\", 24)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"1","accepted":""},"9712662":{"id":"9712662","date":"2012-03","score":"5","body":"\"<p>I think this is because of how you've defined the module. You're attempting to define it like this:<\\\/p>\\n\\n<pre><code>module Modules::Projects::Financials\\n  def foo\\n   'bar'\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>But Ruby will interpret this by attempting to find the <code>Modules<\\\/code> module first, then the <code>Projects<\\\/code> module and then will finally define the <code>Financials<\\\/code> module, but ONLY if it can find the first two.<\\\/p>\\n\\n<p>In your case, it <em>can't<\\\/em> find the first two and so bombs out like that.<\\\/p>\\n\\n<p>Go ahead, fire up <code>irb<\\\/code> and copy and paste the above code example into it. You'll see exactly the same error that you're getting when you run your specs.<\\\/p>\\n\\n<hr>\\n\\n<p>The way to fix this is to just define\\\/re-open the module in each file:<\\\/p>\\n\\n<pre><code>module Modules\\n  module Projects\\n    module Financials\\n      def foo\\n        'bar'\\n      end\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Now that each time each one of these files is loaded, it will either define or re-open the modules, adding functionality to them. The best part about this is that it doesn't matter if <code>Modules<\\\/code> is or isn't defined first, it'll just define it anyway.<\\\/p>\\n\\n<hr>\\n\\n<p>Now to address the point: Why does it work in Rails?<\\\/p>\\n\\n<p><strong>Oh man, Rails is totally doing some awesome stuff!<\\\/strong><\\\/p>\\n\\n<p>I actually covered how Rails deals with the automatic definition of modules <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2011\\\/11\\\/screencast-wrong-argument-type\\\/\\\" rel=\\\"nofollow\\\">in my \\\"wrong argument type\\\" screencast<\\\/a>. Well, I don't exactly cover how modules are automatically loaded, but (<em>spoiler alert<\\\/em>) it's the culprit for what's going wrong there.<\\\/p>\\n\\n<p>I'm not going to force you to watch it. The problem lies with <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-1-stable\\\/activesupport\\\/lib\\\/active_support\\\/dependencies.rb#L488-492\\\" rel=\\\"nofollow\\\">these lines inside <code>activesupport\\\/lib\\\/active_support\\\/dependencies.rb<\\\/code><\\\/a>. <\\\/p>\\n\\n<p>The <code>load_missing_constant<\\\/code> method is used by Rails when it can't find a constant. That's when Rails's magic autoloading stuff kicks into gear. It calls this method, and attempts to find a file that defines this module. <\\\/p>\\n\\n<p>If it can't do that, it does this:<\\\/p>\\n\\n<pre><code>mod = Module.new\\ninto.const_set const_name, mod\\nautoloaded_constants &lt;&lt; qualified_name unless autoload_once_paths.include?(base_path)\\nreturn mod\\n<\\\/code><\\\/pre>\\n\\n<p>This is <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-1-stable\\\/activesupport\\\/lib\\\/active_support\\\/dependencies.rb#L433-439\\\" rel=\\\"nofollow\\\">inside the <code>autoload_module!<\\\/code> method in that <code>dependencies.rb<\\\/code> file<\\\/a>. <\\\/p>\\n\\n<p>What this code does is simple: creates a new module, sets its constant name to the one that's missing, adds the <code>qualified_name<\\\/code> to the <code>autoloaded_constants<\\\/code> and returns that module.<\\\/p>\\n\\n<p>This is why Rails is defining your modules <em>even though they don't really exist<\\\/em>. You're completely bypassing this in your spec (with good reason, you don't want all of that nasty Rails junk), and so it's not automatically loading the modules.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"2","accepted":"yes"},"9712765":{"id":"9712765","date":"2012-03","score":"1","body":"\"<p>There's no particular reason <em>why<\\\/em> these are the way that they are, they just are that way. <\\\/p>\\n\\n<p>It probably stems from the old (I'm talking 1.2 days here) scaffold controller layout where the actions were laid out in that order.<\\\/p>\\n\\n<p>The only problem I can imagine you would encounter here is that if you were to have a user with the <code>id<\\\/code> of <code>new<\\\/code> it would go to <code>UsersController#new<\\\/code> first, rather than the ideal <code>UsersController#show<\\\/code>. The workaround for that is fairly simple: don't let users identify themselves as \\\"new\\\".<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"9712821":{"id":"9712821","date":"2012-03","score":"2","body":"\"<p>The problem is this line:<\\\/p>\\n\\n<pre><code>&lt;%= form_for(:project, :url =&gt; {:action =&gt; 'destroy', :id =&gt; @project.id }) do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>You're not telling it to use the HTTP method DELETE when making this <\\\/p>\\n\\n<pre><code>&lt;%= form_for(:project, :url =&gt; {:action =&gt; 'destroy', :id =&gt; @project.id }, :method =&gt; :delete) do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>You could also write this much, much shorter like this:<\\\/p>\\n\\n<pre><code>&lt;%= form_for(@project, :method =&gt; :delete) do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Rails will know precisely what URL to build, so you don't need to tell it what to do.<\\\/p>\\n\\n<hr>\\n\\n<p><strong>Bonus<\\\/strong><\\\/p>\\n\\n<p>You could also do this with the initial <code>link_to<\\\/code>:<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"delete\\\", [:delete, project], :method =&gt; :delete %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>The array as the second argument here will compile the route using the polymorphic route builder in Rails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"9713176":{"id":"9713176","date":"2012-03","score":"0","body":"\"<p>Two things. Your <code>form_for<\\\/code> should use <code>&lt;%=<\\\/code> and not <code>&lt;%<\\\/code> and should have <code>[]<\\\/code> around the <code>@bank, @transaction<\\\/code> parts:<\\\/p>\\n\\n<pre><code>&lt;%= form_for([@bank_account,@transaction]) do |f| %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":"yes"},"9723219":{"id":"9723219","date":"2012-03","score":"1","body":"\"<p>In your <code>config\\\/environments\\\/test.rb<\\\/code> you can delete this middleware:<\\\/p>\\n\\n<pre><code>config.middleware.delete YourMiddleware::Goes::Here\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><rspec><middleware>","commentcount":"2","accepted":""},"9726573":{"id":"9726573","date":"2012-03","score":"6","body":"\"<p>From the output:<\\\/p>\\n\\n<pre><code>libiconv is missing.  please visit http:\\\/\\\/nokogiri.org\\\/tutorials\\\/installing_nokogiri.html for help with installing dependencies.\\n<\\\/code><\\\/pre>\\n\\n<p>Install libiconv.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><nokogiri>","commentcount":"0","accepted":""},"9727370":{"id":"9727370","date":"2012-03","score":"2","body":"\"<p><code>$_<\\\/code> is going to return <code>nil<\\\/code> when you run this program. Because <code>nil<\\\/code> is != to <code>q<\\\/code>, the program doesn't even run at all. It will exit with <code>nil<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"0","accepted":""},"9731504":{"id":"9731504","date":"2012-03","score":"5","body":"\"<p>The <code>_type<\\\/code> column is used to identify what resource this comes from. In this case, the polymorphic resource could be one of <code>Employee<\\\/code> or a <code>Product<\\\/code>. In other words: an image can relate to <em>either<\\\/em> a product or an employee.<\\\/p>\\n\\n<p>The <code>_type<\\\/code> column will simply contain the string of either \\\"Employee\\\" or \\\"Product\\\". When this association is accessed, Rails will use it to know what model to use to load the associated object.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><database><model><polymorphic>","commentcount":"6","accepted":"yes"},"9742188":{"id":"9742188","date":"2012-03","score":"1","body":"\"<p>You're attempting to make a GET request to a route that would only respond to DELETE. <\\\/p>\\n\\n<p>Why isn't this working? You probably haven't included <code>application.js<\\\/code> using this:<\\\/p>\\n\\n<pre><code>&lt;%= javascript_include_tag :application %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This would include the <code>jquery.js<\\\/code> and <code>jquery_ujs.js<\\\/code> files that would provide the <code>method: \\\"delete\\\"<\\\/code> functionality for your link.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"3","accepted":""},"9750669":{"id":"9750669","date":"2012-03","score":"42","body":"\"<p>Ruby 1.9 has removed the current directory from the load path, and so you will need to do a relative require on this file, as Pascal says:<\\\/p>\\n\\n<pre><code>require_relative 'tokenizer'\\n<\\\/code><\\\/pre>\\n\\n<p>There's no need to suffix it with <code>.rb<\\\/code>, as Ruby's smart enough to know that's what you mean anyway.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><require>","commentcount":"6","accepted":""},"9751347":{"id":"9751347","date":"2012-03","score":"4","body":"\"<p>How is that method supposed to know what the <code>profile<\\\/code> object is without you passing it in?<\\\/p>\\n\\n<p>I'm imagining there being a <code>@profile<\\\/code> variable defined in your controller. In the view, you would have this:<\\\/p>\\n\\n<pre><code>&lt;%= link_to twitter_url %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>And in the helper, this:<\\\/p>\\n\\n<pre><code>def twitter_url\\n  \\\"http:\\\/\\\/twitter.com\\\/#{@profile.twitter_link}\\\/account\\\"\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Note here that you don't need to set <code>self.url<\\\/code> or have an explicit return. This is because the method will automatically return a <code>String<\\\/code> which is what <code>link_to<\\\/code> takes.<\\\/p>\\n\\n<p>If you want this method to be in a helper that's available in <em>just<\\\/em> your <code>ProfileController<\\\/code>, then why not put it inside <code>ProfileHelper<\\\/code> so that it's automatically included just by being related by name?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"5","accepted":"yes"},"9806877":{"id":"9806877","date":"2012-03","score":"4","body":"\"<p>You would be looking to create an engine at that point. Reading the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/engines.html\\\" rel=\\\"nofollow\\\">Engines Guides<\\\/a> guide should give you a great start on that.<\\\/p>\\n\\n<p>The bare-bones components you need inside your gem are a file at <code>lib\\\/your_gem.rb<\\\/code> that serves the purpose of simply requiring whatever it is your gem needs. If your gem has no other dependencies, then it looks like this:<\\\/p>\\n\\n<pre><code>require 'your_gem\\\/engine'\\n<\\\/code><\\\/pre>\\n\\n<p>One line, so much power. The <code>lib\\\/your_gem\\\/engine.rb<\\\/code> file it requires has this code in it:<\\\/p>\\n\\n<pre><code>module YourGem\\n  class Engine &lt; Rails::Engine\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>By simply inheriting from <code>Rails::Engine<\\\/code>, this triggers an inheritance hook on <code>Rails::Engine<\\\/code> that notifies the framework that there is an engine at the location of your gem.<\\\/p>\\n\\n<p>If you then create a file at <code>app\\\/assets\\\/stylesheets\\\/your_gem\\\/beauty.css<\\\/code>, you can then include that in your application (assuming you have the asset pipeline enabled, of course) using this line:<\\\/p>\\n\\n<pre><code>&lt;%= stylesheet_link_tag \\\"your_gem\\\/beauty\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Now that I've given you the short version of it, I really, really, really recommend reading the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\" rel=\\\"nofollow\\\">Engines Guide<\\\/a> top to bottom to better understand it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><gem><bundle>","commentcount":"0","accepted":""},"9811884":{"id":"9811884","date":"2012-03","score":"1","body":"\"<p>The <code>bullet<\\\/code> gem seems to be the problem. Look at the first line of your stacktrace. The issue is inside <a href=\\\"https:\\\/\\\/github.com\\\/flyerhzm\\\/bullet\\\/blob\\\/master\\\/lib\\\/bullet\\\/active_record31.rb#L88-92\\\" rel=\\\"nofollow\\\">this method<\\\/a>. It's probably the <code>origin_has_cached_counter?<\\\/code> call that it's complaining about.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><activerecord><activerelation>","commentcount":"1","accepted":"yes"},"9816186":{"id":"9816186","date":"2012-03","score":"3","body":"\"<p>Jeremy McAnally linked me to <a href=\\\"http:\\\/\\\/blog.jayfields.com\\\/2007\\\/01\\\/appending-to-erb-output-from-block.html\\\" rel=\\\"nofollow\\\">this perfect description<\\\/a> of how to do it.<\\\/p>\\n\\n<p>Basically, you need to tell ERB to store the output buffer in a variable.<\\\/p>\\n\\n<p>The script ends up looking like this:<\\\/p>\\n\\n<pre><code>require 'erb'\\n\\ndef listing(title, attributes={})\\n  concat %Q{\\n&lt;example id='#{attributes[:id]}'&gt;\\n  &lt;programlisting&gt;\\n    &lt;title&gt;#{title}&lt;\\\/title&gt;}\\n  yield\\n  concat %Q{\\n  &lt;\\\/programlisting&gt;\\n&lt;\\\/example&gt;\\n  }\\nend\\n\\ndef concat(string)\\n  @output.concat(string)\\nend\\n\\nexample = %Q{&lt;% listing \\\"db\\\/migrate\\\/[date]_create_purchases.rb\\\", :id =&gt; \\\"ch01_292\\\" do %&gt;\\n&lt;![CDATA[class CreatePurchases &lt; ActiveRecord::Migration\\n  def change\\n    create_table :purchases do |t|\\n      t.string :name\\n      t.float :cost\\n      t.timestamps\\n    end\\n  end\\nend]]&gt;\\n&lt;% end %&gt;}\\n\\nchapter = ERB.new(example, nil, nil, \\\"@output\\\")\\np chapter.result(binding)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><erb>","commentcount":"0","accepted":""},"9929886":{"id":"9929886","date":"2012-03","score":"0","body":"\"<p><code>action_web_service<\\\/code> was deprecated for a very good reason: it was terrible.<\\\/p>\\n\\n<p>I would recommend generating an JSON API on the applications that need to communicate to each other.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"9945611":{"id":"9945611","date":"2012-03","score":"9","body":"\"<p>You're not loading the <code>jquery_ujs.js<\\\/code> file from <code>jquery-rails<\\\/code>. Ensure that you're requiring both <code>jquery<\\\/code> and <code>jquery_ujs<\\\/code> in your layout.<\\\/p>\\n\\n<p>These two files are typically included in the <code>app\\\/assets\\\/javascripts\\\/application.js<\\\/code> file, which contains this content:<\\\/p>\\n\\n<pre><code>\\\/\\\/= require jquery\\n\\\/\\\/= require jquery_ujs\\n\\\/\\\/= require_tree .\\n<\\\/code><\\\/pre>\\n\\n<p>If you're not including this in your layout with this line:<\\\/p>\\n\\n<pre><code>&lt;%= javascript_include_tag \\\"application\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Then both the <code>jquery.js<\\\/code> and <code>jquery_ujs.js<\\\/code> files won't be included, and so the <code>:method =&gt; :delete<\\\/code> requests will not work as intended.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery><ruby-on-rails><ruby-on-rails-3>","commentcount":"3","accepted":"yes"},"9945688":{"id":"9945688","date":"2012-03","score":"4","body":"\"<p>The <code>script\\\/rails<\\\/code> file in your extension is wrong and should be <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/1-0-stable\\\/cmd\\\/lib\\\/spree_cmd\\\/templates\\\/extension\\\/script\\\/rails.tt\\\" rel=\\\"nofollow\\\">this<\\\/a>. This is due to a bug in Spree that will be fixed in the next release.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<spree>","commentcount":"0","accepted":""},"9945761":{"id":"9945761","date":"2012-03","score":"29","body":"\"<p>As Robin said, that's invalid HTML. You probably shouldn't do that.<\\\/p>\\n\\n<p>I personally would put an <code>onclick<\\\/code> event on the <code>tr<\\\/code> using jQuery. The <code>tr<\\\/code> element would look like this:<\\\/p>\\n\\n<pre><code>&lt;tr data-link=\\\"&lt;%= edit_scout_path(scout) %&gt;\\\"&gt;\\n   ...\\n&lt;\\\/tr&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>And then the associated JavaScript (placed in a file such as <code>app\\\/assets\\\/javascripts\\\/scouts.js<\\\/code>) would be something like this:<\\\/p>\\n\\n<pre><code>$(\\\"tr[data-link]\\\").click(function() {\\n  window.location = this.data(\\\"link\\\")\\n})\\n<\\\/code><\\\/pre>\\n\\n<p>This would make all <code>tr<\\\/code> elements that have a <code>data-link<\\\/code> attribute act as if they were URLs in the most unobtrusive way I can think possible.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"9","accepted":"yes"},"9945952":{"id":"9945952","date":"2012-03","score":"0","body":"\"<p>Rails doesn't have any particular charting tools built in. I've heard of people having great success with libraries such as <a href=\\\"http:\\\/\\\/mbostock.github.com\\\/d3\\\/\\\" rel=\\\"nofollow\\\">d3.js<\\\/a>, however. Perhaps take a look into using that to create the data.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><redis>","commentcount":"0","accepted":""},"9946001":{"id":"9946001","date":"2012-03","score":"5","body":"\"<p>If you're attempting to check that the data is in the database after the test, this won't be the case due to how the tests are run.<\\\/p>\\n\\n<p>Tests for Rails are run inside database transactions (by default<sup>1<\\\/sup>) and so it will go ahead and create the data inside the test and run all your assertions, but once it's all said and done it's going to rollback that transaction leaving the database in a pristine state.<\\\/p>\\n\\n<p>The reason for doing this is so that the database is always clean and so that you don't have records just lying about which could potentially alter the outcome of tests.<\\\/p>\\n\\n<hr>\\n\\n<p><sup>1<\\\/sup> Although this can be changed by disabling the setting (I forget what this is in Test::Unit land), or by using tools like <a href=\\\"https:\\\/\\\/github.com\\\/bmabey\\\/database_cleaner\\\">database_cleaner<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><unit-testing>","commentcount":"0","accepted":"yes"},"9977465":{"id":"9977465","date":"2012-04","score":"-2","body":"\"<p>If it's static pages in the traditional sense, then that won't work. Static pages completely bypass the Rails stack and are served directly from the file system. What I would recommend doing is still caching these as static pages, but having a controller that checks the permission and then serves the static page.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><cancan>","commentcount":"1","accepted":""},"10046339":{"id":"10046339","date":"2012-04","score":"2","body":"\"<p>First, you would need to create a route in your <code>config\\\/routes.rb<\\\/code> file that would route to an action that would display this information. Something like this:<\\\/p>\\n\\n<pre><code>resources :users do\\n  collection do\\n    get :admins\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>That would route to the <code>admins<\\\/code> action inside the <code>UsersController<\\\/code>, and so that's what you'll need to define next. It would go like this:<\\\/p>\\n\\n<pre><code>def admins\\n  @users = User.admins\\n  render \\\"users\\\/index\\\"\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Because the list of admins shouldn't be too different from the users list, you can just assign all the admins to <code>@users<\\\/code> and then render the <code>users\\\/index<\\\/code> template... if it exists. I'm probably assuming too much here, but it's one way of doing it.<\\\/p>\\n\\n<p>Now, there's no <code>admins<\\\/code> method on your <code>User<\\\/code> class and so you'll need to define that. One way to do that is with a scope, like this:<\\\/p>\\n\\n<pre><code>scope :admins, where(:admin =&gt; true)\\n<\\\/code><\\\/pre>\\n\\n<p>This will define the <code>admins<\\\/code> method on the <code>User<\\\/code> class, returning a scope of all users who are admins. Scopes are cool, you should look into what else they can do.<\\\/p>\\n\\n<p>Alternatively, you can define a class method:<\\\/p>\\n\\n<pre><code>def self.admins\\n  where(:admin =&gt; true)\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":""},"10046379":{"id":"10046379","date":"2012-04","score":"2","body":"\"<p>You should be using this query instead<\\\/p>\\n\\n<pre><code>@taxon.products.active\\n<\\\/code><\\\/pre>\\n\\n<p>This will not only <em>not<\\\/em> show products that are deleted, but will also <em>not<\\\/em> show products that have an <code>available_on<\\\/code> date set to after today.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<spree>","commentcount":"0","accepted":"yes"},"10056536":{"id":"10056536","date":"2012-04","score":"4","body":"\"<p>We do use <code>respond_to<\\\/code> for the first version of the API in Chapter 13, but to demonstrate how to mount a Rack app in Chapter 18, we built a Sinatra app for that. There's no particular benefit to doing it this way, it was more to demonstrate that a) there's more than one way to skin the API cat and b) how to mount an application into Rails.<\\\/p>\\n\\n<p>You wouldn't have to maintain a separate codebase so to speak, as the Sinatra app would be inside your Rails application, in the <code>lib<\\\/code> directory. It would be the same as if the V2 of the API were just inside another directory of <code>app\\\/controllers\\\/api\\\/v2<\\\/code> or something similar.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><api><rest><sinatra>","commentcount":"3","accepted":"yes"},"10058736":{"id":"10058736","date":"2012-04","score":"4","body":"\"<p>In my opinion, you're using Git in a way that Git should be used for. You have two versions of the same files and you want to maintain each \\\"version\\\" separately, as a branch.<\\\/p>\\n\\n<p>I assume that when you're ready to merge the changes from staging to master you simply do something like <code>git merge staging<\\\/code>\\\/<code>git rebase staging<\\\/code> inside the <code>master<\\\/code> branch and go from there.<\\\/p>\\n\\n<p>You're not using Git wrong at all.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"1","accepted":""},"10058772":{"id":"10058772","date":"2012-04","score":"1","body":"\"<p>I think you're going about this in the wrong way. <\\\/p>\\n\\n<p><strong>First: I really hope that you're not calling a model <code>Thread<\\\/code>, as that would conflict with the Ruby class <code>Thread<\\\/code>. If you are, choose a different word<\\\/strong>.<\\\/p>\\n\\n<p>Now with the \\\"please aim the gun <em>away<\\\/em> from your foot\\\" message out of the way...<\\\/p>\\n\\n<hr>\\n\\n<p>You shouldn't be calling out to the <code>MessagesController<\\\/code> to create a new message for the controller. Instead, you should be using nested attributes in the new thread form:<\\\/p>\\n\\n<pre><code>&lt;%= form_for @thread do |f| %&gt;\\n  &lt;%= f.fields_for :messages do |message| %&gt;\\n    &lt;%= render \\\"messages\\\/form\\\", :message =&gt; message %&gt;\\n  &lt;% end %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Inside your <code>DiscussionThread<\\\/code> (I am assuming the name of it here) model, you would then have these lines:<\\\/p>\\n\\n<pre><code>has_many :messages\\naccepts_nested_attributes_for :messages\\n<\\\/code><\\\/pre>\\n\\n<p>You may have to add <code>messages_attributes<\\\/code> to the <code>attr_accessible<\\\/code> attributes in this model too.<\\\/p>\\n\\n<p>This tells the <code>DiscussionThread<\\\/code> model that instances can accept attributes for the <code>messages<\\\/code> association too. In your <code>ThreadsController<\\\/code> the action would then remain the same.<\\\/p>\\n\\n<p>For more information about nested attributes, I recommend watching the Railscasts on <a href=\\\"http:\\\/\\\/railscasts.com\\\/episodes\\\/196-nested-model-form-part-1\\\" rel=\\\"nofollow\\\">Nested Forms #1<\\\/a> and <a href=\\\"http:\\\/\\\/railscasts.com\\\/episodes\\\/197-nested-model-form-part-2\\\" rel=\\\"nofollow\\\">Nested Forms #2<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><controller>","commentcount":"1","accepted":"yes"},"10128849":{"id":"10128849","date":"2012-04","score":"2","body":"\"<p>You can do this by overriding the <code>app\\\/views\\\/layouts\\\/spree_application.html.erb<\\\/code> by placing an identically named file inside your application's <code>app\\\/views<\\\/code> directory.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><views><spree>","commentcount":"1","accepted":""},"10128861":{"id":"10128861","date":"2012-04","score":"1","body":"\"<p>Spree does not put files inside the <code>app<\\\/code> directory, but works as an engine. For more information about engines, please read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/engines.html\\\" rel=\\\"nofollow\\\">Engines Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree>","commentcount":"0","accepted":"yes"},"10155390":{"id":"10155390","date":"2012-04","score":"1","body":"\"<p>Factories allow you to put test setup in one file. For instance, my project factory is in <code>spec\\\/support\\\/factories\\\/project_factory.rb<\\\/code>. <\\\/p>\\n\\n<p>If I want to change the default title or perhaps add another attribute, I do that in one file. With AR splattered everywhere throughout my tests, I would need to change that in every single instance of that use.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><factory-girl>","commentcount":"0","accepted":""},"10162942":{"id":"10162942","date":"2012-04","score":"2","body":"\"<p>The method comes from the <a href=\\\"https:\\\/\\\/github.com\\\/ryanb\\\/cancan\\\" rel=\\\"nofollow\\\">Cancan<\\\/a> gem. It's used to ensure that the <code>current_user<\\\/code> is authorized to perform the actions within any controller that inherits from <code>Spree::Admin::BaseController.<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><authorization><cancan><spree>","commentcount":"0","accepted":"yes"},"10162959":{"id":"10162959","date":"2012-04","score":"1","body":"\"<p>I suspect you're getting this error because you're not requiring the file anywhere. There's two ways you can get around this.<\\\/p>\\n\\n<p>The first is to actually require the file that defines your constant, in a place like <code>config\\\/application.rb<\\\/code> and before the constant is referenced.<\\\/p>\\n\\n<p>The second is to add the <code>lib<\\\/code> directory to the <code>autoload_paths<\\\/code> for your application (<a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/guides\\\/blob\\\/master\\\/rails-lib-files.md\\\" rel=\\\"nofollow\\\">which I explain here<\\\/a>) and so that when this constant is referenced, the matching file wil be loaded.<\\\/p>\\n\\n<p>Your choice.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rack><middleware><rack-middleware>","commentcount":"2","accepted":""},"10162970":{"id":"10162970","date":"2012-04","score":"0","body":"\"<p>I would suggest using something like <a href=\\\"https:\\\/\\\/github.com\\\/svenfuchs\\\/routing-filter\\\" rel=\\\"nofollow\\\">routing-filter<\\\/a> instead of a custom solution to this problem. Additionally, calling the parameter \\\"id\\\" seems <em>weird<\\\/em>. A better name for it would be \\\"locale\\\", no?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><ruby-on-rails-3.1>","commentcount":"2","accepted":""},"10176176":{"id":"10176176","date":"2012-04","score":"0","body":"\"<p>I would guess this is because you're attempting to do something like this:<\\\/p>\\n\\n<pre><code>@recipe.items.description\\n<\\\/code><\\\/pre>\\n\\n<p>When, if you just want the description of each of the items:<\\\/p>\\n\\n<pre><code>@recipe.items.map(&amp;:description)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"10192369":{"id":"10192369","date":"2012-04","score":"1","body":"\"<p>Simple answer: don't.<\\\/p>\\n\\n<p>Store it on the file system and put a reference to that path as a string field in your database. When you need to load the file, perform a <code>File.read<\\\/code> on it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><csv>","commentcount":"0","accepted":""},"10193465":{"id":"10193465","date":"2012-04","score":"1","body":"\"<p>Yes, you need to set the <code>current_password<\\\/code> before you set the <code>password<\\\/code> and <code>password_confirmation<\\\/code> fields. This is to stop the user from changing the password without originally knowing the password.<\\\/p>\\n\\n<p>Therefore, you would need to do something like this:<\\\/p>\\n\\n<pre><code>admin.current_password = 'password'\\nadmin.password = 'Anything1234'\\nadmin.password_confirmation = admin.password\\nadmin.save\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><hobo>","commentcount":"1","accepted":""},"10214642":{"id":"10214642","date":"2012-04","score":"7","body":"\"<p>In an engine I help develop, <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/forem\\\">Forem<\\\/a>, we use <code>mattr_accessors<\\\/code> on the top-level constant like this:<\\\/p>\\n\\n<p><strong>lib\\\/forem.rb<\\\/strong><\\\/p>\\n\\n<pre><code>module Forem\\n  mattr_accessor :user_class, :theme, :formatter, :default_gravatar, :default_gravatar_image,\\n                 :user_profile_links, :email_from_address, :autocomplete_field,\\n                 :avatar_user_method, :per_page\\n...\\n<\\\/code><\\\/pre>\\n\\n<p>Then inside <code>config\\\/initializers<\\\/code> we ask users to set them up like this:<\\\/p>\\n\\n<pre><code>Forem.user_class = 'User'\\nForem.autocomplete_field = :login\\n<\\\/code><\\\/pre>\\n\\n<p>With a short gem name, there's not much difference between this solution and the other one I will propose.<\\\/p>\\n\\n<hr>\\n\\n<p><strong>Solution #2<\\\/strong><\\\/p>\\n\\n<p>Still use <code>mattr_accessors<\\\/code> on your top-level constant but offer a <code>config<\\\/code> method on this module that takes a block and yields the object:<\\\/p>\\n\\n<pre><code>module ReallyComplicatedGemName\\n  mattr_accessor :....\\n  def self.config(&amp;block)\\n    yield(self)\\n  end\\n...\\n<\\\/code><\\\/pre>\\n\\n<p>This way people can do:<\\\/p>\\n\\n<pre><code>ReallyComplicatedGemName.config do |config|\\n  config.user_class = \\\"User\\\"\\n  ...\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rubygems>","commentcount":"1","accepted":"yes"},"10414110":{"id":"10414110","date":"2012-05","score":"2","body":"\"<p>This looks like the feature from the first edition of <em>Rails 3 in Action<\\\/em>, which I'm currently re-writing into a second edition. The second edition's feature goes like this:<\\\/p>\\n\\n<pre><code>feature 'Signing in' do\\n  before do\\n    Factory(:user, :email =&gt; \\\"ticketee@example.com\\\")\\n  end\\n\\n  scenario 'Signing in via confirmation' do\\n    open_email \\\"ticketee@example.com\\\", :with_subject =&gt; \\\/Confirmation\\\/\\n    click_first_link_in_email\\n    page.should have_content(\\\"Your account was successfully confirmed\\\")\\n    page.should have_content(\\\"Signed in as ticketee@example.com\\\")\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This is using Capybara's new feature syntax, which for all intents and purposes is the same as RSpec's <code>context<\\\/code> blocks. By using a <code>before<\\\/code> you set up a user that you can use inside this feature. Inside the scenario, you use the <code>open_email<\\\/code> method (provided by the email_spec gem) to open the email, and the <code>click_first_link_in_email<\\\/code> method also provided by that gem to perform those two steps.<\\\/p>\\n\\n<p>That then takes you to a page where you should be able to see the two messages as so desired.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><testing><rspec><cucumber>","commentcount":"1","accepted":"yes"},"10467313":{"id":"10467313","date":"2012-05","score":"2","body":"\"<p>Factory Girl is not what is supposed to be deleting the data, it's usually RSpec (by way of the <code>use_transactional_fixtures<\\\/code> option) or another tool like <code>database_cleaner<\\\/code>.<\\\/p>\\n\\n<p>If your test database is not being cleaned out correctly, then I would recommend using the <a href=\\\"https:\\\/\\\/github.com\\\/bblimke\\\/database_cleaner\\\" rel=\\\"nofollow\\\"><code>database_cleaner<\\\/code><\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><factory-girl>","commentcount":"1","accepted":"yes"},"10490420":{"id":"10490420","date":"2012-05","score":"1","body":"\"<p>Use the <code>distance_of_time_in_words<\\\/code> helper:<\\\/p>\\n\\n<pre><code>distance_of_time_in_words(date1, date2)\\n<\\\/code><\\\/pre>\\n\\n<p>If you want greater accuracy, I wrote a gem called <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/dotiw\\\" rel=\\\"nofollow\\\"><code>dotiw<\\\/code><\\\/a> which would allow something like this:<\\\/p>\\n\\n<pre><code>distance_of_time_in_words(date1, date2, false, :only =&gt; [\\\"days\\\"]\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":""},"10558940":{"id":"10558940","date":"2012-05","score":"2","body":"\"<p><code>Organisation.find_by_address_id(params[:id])<\\\/code> will return a single object, or <code>nil<\\\/code> if one without that <code>address_id<\\\/code> does not exist.<\\\/p>\\n\\n<p>Perhaps you meant <code>Organisation.find_all_by_address_id(params[:id])<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"10561755":{"id":"10561755","date":"2012-05","score":"0","body":"\"<p>Don't use <code>sudo<\\\/code> to perform any gem tasks, as that is updating the system version of Ruby, which is probably not what you want to do.<\\\/p>\\n\\n<p>I would recommend using RVM to set up your Ruby installation and then installing Rails using just <code>gem install rails<\\\/code>.<\\\/p>\\n\\n<p>If you're using Ubuntu then I have <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\/\\\" rel=\\\"nofollow\\\">a guide for that<\\\/a> and I also have one for <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2011\\\/06\\\/mac-os-x-ruby-rvm-rails-and-you\\\/\\\" rel=\\\"nofollow\\\">Mac OS X<\\\/a> too.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":""},"10567358":{"id":"10567358","date":"2012-05","score":"2","body":"\"<p>I wouldn't rely on GoDaddy for something like this. Instead, use a service such as <a href=\\\"http:\\\/\\\/sendgrid.com\\\" rel=\\\"nofollow\\\">SendGrid<\\\/a> which allows you to send 200 emails free every month or at an affordable rate per month if you want to send more than that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><email><godaddy>","commentcount":"1","accepted":""},"10592087":{"id":"10592087","date":"2012-05","score":"1","body":"\"<p>I think you're missing the curly brace for the map before the detect. It should be this:<\\\/p>\\n\\n<pre><code>@response['hits']['hits'].map { |item| records[item['_type']] }.detect { |record| record.id.to_s == item['_id'].to_s }\\n<\\\/code><\\\/pre>\\n\\n<p>I don't know the codebase well enough to know this for sure, but I think <code>records[item['_type']]<\\\/code> is going to be returning one of those <code>AuthoredHistory<\\\/code> objects, which don't have the <code>detect<\\\/code> method on them.<\\\/p>\\n\\n<p>The <code>detect<\\\/code> method is used in <code>Enumerable<\\\/code> collections in Ruby, and that's kind of object that <code>map<\\\/code> returns (it'll return an <code>Array<\\\/code>) object. Therefore, the curly brace was in the wrong position.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><elasticsearch><tire>","commentcount":"1","accepted":""},"10592110":{"id":"10592110","date":"2012-05","score":"5","body":"\"<p>Instead of running <code>rake db:migrate RAILS_ENV=test<\\\/code> run <code>rake db:test:prepare<\\\/code> instead.<\\\/p>\\n\\n<p>This is because <code>rake db:migrate<\\\/code> will run <em>all<\\\/em> the migrations against your test database, which could take a very long time if you had a lot of migrations. The <code>db:test:prepare<\\\/code> task will not do that, instead it will just set up the test database with the schema from <code>db\\\/schema.rb<\\\/code>.<\\\/p>\\n\\n<p>Give that a shot and see if that works.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><github><rake><travis-ci>","commentcount":"0","accepted":""},"10677466":{"id":"10677466","date":"2012-05","score":"3","body":"\"<p>I would personally <em>never<\\\/em> put a require statement in a view, because 1) it's ugly and 2) what if another view needed that require?<\\\/p>\\n\\n<p>A better place for this is in <code>config\\\/application.rb<\\\/code> at the bottom, or in a file in <code>config\\\/initializers<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><templates><erb><require>","commentcount":"1","accepted":""},"10747692":{"id":"10747692","date":"2012-05","score":"39","body":"\"<p>The <code>where<\\\/code> method returns an <code>ActiveRecord::Relation<\\\/code> object, and by itself this object does not issue a database query. It's <em>where<\\\/em> you use this object that matters.<\\\/p>\\n\\n<p>In the console, you're probably doing this:<\\\/p>\\n\\n<pre><code>@person = Person.where(name: \\\"Jason\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>And then <em>blammo<\\\/em> it issues a database query and returns what appears to be an array of everyone named Jason. Yay, Active Record!<\\\/p>\\n\\n<p>But then you do something like this:<\\\/p>\\n\\n<pre><code>@person = Person.where(name: \\\"Jason\\\").where(age: 26)\\n<\\\/code><\\\/pre>\\n\\n<p>And then that issues another query, but this one's for people who are called Jason who are 26.  But it's only issuing <em>one<\\\/em> query, so where'd the other query go?<\\\/p>\\n\\n<hr>\\n\\n<p>As others have suggested, this is happening because the <code>where<\\\/code> method returns a proxy object. It doesn't actually perform a query and return a dataset unless it's asked to do that.<\\\/p>\\n\\n<p>When you run <em>anything<\\\/em> in the console, it's going to output the inspected version of the outcome of whatever it is you ran. If you put <code>1<\\\/code> in the console and hit enter, you'll get <code>1<\\\/code> back because <code>1.inspect<\\\/code> is <code>1<\\\/code>. Magic! Same goes for <code>\\\"1\\\"<\\\/code>. A variety of other objets don't have an <code>inspect<\\\/code> method defined and so Ruby falls back to the one on <code>Object<\\\/code> which returns something <em>ghastly<\\\/em> like <code>&lt;Object#23adbf42560&gt;<\\\/code>.<\\\/p>\\n\\n<p>Every single <code>ActiveRecord::Relation<\\\/code> object has the <code>inspect<\\\/code> method defined on it so that it causes a query. When you write the query in your console, IRB will call <code>inspect<\\\/code> on the return value from that query and output something almost human readable, like the Array that you'd see.<\\\/p>\\n\\n<hr>\\n\\n<p>If you were just issuing this in a standard Ruby script, then no query would be executed until the object was inspected (via <code>inspect<\\\/code>) or was iterated through using <code>each<\\\/code>, or had the <code>to_a<\\\/code> method called on it. <\\\/p>\\n\\n<p>Up until one of those three things happen, you can chain as many <code>where<\\\/code> statements on it as you will like and then when you <em>do<\\\/em> call <code>inspect<\\\/code>, <code>to_a<\\\/code> or <code>each<\\\/code> on it, then it will finally execute that query.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"0","accepted":"yes"},"10827474":{"id":"10827474","date":"2012-05","score":"4","body":"\"<p>The problem is because your <code>has_many :people<\\\/code> association is like this in your <code>Interest<\\\/code> model:<\\\/p>\\n\\n<pre><code>has_many :people, :through =&gt; :people_interest\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>person<\\\/code> association inside your <code>PersonInterest<\\\/code> model is surely enough <code>polymorphic<\\\/code>, but <code>has_many :through<\\\/code> doesn't respect that.<\\\/p>\\n\\n<p>Therefore I would recommend attempting to find another way to get all the people. You could do this hacky way:<\\\/p>\\n\\n<pre><code>def people\\n  person_interests.includes(:person).map(&amp;:people).flatten.uniq\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><associations><rails-admin>","commentcount":"1","accepted":"yes"},"10827837":{"id":"10827837","date":"2012-05","score":"12","body":"\"<p>This <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/4667597\\\/understanding-mongodb-bson-document-size-limit\\\">other question<\\\/a> should answer your question:<\\\/p>\\n\\n<blockquote>\\n  <p>Documents larger than 4MB (when converted to BSON) cannot be saved to the database. This is a somewhat arbitrary limit (and may be raised in the future); it is mostly to prevent bad schema design and ensure consistent performance.<\\\/p>\\n<\\\/blockquote>\\n\\n<p>Note that in the picked answer for that question the commenter mentions that it could be as large as 8mb or 16mb now. <\\\/p>\\n\\n<p>So to answer your question, it's not necessarily that a single string can only be a certain length, but rather that the <em>whole document<\\\/em> must be under 16MB.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><mongodb><mongoid>","commentcount":"2","accepted":"yes"},"10858715":{"id":"10858715","date":"2012-06","score":"1","body":"\"<p>You can iterate through them using a partial:<\\\/p>\\n\\n<pre><code>&lt;%= render @article.comments %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Inside the partial, you can reference the count of the comments with <code>comment_count<\\\/code>. This is an automatic feature that is provided by Rails.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><attributes><comments>","commentcount":"1","accepted":""},"10874734":{"id":"10874734","date":"2012-06","score":"0","body":"\"<p>When you're getting that error, it's happenning becaue you're calling <code>request<\\\/code> inside <code>ApplicationController<\\\/code>'s class instead of inside a method. Are you sure that the code you've shown us is correct?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><subdomains>","commentcount":"1","accepted":""},"10907410":{"id":"10907410","date":"2012-06","score":"1","body":"\"<p>I doubt that this is actually adding data to your database with extra spaces. <\\\/p>\\n\\n<p>This is just a CSS issue, where your input field is designed to take up a certain percentage of the containing element or something like that. Hard to tell without seeing the exact CSS behind the input field.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><twitter-bootstrap><best-in-place>","commentcount":"0","accepted":""},"10967820":{"id":"10967820","date":"2012-06","score":"0","body":"\"<p>This is not working because you are stubbing the method <code>current_user<\\\/code> on the <code>ApplicationController<\\\/code> class, and not an instance of that class.<\\\/p>\\n\\n<p>I <em>would<\\\/em> suggest stubbing it (correctly) on an instance of that class, but your test appears to be an integration test rather than a controller test.<\\\/p>\\n\\n<p>What I would do instead then is as <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/a\\\/10964988\\\/15245\\\">Art Shayderov<\\\/a> mentioned is to emulate the sign-in action for a user before attempting to visit a place that requires an authenticated user.<\\\/p>\\n\\n<pre><code>visit sign_in_path\\nfill_in \\\"Username\\\", :with =&gt; \\\"some_guy\\\"\\nfill_in \\\"Password\\\", :with =&gt; \\\"password\\\"\\nclick_button \\\"Sign in\\\"\\npage.should have_content(\\\"You have signed in successfully.\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>In my applications, I've moved this into a helper method for my tests. This is placed into a file at <code>spec\\\/support\\\/authentication_helpers.rb<\\\/code> and looks like this:<\\\/p>\\n\\n<pre><code>module AuthenticationHelpers\\n  def sign_in_as!(user)\\n    visit sign_in_path\\n    fill_in \\\"Username\\\", :with =&gt; user.username\\n    fill_in \\\"Password\\\", :with =&gt; \\\"password\\\"\\n    click_button \\\"Sign in\\\"\\n    page.should have_content(\\\"You have signed in successfully.\\\")\\n  end\\nend\\n\\nRSpec.configure do |c|\\n  c.include AuthenticationHelpers, :type =&gt; :request\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then in my request specs, I simply call the method to sign in as that particular user:<\\\/p>\\n\\n<pre><code>sign_in_as(user)\\n<\\\/code><\\\/pre>\\n\\n<hr>\\n\\n<p>Now if you want to sign in using a standard controller test, Devise already has helpers for this. I generally include these in the same file (<code>spec\\\/support\\\/authentication_helpers.rb<\\\/code>):<\\\/p>\\n\\n<pre><code> RSpec.configure do |c|\\n   c.include Devise::TestHelpers, :type =&gt; :controller\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can sign in using the helpers like this:<\\\/p>\\n\\n<pre><code> before do\\n   sign_in(:user, user)\\n end\\n\\n it \\\"performs an action\\\" do\\n   get :index\\n end\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><testing><rspec><factory-girl>","commentcount":"2","accepted":""},"10973486":{"id":"10973486","date":"2012-06","score":"4","body":"\"<p>The problem is is indeed because you've got a utf-8 character in there. Put this line at the top of the spec and Ruby will be happy:<\\\/p>\\n\\n<pre><code># encoding: utf-8\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rspec><cucumber><capybara>","commentcount":"0","accepted":"yes"},"10988518":{"id":"10988518","date":"2012-06","score":"1","body":"\"<p>The <code>client_note_path<\\\/code> method expects <em>two, count 'em, two<\\\/em> arguments:<\\\/p>\\n\\n<pre><code>client_note_path(client, note)\\n<\\\/code><\\\/pre>\\n\\n<p>A <code>Client<\\\/code> object and a <code>Note<\\\/code> object. Or an id that represents a <code>Client<\\\/code> and another for a <code>Note<\\\/code> object.<\\\/p>\\n\\n<p>The problem you're having is because you didn't tell it what note you wanted, or you used an array. By using an array, it would make it only receive one argument.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"10991109":{"id":"10991109","date":"2012-06","score":"0","body":"\"<p>Your <code>resources :category<\\\/code> line inside <code>config\\\/routes.rb<\\\/code> should be <code>resources :categories<\\\/code>.<\\\/p>\\n\\n<p>When you're doing <code>resources<\\\/code>, you should always use the pluralized name of the resource so that Rails will automatically singularize it for member routing helpers of that resource, such as <code>edit_category_path(category)<\\\/code>.<\\\/p>\\n\\n<p>It will then use the plural form in routes for collections, like the <code>form_for<\\\/code>. Because the object is new, the form will issue a POST request to <code>\\\/categories<\\\/code> with the form data.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":"yes"},"10991238":{"id":"10991238","date":"2012-06","score":"0","body":"\"<p>You're using a <em>very, very old<\\\/em> syntax there. <code>end_form_tag<\\\/code> was deprecated in Rails 2.<\\\/p>\\n\\n<p>Use this syntax instead: <\\\/p>\\n\\n<pre><code>&lt;%= form_tag :action =&gt; 'process_login' do%&gt;\\n  Username: &lt;%= text_field \\\"user\\\", \\\"fullname\\\" %&gt;&amp;#x00A;\\n  Password: &lt;%= password_field \\\"user\\\", \\\"password\\\" %&gt;&amp;#x00A;\\n  &lt;%= submit_tag %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Whatever guide has you using <code>end_form_tag<\\\/code> is really old and shouldn't be used any more. I would recommend following the <a href=\\\"http:\\\/\\\/railstutorial.org\\\" rel=\\\"nofollow\\\">Rails Tutorial<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<html><ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"11009287":{"id":"11009287","date":"2012-06","score":"2","body":"\"<p>For the <code>user_anniversary_path<\\\/code>, you need to be passing in <em>two<\\\/em> arguments: a <code>User<\\\/code> object (or an id that represents a <code>User<\\\/code> object) and an <code>Anniversary<\\\/code> object (or an id that represents an <code>Anniversary<\\\/code> object). For example, you can do this:<\\\/p>\\n\\n<pre><code>user_anniversary_path(User.first, Anniversary.first)\\n<\\\/code><\\\/pre>\\n\\n<p>Or this:<\\\/p>\\n\\n<pre><code>user_anniversary_path(1, 2)\\n<\\\/code><\\\/pre>\\n\\n<p>Where <code>1<\\\/code> is the <code>id<\\\/code> of the <code>User<\\\/code> object, and <code>2<\\\/code> is the <code>id<\\\/code> of the <code>Anniversary<\\\/code> object. I would really recommend sticking with passing in whole objects to this method.<\\\/p>\\n\\n<p>The reason why it's failing when you try Trent's example is because <code>@anniversary<\\\/code> is nil in the action that you're calling that routing helper in. Just be careful regarding that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1><erb>","commentcount":"1","accepted":""},"11025331":{"id":"11025331","date":"2012-06","score":"2","body":"\"<p>You're missing square brackets around the <code>only<\\\/code> option's value:<\\\/p>\\n\\n<pre><code> before_filter :require_login, :only =&gt; [:new, :edit, :destroy]\\n<\\\/code><\\\/pre>\\n\\n<p>It's not working because the Ruby interpreter doesn't know where the options for only start and the arguments for <code>before_filter<\\\/code> continue. This is case where you need to be explicit about the container.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><login><before-filter>","commentcount":"1","accepted":"yes"},"11183885":{"id":"11183885","date":"2012-06","score":"0","body":"\"<p>That command probably added this line to your <code>config\\\/routes.rb<\\\/code>:<\\\/p>\\n\\n<pre><code> resources :controllers\\n<\\\/code><\\\/pre>\\n\\n<p>Just remove that line, restart your server* and then try again.<\\\/p>\\n\\n<hr>\\n\\n<p>* You shouldn't need to restart as the routes are reloaded per-request, but sometimes weird things happen.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"11183962":{"id":"11183962","date":"2012-06","score":"7","body":"\"<h2><strong>tl;dr<\\\/strong> Use Bundler. It rocks.<\\\/h2>\\n\\n<p>Alright, this is basically down to how dependency resolution works in RubyGems. If you're not terribly familiar with it, <a href=\\\"http:\\\/\\\/xkcd.com\\\/657\\\/\\\">get up to speed real quick like with the Primer panel from this XKCD comic<\\\/a>. RubyGems dependency management and the Primer storyline are very similar in terms of complexity.<\\\/p>\\n\\n<p>When a gem specifies a dependency of, say <code>rails &gt;= 2.1<\\\/code>, when you go to install that gem, RubyGems conveniently ignores all the gems that you've currently got installed and then queries the web API to find the absolute latest version of Rails that's greater than or equal to <code>2.1<\\\/code>. <\\\/p>\\n\\n<p>It will find, as of this writing, version <code>3.2.6<\\\/code>, and so will dutifully install that version of Rails because it fits the dependency requirements. It will also install every single dependency of Rails, and their dependencies, and the sub-sub-sub-sub-dependencies all the way down until there's not a gem left without a dependency installed.<\\\/p>\\n\\n<p>I won't go into exactly how that works because it makes my vision go blurry when I think about it.<\\\/p>\\n\\n<hr>\\n\\n<p>Now, if you were using something that's not pure-RubyGems such as Bundler, you'd be able to have a Gemfile like this:<\\\/p>\\n\\n<pre><code>source 'http:\\\/\\\/rubygems.org'\\ngem 'rails', '2.3.4'\\ngem 'prawnto', '0.1.1'\\n<\\\/code><\\\/pre>\\n\\n<p>And then run <code>bundle install<\\\/code> and then something <em>magical<\\\/em> will happen. Bundler will figure out the dependencies for all the gems specified in the <code>Gemfile<\\\/code>, as well as the gems that they depend on, and then install only those gems. <\\\/p>\\n\\n<p>This means that if you have <code>prawnto<\\\/code> wanting Rails <code>&gt;= 2.1<\\\/code>, it <strong>won't<\\\/strong> install 3.2.6 because there's another dependency saying that Rails <strong>must precisely be<\\\/strong> <code>2.3.4<\\\/code>. So therefore Rails 2.3.4 will be installed.<\\\/p>\\n\\n<p>If you have conflicting versions, with a gem A specifying a dependency on gem B of <code>~&gt; 1.0<\\\/code>, but then gem C specifying a dependency that gem B must be '= 0.5.0', Bundler won't be very happy and will raise an error because the dependencies can't be resolved.<\\\/p>\\n\\n<hr>\\n\\n<p>I'd really recommend using Bundler for all your Rails projects. Even those that are running on Rails 2. There's a <a href=\\\"http:\\\/\\\/gembundler.com\\\/rails23.html\\\">page on the Bundler website<\\\/a> which will get you started with a Rails 2.3 project and Bundler.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rubygems>","commentcount":"0","accepted":"yes"},"11199411":{"id":"11199411","date":"2012-06","score":"1","body":"\"<p>Rather than using hash arguments for the URL, you should really be using URL helpers:<\\\/p>\\n\\n<pre><code>&lt;%= link_to toggle_item_path(item), :remote =&gt; true do %&gt;\\n  &lt;i class=\\\"icon icon-test\\\"&gt;&lt;\\\/i&gt;&lt;b&gt;Toggle&lt;\\\/b&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Not only is this shorter, but Rails will also not get confused what keys belong to what hash.<\\\/p>\\n\\n<p>Read more in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing Guide<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"11253582":{"id":"11253582","date":"2012-06","score":"1","body":"\"<p><a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-2-stable\\\/actionpack\\\/lib\\\/action_view\\\/template\\\/resolver.rb#L39-41\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-2-stable\\\/actionpack\\\/lib\\\/action_view\\\/template\\\/resolver.rb#L39-41<\\\/a><\\\/p>\\n\\n<p>The <code>@cached<\\\/code> variable is modified wherever the <code>cached<\\\/code> method is called: <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-2-stable\\\/actionpack\\\/lib\\\/action_view\\\/template\\\/resolver.rb#L70-90\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-2-stable\\\/actionpack\\\/lib\\\/action_view\\\/template\\\/resolver.rb#L70-90<\\\/a><\\\/p>\\n\\n<p>It will clear all cached templates and load them again from disk, by the looks of things.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"11253602":{"id":"11253602","date":"2012-06","score":"1","body":"\"<p>You could wrap it in a <code>config.to_prepare<\\\/code>  block inside <code>config\\\/application.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>config.to_prepare do\\n  # your code\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This will reload upon every request in development, but only once in production.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"11287683":{"id":"11287683","date":"2012-07","score":"1","body":"\"<p>Author of the book here.<\\\/p>\\n\\n<p>The <code>default :from<\\\/code> line is a mistake. You are unable to set the from address for the emails because GMail will enforce it. You can still set a display name for the email, I think:<\\\/p>\\n\\n<pre><code>default from: \\\"From Ticketee, with love &lt;thecorrectemail@gmail.com&gt;\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"2","accepted":""},"11287980":{"id":"11287980","date":"2012-07","score":"1","body":"\"<p>The correct pluralization for \\\"activity\\\" is \\\"activities\\\". <\\\/p>\\n\\n<p>In your <code>config\\\/routes.rb<\\\/code> you have \\\"activitys\\\", which is wrong.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"11287997":{"id":"11287997","date":"2012-07","score":"-5","body":"\"<p>Why are you testing this using Cucumber? It seems like a level of indirection that is really, really confusing. This would be better tested in RSpec.<\\\/p>\\n\\n<pre><code>describe MyValidatorClass do\\n  let(:user) { &lt;user object&gt; }\\n  let(:post) { &lt;post object&gt; }\\n  it \\\"validates\\\" do\\n    validator = MyValdatorClass.new(user, post)\\n    validator.should be_valid?\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><cucumber>","commentcount":"1","accepted":""},"11303065":{"id":"11303065","date":"2012-07","score":"6","body":"\"<p>I work on Spree as the Community Manager.<\\\/p>\\n\\n<p>We are actually having <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/issues\\\/1378\\\">a discussion<\\\/a> at the moment regarding the translation of things within Spree using I18n. Most things are translated, but there's still a few spiky edges that you may come across. We're looking to make that easier for people.<\\\/p>\\n\\n<p>Now in regards to the attributes on products, that's possible using a plugin built by one of the guys in the community, Tomasz Stachewicz, and is called <a href=\\\"https:\\\/\\\/github.com\\\/tomash\\\/spree_globalize\\\">spree_globalize<\\\/a>. Give it a shot.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><e-commerce><spree>","commentcount":"4","accepted":""},"11303362":{"id":"11303362","date":"2012-07","score":"1","body":"\"<p>You should be defining these routes using the <code>collection<\\\/code> method:<\\\/p>\\n\\n<pre><code>resources :outings do\\n  collection do\\n    get :add_guests\\n    post :add_guests\\n    delete :remove_guests\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>What this will do is define new routes for the specified actions, as well as automatically defining the routing helpers for those routes. For more information please read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><model-view-controller><routes>","commentcount":"0","accepted":""},"11303392":{"id":"11303392","date":"2012-07","score":"4","body":"\"<p>Rails 3.2 added a feature that would allow you to do what you're describing. Simply define this in your model:<\\\/p>\\n\\n<pre><code>attr_accessible accessible_attributes + [:admin], :as =&gt; :admin\\n<\\\/code><\\\/pre>\\n\\n<p>And then in the controller where you want to assign the admin attribute, do this:<\\\/p>\\n\\n<pre><code>User.new(params[:user], :as =&gt; :admin)\\n<\\\/code><\\\/pre>\\n\\n<p>or<\\\/p>\\n\\n<pre><code>user.update_attributes(params[:user], :as =&gt; :admin)\\n<\\\/code><\\\/pre>\\n\\n<p>All the attributes that are listed prior to the <code>attr_accessible<\\\/code> call with <code>:as =&gt; :admin<\\\/code> will be accessible attributes for any Active Record call that supports the <code>:as =&gt; :admin<\\\/code> option.<\\\/p>\\n\\n<p>If you didn't call <code>accessible_attributes<\\\/code> in that definition, then only the attributes defined there will be accessible.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><security>","commentcount":"2","accepted":"yes"},"11305947":{"id":"11305947","date":"2012-07","score":"7","body":"\"<p><em>To make things clear: marcamillion came into #rubyonrails and Freenode and <a href=\\\"https:\\\/\\\/gist.github.com\\\/ebd4002ef068b10c9376\\\">shared his <code>config\\\/routes.rb<\\\/code><\\\/a>. That's where I figured out the error that he was making and then figured out the answer.<\\\/em><\\\/p>\\n\\n<hr>\\n\\n<p>Two things.<\\\/p>\\n\\n<h3>First: Admin root route<\\\/h3>\\n\\n<p>Rather than defining the root route for your <code>admin<\\\/code> namespace like this:<\\\/p>\\n\\n<pre><code>match 'admin' =&gt; 'admin\\\/dashboard#index', :as =&gt; :admin_root\\n<\\\/code><\\\/pre>\\n\\n<p>Define it inside the <code>namespace :admin<\\\/code> call like this:<\\\/p>\\n\\n<pre><code>namespace 'admin' do\\n  root :to =&gt; \\\"dashboard#index\\\"\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This will automatically define it as <code>admin_root_path<\\\/code> and <code>admin_root_url<\\\/code>, so you won't need to do that, and it will automatically prefix the controller with the <code>admin\\\/<\\\/code> prefix, so you won't need to do that either.<\\\/p>\\n\\n<h3>Second: Referencing RegistrantsController<\\\/h3>\\n\\n<p>You have this currently in your <code>config\\\/routes.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>resources :registrants, :controller =&gt; 'portal\\\/registrants' do\\n  resources :registrations\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>What this will do is define resources routes for <code>registrants<\\\/code> correctly using the <code>Portal::RegistrantsController<\\\/code>, but <em>won't<\\\/em> define the nested routes underneath this using <code>Portal::RegistrationsController<\\\/code>. What it <em>will<\\\/em> do is attempt to use <code>RegistrationsController<\\\/code>, <strong>which is why you're getting that error<\\\/strong>.<\\\/p>\\n\\n<p>To fix this, I'd recommend you use the <code>scope<\\\/code> method, like this:<\\\/p>\\n\\n<pre><code>scope :module =&gt; Portal do\\n resources :registrants do\\n  resources :registrations\\n end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>scope<\\\/code> method, when used in this way, will tell Rails that the controllers for the routes inside the block are under the <code>Portal<\\\/code> namespace. This means that it will know that <code>resources :registrants<\\\/code> is for <code>Portal::Registrants<\\\/code> and that <code>resources :registrations<\\\/code> is for <code>Portal::Registrations<\\\/code>, thereby fixing the error that you're seeing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"11322845":{"id":"11322845","date":"2012-07","score":"4","body":"\"<p>There's a recent tutorial here: <a href=\\\"http:\\\/\\\/spin.atomicobject.com\\\/2011\\\/10\\\/24\\\/integrating-paypal-express-with-rails-3-1-part-1\\\/\\\" rel=\\\"nofollow\\\">http:\\\/\\\/spin.atomicobject.com\\\/2011\\\/10\\\/24\\\/integrating-paypal-express-with-rails-3-1-part-1\\\/<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><paypal><activemerchant>","commentcount":"0","accepted":""},"11322867":{"id":"11322867","date":"2012-07","score":"1","body":"\"<p>If you're attempting to create a new <code>Section<\\\/code> object and that's failing, that'd be because you don't have any attributes listed as accessible inside that model. You will need to do that, using a similar call to <code>attr_accessible<\\\/code> as the one you have in your <code>Project<\\\/code> model already.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><mass-assignment>","commentcount":"3","accepted":"yes"},"11327614":{"id":"11327614","date":"2012-07","score":"1","body":"\"<p>There is not a command to replace the name in all those files. You will need to do it manually.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":""},"11335475":{"id":"11335475","date":"2012-07","score":"1","body":"\"<p>You don't have the <code>jquery<\\\/code> and <code>jquery_ujs<\\\/code> libraries included by your <code>application.js<\\\/code> file, or you're not even including your <code>application.js<\\\/code> file in <code>app\\\/views\\\/layouts\\\/application.html.erb<\\\/code>. This is typically done with this line:<\\\/p>\\n\\n<pre><code>&lt;%= javascript_include_tag \\\"application\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":""},"11337029":{"id":"11337029","date":"2012-07","score":"6","body":"\"<p>Form for using the polymorphic routes like that will always use the pluralized path for new records. You will need to be explicit in your form:<\\\/p>\\n\\n<pre><code>form_for([@user, @profile], :url =&gt; user_profile_path(@user))\\n<\\\/code><\\\/pre>\\n\\n<p>Good news though, the <code>create<\\\/code> route is the same as the <code>update<\\\/code> route.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><controller><form-for><nested-resources>","commentcount":"1","accepted":"yes"},"11387117":{"id":"11387117","date":"2012-07","score":"3","body":"\"<p>Changing the column name is the only sensible option out of this. Change it to something like \\\"position\\\".<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<sql><ruby-on-rails><order>","commentcount":"1","accepted":"yes"},"11388343":{"id":"11388343","date":"2012-07","score":"0","body":"\"<p>Remove sqlite3 from your Gemfile. Develop using only the <code>pg<\\\/code> gem, so that you're developing on exactly the same database system as what you're deploying to.<\\\/p>\\n\\n<p>If you're not doing this, then you may run into problems when you transition between the two database systems.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rubygems>","commentcount":"0","accepted":""},"11391175":{"id":"11391175","date":"2012-07","score":"0","body":"\"<p>Your <code>Links<\\\/code> model should be placed at <code>app\\\/models\\\/link.rb<\\\/code> and should be called <code>Link<\\\/code>, not <code>Links<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"11404167":{"id":"11404167","date":"2012-07","score":"2","body":"\"<p>Use <code>scope<\\\/code>:<\\\/p>\\n\\n<pre><code>scope :as =&gt; \\\"mymodule\\\" do\\n  resources :my_resources\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"11405674":{"id":"11405674","date":"2012-07","score":"0","body":"\"<p>Putting the edit route above the other route is the only way to fix this. Routes are matched in a top-down fashion.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":""},"11446620":{"id":"11446620","date":"2012-07","score":"0","body":"\"<p>Orders are created through the API by passing in line items as shown in <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/master\\\/api\\\/spec\\\/controllers\\\/spree\\\/api\\\/v1\\\/orders_controller_spec.rb#L54-63\\\" rel=\\\"nofollow\\\">this test<\\\/a>.<\\\/p>\\n\\n<pre><code>api_post :create, :order =&gt; { \\n  :line_items =&gt; [\\n    { \\n      :variant_id =&gt; variant.to_param,\\n      :quantity =&gt; 5 \\n    }\\n  ]\\n}\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>line_items<\\\/code> parameter is expected to be an array of hashes, consisting of a <code>variant_id<\\\/code> and a <code>quantity<\\\/code> field. The <a href=\\\"http:\\\/\\\/guides.spreecommerce.com\\\/rest.html\\\" rel=\\\"nofollow\\\">documentation<\\\/a> says the request looks like this:<\\\/p>\\n\\n<pre><code>POST \\\/api\\\/orders?order[line_items][0][variant_id]=1&amp;order[line_items[0][quantity]=5\\n<\\\/code><\\\/pre>\\n\\n<p>I hope that helps you understand it better!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<spree>","commentcount":"4","accepted":""},"11446632":{"id":"11446632","date":"2012-07","score":"0","body":"\"<p>Fork the project and add a gemspec.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<gem><spree>","commentcount":"1","accepted":"yes"},"11446804":{"id":"11446804","date":"2012-07","score":"0","body":"\"<p>I've fixed this up by moving the state machine definition to the <code>Spree::Order<\\\/code> class. You can see the work in <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/pull\\\/1743\\\" rel=\\\"nofollow\\\">this pull request<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":""},"11464556":{"id":"11464556","date":"2012-07","score":"1","body":"\"<p>The actual error is a couple of lines down:<\\\/p>\\n\\n<pre><code>2012-07-13T03:41:43+00:00 app[web.8]: ActionView::Template::Error (undefined method `profilepic' for nil:NilClass\\n<\\\/code><\\\/pre>\\n\\n<p>You are calling <code>profilepic<\\\/code> on an object that is <code>nil<\\\/code>, with this code:<\\\/p>\\n\\n<pre><code>post.poster.profilepic_url(:profile_pic) \\n<\\\/code><\\\/pre>\\n\\n<p>Therefore one of your <code>post<\\\/code> objects has a <code>poster<\\\/code> that is nil. Experiment in the console on Heroku (<code>heroku run console<\\\/code>) and see if you can find the post that doesn't have a poster. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><heroku>","commentcount":"10","accepted":""},"11514967":{"id":"11514967","date":"2012-07","score":"2","body":"\"<p>Rack will automatically parse these values if you submit them as typical post parameters to your request. For example:<\\\/p>\\n\\n<pre><code>curl http:\\\/\\\/yoursite.com -d \\\"array[]=somevalue&amp;array[]=othervalue\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>This will then be available as <code>params[:array]<\\\/code> within your application, containing two elements with the values specified.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><serialization>","commentcount":"0","accepted":""},"11514977":{"id":"11514977","date":"2012-07","score":"3","body":"\"<p>The first one is correct, but  isn't working because you're still attempting to do something like this inside your controller:<\\\/p>\\n\\n<pre><code>User.find(params[:username])\\n<\\\/code><\\\/pre>\\n\\n<p>When you should instead be doing this:<\\\/p>\\n\\n<pre><code>User.find_by_username!(params[:username])\\n<\\\/code><\\\/pre>\\n\\n<p>The first one will attempt to find by the primary key of your table, where the second one will, correctly, query on the username field instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rails-routing>","commentcount":"7","accepted":"yes"},"11515600":{"id":"11515600","date":"2012-07","score":"3","body":"\"<p>By default, strings output in Rails views are automatically escaped.<\\\/p>\\n\\n<p>You will need to stop it from escaping it by telling Rails that the string is HTML safe:<\\\/p>\\n\\n<pre><code> \\\"Vote &amp;#9650;\\\".html_safe\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><unicode><erb>","commentcount":"0","accepted":"yes"},"11515652":{"id":"11515652","date":"2012-07","score":"1","body":"\"<p>I don't know of a way to do this through SQL, so I cheated and I have my code <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/forem\\\/blob\\\/master\\\/app\\\/models\\\/forem\\\/post.rb#L116-118\\\" rel=\\\"nofollow\\\">set a <code>last_post_at<\\\/code> attribute whenever a topic is created<\\\/a>.<\\\/p>\\n\\n<p>That way, I can then sort the topics by <code>last_post_at<\\\/code> rather than having to query two tables at once.<\\\/p>\\n\\n<p>I've seen other forum systems do it this way too, and it seems like what you're designing is exactly a forum-like system.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><associations>","commentcount":"0","accepted":"yes"},"11515697":{"id":"11515697","date":"2012-07","score":"1","body":"\"<p>The model is already configured to accept attributes for the <code>products_categories<\\\/code> association. In your form just reference it like this:<\\\/p>\\n\\n<pre><code>&lt;%= f.fields_for :products_categories do |pc| %&gt;\\n  # fields go here\\n<\\\/code><\\\/pre>\\n\\n<p>Remember that you will need to build new objects for the <code>products_categories<\\\/code> association before this form will render anything:<\\\/p>\\n\\n<pre><code>products.products_categories.build\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1>","commentcount":"2","accepted":"yes"},"11551294":{"id":"11551294","date":"2012-07","score":"0","body":"\"<p>The problem is because <code>resources :user<\\\/code> is singular, but the route wants a plural. The routes should be:<\\\/p>\\n\\n<pre><code>resources :users do\\n  resources :cars\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><routing><controller>","commentcount":"0","accepted":""},"11555027":{"id":"11555027","date":"2012-07","score":"1","body":"\"<p>I would recommend just installing these gems manually to stop this error from appearing.<\\\/p>\\n\\n<p>You could also look into using <a href=\\\"http:\\\/\\\/gembundler.com\\\" rel=\\\"nofollow\\\">Bundler<\\\/a> to manage the gem dependencies for your application. There's a section on <a href=\\\"http:\\\/\\\/gembundler.com\\\/rails23.html\\\" rel=\\\"nofollow\\\">using Bundler with Rails 2.3 here<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"11570531":{"id":"11570531","date":"2012-07","score":"2","body":"\"<p>I would not override the <code>RegistrationsController<\\\/code> to add an update action. I would have a completely separate <code>UsersController<\\\/code> that defines an <code>update<\\\/code> action that takes the parameters for updating a user. <\\\/p>\\n\\n<p>Inside Spree (the thing I work on) we've got <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/d67f8826d8fa30d768bc25297fd67c5ae79264b0\\\/core\\\/app\\\/controllers\\\/spree\\\/checkout_controller.rb#L15-37\\\" rel=\\\"nofollow\\\">an <code>update<\\\/code> action on <code>CheckoutController<\\\/code><\\\/a> that works similar to how you want your users update action to work. Check it out.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><devise>","commentcount":"3","accepted":"yes"},"11621147":{"id":"11621147","date":"2012-07","score":"0","body":"\"<p>This issue is happening because the wrong version of Spree is being installed when you run <code>bundle install<\\\/code>.<\\\/p>\\n\\n<p>Specify the correct dependency in your Gemfile like this:<\\\/p>\\n\\n<pre><code>gem 'spree', '1.1.2'\\n<\\\/code><\\\/pre>\\n\\n<p>And then run <code>bundle install<\\\/code> again.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><spree>","commentcount":"1","accepted":""},"11622022":{"id":"11622022","date":"2012-07","score":"1","body":"\"<p>There's the <code>distance_of_time_in_words<\\\/code> helper for Rails which is kind of \\\"vague\\\" when it comes to times, so a friend and I re-wrote it into a gem called <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/dotiw\\\" rel=\\\"nofollow\\\"><code>dotiw<\\\/code><\\\/a> which would provide what you're after.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"11640444":{"id":"11640444","date":"2012-07","score":"3","body":"\"<p>This error is happening because the acts_as_tenant is (mistakenly) creating a validation for a <code>user_id<\\\/code> field on your <code>User<\\\/code> model. You can  see this validator if you run this code inside <code>rails c<\\\/code>:<\\\/p>\\n\\n<pre><code> User._validators\\n<\\\/code><\\\/pre>\\n\\n<p>I would recommend to switch to the <a href=\\\"https:\\\/\\\/github.com\\\/bradrobertson\\\/apartment\\\" rel=\\\"nofollow\\\">apartment<\\\/a> gem which appears to be more maintained than acts_as_tenant.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"11661073":{"id":"11661073","date":"2012-07","score":"0","body":"\"<p>The <code>sign_in<\\\/code> method is from Devise. You can use this method in any controller of your application.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><spree>","commentcount":"1","accepted":""},"11771077":{"id":"11771077","date":"2012-08","score":"0","body":"\"<p>Your constant should be defined inside a file with a lowercase name:<\\\/p>\\n\\n<pre><code>app\\\/models\\\/my_object.rb\\n<\\\/code><\\\/pre>\\n\\n<p>Not:<\\\/p>\\n\\n<pre><code>app\\\/models\\\/MyObject.rb\\n<\\\/code><\\\/pre>\\n\\n<p>This is so that Rails's autoloading works sufficiently.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"11805271":{"id":"11805271","date":"2012-08","score":"0","body":"\"<p>On line 44 of <code>coupon.rb<\\\/code> you are calling <code>completed_at<\\\/code> on a <code>Time<\\\/code> object. I don't know which line this is from your code, but that should be enough to get you through.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><controller><activesupport>","commentcount":"0","accepted":"yes"},"11840239":{"id":"11840239","date":"2012-08","score":"2","body":"\"<p>You're using the private git link for that repository:<\\\/p>\\n\\n<pre><code>git@github.com...\\n<\\\/code><\\\/pre>\\n\\n<p>rather than:<\\\/p>\\n\\n<pre><code>git:\\\/\\\/github.com...\\n<\\\/code><\\\/pre>\\n\\n<p>Because the Heroku shell isn't authorized to \\\"privately\\\" clone that GitHub repository, attempting to run <code>bundle install<\\\/code> on Heroku will fail. Change that link to the public clone URL.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><heroku><gem><bundler>","commentcount":"1","accepted":"yes"},"11895825":{"id":"11895825","date":"2012-08","score":"0","body":"\"<p><code>params[:def_lang]<\\\/code> will only be available for the sign up request, not for subsequent requests. You probably want to get this to use <code>current_user &amp;&amp; current_user.locale<\\\/code> rather than checking for <code>params[:def_lang]<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<internationalization><e-commerce><locale><spree>","commentcount":"0","accepted":""},"11945019":{"id":"11945019","date":"2012-08","score":"1","body":"\"<p>I would recommend, along with jbarket, to not build your plugin into your application. Instead, build it as an engine (following <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/engines.html\\\" rel=\\\"nofollow\\\">this guide about engines<\\\/a>) and maintain it as a separate entity that your application depends on in its <code>Gemfile.<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><model-view-controller><directory>","commentcount":"0","accepted":""},"12004453":{"id":"12004453","date":"2012-08","score":"0","body":"\"<p>A user never needs to have many projects, because the way that projects are shown to a user is through a scope on the <code>Project<\\\/code> model. If you wanted to have this association, then you will need to have a <code>user_id<\\\/code> attribute on the <code>Project<\\\/code> instances.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><associations><has-many>","commentcount":"5","accepted":"yes"},"12075315":{"id":"12075315","date":"2012-08","score":"8","body":"\"<p>Re-opening the module will work just as well:<\\\/p>\\n\\n<pre><code>module Spree\\n  module BaseHelper\\n   def taxons_tree(root_taxon, current_taxon, max_level = 1)\\n      ...\\n   end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>There's no particular reason to use <code>class_eval<\\\/code> and <code>module_eval<\\\/code>, it's just been the habit in the Spree project for a very long time.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<helper><spree><overriding>","commentcount":"4","accepted":"yes"},"12115857":{"id":"12115857","date":"2012-08","score":"1","body":"\"<p>The issue is because your <code>spec_helper.rb<\\\/code> once referenced <code>FactoryGirl.create(:users)<\\\/code> -- note the plural -- rather than <code>FactoryGirl.create(:user)<\\\/code>. If you saved <code>spec_helper.rb<\\\/code> as you have it in the question, then it will work. The only situation where I can think it would show the error that you're saying that it's showing is that if this file was not saved.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><rake><factory-girl>","commentcount":"0","accepted":""},"12192788":{"id":"12192788","date":"2012-08","score":"1","body":"\"<p>If you want all <code>Gateway<\\\/code> objects for a particular <code>GatewayType<\\\/code>, why not do this?<\\\/p>\\n\\n<pre><code>gateway_type = GatewayType.find(id)\\ngateway_type.gateways\\n<\\\/code><\\\/pre>\\n\\n<p>I assume in this case that you have <code>has_many :gateways<\\\/code> on <code>GatewayType<\\\/code>. The association methods in Rails would allow you to restrict queries to a subset of gateways for a particular <code>GatewayType<\\\/code> object.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"2","accepted":""},"12221568":{"id":"12221568","date":"2012-08","score":"1","body":"\"<p>You have not defined the route for this form. You must define it like this in your routes file:<\\\/p>\\n\\n<pre><code>resources :payments do\\n  resources :transactions\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>For more information please see the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\" rel=\\\"nofollow\\\">Routing Guide<\\\/a>. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rest><routes><partial-views><put>","commentcount":"1","accepted":""},"12221635":{"id":"12221635","date":"2012-08","score":"0","body":"\"<p>I would suspect that the <code>Privacy<\\\/code> object isn't being created. Try calling <code>create!<\\\/code> instead of <code>create<\\\/code>. If it raises an exception, then that means that your <code>Privacy<\\\/code> model has some validations in it.<\\\/p>\\n\\n<p>It would've been super helpful to have seen your models in the first place.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><testing><rspec>","commentcount":"1","accepted":"yes"},"12221762":{"id":"12221762","date":"2012-08","score":"13","body":false,"title":"\"\"","favorite":null,"tags":"<ruby-on-rails><attributes><rails-activerecord>","commentcount":"4","accepted":"yes"},"12226543":{"id":"12226543","date":"2012-09","score":"2","body":"\"<p>Your <code>git<\\\/code> path is wrong. If you go to <a href=\\\"https:\\\/\\\/github.com\\\/logankoester\\\/pusher-client\\\" rel=\\\"nofollow\\\">the repository<\\\/a> on GitHub you'll see the code has moved to <a href=\\\"https:\\\/\\\/github.com\\\/pusher\\\/pusher-ruby-client\\\" rel=\\\"nofollow\\\">here<\\\/a>.<\\\/p>\\n\\n<p>You should do this in your <code>Gemfile<\\\/code> instead:<\\\/p>\\n\\n<pre><code>gem 'pusher-client', :git =&gt; \\\"git:\\\/\\\/github.com\\\/pusher\\\/pusher-ruby-client.git\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><gem><bundle><pusher>","commentcount":"1","accepted":"yes"},"12234239":{"id":"12234239","date":"2012-09","score":"1","body":"\"<pre><code>&lt;%= micropost.user.name %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>You call <code>user<\\\/code> to get to the associated user, then call <code>name<\\\/code> to get that record's <code>name<\\\/code> attribute.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><associations>","commentcount":"0","accepted":""},"12242684":{"id":"12242684","date":"2012-09","score":"0","body":"\"<p>The problem is because your links in <code>layouts\\\/footer<\\\/code> and <code>layouts\\\/header<\\\/code> don't go anywhere. They're <em>clickable<\\\/em> by the spec, but they just go to <code>#<\\\/code> rather than their proper page. If you correct these links then the spec will work.<\\\/p>\\n\\n<p>In <code>app\\\/views\\\/layouts\\\/_footer.html.erb<\\\/code>:<\\\/p>\\n\\n<pre><code>&lt;li&gt;&lt;%= link_to \\\"About\\\",   '\\\/about' %&gt;&lt;\\\/li&gt;\\n&lt;li&gt;&lt;%= link_to \\\"Contact\\\", '\\\/contact' %&gt;&lt;\\\/li&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>In <code>app\\\/views\\\/layouts\\\/_header.html.erb<\\\/code>:<\\\/p>\\n\\n<pre><code> &lt;li&gt;&lt;%= link_to \\\"Home\\\",    '\\\/' %&gt;&lt;\\\/li&gt;\\n &lt;li&gt;&lt;%= link_to \\\"Help\\\",    '\\\/help' %&gt;&lt;\\\/li&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rspec>","commentcount":"1","accepted":"yes"},"12242762":{"id":"12242762","date":"2012-09","score":"2","body":"\"<p>You can re-define <code>new_user_confirmation_path<\\\/code> in <code>config\\\/routes.rb<\\\/code> to accomplish this.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><devise><routes>","commentcount":"0","accepted":"yes"},"12243752":{"id":"12243752","date":"2012-09","score":"3","body":"\"<p><code>column_names<\\\/code> is a method on the class. You're calling it on the instance. If you really want <code>column_names<\\\/code> then use <code>self.class.column_names<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><csv><after-save>","commentcount":"1","accepted":"yes"},"12251599":{"id":"12251599","date":"2012-09","score":"0","body":"\"<p>This is located within the <code>spree_taxons<\\\/code> table. You will need to change it there.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><translation><spree>","commentcount":"1","accepted":""},"12251631":{"id":"12251631","date":"2012-09","score":"1","body":"\"<p>You're getting this error because Devise isn't configured, yet your model references it. Remove the call to the <code>devise<\\\/code> method (or comment it out) in any model that references it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><devise>","commentcount":"3","accepted":"yes"},"12270231":{"id":"12270231","date":"2012-09","score":"2","body":"\"<p>You can use the <code>distance_of_time_in_words<\\\/code> helper in the views. If you want something with better precision, I co-authored a gem called <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/dotiw\\\" rel=\\\"nofollow\\\">dotiw<\\\/a> which provides the same helper method.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"12427859":{"id":"12427859","date":"2012-09","score":"0","body":"\"<p>Do you have <code>has_ancestry<\\\/code> defined in your model? I think not having it there would be a valid explanation for this not working.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"1","accepted":""},"12666296":{"id":"12666296","date":"2012-10","score":"5","body":"\"<p>That's the new syntax introduced with Ruby 1.9. You can write it like that, or you could write it like this also:<\\\/p>\\n\\n<pre><code>{ :id =&gt; \\\"logo\\\" }\\n<\\\/code><\\\/pre>\\n\\n<p>The JSON style is just supported as a shorter alternative, and for people who like JavaScript.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"2","accepted":"yes"},"12758199":{"id":"12758199","date":"2012-10","score":"1","body":"\"<p>This is because you're not including the CSS assets as well. Simply including the JavaScript assets is not enough to get it styled.<\\\/p>\\n\\n<p>As the <code>jquery-rails<\\\/code> README states:<\\\/p>\\n\\n<blockquote>\\n  <p>In order to use the themed parts of jQuery UI, you will also need to supply your own theme CSS (or use the jquery-ui-rails gem mentioned above).<\\\/p>\\n<\\\/blockquote>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><jquery-ui><jquery-ui-datepicker>","commentcount":"1","accepted":"yes"},"12758215":{"id":"12758215","date":"2012-10","score":"2","body":"\"<p>I would recommend looking at using something such as <a href=\\\"https:\\\/\\\/github.com\\\/markevans\\\/dragonfly\\\" rel=\\\"nofollow\\\">dragonfly<\\\/a>, <a href=\\\"https:\\\/\\\/github.com\\\/thoughtbot\\\/paperclip\\\" rel=\\\"nofollow\\\">paperclip<\\\/a> or <a href=\\\"https:\\\/\\\/github.com\\\/jnicklas\\\/carrierwave\\\" rel=\\\"nofollow\\\">carrierwave<\\\/a> to handle file uploads in your application, rather than hand-coding this.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><file-io>","commentcount":"0","accepted":""},"12758223":{"id":"12758223","date":"2012-10","score":"2","body":"\"<p>Any particular reason? <\\\/p>\\n\\n<p>The <a href=\\\"http:\\\/\\\/docs.seattlerb.org\\\/minitest\\\/\\\" rel=\\\"nofollow\\\">minitest docs<\\\/a> are actually quite thorough and should cover as much as you need to get a great basic understanding for it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><testing><minitest>","commentcount":"1","accepted":""},"12808039":{"id":"12808039","date":"2012-10","score":"0","body":"\"<p>You're using an ancient version of Spree there. We would recommend using the latest. Please follow the <a href=\\\"http:\\\/\\\/guides.spreecommerce.com\\\/getting_started.html\\\" rel=\\\"nofollow\\\">Getting Started Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rubygems><spree>","commentcount":"0","accepted":""},"12808057":{"id":"12808057","date":"2012-10","score":"0","body":"\"<p>Please try the latest relevant branch for your version of Spree. I believe this problem was fixed as part of the fix for <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/issues\\\/1500\\\" rel=\\\"nofollow\\\">Issue #1500<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><heroku><ruby-on-rails-3.2><spree>","commentcount":"0","accepted":"yes"},"12808118":{"id":"12808118","date":"2012-10","score":"1","body":"\"<p>Use an <code>after_create<\\\/code> in the model:<\\\/p>\\n\\n<pre><code>after_create :generate_hash\\n\\n... your model's code ...\\n\\nprivate\\n\\ndef generate_hash\\n  # hash generation code goes here\\n  self.save\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This will save the record twice, just like you're doing in the controller, except it will do it inside the model.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><hash><generator>","commentcount":"1","accepted":"yes"},"12808135":{"id":"12808135","date":"2012-10","score":"5","body":"\"<p>Try removing the <code>\\\/Users\\\/ender\\\/.rvm\\\/gems\\\/ruby-1.9.3-p194@global\\\/gems\\\/rubygems-bundler-0.9.0<\\\/code> directory. There seems to be a problem with this gem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><rubygems>","commentcount":"3","accepted":""},"12808200":{"id":"12808200","date":"2012-10","score":"2","body":"\"<p>There is no easy way to see all the tables created by a gem, unless they're namespaced within something sensible. For example, <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/forem\\\" rel=\\\"nofollow\\\">Forem<\\\/a> namespaces all the tables with a <code>forem_<\\\/code> prefix.<\\\/p>\\n\\n<p>You would need to create a migration and drop the tables manually.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"12808228":{"id":"12808228","date":"2012-10","score":"0","body":"\"<p>The asset pipeline should compile all necessary JavaScript into as few files as possible, serving those. These files should include jQuery and should be placed in the <code>head<\\\/code> tag for your layout.<\\\/p>\\n\\n<p>Perhaps the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/asset_pipeline.html\\\" rel=\\\"nofollow\\\">Asset Pipeline Guide<\\\/a> will help?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery><ruby-on-rails-3><twitter-bootstrap>","commentcount":"1","accepted":""},"12808314":{"id":"12808314","date":"2012-10","score":"0","body":"\"<p>This is because you're using <code>attr_accessor<\\\/code>, and not <code>attr_accessible<\\\/code>, I would guess. Please show us your Notification model.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><activerecord>","commentcount":"0","accepted":"yes"},"12810179":{"id":"12810179","date":"2012-10","score":"7","body":"\"<p>I would split on the <code>\\\/<\\\/code> and then use the <a href=\\\"http:\\\/\\\/money.rubyforge.org\\\/\\\"><code>money<\\\/code><\\\/a> gem to parse the amounts out, like this:<\\\/p>\\n\\n<pre><code>require 'money'\\namounts = \\\"$6,178.50 USD \\\/ 22,693.01 AED\\\".split(\\\"\\\/\\\")\\namounts.map! { |amount| Money.parse(amount) }\\n<\\\/code><\\\/pre>\\n\\n<p>Then, because they're now <code>Money<\\\/code> objects, you can do money things with them:<\\\/p>\\n\\n<pre><code>&gt;&gt; amounts.first.format\\n=&gt; \\\"$6,178.50\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rubygems>","commentcount":"0","accepted":""},"12811842":{"id":"12811842","date":"2012-10","score":"1","body":"\"<p>The error is in the final line of your output:<\\\/p>\\n\\n<pre><code>no such file to load -- sqlite3\\n<\\\/code><\\\/pre>\\n\\n<p>It shows that it can't find the <code>sqlite3<\\\/code> file. This could be because the <code>sqlite3<\\\/code> gem is not installed. Try to find it with this command:<\\\/p>\\n\\n<pre><code>gem list sqlite3\\n<\\\/code><\\\/pre>\\n\\n<p>If it doesn't come up, install it with this command:<\\\/p>\\n\\n<pre><code>gem install sqlite3\\n<\\\/code><\\\/pre>\\n\\n<hr>\\n\\n<p>I think you may have installed an older version of Ruby as well. I would recommend using RVM and installing a newer version of Ruby, such as 1.9, rather than 1.8. See <a href=\\\"https:\\\/\\\/rvm.io\\\/rvm\\\/install\\\" rel=\\\"nofollow\\\">this page<\\\/a> for information on how to do that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><sqlite3><rake>","commentcount":"7","accepted":""},"12811870":{"id":"12811870","date":"2012-10","score":"1","body":"\"<p>Requests are going to <code>\\\/assets<\\\/code>, which are served out of the <code>public<\\\/code> directory by the webserver which should sit in front of your Rails app.<\\\/p>\\n\\n<p>Because you've got <code>config.serve_static_assets<\\\/code> set to <code>false<\\\/code> inside <code>config\\\/environments\\\/production.rb<\\\/code> there, Rails isn't going to even try to serve these assets.<\\\/p>\\n\\n<p>I would recommend putting an Apache or Nginx server running <a href=\\\"http:\\\/\\\/www.modrails.com\\\/\\\" rel=\\\"nofollow\\\">Passenger<\\\/a> in front of Rails so that Apache or Nginx would serve the assets and proxy requests to your application.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"5","accepted":""},"12812063":{"id":"12812063","date":"2012-10","score":"10","body":"\"<p>Both of your methods are actually being defined and called <em>as methods<\\\/em>. Quite a lot of things in Ruby can be defined as methods, even the operators such as <code>+<\\\/code>, <code>-<\\\/code>, <code>*<\\\/code> and <code>\\\/<\\\/code>. Ruby allows methods to have three special <em>notational suffixes<\\\/em>. I made that phrase up all by myself. What I mean by <em>notational suffixes<\\\/em> is that the thing on the end of the method will indicate how that method is <em>supposed<\\\/em> to work.<\\\/p>\\n\\n<h2>Bang!<\\\/h2>\\n\\n<p>The first <em>notational suffix<\\\/em> is <code>!<\\\/code>. This indicates that the method is supposed to be <em>destructive<\\\/em>, meaning that it modifies the object that it's called on. Compare the output of these two scripts:<\\\/p>\\n\\n<pre><code>a = [1, 2, 3]\\na.map { |x| x * x }\\na\\n<\\\/code><\\\/pre>\\n\\n<p>And:<\\\/p>\\n\\n<pre><code>a = [1, 2, 3]\\na.map! { |x| x * x }\\na\\n<\\\/code><\\\/pre>\\n\\n<p>There's a one character difference between the two scripts, but they operate differently! The first one will still go through each element in the array and perform the operation inside the block, but the object in <code>a<\\\/code> will still be the same <code>[1,2,3]<\\\/code> that you started with.<\\\/p>\\n\\n<p>In the second example, however, the <code>a<\\\/code> at the end will instead be <code>[1, 4, 9]<\\\/code> because <code>map!<\\\/code> modified the object in place!<\\\/p>\\n\\n<h2>Query<\\\/h2>\\n\\n<p>The second <em>notational suffix<\\\/em> is <code>?<\\\/code>, and that indicates that a method is used to query an object about something, and means that the method is supposed to return <code>true<\\\/code>, <code>false<\\\/code> or in some <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/pull\\\/5329\\\">extreme circumstances<\\\/a>, <code>nil<\\\/code>. <\\\/p>\\n\\n<p>Now, note that the method <em>doesn't have to<\\\/em> return <code>true<\\\/code> or <code>false<\\\/code>... it's just that it'd be very nice if it did that!<\\\/p>\\n\\n<p>Proof:<\\\/p>\\n\\n<pre><code>def a?\\n  true\\nend\\n\\ndef b?\\n  \\\"moo\\\"\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Calling <code>a?<\\\/code> will return <code>true<\\\/code>, and calling <code>b?<\\\/code> will return \\\"moo\\\". So there, that's query methods. The methods that <em>should<\\\/em> return <code>true<\\\/code> or <code>false<\\\/code> but sometimes can return other things because some developers don't like other developers.<\\\/p>\\n\\n<h2>Setters!<\\\/h2>\\n\\n<p><strong>NOW<\\\/strong> we get to the meat of your (paraphrased) question: <em>what does <code>=<\\\/code> mean on the end of a method?<\\\/em><\\\/p>\\n\\n<p>That usually indicates that a method is going to set a particular value, as <a href=\\\"http:\\\/\\\/stackoverflow.com\\\/a\\\/12811965\\\/15245\\\">Erik<\\\/a> already outlined before I finished typing this essay of an answer.<\\\/p>\\n\\n<p>However, it <em>may not<\\\/em> set one, just like the query methods <em>may not<\\\/em> return <code>true<\\\/code> or <code>false<\\\/code>. It's just convention.<\\\/p>\\n\\n<p>You can call that setter method like this also:<\\\/p>\\n\\n<pre><code>foo.something_else=\\\"value\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Or (my favourite):<\\\/p>\\n\\n<pre><code>foo.something_else = \\\"value\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>In theory, you can actually ignore the passed in value, just like you can completely ignore any arguments passed into any method:<\\\/p>\\n\\n<pre><code>def foo?(*args)\\n  \\\"moo\\\"\\nend\\n\\n&gt;&gt; foo?(:please, :oh, :please, :why, :\\\"won't\\\", :you, :use, :these, :arguments, :i, :got, :just, :for, :you, :question_mark?)\\n=&gt; \\\"moo\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Ruby supports all three syntaxes for setter methods, although it's very rare to see the one you used!<\\\/p>\\n\\n<p>Well, I hope this answer's been roughly educational and that you understand more things about Ruby now. Enjoy!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><syntax>","commentcount":"2","accepted":""},"12832380":{"id":"12832380","date":"2012-10","score":"1","body":"\"<p>Simply this:<\\\/p>\\n\\n<pre><code>def total_on(date)\\n  self.calls.where(\\\"placed_at &gt;= ? AND placed_at &lt;= ?\\\", date.beginning_of_day, date.end_of_day).count\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Assuming that you've got a <code>Phone<\\\/code> object and you want to know how many associated calls for that object happened on a given day. This method should be an <em>instance<\\\/em> method, not a <em>class<\\\/em> method. I don't understand why it would be a class method if you're wanting to see how many calls there've been for a <em>particular<\\\/em> phone on a <em>particular<\\\/em> day.<\\\/p>\\n\\n<p>If you use <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/by_star\\\" rel=\\\"nofollow\\\">by_star<\\\/a>, the above code would be this:<\\\/p>\\n\\n<pre><code>def total_on(date)\\n  self.calls.by_day(date).count\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><railscasts>","commentcount":"2","accepted":"yes"},"12832424":{"id":"12832424","date":"2012-10","score":"2","body":"\"<p>You probably set your git remote like this:<\\\/p>\\n\\n<pre><code>git remote add heroku git@heroku.com\\n<\\\/code><\\\/pre>\\n\\n<p>That's the way that I can reproduce this problem.<\\\/p>\\n\\n<p>To fix this problem, remove the remote and add the correct URL:<\\\/p>\\n\\n<pre><code>git remote rm heroku\\ngit remote add heroku git@heroku.com:[your-heroku-application's name].git\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<git><heroku>","commentcount":"5","accepted":""},"12848082":{"id":"12848082","date":"2012-10","score":"3","body":"\"<p>Use <code>params<\\\/code> to access them:<\\\/p>\\n\\n<pre><code>params[:utm_source]\\nparams[:utm_campaign]\\nparams[:utm_medium]\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><google-analytics><analytics>","commentcount":"0","accepted":"yes"},"12925509":{"id":"12925509","date":"2012-10","score":"1","body":"\"<p>Rails will, by default, save times to the database as UTC. If you're using <code>DATE([Date.today])<\\\/code>, then it's going to be looking up records on the 11th, not the 12th. To get the right date, you probably want to set <code>Time.zone<\\\/code> to the user's current timezone, and then do the query.<\\\/p>\\n\\n<p>I built a gem called <a href=\\\"http:\\\/\\\/github.com\\\/radar\\\/by_star\\\" rel=\\\"nofollow\\\">by_star<\\\/a> to handle this kind of date searching, and I reckon you should use it. With it, your query would be this:<\\\/p>\\n\\n<pre><code>RegisteredChore.today.where(:user_id =&gt; user.id, \\n                            :home_id =&gt; home.id,\\n                            :chore_id =&gt; chore.id)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><datetime><timezone>","commentcount":"0","accepted":""},"12945717":{"id":"12945717","date":"2012-10","score":"1","body":"\"<p>Oooh, a multi-part question.<\\\/p>\\n\\n<h3>Case #1 and #2<\\\/h3>\\n\\n<p>These two are nearly identical. The difference is that the <code>@user<\\\/code> variable is being set up in your controller before hand with the <code>load_and_authorize_call<\\\/code> or some other filter that runs before your actions.<\\\/p>\\n\\n<p><em>This is useful if you want to check permissions on a single object, i.e. a user can only edit their own record.<\\\/em><\\\/p>\\n\\n<p><strong>For the end of case #2:<\\\/strong><\\\/p>\\n\\n<p>You will need to ensure that the variables are set within the controller before you can access them within your controller or view to do permission checking. Same as if you wanted to access them in other instances that have nothing to do with permission checking.<\\\/p>\\n\\n<h3>Case #3<\\\/h3>\\n\\n<p>Mainly used in cases where a user can edit all objects of a particular class.<\\\/p>\\n\\n<p><em>This is useful if you want a user to edit all objects of a particular class, i.e. an admin can edit all user's details<\\\/em><\\\/p>\\n\\n<h3>Case #4<\\\/h3>\\n\\n<p>Using an association will grab that record out and pass it to CanCan, just like using <code>if can? :read, user<\\\/code> would. Not really any different to Case #1.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><cancan>","commentcount":"4","accepted":"yes"},"13004509":{"id":"13004509","date":"2012-10","score":"5","body":"\"<p>Like this:<\\\/p>\\n\\n<pre><code>git reset --hard [sha]\\n<\\\/code><\\\/pre>\\n\\n<p>Note that it won't remove untracked files, since Git knows nothing about them. All your staged and unstaged changes will be lost when you run this command, so watch out for that.<\\\/p>\\n\\n<p>If you accidentally run this and want to get back to the old commit then <code>git reflog<\\\/code> will show you an output such as this:<\\\/p>\\n\\n<pre><code>86b46fd HEAD@{0}: 86b46fd: updating HEAD\\na2b03fa HEAD@{1}: commit: [commit message]\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>HEAD@{1}<\\\/code> commit here is the old sha. Reset back to it using:<\\\/p>\\n\\n<pre><code>git reset --hard HEAD@{1}\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"7","accepted":""},"13004531":{"id":"13004531","date":"2012-10","score":"5","body":"\"<p>You can remove the <em>shipping<\\\/em> address by removing the delivery step from your <code>checkout_flow<\\\/code> definition by putting this code inside your application at <code>app\\\/models\\\/spree\\\/order_decorator.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>Spree::Order.class_eval do\\n  checkout_flow do\\n    go_to_state :address\\n    go_to_state :payment, :if =&gt; lambda { |order| order.payment_required? }\\n    go_to_state :confirm, :if =&gt; lambda { |order| order.confirmation_required? }\\n    go_to_state :complete\\n    remove_transition :from =&gt; :delivery, :to =&gt; :confirm\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>By not having the delivery step there, Spree won't ask for a delivery address or delivery information for an order.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree>","commentcount":"2","accepted":""},"13057940":{"id":"13057940","date":"2012-10","score":"3","body":"\"<p>Is the about page a static file located at <code>public\\\/about.html<\\\/code>? If so, then Rails will match this first and fall back to the router if it can't find the file.<\\\/p>\\n\\n<p>If it's a route instead, then your <code>match :id<\\\/code> route should be <em>beneath<\\\/em> the one for about, so that about is matched first.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"13096009":{"id":"13096009","date":"2012-10","score":"0","body":"\"<p>I would do this:<\\\/p>\\n\\n<pre><code>&lt;% if defined?(environment) %?\\n  &lt;% Array(environment).each do |f| %&gt;\\n  one line: &lt;%= f %&gt;\\n  &lt;% end %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>I didn't understand why you joining on new lines and then splitting on them again, so I removed it from the example.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><erb>","commentcount":"4","accepted":"yes"},"13104285":{"id":"13104285","date":"2012-10","score":"1","body":"\"<p>Build it in your controller:<\\\/p>\\n\\n<pre><code>@object.fund_levels.build\\n<\\\/code><\\\/pre>\\n\\n<p>where <code>@object<\\\/code> is the object being passed to <code>form_for<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><for-loop><field>","commentcount":"1","accepted":"yes"},"13113648":{"id":"13113648","date":"2012-10","score":"1","body":"\"<p>Move it to <code>spec\\\/helpers\\\/my_engine_helper_spec.rb<\\\/code>. The <code>rspec-rails<\\\/code> has a hook for things in <code>spec\\\/helpers<\\\/code> to add the <code>helper<\\\/code> method.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><rspec>","commentcount":"0","accepted":"yes"},"13115716":{"id":"13115716","date":"2012-10","score":"3","body":"\"<p>Is the namespacing of the <code>SchedulesController<\\\/code> intentional? i.e. do you <em>really<\\\/em> mean to do this?<\\\/p>\\n\\n<pre><code>class Users::SchedulesController &lt; ApplicationController\\n<\\\/code><\\\/pre>\\n\\n<p>Or are you only doing that because schedules are a \\\"sub-thing\\\" from users?<\\\/p>\\n\\n<p>The reason I ask this is because typically within Rails, nested resource controllers <em>aren't<\\\/em> namespaced. You would only namespace a controller if you wanted to modify the controllers in a special way under a namespace. A common example of this would be having some controllers under an admin namespace, inheriting from a <code>BaseController<\\\/code> within that namespace that would restrict only admins from acessing those controllers.<\\\/p>\\n\\n<h3>Option 1<\\\/h3>\\n\\n<p>If you <em>didn't intentionally<\\\/em> namespace this controller, then you want to remove the <code>Users::<\\\/code> prefix from your controller, and move it back to <code>app\\\/controllers\\\/schedules_controller.rb<\\\/code>, the helpers back to <code>app\\\/helpers\\\/schedules_helper.rb<\\\/code> and the views back to <code>app\\\/views\\\/schedules<\\\/code>. Perhaps you ran a generator which also generated a <code>Users::Schedule<\\\/code> model, which should also need to be renamed to <code>Schedule<\\\/code> and moved back to <code>app\\\/models\\\/schedule.rb<\\\/code>.<\\\/p>\\n\\n<h3>Option 2<\\\/h3>\\n\\n<p>If you <em>did intentionally<\\\/em> namespace this controller, then you want to do this in your routes:<\\\/p>\\n\\n<pre><code>namespace :users do\\n  resources :schedules\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Leave everything that's been generated as it should be.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3.2>","commentcount":"0","accepted":""},"13117954":{"id":"13117954","date":"2012-10","score":"0","body":"\"<p>I would advise storing the artist name (and possibly the song title too) on the recording itself, so you don't have to \\\"descend into SQL\\\".<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><order>","commentcount":"0","accepted":""},"13131888":{"id":"13131888","date":"2012-10","score":"1","body":"\"<p>You <a href=\\\"http:\\\/\\\/www.sinatrarb.com\\\/faq.html#helpview\\\" rel=\\\"nofollow\\\">need to define that method inside <code>helpers<\\\/code> block<\\\/a>, like this:<\\\/p>\\n\\n<pre><code>helpers do\\n  def current_user\\n    @current_user ||= User.get(session[:user_id]) if session[:user_id]\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then it will be available to the view.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><sinatra><omniauth><erb>","commentcount":"0","accepted":""},"13147343":{"id":"13147343","date":"2012-10","score":"2","body":"\"<p>It would seem like your user doesn't have permission to write to that directory on the server. Please make sure that the permissions are correct. The user will need write permissions on that directory.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"2","accepted":""},"13147615":{"id":"13147615","date":"2012-10","score":"2","body":"\"<p>You need to pass through the <code>id<\\\/code> parameter with the path helper:<\\\/p>\\n\\n<pre><code>= button_to :tweet, tweet_path(:id =&gt; @sponsor.id)\\n<\\\/code><\\\/pre>\\n\\n<p>If you don't want it in the query string:<\\\/p>\\n\\n<pre><code>= form_tag tweet_path do |f|\\n  = hidden_field_tag :id =&gt; @sponsor.id\\n  = submit_tag \\\"Tweet\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>This does the same thing as your <code>button_to<\\\/code>, but adds a hidden field to the form that is generated.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"13147659":{"id":"13147659","date":"2012-10","score":"1","body":"\"<p>By calling <code>create_blog<\\\/code> you're telling Rails to discard the previous blog. There isn't a way around this (that I am aware of) that doesn't involve doing something like this:<\\\/p>\\n\\n<pre><code>blog = Blog.new(params[:blog])\\nif blog.valid?\\n  user.blog = blog\\n  user.save\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><validation><activerecord>","commentcount":"0","accepted":"yes"},"13147744":{"id":"13147744","date":"2012-10","score":"1","body":"\"<p>The problem is because you're passing <code>username<\\\/code> as a text field, when Rails is expecting it to be an instance of the <code>Username<\\\/code> class. What I would do is rather than having a <code>Username<\\\/code> model would be to have a validation on both the <code>Dancer<\\\/code> and <code>Joker<\\\/code> models that check the other for a conflicting username. This is simple:<\\\/p>\\n\\n<pre><code> class Dancer &lt; ActiveRecord::Base\\n   validate :unique_username\\n\\n   # your model code goes here\\n\\n   private\\n\\n     def unique_username\\n       if Joker.find_by_username(username)\\n         errors.add(:username, \\\"is already taken\\\")\\n       end\\n     end\\n  end\\n<\\\/code><\\\/pre>\\n\\n<p>So remove the <code>Username<\\\/code> model and related table and add just a <code>username<\\\/code> string field to both <code>dancers<\\\/code> and <code>jokers<\\\/code> and have this validation in the model.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><activerecord><ruby-on-rails-3.2>","commentcount":"1","accepted":""},"13171091":{"id":"13171091","date":"2012-11","score":"3","body":"\"<p>I would highly recommend to put all your admin actions underneath an admin namespace within your application and to use a gem such as CanCanCan for the authorization.<\\\/p>\\n\\n<p>For instance, the action to delete a <code>User<\\\/code> object would be in the <code>UsersController<\\\/code> underneath the <code>Admin<\\\/code> namespace. The controller would basically be defined like this:<\\\/p>\\n\\n<pre><code> class Admin::UsersController &lt; Admin::BaseController\\n   def destroy\\n     user = User.find(params[:id])\\n     user.destroy\\n     redirect_to admin_users_path\\n   end\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>Admin::BaseController<\\\/code> referenced here is the controller which provides a base for your admin namespace. It should authorize users, like this:<\\\/p>\\n\\n<pre><code> class Admin::BaseController &lt; ApplicationController\\n   before_filter :authenticate_user!\\n   before_filter :authorize_admin\\n\\n   def authorize_admin\\n     authorize! :manage, :all\\n   end\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>authorize!<\\\/code> helper would be provided by <code>CanCan<\\\/code>. I won't repeat what the <a href=\\\"https:\\\/\\\/github.com\\\/ryanb\\\/cancan\\\/wiki\\\/Defining-Abilities\\\" rel=\\\"nofollow\\\">CanCan wiki already covers<\\\/a> in regard to setting up the <code>Ability<\\\/code> class. CanCan is also covered in a <a href=\\\"http:\\\/\\\/railscasts.com\\\/episodes\\\/192-authorization-with-cancan\\\" rel=\\\"nofollow\\\">great screencast by the author<\\\/a>.<\\\/p>\\n\\n<p>It's inside this <code>Ability<\\\/code> class that you should be checking for that boolean field and then letting CanCan deal with the authorization.<\\\/p>\\n\\n<p>To actually route to this new <code>Admin::UsersController<\\\/code>, define this inside your <code>config\\\/routes.rb<\\\/code> file:<\\\/p>\\n\\n<pre><code>namespace :admin do\\n  resources :users\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>If you don't want to use CanCanCan, there's also <a href=\\\"https:\\\/\\\/rubygems.org\\\/gems\\\/pundit\\\" rel=\\\"nofollow\\\">Pundit<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><devise>","commentcount":"3","accepted":""},"13189220":{"id":"13189220","date":"2012-11","score":"3","body":"\"<p>If you want to do configuration, then I would recommend that you use a <code>Singleton<\\\/code> class, like this:<\\\/p>\\n\\n<pre><code>require 'singleton'\\nmodule MyModule\\n class MyClass\\n   include Singleton\\n end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then you will need to define the <code>configure<\\\/code> method on this:<\\\/p>\\n\\n<pre><code>require 'singleton'\\nmodule MyModule\\n class MyClass\\n   include Singleton\\n   def self.configure\\n     yield(self)\\n   end\\n end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p><code>yield<\\\/code> will evaluate the block within the context of the class, meaning that any methods called on the block object will be called on the class object.<\\\/p>\\n\\n<p>Then for each method you call inside the <code>configure<\\\/code> block, you will need a corresponding method definition inside the class. You can do this by defining the methods manually:<\\\/p>\\n\\n<pre><code> class MyClass\\n   def self.var1=(value)\\n     @var1 = value\\n   end\\n\\n   def self.var1\\n     @var1\\n   end \\n end\\n<\\\/code><\\\/pre>\\n\\n<p>Or, you can use <code>attr_accessor<\\\/code>:<\\\/p>\\n\\n<pre><code> class MyClass\\n   class &lt;&lt; self\\n     attr_accessor :var1\\n   end\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>To get the values back out, just do this:<\\\/p>\\n\\n<pre><code> MyMoudle::MyClass.var1\\n<\\\/code><\\\/pre>\\n\\n<p>If you don't want to use a singleton, then change the class represented <code>MyClass<\\\/code> to be a module instead.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"3","accepted":"yes"},"13189730":{"id":"13189730","date":"2012-11","score":"2","body":"\"<p>Why not just use the <code>f.object<\\\/code> passed in to both partials?<\\\/p>\\n\\n<pre><code>&lt;% fieldset_id = \\\"#{f.object.class.underscore}_#{f.object.id}\\\" %&gt;\\n&lt;fieldset id='&lt;%= fieldset_id %&gt;'&gt;\\n...\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<css><ruby-on-rails><ruby><ruby-on-rails-3.2>","commentcount":"2","accepted":""},"13217769":{"id":"13217769","date":"2012-11","score":"1","body":"\"<p>The easiest way I can think of would be to wrap the routes you don't want accessed without a subdomain in a subdomain constraint:<\\\/p>\\n\\n<pre><code>constraints(SubdomainRequired) do\\n  # routes go here\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This <code>SubdomainRequired<\\\/code> constant is best, I think, defined within the <code>lib\\\/constraints<\\\/code> directory of your application, in a file named after the class (<code>lib\\\/constraints\\\/subdomain_required.rb<\\\/code>):<\\\/p>\\n\\n<pre><code>class SubdomainRequired\\n  def self.matches?(request)\\n    request.subdomain.present?\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then it's simply a matter of requiring this constraint at the top of your routes file:<\\\/p>\\n\\n<pre><code>require 'constraints\\\/subdomain_required'\\n<\\\/code><\\\/pre>\\n\\n<p>If the subdomain is present with this, then the route will be found. If the request is not made with a subdomain then it will not be found.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><subdomain><multi-tenant>","commentcount":"4","accepted":"yes"},"13223688":{"id":"13223688","date":"2012-11","score":"0","body":"\"<p>You're telling it to reject it if the <code>content<\\\/code> for the <code>layout_position<\\\/code> object is blank. In your example, above \\\"WTF\\\", you're not passing through any content. Therefore this is deleting the attributes.<\\\/p>\\n\\n<p>Calling <code>build<\\\/code> doesn't rely on <code>accepts_nested_attributes_for<\\\/code> and so will work just fine.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><nested-forms>","commentcount":"1","accepted":"yes"},"13225420":{"id":"13225420","date":"2012-11","score":"1","body":"\"<p>It sounds like you're trying to re-invent a state machine here. I would recommend looking into the <code>state_machine<\\\/code> gem and then using it to implement an event that happens after an invoice transitions to the 'estimate' state, placing this inside the <code>state_machine<\\\/code> definition which would go inside your model:<\\\/p>\\n\\n<pre><code>after_transition :to =&gt; :estimate do |invoice|\\n  invoice.estimate_sent_date = Time.now\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><controller>","commentcount":"3","accepted":""},"13248520":{"id":"13248520","date":"2012-11","score":"6","body":"\"<p>The difference is that the first one is a class variable and the second one is an instance variable.<\\\/p>\\n\\n<p>An instance variable is only available to <em>that instance<\\\/em> of an object. i.e.<\\\/p>\\n\\n<pre><code>class Yasin\\n  def foo=(value)\\n    @foo = value\\n  end\\n\\n  def foo\\n    @foo\\n  end\\nend\\n\\nyasin = Yasin.new\\nyasin.foo=1\\nyasin.foo #=&gt; 1\\nyasin_2 = Yasin.new\\nyasin_2.foo #&gt; nil\\n<\\\/code><\\\/pre>\\n\\n<p>A class variable is available to <em>all<\\\/em> instances of the class (and subclasses, iirc) where the class variable was defined.<\\\/p>\\n\\n<pre><code>class Yasin\\n  def foo=(value)\\n    @@foo = value\\n  end\\n\\n  def foo\\n    @@foo\\n  end\\nend\\n\\nyasin = Yasin.new\\nyasin.foo=1\\nyasin.foo #=&gt; 1\\nyasin_2 = Yasin.new\\nyasin_2.foo #=&gt; 1\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><oop><class><object>","commentcount":"5","accepted":"yes"},"13259117":{"id":"13259117","date":"2012-11","score":"1","body":"\"<p>You're not sending any parameters through in the link.<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"Add to favorites\\\",  {:controller =&gt; 'favourites', :action =&gt; 'create'}, {:method =&gt; :post } %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This isn't enough to add a recipe to the favourites. What you'll need to do is pass through a recipe's id along with this link:<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"Add to favorites\\\",  {:controller =&gt; 'favourites', :action =&gt; 'create', :recipe_id =&gt; recipe.id}, {:method =&gt; :post } %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Or you could make this much shorter by using a routing helper:<\\\/p>\\n\\n<pre><code>&lt;%= link_to \\\"Add to favorites\\\",  add_to_favorites_path(:recipe_id =&gt; recipe), {:method =&gt; :post } %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Defining that routing helper inside your <code>config\\\/routes.rb<\\\/code> like this:<\\\/p>\\n\\n<pre><code>post '\\\/favorites' =&gt; \\\"favorites#create\\\", :as =&gt; \\\"add_to_favorites\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then just find the recipe with <code>params[:recipe_id]<\\\/code> inside the controller and do what you need to do with it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"3","accepted":""},"13282519":{"id":"13282519","date":"2012-11","score":"0","body":"\"<p>Define inside your <code>StatusUpdatesController<\\\/code> an action like this:<\\\/p>\\n\\n<pre><code>def delete_all\\n  current_user.status_updates.delete_all\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>You will need to route to this action also:<\\\/p>\\n\\n<pre><code>resources :status_updates do\\n  collection do\\n    delete :delete_all\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>And to make a button:<\\\/p>\\n\\n<pre><code>button_to \\\"Delete the everything\\\", delete_all_status_updates_path, :method =&gt; :delete\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1><ruby-on-rails-3.2>","commentcount":"4","accepted":"yes"},"13298952":{"id":"13298952","date":"2012-11","score":"5","body":"\"<p>You can use a different <code>attr_accessible<\\\/code> list inside your <code>User<\\\/code> model:<\\\/p>\\n\\n<pre><code>attr_accessible :name\\nattr_accessible :name, :role_ids, :as =&gt; :admin\\n<\\\/code><\\\/pre>\\n\\n<p>And then inside the <code>create<\\\/code> and <code>update<\\\/code> actions for your admin controller:<\\\/p>\\n\\n<pre><code>User.create(params[:user], :as =&gt; :admin)\\n\\nuser.update_attributes(params[:user], :as =&gt; :admin)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"13298975":{"id":"13298975","date":"2012-11","score":"3","body":"\"<p>If you have a <code>@review<\\\/code> variable defined in the <code>upvote<\\\/code> action, like I suspect you might, then you can do this:<\\\/p>\\n\\n<pre><code>$('#vote_&lt;%= @review.id %&gt;').html(\\\"&lt;%= escape_javascript render :partial =&gt; 'votes\\\/vote' %&gt;\\\");\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery><ajax><ruby-on-rails-3>","commentcount":"5","accepted":"yes"},"13299117":{"id":"13299117","date":"2012-11","score":"3","body":"\"<p>Don't use <code>sudo<\\\/code> to install your rails gem, because that'll switch to a different user which doesn't have access to your RVM installation. Just use <code>gem install rails<\\\/code>.<\\\/p>\\n\\n<p>I would still recommend uninstalling the system Ruby.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><gem><rvm><ubuntu-12.04>","commentcount":"3","accepted":""},"13299353":{"id":"13299353","date":"2012-11","score":"-1","body":"\"<p>This line inside your view:<\\\/p>\\n\\n<pre><code>&lt;%= f.fields_for :upload do |builder| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Should be this:<\\\/p>\\n\\n<pre><code>&lt;%= f.fields_for :uploadable do |builder| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Because the association on the <code>Post<\\\/code> model is called \\\"uploadable\\\", not \\\"upload\\\".<\\\/p>\\n\\n<p>For nested attributes to work, you will need to specify the model does accept nested attributes for this model, which can be done by putting this line underneath the <code>belongs_to<\\\/code> in your model:<\\\/p>\\n\\n<pre><code>accepts_nested_attributes_for :uploadable\\n<\\\/code><\\\/pre>\\n\\n<p>And then you will need to make these attributes accessible, which you can do with this:<\\\/p>\\n\\n<pre><code>attr_accessible :uploadable_attributes\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><file-upload><nested-forms><polymorphic-associations>","commentcount":"3","accepted":""},"13301585":{"id":"13301585","date":"2012-11","score":"0","body":"\"<p>Follow <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2011\\\/06\\\/mac-os-x-ruby-rvm-rails-and-you\\\/\\\" rel=\\\"nofollow\\\">this guide<\\\/a> which covers how to set up Ruby using RVM.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><osx><osx-lion>","commentcount":"5","accepted":""},"13328833":{"id":"13328833","date":"2012-11","score":"2","body":"\"<p>Spree has a module called <code>Spree::ControllerHelpers::CurrentOrder<\\\/code> that you could include into your <code>ApplicationController<\\\/code>. This would make the <code>current_order<\\\/code> method available in all views for your application.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><spree>","commentcount":"3","accepted":"yes"},"13355610":{"id":"13355610","date":"2012-11","score":"4","body":"\"<p>One way to do this would be to reflect upon all associations for that class:<\\\/p>\\n\\n<pre><code>associations = class_goes_here.reflect_on_all_associations\\n<\\\/code><\\\/pre>\\n\\n<p>And then to find just the <code>belongs_to<\\\/code> ones, since those will have the <code>_id<\\\/code> field:<\\\/p>\\n\\n<pre><code>associations = associations.select { |a| a.macro == :belongs_to }\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can find the foreign key used on these associations by doing this:<\\\/p>\\n\\n<pre><code>association_foreign_keys = associations.map(&amp;:foreign_key)\\n<\\\/code><\\\/pre>\\n\\n<p>I wouldn't use <code>@user.attributes<\\\/code> to get the attributes and then <code>keys<\\\/code> on that to get the column names. I would use <code>User.column_names<\\\/code> to get the column names. <\\\/p>\\n\\n<p>Therefore, with all that explained, you can then change your code to be this to make it more foolproof:<\\\/p>\\n\\n<pre><code>associations = User.reflect_on_all_associations\\nassociations = associations.select { |a| a.macro == :belongs_to }\\nassociation_foreign_keys = associations.map(&amp;:foreign_key)\\nUser.column_names.each do |column|\\n  if association_foreign_keys.include?(column)\\n    puts \\\"#{column} is an association \\\/ relation.\\\"\\n  else\\n    puts \\\"#{column} is not an assocation \\\/ relation.\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"0","accepted":"yes"},"13371339":{"id":"13371339","date":"2012-11","score":"3","body":"\"<p>Your <code>attr_accessible<\\\/code> should accept <code>user_details_attributes<\\\/code>, not just <code>user_details<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"13371373":{"id":"13371373","date":"2012-11","score":"0","body":"\"<p>You're using a single-threaded HTTP server, i.e. Webrick. This means that it will only be able to serve one request at a time. You're attempting to make a request to the webserver from within the webserver itself. It won't be able to complete this action because of now hopefully obvious reasons.<\\\/p>\\n\\n<p>Use a different web server, such as Thin, that would allow for this, or choose a different way to do this.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><net-http>","commentcount":"0","accepted":""},"13372100":{"id":"13372100","date":"2012-11","score":"0","body":"\"<p>If you just want the text for all elements with the class of \\\"A\\\", use this:<\\\/p>\\n\\n<pre><code>$('.A').text\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery>","commentcount":"1","accepted":""},"13506076":{"id":"13506076","date":"2012-11","score":"0","body":"\"<p><code>script\\\/server<\\\/code> is the old old old way of doing it. <code>script\\\/server<\\\/code> doesn't exist within Rails 3+ apps. <code>script\\\/rails<\\\/code> is the way now.<\\\/p>\\n\\n<p>If <code>rails<\\\/code> is just printing out the docs, it's because this file doesn't exist. That would lead me into thinking that the application you're attempting to run this on <strong>isn't<\\\/strong> a Rails 3 app.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rvm>","commentcount":"0","accepted":"yes"},"13613333":{"id":"13613333","date":"2012-11","score":"20","body":"\"<p>You should define the method inside <code>ApplicationController<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-3.2><view-helpers>","commentcount":"2","accepted":"yes"},"13638651":{"id":"13638651","date":"2012-11","score":"1","body":"\"<p>This is because the seeds have already been loaded. The first time was when you ran <code>rails g spree:install<\\\/code> or <code>spree install<\\\/code>.<\\\/p>\\n\\n<p>Is there a reason why you want to load them twice?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><spree>","commentcount":"0","accepted":"yes"},"13692113":{"id":"13692113","date":"2012-12","score":"1","body":"\"<p>Assuming that the line hasn't changed since it's been added, then simply:<\\\/p>\\n\\n<p><code>git blame &lt;that file&gt;<\\\/code> and then look for the line that you're after.<\\\/p>\\n\\n<p>If the line has been modified since it's been added, you can still <code>git blame<\\\/code> to find out the last commit on which the line was altered, and then <code>git checkout &lt;sha&gt;~1<\\\/code> (where <code>sha<\\\/code> is the sha that shows up in the original <code>git blame<\\\/code>) and <code>git blame<\\\/code> again to go back in the history for that line.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"3","accepted":""},"13736010":{"id":"13736010","date":"2012-12","score":"0","body":"\"<p>You've defined a route to <code>\\\/stories\\\/index<\\\/code>, but you've not defined one to <code>\\\/stories<\\\/code>, which is why this is failing.<\\\/p>\\n\\n<p>You should define this route like this:<\\\/p>\\n\\n<pre><code> get '\\\/stories', :to =&gt; \\\"stories#index\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>For more information, see <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">The Routing Guide<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":""},"13782205":{"id":"13782205","date":"2012-12","score":"3","body":"\"<p>You should move the code out to your model and let your model deal with 1) the parameter being <code>nil<\\\/code> and 2) using ActiveRecord to query the database effectively.<\\\/p>\\n\\n<p>In your controller, have lines like this for each of your variables:<\\\/p>\\n\\n<pre><code>@friends = @user.friends.updated_since(params[:last_updated])\\n<\\\/code><\\\/pre>\\n\\n<p><em>(I've renamed <code>@buddies<\\\/code> here to <code>@friends<\\\/code>, because we want to maintain consistency in naming the things of the system)<\\\/em><\\\/p>\\n\\n<p>Then, in your <code>Friend<\\\/code> model, define a class method called <code>updated_since<\\\/code> that does that logic:<\\\/p>\\n\\n<pre><code>class Friend &lt; ActiveRecord::Base\\n  def self.updated_since(last_updated)\\n    if last_updated.present?\\n      where(\\\"updated_at &gt; ?\\\", last_updated)\\n    else\\n      all\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><refactoring><instance-variables>","commentcount":"3","accepted":"yes"},"13782289":{"id":"13782289","date":"2012-12","score":"2","body":"\"<p>That error would only appear if the <code>@user<\\\/code> variable wasn't set in your <code>edit<\\\/code> action, which means it wouldn't be available for the <code>form_for<\\\/code> call in your view... but it is set, and so therefore it should be available.<\\\/p>\\n\\n<p>Are you sure you have saved those files?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><railstutorial.org>","commentcount":"1","accepted":""},"13791910":{"id":"13791910","date":"2012-12","score":"1","body":"\"<p>There's isn't really a \\\"convention\\\" for this, but rather one of those things where there's more than one way to do it.<\\\/p>\\n\\n<p>One way that you could do it is still send the form to one and only one action within the controller, but then delegate <em>in the controller<\\\/em> which action to go to, like this:<\\\/p>\\n\\n<pre><code>def smasher\\n  if params[:identifier] == 'this'\\n    smash_this!\\n  else\\n    smash_that!\\n  end\\nend\\n\\ndef smash_this!\\n  # code goes here\\nend\\n\\ndef smash_that!\\n  # code goes here\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><forms><input><controller><routes>","commentcount":"4","accepted":""},"13791941":{"id":"13791941","date":"2012-12","score":"1","body":"\"<p>The <code>.page<\\\/code> method comes from the Kaminari gem, and not Ransack. <\\\/p>\\n\\n<p>You can make the pagination \\\"huge\\\" by changing the default per_page value in Kaminari:<\\\/p>\\n\\n<p><code>Kaminari.config.default_per_page = 1000<\\\/code><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree><ransack>","commentcount":"1","accepted":"yes"},"13812721":{"id":"13812721","date":"2012-12","score":"10","body":"\"<p>Michael Berkowski's comment on your question is correct.<\\\/p>\\n\\n<p>If you want to work around this case, use a regular expression:<\\\/p>\\n\\n<pre><code>\\\"Lorem ipsum\\\\ndolor sit amet\\\".split(\\\/ \\\/)\\n#=&gt; [\\\"Lorem\\\", \\\"ipsum\\\\ndolor\\\", \\\"sit\\\", \\\"amet\\\"] \\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"3","accepted":"yes"},"13868334":{"id":"13868334","date":"2012-12","score":"0","body":"\"<p>Your <code>text<\\\/code> fields are unable to have a limit on them. Perhaps you meant  to use <code>string<\\\/code> instead?<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><postgresql><oauth><devise>","commentcount":"3","accepted":""},"13871654":{"id":"13871654","date":"2012-12","score":"3","body":"\"<p>If you want to assign a user and a brand association like that, you must define them as being accessible attributes:<\\\/p>\\n\\n<pre><code>attr_accessible :user, :brand\\n<\\\/code><\\\/pre>\\n\\n<p>Otherwise, you can assign them like this:<\\\/p>\\n\\n<pre><code>Model.create({:user =&gt; user, :brand =&gt; brand }, :without_protection =&gt; true)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord>","commentcount":"3","accepted":"yes"},"13875933":{"id":"13875933","date":"2012-12","score":"1","body":"\"<p>I would recommend uninstalling the version of Ruby that was installed using apt-get, and instead install it with <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\/\\\" rel=\\\"nofollow\\\">this guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<spree>","commentcount":"0","accepted":""},"14150827":{"id":"14150827","date":"2013-01","score":"1","body":"\"<p>Your form should be, and note the plural:<\\\/p>\\n\\n<pre><code>&lt;% f.fields_for :locations do |location_form| %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This is because you're rendering fields for the locations objects which are associated with your form object. This will automatically make the parameters for these fields named <code>location_attributes<\\\/code>, so that they are then passed to your controller as such, and your model would then accept them.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><nested-forms>","commentcount":"1","accepted":"yes"},"14189489":{"id":"14189489","date":"2013-01","score":"0","body":"\"<p>You should override the <code>spree\\\/home\\\/index.html.erb<\\\/code> template in your application's views directory if you want to override the content of this page. As for preparing the content, I would recommend writing a decorator for the <code>HomeController<\\\/code> and overriding the <code>index<\\\/code> action, like this:<\\\/p>\\n\\n<pre><code> class HomeController &lt; Spree::StoreController\\n   def index\\n     # code goes here\\n   end\\n end\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><spree>","commentcount":"0","accepted":""},"14476907":{"id":"14476907","date":"2013-01","score":"3","body":"\"<p>You can do this by overriding the <code>app\\\/views\\\/spree\\\/users\\\/show.html.erb<\\\/code> template by putting a template at the same path within your application.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><devise><spree>","commentcount":"0","accepted":"yes"},"14476927":{"id":"14476927","date":"2013-01","score":"2","body":"\"<p>If you want to define this method on <code>Spree::Product<\\\/code> objects then you will need to use a decorator. Add this code to <code>app\\\/models\\\/spree\\\/product_decorator.rb<\\\/code> within your application:<\\\/p>\\n\\n<pre><code>Spree::Product.class_eval do\\n  has_many :collections\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Now each <code>Spree::Product<\\\/code> object will respond to a <code>collections<\\\/code> method.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><e-commerce><spree>","commentcount":"2","accepted":""},"14488045":{"id":"14488045","date":"2013-01","score":"0","body":"\"<p>Remove <code>gem 'devise-encryptable'<\\\/code> from your Gemfile, as it is already specified as a dependency in the <code>spree_auth_devise<\\\/code> gem. What's happening here is that this gem is being loaded before the <code>devise<\\\/code> gem, which is why your application is breaking.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><installation><spree>","commentcount":"1","accepted":""},"14514104":{"id":"14514104","date":"2013-01","score":"2","body":"\"<p>These files aren't being served because Rails will not serve files from the <code>app\\\/assets<\\\/code>, <code>lib\\\/assets<\\\/code> or <code>vendor\\\/assets<\\\/code> directories while it's running in the <code>production<\\\/code> environment.<\\\/p>\\n\\n<p>This file should really be located within the <code>public<\\\/code> directory, at the path that the request is specifying. By placing it there, you have the added benefit of that the file will be served by the web server that's running Passenger (Apache\\\/Nginx), rather than Rails. This means the request will be substantially faster than if it were served by Rails.<\\\/p>\\n\\n<p>Please ensure that all static files you wish to serve are located in the <code>public<\\\/code> directory and its subdirectories for <em>maximum speed<\\\/em>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><apache><ubuntu><paperclip><passenger>","commentcount":"2","accepted":"yes"},"14514180":{"id":"14514180","date":"2013-01","score":"0","body":"\"<p>I think you're looking for this syntax:<\\\/p>\\n\\n<pre><code>&lt;%= form_for [:admin, @lesson] do |f| %&gt;\\n  # form goes here\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This will build a polymorphic route helper called <code>admin_lesson_path<\\\/code> if <code>@lesson<\\\/code> is <code>persisted?<\\\/code>, or <code>admin_lessons_path<\\\/code> if it's not. The <code>admin_lesson_path<\\\/code> helper will be passed the <code>@lesson<\\\/code> object, so that the route would be something like <code>admin\\\/lessons\\\/1<\\\/code>. <code>admin_lessons_path<\\\/code> would generate <code>\\\/admin\\\/lessons<\\\/code>. The form will then know whether or not to use <code>POST<\\\/code> or <code>PUT<\\\/code> depending on if the record is persisted or not.<\\\/p>\\n\\n<p>You can define the routing helpe in your routes file like this:<\\\/p>\\n\\n<pre><code> namespace :admin do\\n   resources :lessons\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>By namespacing this controller, it has several advantages. One of them is that you can put all your admin-y stuff behind a single namespace and then make everything from that namespace inherit from a base controller:<\\\/p>\\n\\n<pre><code> module Admin\\n   class LessonsController &lt; BaseController \\n\\n   end\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>And then <code>BaseController<\\\/code> would contain the logic (as a <code>before_filter<\\\/code>) for restricting whether or not a user can perform actions in that controller.<\\\/p>\\n\\n<p>By putting all your admin-y stuff inside these namespaced controllers, you'll keep all the admin actions in one spot, and all the user-facing actions in another. If you've heard of \\\"separation of concerns\\\", then this is a good case of it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><nested-resources>","commentcount":"0","accepted":""},"14543155":{"id":"14543155","date":"2013-01","score":"0","body":"\"<p>Please see <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/layouts_and_rendering.html#using-nested-layouts\\\" rel=\\\"nofollow\\\">the section about Nested Layouts within the Layouts and Rendering Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><layout>","commentcount":"1","accepted":""},"14613111":{"id":"14613111","date":"2013-01","score":"0","body":"\"<p>In this instance, you are fighting Rails conventions which is a Really Bad Idea(tm). Please just go through the application and change the paths where the code is writing to public to write to other directories. Sometimes, this is what you have to do within the field of software development.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"0","accepted":""},"14658192":{"id":"14658192","date":"2013-02","score":"1","body":"\"<p>The issue with this method of doing it is that the stats will only be around as long as the class is. I would recommend writing to  a database or maybe even Redis.<\\\/p>\\n\\n<p>You could also subscribe to these events so that the code isn't inside your controllers using the technique shown in <a href=\\\"http:\\\/\\\/railscasts.com\\\/episodes\\\/249-notifications-in-rails-3\\\" rel=\\\"nofollow\\\">this Railscast<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"14678872":{"id":"14678872","date":"2013-02","score":"3","body":"\"<p>Seems like it's returning the correct content type here (with <code>curl -i &lt;url&gt;<\\\/code>):<\\\/p>\\n\\n<pre><code>HTTP\\\/1.1 200 OK \\nServer: nginx\\nDate: Mon, 04 Feb 2013 00:10:05 GMT\\nContent-Type: application\\\/rss+xml; charset=utf-8\\nContent-Length: 121890\\nConnection: keep-alive\\nX-Ua-Compatible: IE=Edge,chrome=1\\nEtag: \\\"74ebbfe3182fef13d8a737580453f688\\\"\\nCache-Control: max-age=0, private, must-revalidate\\nX-Request-Id: 9377e469ffad158b2480a3f6b2f2866c\\nX-Runtime: 0.748709\\nX-Rack-Cache: miss\\n<\\\/code><\\\/pre>\\n\\n<p>Could possibly be a bug in Chrome rather than your app.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><heroku><rss><mime-types><scraper>","commentcount":"2","accepted":"yes"},"14679242":{"id":"14679242","date":"2013-02","score":"1","body":"\"<p>The error is with this line:<\\\/p>\\n\\n<pre><code>@micropost = current_user.micropost.build(params[:micropost])\\n<\\\/code><\\\/pre>\\n\\n<p>It should be:<\\\/p>\\n\\n<pre><code>@micropost = current_user.microposts.build(params[:micropost])\\n<\\\/code><\\\/pre>\\n\\n<p>You're using <code>micropost<\\\/code> when you should be using <code>microposts<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><railstutorial.org>","commentcount":"3","accepted":"yes"},"14696688":{"id":"14696688","date":"2013-02","score":"4","body":"\"<p>If you defined <code>new<\\\/code> on the class, it would call your function and override the typical <code>new<\\\/code> method which would create a new instance of the class. It's better if you don't override it at all, but you can still do it <em>and<\\\/em> get away with it in Ruby because Ruby's nice like that.<\\\/p>\\n\\n<p>If you still want a new instance of the class after that, you can call <code>Foo.allocate<\\\/code> to get that. Then you can call <code>initialize<\\\/code> on that object manually to trigger any initialization events.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"0","accepted":""},"14699299":{"id":"14699299","date":"2013-02","score":"4","body":"\"<p>Don't run <code>rake assets:precompile<\\\/code> locally if you want to see local changes appear. I suspect this is what you're doing, so that's why local changes are not appearing. Clear <code>public\\\/assets<\\\/code> and then it will start to serve assets from the right directories, compiling them if they change and then serving.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><sass><asset-pipeline><sprockets>","commentcount":"3","accepted":"yes"},"14741471":{"id":"14741471","date":"2013-02","score":"3","body":"\"<p>You can get to the Rails application's routing helpers using this method:<\\\/p>\\n\\n<pre><code>Rails.application.routes.url_helpers\\n<\\\/code><\\\/pre>\\n\\n<p>To access a helper from this module, just call the method on it and pass it a host:<\\\/p>\\n\\n<pre><code>Rails.application.routes.url_helpers.products_url(:host =&gt; \\\"example.com\\\")\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><url>","commentcount":"9","accepted":""},"14783489":{"id":"14783489","date":"2013-02","score":"1","body":"\"<p><code>querySelector<\\\/code> <a href=\\\"http:\\\/\\\/caniuse.com\\\/queryselector\\\" rel=\\\"nofollow\\\">is not supported in some browser versions<\\\/a>, whereas jQuery's <code>$()<\\\/code> is.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<jquery-selectors><cross-browser><css-selectors><greasemonkey><userscripts>","commentcount":"1","accepted":""},"14802240":{"id":"14802240","date":"2013-02","score":"2","body":"\"<p><code>edit_project_path<\\\/code> doesn't know which project you mean to edit. This routing helper would take a <code>Project<\\\/code> instance, which it would then route to like <code>\\\/projects\\\/1\\\/edit<\\\/code>. Perhaps you meant to use <code>projects_path<\\\/code>?<\\\/p>\\n\\n<p>The <code>projects_path<\\\/code> method would go to <code>ProjectsController's<\\\/code> <code>index<\\\/code> action, which is where (typically) a list of projects are provided with links to edit them on that page.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><controller><routes>","commentcount":"1","accepted":"yes"},"14821724":{"id":"14821724","date":"2013-02","score":"11","body":"\"<p>If you don't have access to create branches on that repository, there is no way to create a pull request without forking.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><github><fork><repository>","commentcount":"0","accepted":"yes"},"14823040":{"id":"14823040","date":"2013-02","score":"3","body":"\"<p>I think this line:<\\\/p>\\n\\n<pre><code>@title - \\\"Sign In\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Should be this:<\\\/p>\\n\\n<pre><code>@title = \\\"Sign In\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><user>","commentcount":"7","accepted":""},"14885593":{"id":"14885593","date":"2013-02","score":"2","body":"\"<p>If there is no <code>schedule<\\\/code> associated object on your model instance, yes you will need to call <code>build_schedule<\\\/code> wherever you want to reference it. If you didn't do this, the form wouldn't render at all because it has nothing to display the fields for.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"14907402":{"id":"14907402","date":"2013-02","score":"3","body":"\"<p>It's explained in their blog post, here: <a href=\\\"https:\\\/\\\/github.com\\\/blog\\\/1345-introducing-boxen\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/blog\\\/1345-introducing-boxen<\\\/a><\\\/p>\\n\\n<blockquote>\\n  <p>Boxen is a framework for managing almost every aspect of your Mac. We built a massive standard library of Puppet modules optimized for Boxen to manage everything from running MySQL to installing Minecraft.<\\\/p>\\n<\\\/blockquote>\\n\"","title":"\"\"","favorite":null,"tags":"<osx><github><boxen>","commentcount":"0","accepted":""},"14907422":{"id":"14907422","date":"2013-02","score":"0","body":"\"<p>It sounds like you forgot to install the <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree_auth_devise\\\" rel=\\\"nofollow\\\">spree_auth_devise<\\\/a> extension. Please consult that project's README for instructions on how to install it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree>","commentcount":"0","accepted":""},"14926125":{"id":"14926125","date":"2013-02","score":"0","body":"\"<p>You will need to assign it to a variable:<\\\/p>\\n\\n<pre><code>another_object = @main_object.build_anotherobject\\n<\\\/code><\\\/pre>\\n\\n<p>And then:<\\\/p>\\n\\n<pre><code>another_object.even_more_objects.build\\n<\\\/code><\\\/pre>\\n\\n<p>Repeat as you need to.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"14967741":{"id":"14967741","date":"2013-02","score":"2","body":"\"<p>There is no way to override a route within an engine. Instead, you must define an overruling route. You can do this by calling <code>prepend<\\\/code> on the engine's router:<\\\/p>\\n\\n<pre><code>An::Engine.routes.prepend do\\n  root :to =&gt; \\\"somewhere#action\\\"\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>If the engine's namespace is isolated, this will use the <code>SomewhereController<\\\/code> from inside the engine's namespace. If not, it will use the typical <code>SomewhereController<\\\/code>.<\\\/p>\\n\\n<p>If you want to override a route to return a 404, the best way I can think of is to redirect to a 404 page:<\\\/p>\\n\\n<pre><code>match \\\"\\\/route_goes_here\\\" =&gt; redirect(\\\"\\\/404\\\")\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routes><rails-engines>","commentcount":"1","accepted":""},"15016137":{"id":"15016137","date":"2013-02","score":"4","body":"\"<p>This test is failing because <code>bank<\\\/code> is fetched from the database and stored. The <code>after_create<\\\/code> callback modifies the record in the database, but the object in <code>bank<\\\/code> doesn't see that, and so isn't updated.<\\\/p>\\n\\n<p>You're going to need to call <code>reload<\\\/code> on that object before checking the amount:<\\\/p>\\n\\n<pre><code>bank.reload\\nbank.amount.to_i.should == 750\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><testing><rspec><factory-girl>","commentcount":"1","accepted":"yes"},"15175953":{"id":"15175953","date":"2013-03","score":"0","body":"\"<p>The first example ...<\\\/p>\\n\\n<pre><code>module MyStuff\\n  def MyStuff.apple()\\n    puts \\\"I AM APPLES!\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>... works because you're defining the method ON the module instead of IN the module, which is what you're doing with the second example:<\\\/p>\\n\\n<pre><code>module MyStuff\\n  def apple()\\n    puts \\\"I AM APPLES!\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>It's similar to if you had a class and did the same thing:<\\\/p>\\n\\n<pre><code>class Conrad\\n  def Conrad.apple()\\n    puts \\\"I AM APPLES\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>You can also use <code>def self.apple()<\\\/code>, which means the same:<\\\/p>\\n\\n<pre><code>class Conrad\\n  def self.apple()\\n    puts \\\"I AM APPLES\\\"\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>In both cases, you're defining a method on the class itself rather than instances of that class.<\\\/p>\\n\\n<p>In the case of a module, you're defining a method that would be available to a class if you extended that class (i.e. <code>Conrad.apple<\\\/code>) or that class's instances if you included it instead (i.e. <code>Conrad.new.apple<\\\/code>).<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"0","accepted":""},"15175998":{"id":"15175998","date":"2013-03","score":"2","body":"\"<p>I would just make <code>Category.import<\\\/code> take a filename:<\\\/p>\\n\\n<pre><code>Category.import(\\\"filename\\\", product)\\n<\\\/code><\\\/pre>\\n\\n<p>Then <code>Category.import<\\\/code> just passes this filename to the <code>CSV.foreach<\\\/code> call:<\\\/p>\\n\\n<pre><code>CSV.foreach(filename, headers: true, col_sep: \\\";\\\") do |row|\\n<\\\/code><\\\/pre>\\n\\n<p>It's then not necessary to stub <code>File.open<\\\/code> or any of that jazz.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><rspec-rails>","commentcount":"5","accepted":"yes"},"15180220":{"id":"15180220","date":"2013-03","score":"2","body":"\"<p>This code:<\\\/p>\\n\\n<pre><code>listings=Listing.where(term: term)\\nlistings=Listing.where(furnished: furnished)\\nlistings=Listing.where(negotiable: negotiable)\\nlistings=Listing.where(utilities: utilities)\\nlistings=Listing.where(air_conditioning: air_conditioning)\\nlistings=Listing.where(parking: parking)\\nlistings=Listing.where(washer_dryer: washer_dryer)\\nlistings=Listing.where(private_bathroom: private_bathroom)\\n<\\\/code><\\\/pre>\\n\\n<p>Is not actually filtering <code>listings<\\\/code> down further. Basically, it's reassigning <code>listings<\\\/code> again and again and again. <\\\/p>\\n\\n<p>If you want to apply successive filters to <code>listings<\\\/code>, do this:<\\\/p>\\n\\n<pre><code>listings = Listing.where(term: term)\\nlistings = listings.where(furnished: furnished)\\nlistings = listings.where(negotiable: negotiable)\\n...\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><templates><partial><rails-activerecord>","commentcount":"2","accepted":"yes"},"15188329":{"id":"15188329","date":"2013-03","score":"2","body":"\"<p>Both methods effectively do the same thing: <\\\/p>\\n\\n<ol>\\n<li>Record what the current locale is<\\\/li>\\n<li>Set the locale to the specified locale<\\\/li>\\n<li>Run the provided block of code<\\\/li>\\n<li>Set the locale back to the recorded locale<\\\/li>\\n<\\\/ol>\\n\\n<p>I18n will fetch translations from its locale files, whereas globalize will fetch translations from its database store.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3.2><globalize3>","commentcount":"1","accepted":"yes"},"15239117":{"id":"15239117","date":"2013-03","score":"14","body":"\"<p>If you're running this file locally (which I suspect you are...), this will attempt to find the referenced file on your local system, which will not be there.<\\\/p>\\n\\n<p>To fix this, instead use this:<\\\/p>\\n\\n<pre><code>&lt;script src=\\\"http:\\\/\\\/ajax.googleapis.com\\\/ajax\\\/libs\\\/jquery\\\/1.8.3\\\/jquery.min.js\\\"&gt;&lt;\\\/script&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><jquery><html>","commentcount":"9","accepted":"yes"},"15239139":{"id":"15239139","date":"2013-03","score":"2","body":"\"<p>No, you don't need to type this thing in all the time. You should have some code within your <code>~\\\/.bashrc<\\\/code> or <code>~\\\/.bash_profile<\\\/code> which sources this script for you automatically.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ubuntu>","commentcount":"4","accepted":"yes"},"15239183":{"id":"15239183","date":"2013-03","score":"0","body":"\"<p>It could be because it's a case-sensitive filesystem, where your local system isn't.<\\\/p>\\n\\n<p>Try changing the require to this:<\\\/p>\\n\\n<pre><code>require 'digest\\\/sha2'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><heroku>","commentcount":"0","accepted":"yes"},"15239195":{"id":"15239195","date":"2013-03","score":"1","body":"\"<p>This is because you're using Ruby 1.9 hash syntax when you're using Ruby 1.8. Switching it to <code>=&gt;<\\\/code> will fix this problem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><erb><ruby-on-rails-3.2.1>","commentcount":"0","accepted":"yes"},"15254964":{"id":"15254964","date":"2013-03","score":"1","body":"\"<p>You can force the class name on the association using this option:<\\\/p>\\n\\n<pre><code>has_many :car_settings, :class_name =&gt; \\\"CarSettings\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><associations><relationship><model-associations><plural>","commentcount":"2","accepted":"yes"},"15296857":{"id":"15296857","date":"2013-03","score":"3","body":"\"<p>Please read <a href=\\\"http:\\\/\\\/git-scm.com\\\/book\\\/ch3-2.html\\\" rel=\\\"nofollow\\\">Chapter 3, Section 2 from the Pro Git book<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><checkout>","commentcount":"0","accepted":""},"15301363":{"id":"15301363","date":"2013-03","score":"3","body":"\"<p>This is because the scope is evaluated once, when the class is loaded.<\\\/p>\\n\\n<p>You should define it like this:<\\\/p>\\n\\n<pre><code>def self.active\\n  where(\\\"'#{Time.zone.now}' between start_date and end_date\\\")\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Every time this method is called, it will be re-evaluated and so the time will change.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"15322334":{"id":"15322334","date":"2013-03","score":"2","body":"\"<p>While this file might not be visible within your directory listing, I suspect that there might already be a file within your Git repository, which is what is causing this error from appearing on Heroku and not locally. <\\\/p>\\n\\n<p>Please ensure that you've only got one migration inside that Git repo with that number.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><heroku>","commentcount":"4","accepted":"yes"},"15469358":{"id":"15469358","date":"2013-03","score":"15","body":"\"<p>Yes, there is so totally a way to do this in Rails! <\\\/p>\\n\\n<p>As bdares pointed out in his comment, the lines for template rendering appear in the logs. But how do they even get there in the first place? Well, that has to do with a <a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActiveSupport\\\/LogSubscriber.html\\\">little something in Active Support called <code>LogSubscriber<\\\/code><\\\/a>. The documentation for this is pretty thorough:<\\\/p>\\n\\n<blockquote>\\n  <p>ActiveSupport::LogSubscriber is an object set to consume ActiveSupport::Notifications with the sole purpose of logging them. The log subscriber dispatches notifications to a registered object based on its given namespace.<\\\/p>\\n<\\\/blockquote>\\n\\n<p>The thing that's putting the \\\"Rendered ...\\\" lines in the logs, is <code>ActionView::LogSubscriber<\\\/code> which is defined <a href=\\\"https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-2-stable\\\/actionpack\\\/lib\\\/action_view\\\/log_subscriber.rb\\\">like this within Rails 3.2<\\\/a>. Take a moment to read the code. It's nice and neat.<\\\/p>\\n\\n<p>What this is doing is subscribing to a couple of events within Rails, namely the <code>render_template<\\\/code>, <strong><code>render_partial<\\\/code><\\\/strong> and <code>render_collection<\\\/code> methods. It's doing this by calling the <code>ActiveSupport::LogSubscriber.attach_to<\\\/code> method, which will attach a log subscriber to some events. That method is also interesting, and defined like this:<\\\/p>\\n\\n<pre><code>def attach_to(namespace, log_subscriber=new, notifier=ActiveSupport::Notifications)\\n  log_subscribers &lt;&lt; log_subscriber\\n  @@flushable_loggers = nil\\n\\n  log_subscriber.public_methods(false).each do |event|\\n    next if 'call' == event.to_s\\n\\n    notifier.subscribe(\\\"#{event}.#{namespace}\\\", log_subscriber)\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I've put this code in line because it's <em>extremely relevant to our interests<\\\/em>. What this is doing is calling <code>subscribe<\\\/code> on the <code>notifier<\\\/code> object. The <code>notifier<\\\/code> object is, by default <code>ActiveSupport::Notifications<\\\/code>, which is important to remember. The <a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActiveSupport\\\/Notifications.html\\\">documentation for that class in Rails is in the API too<\\\/a>.<\\\/p>\\n\\n<p>When <code>subscribe<\\\/code> is called, it passes through the name of the <code>event<\\\/code>. What is this? Well, it's every single public method inside the class. When the <code>LogSubscriber<\\\/code> subclass is defined, it defines a couple of public methods: <code>render_template<\\\/code>, <strong><code>render_partial<\\\/code><\\\/strong> and <code>render_collection<\\\/code>. These are the events which will be subscribed to for this log subscriber.<\\\/p>\\n\\n<hr>\\n\\n<p>Now, that's relevant to our interests because we're going to use the same thing to subscribe to these events inside the view. The first step is letting <code>ActiveSupport::Notfications<\\\/code> that we want to subscribe to <em>all<\\\/em> partial rendering events. We can do this by creating a new <code>before_filter<\\\/code> within <code>ApplicationController<\\\/code>:<\\\/p>\\n\\n<pre><code>before_filter :log_partial_events\\n\\ndef log_partial_events\\n  @partial_events = []\\n  ActiveSupport::Notifications.subscribe(\\\"render_partial.action_view\\\") do |event_name, start_at, end_at, id, payload|\\n  @partial_events &lt;&lt; payload[:identifier]\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The event we're subscribing to is the <code>render_partial<\\\/code> event within the <code>action_view<\\\/code> namespace, which is exactly one of the events that <code>ActionView::LogSubscriber<\\\/code> is subscribing to. What will happen when a partial is rendered is that this block will be called and passed in some data.<\\\/p>\\n\\n<p><code>event_name<\\\/code>: The name of the event.\\n<code>start_at<\\\/code>: The time the event started.\\n<code>end_at<\\\/code>: The time the event ended.\\n<code>id<\\\/code>: A unique identifier for this event.\\n<code>payload<\\\/code>: Some payload information about this event.<\\\/p>\\n\\n<p>When the hook's called, it'll add the <code>identifier<\\\/code> key from the <code>payload<\\\/code> to the array defined at the top of the method.<\\\/p>\\n\\n<p>Then in the view, to access a list of these you can do this:<\\\/p>\\n\\n<pre><code>&lt;%= debug @partial_events %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"3","accepted":"yes"},"15543676":{"id":"15543676","date":"2013-03","score":"2","body":"\"<p>Use <code>delete_if<\\\/code><\\\/p>\\n\\n<pre><code>arr.delete_if do |e|\\n  e.match('in') &amp;&amp; e.match('is').blank?\\nend\\narr\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><arrays>","commentcount":"3","accepted":"yes"},"15559289":{"id":"15559289","date":"2013-03","score":"2","body":"\"<p>First: this seems like a homework assignment. Googling for one of the test names, turns up <a href=\\\"https:\\\/\\\/github.com\\\/alexch\\\/learn_ruby\\\/blob\\\/master\\\/05_silly_blocks\\\/silly_blocks_spec.rb\\\" rel=\\\"nofollow\\\">this<\\\/a>.<\\\/p>\\n\\n<p>In the first test, the <code>repeater<\\\/code> method needs to take a block which is then ran so that the variable is set.<\\\/p>\\n\\n<p>In the second test, the <code>repeater<\\\/code> method needs to take an argument and then iterate through the given block the given number of times.<\\\/p>\\n\\n<p>The third test is the same as the second test, except it is supposed to iterate through 10 times and not 3 times. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><rspec>","commentcount":"1","accepted":""},"15754470":{"id":"15754470","date":"2013-04","score":"1","body":"\"<p>Personally, I would recommend using Rails and <a href=\\\"https:\\\/\\\/github.com\\\/nesquena\\\/rabl\\\" rel=\\\"nofollow\\\">Rabl<\\\/a>. If you care about versioning your API (hint: you will) then the <a href=\\\"https:\\\/\\\/github.com\\\/bwillis\\\/versioncake\\\" rel=\\\"nofollow\\\">Version Cake<\\\/a> gem is an absolute must too. People generally don't like it when a third party API changes out from underneath their feet.<\\\/p>\\n\\n<p>For authentication, I'd recommend using a combination of a user id and a token, passed in as either a header (i.e. <code>X-YOURAPP-TOKEN = ryan-a003c850e1<\\\/code>), or as parameters to the action. The \\\"authentication\\\" is then done by splitting this token on the <code>-<\\\/code> and then finding the user record, and then checking if that user's API key matches the remainder of the token. If it does, then the user should be authenticated. Store the user record in an instance variable like <code>@current_api_user<\\\/code> so that it can be accessed in your controllers.<\\\/p>\\n\\n<p>Your controllers are set up in an hierarchy where you have one <code>BaseController<\\\/code> which contains this authentication logic (as a <code>before_filter<\\\/code>) and then the other controllers inherit from that. If you have any other helpers, they would go in this controller too. Obviously I'm assuming you know a bit about Rails at this point.<\\\/p>\\n\\n<p>For authorization, use <a href=\\\"https:\\\/\\\/github.com\\\/ryanb\\\/cancan\\\" rel=\\\"nofollow\\\">CanCan<\\\/a>. It's README and Wiki are great sources of information on how to use it. You'll probably need authorization for your API, even though you didn't say so in your initial post.<\\\/p>\\n\\n<p>Using a similar set up to this is how I built the API for Spree, which you can see here: <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/tree\\\/master\\\/api\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/spree\\\/spree\\\/tree\\\/master\\\/api<\\\/a>.<\\\/p>\\n\\n<hr>\\n\\n<p>Other people would recommend the use of <a href=\\\"http:\\\/\\\/sinatrarb.com\\\" rel=\\\"nofollow\\\">Sinatra<\\\/a> over Rails, and <a href=\\\"https:\\\/\\\/github.com\\\/josevalim\\\/active_model_serializers\\\" rel=\\\"nofollow\\\">Active Model Serializers<\\\/a> over Rabl. Others still will recommend that you go with a <a href=\\\"https:\\\/\\\/www.google.com.au\\\/search?q=hypermedia+API\\\" rel=\\\"nofollow\\\">Hypermedia API<\\\/a> rather than a traditional REST interface. There's even <a href=\\\"http:\\\/\\\/www.designinghypermediaapis.com\\\/\\\" rel=\\\"nofollow\\\">a book<\\\/a> about how you could do that.<\\\/p>\\n\\n<p>Honestly, it's up to you what you decide to use.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><sinatra>","commentcount":"1","accepted":""},"16025798":{"id":"16025798","date":"2013-04","score":"7","body":"\"<p>Mario Visic points out this description in the Capybara documentation:<\\\/p>\\n\\n<blockquote>\\n  <p>Furthermore, you cannot use the RackTest driver to test a remote application, or to access remote URLs (e.g., redirects to external sites, external APIs, or OAuth services) that your application might interact with.<\\\/p>\\n<\\\/blockquote>\\n\\n<p>But I wanted to know why, so I source dived. Here's my findings:<\\\/p>\\n\\n<p><strong>lib\\\/capybara\\\/node\\\/actions.rb<\\\/strong><\\\/p>\\n\\n<pre><code>def click_button(locator)\\n  find(:button, locator).click\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I don't care about the <code>find<\\\/code> here because that's working. It's the <code>click<\\\/code> that's more interesting. That method is defined like this:<\\\/p>\\n\\n<p><strong>lib\\\/capybara\\\/node\\\/element.rb<\\\/strong><\\\/p>\\n\\n<pre><code>def click\\n  wait_until { base.click }\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I don't know what <code>base<\\\/code> is, but I see the method is defined twice more in <code>lib\\\/capybara\\\/rack_test\\\/node.rb<\\\/code> and <code>lib\\\/capybara\\\/selenium\\\/node.rb<\\\/code>. The tests are using <code>Rack::Test<\\\/code> and not Selenium, so it's probably the former:<\\\/p>\\n\\n<p><strong>lib\\\/capybara\\\/rack_test\\\/node.rb<\\\/strong><\\\/p>\\n\\n<pre><code>def click\\n  if tag_name == 'a'\\n    method = self[\\\"data-method\\\"] if driver.options[:respect_data_method]\\n    method ||= :get\\n    driver.follow(method, self[:href].to_s)\\n  elsif (tag_name == 'input' and %w(submit image).include?(type)) or\\n    ((tag_name == 'button') and type.nil? or type == \\\"submit\\\")\\n    Capybara::RackTest::Form.new(driver, form).submit(self)\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>tag_name<\\\/code> is probably not a link -- because it's a button we're clicking -- so it falls to the <code>elsif<\\\/code>. It's definitely an <code>input<\\\/code> tag with <code>type == \\\"submit\\\"<\\\/code>, so then let's see what <code>Capybara::RackTest::Form<\\\/code> does:<\\\/p>\\n\\n<p><strong>lib\\\/capybara\\\/rack_test\\\/form.rb<\\\/strong><\\\/p>\\n\\n<pre><code>def submit(button)\\n  driver.submit(method, native['action'].to_s, params(button))\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Ok then. <code>driver<\\\/code> is probably the <code>Rack::Test<\\\/code> driver for Capybara. What's that doing?<\\\/p>\\n\\n<p><strong>lib\\\/capybara\\\/rack_test\\\/driver.rb<\\\/strong><\\\/p>\\n\\n<pre><code>def submit(method, path, attributes)\\n  browser.submit(method, path, attributes)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>What is this mysterious browser? It's defined in the same file thankfully:<\\\/p>\\n\\n<pre><code>def browser\\n  @browser ||= Capybara::RackTest::Browser.new(self)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Let's look at what this class's <code>submit<\\\/code> method does.<\\\/p>\\n\\n<p><strong>lib\\\/capybara\\\/rack_test\\\/browser.rb<\\\/strong><\\\/p>\\n\\n<pre><code>def submit(method, path, attributes)\\n  path = request_path if not path or path.empty?\\n  process_and_follow_redirects(method, path, attributes, {'HTTP_REFERER' =&gt; current_url})\\nend\\n<\\\/code><\\\/pre>\\n\\n<p><code>process_and_follow_redirects<\\\/code> does what it says on the box:<\\\/p>\\n\\n<pre><code>def process_and_follow_redirects(method, path, attributes = {}, env = {})\\n  process(method, path, attributes, env)\\n  5.times do\\n    process(:get, last_response[\\\"Location\\\"], {}, env) if last_response.redirect?\\n  end\\n  raise Capybara::InfiniteRedirectError, \\\"redirected more than 5 times, check for infinite redirects.\\\" if last_response.redirect?\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>So does <code>process<\\\/code>:<\\\/p>\\n\\n<pre><code>def process(method, path, attributes = {}, env = {})\\n  new_uri = URI.parse(path)\\n  method.downcase! unless method.is_a? Symbol\\n\\n  if new_uri.host\\n    @current_host = \\\"#{new_uri.scheme}:\\\/\\\/#{new_uri.host}\\\"\\n    @current_host &lt;&lt; \\\":#{new_uri.port}\\\" if new_uri.port != new_uri.default_port\\n  end\\n\\n  if new_uri.relative?\\n    if path.start_with?('?')\\n      path = request_path + path\\n    elsif not path.start_with?('\\\/')\\n      path = request_path.sub(%r(\\\/[^\\\/]*$), '\\\/') + path\\n    end\\n    path = current_host + path\\n  end\\n\\n  reset_cache!\\n  send(method, path, attributes, env.merge(options[:headers] || {}))\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Time to break out the debugger and see what <code>method<\\\/code> is here. Sticking a <code>binding.pry<\\\/code> before the final line in that method, and a <code>require 'pry'<\\\/code> in the test. It turns out <code>method<\\\/code> is <code>:post<\\\/code> and, for interest's sake, <code>new_uri<\\\/code> is a <code>URI<\\\/code> object with our remote form's URL.<\\\/p>\\n\\n<p>Where's this <code>post<\\\/code> method coming from? <code>method(:post).source_location<\\\/code> tells me:<\\\/p>\\n\\n<pre><code>[\\\"\\\/Users\\\/ryan\\\/.rbenv\\\/versions\\\/1.9.3-p374\\\/lib\\\/ruby\\\/1.9.1\\\/forwardable.rb\\\", 199]\\n<\\\/code><\\\/pre>\\n\\n<p>That doesn't seem right... Does Capybara have a <code>def post<\\\/code> somewhere?<\\\/p>\\n\\n<pre><code>capybara (master)?ack \\\"def post\\\"\\nlib\\\/capybara\\\/rack_test\\\/driver.rb\\n76:  def post(*args, &amp;block); browser.post(*args, &amp;block); end\\n<\\\/code><\\\/pre>\\n\\n<p>Cool. We know that <code>browser is a<\\\/code>Capybara::RackTest::Browser` object. The class beginning gives the next hint:<\\\/p>\\n\\n<pre><code>class Capybara::RackTest::Browser\\n  include ::Rack::Test::Methods\\n<\\\/code><\\\/pre>\\n\\n<p>I know that <code>Rack::Test::Methods<\\\/code> comes with a <code>post<\\\/code> method. Time to dive into that gem.<\\\/p>\\n\\n<p><strong>lib\\\/rack\\\/test.rb<\\\/strong><\\\/p>\\n\\n<pre><code>def post(uri, params = {}, env = {}, &amp;block)\\n  env = env_for(uri, env.merge(:method =&gt; \\\"POST\\\", :params =&gt; params))\\n  process_request(uri, env, &amp;block)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Ignoring <code>env_for<\\\/code> for the time being, what does <code>process_request<\\\/code> do?<\\\/p>\\n\\n<p><strong>lib\\\/rack\\\/test.rb<\\\/strong><\\\/p>\\n\\n<pre><code>def process_request(uri, env)\\n  uri = URI.parse(uri)\\n  uri.host ||= @default_host\\n\\n  @rack_mock_session.request(uri, env)\\n\\n  if retry_with_digest_auth?(env)\\n    auth_env = env.merge({\\n      \\\"HTTP_AUTHORIZATION\\\"          =&gt; digest_auth_header,\\n      \\\"rack-test.digest_auth_retry\\\" =&gt; true\\n    })\\n    auth_env.delete('rack.request')\\n    process_request(uri.path, auth_env)\\n  else\\n    yield last_response if block_given?\\n\\n    last_response\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Hey, <code>@rack_mock_session<\\\/code> looks interesting. Where's that defined?<\\\/p>\\n\\n<pre><code>rack-test (master)?ack \\\"@rack_mock_session =\\\"\\nlib\\\/rack\\\/test.rb\\n40:          @rack_mock_session = mock_session\\n42:          @rack_mock_session = MockSession.new(mock_session)\\n<\\\/code><\\\/pre>\\n\\n<p>In two places, very close to each other. What's on and around these lines?<\\\/p>\\n\\n<pre><code>def initialize(mock_session)\\n  @headers = {}\\n\\n  if mock_session.is_a?(MockSession)\\n    @rack_mock_session = mock_session\\n  else\\n    @rack_mock_session = MockSession.new(mock_session)\\n  end\\n\\n  @default_host = @rack_mock_session.default_host\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Ok then, so it ensures it is a <code>MockSession<\\\/code> object. What's <code>MockSession<\\\/code> and how is its <code>request<\\\/code> method defined?<\\\/p>\\n\\n<pre><code>def request(uri, env)\\n  env[\\\"HTTP_COOKIE\\\"] ||= cookie_jar.for(uri)\\n  @last_request = Rack::Request.new(env)\\n  status, headers, body = @app.call(@last_request.env)\\n  headers[\\\"Referer\\\"] = env[\\\"HTTP_REFERER\\\"] || \\\"\\\"\\n\\n  @last_response = MockResponse.new(status, headers, body, env[\\\"rack.errors\\\"].flush)\\n  body.close if body.respond_to?(:close)\\n\\n  cookie_jar.merge(last_response.headers[\\\"Set-Cookie\\\"], uri)\\n\\n  @after_request.each { |hook| hook.call }\\n\\n  if @last_response.respond_to?(:finish)\\n    @last_response.finish\\n  else\\n    @last_response\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I'm going to go right ahead here and assume <code>@app<\\\/code> is the Rack application stack. By calling the <code>call<\\\/code> method, the request is routed directly to this stack, rather going out to the world.<\\\/p>\\n\\n<p>I conclude that this behaviour looks like its intentional and that I can indeed rely on it being that way.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":""},"16071507":{"id":"16071507","date":"2013-04","score":"2","body":"\"<p>Is that really the code for <code>CompaniesController<\\\/code>? Do you know that the class should be defined like this instead?<\\\/p>\\n\\n<pre><code>class CompaniesController &lt; ApplicationController\\n  skip_before_filter :require_login\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Also, if you're doing multitenancy stuff with Rails, you might want to check out my book about doing that: <a href=\\\"https:\\\/\\\/leanpub.com\\\/multi-tenancy-rails\\\" rel=\\\"nofollow\\\">Multitenancy with Rails<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><cloudfoundry><production-environment>","commentcount":"2","accepted":"yes"},"16182725":{"id":"16182725","date":"2013-04","score":"2","body":"\"<p>This is due to the pluralization rules in Rails being better suited for English than for other languages.<\\\/p>\\n\\n<p>I would strongly recommend avoiding the scaffold generator and just generating your controllers and models using these two commands:<\\\/p>\\n\\n<pre><code>rails g controller artigos\\nrails g model artigo category:string\\n<\\\/code><\\\/pre>\\n\\n<p>And then building out from there.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><model-view-controller>","commentcount":"2","accepted":"yes"},"16182740":{"id":"16182740","date":"2013-04","score":"2","body":"\"<p>This is your issue:<\\\/p>\\n\\n<pre><code>FATAL:  role \\\"bbyidx\\\" does not exist (PGError)\\n<\\\/code><\\\/pre>\\n\\n<p>You're attempting to connect to your PostgreSQL database using a role that doesn't exist. You can create this role by using the <code>createuser<\\\/code> command in your terminal.<\\\/p>\\n\\n<pre><code>createuser bbyidx\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"4","accepted":"yes"},"16210515":{"id":"16210515","date":"2013-04","score":"4","body":"\"<p>I wrote a book about this: <a href=\\\"http:\\\/\\\/leanpub.com\\\/multi-tenancy-rails\\\" rel=\\\"nofollow\\\">http:\\\/\\\/leanpub.com\\\/multi-tenancy-rails<\\\/a>. It's $20 and is pretty step-by-step.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3.2><multi-tenant>","commentcount":"6","accepted":""},"16370110":{"id":"16370110","date":"2013-05","score":"1","body":"\"<p>Seems like you don't have permissions to install gems on your machine. In particular, to the version of Ruby on your machine that lives in <code>\\\/Library<\\\/code>. A common problem.<\\\/p>\\n\\n<p>What I would recommend doing is using a Ruby management tool like <a href=\\\"https:\\\/\\\/github.com\\\/sstephenson\\\/rbenv\\\/\\\" rel=\\\"nofollow\\\">rbenv<\\\/a> to manage your Ruby installation. This would install a version of Ruby within your home directory and because its files will be owned by you, you will be able to install gems as you please.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><osx><osx-mountain-lion>","commentcount":"1","accepted":""},"16370685":{"id":"16370685","date":"2013-05","score":"1","body":"\"<p>Why not delete <code>public\\\/index.html.erb<\\\/code>? That's a static page and you can't have dynamic elements on it like pagination.<\\\/p>\\n\\n<p>The root request for your application should be being dealt with by a root route:<\\\/p>\\n\\n<pre><code>root :to =&gt; \\\"home#index\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>Then the pagination logic in <code>app\\\/views\\\/home\\\/index.html.erb<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><will-paginate><paginate>","commentcount":"1","accepted":""},"16495481":{"id":"16495481","date":"2013-05","score":"1","body":"\"<p>You want something like this:<\\\/p>\\n\\n<pre><code>first = @array[0..4]\\nlast = @array[5..9]\\n<\\\/code><\\\/pre>\\n\\n<p>That will return the first five and the last five elements from the array in two separate variables. If you do it this way and you will not get any overlap.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"2","accepted":"yes"},"16868370":{"id":"16868370","date":"2013-06","score":"1","body":"\"<pre><code>&lt;%= javascript_include_tag :defaults %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This tag is from Rails versions pre 3.1. Are you sure this is what you want to do?<\\\/p>\\n\\n<p>In newer applications, this line is typically including the application JavaScript file instead:<\\\/p>\\n\\n<pre><code>&lt;%= javascript_include_tag \\\"application\\\" %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>This is made possible due to the Asset Pipeline which you can learn about by reading <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/asset_pipeline.html\\\" rel=\\\"nofollow\\\">The Asset Pipeline Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><passenger>","commentcount":"2","accepted":"yes"},"17057318":{"id":"17057318","date":"2013-06","score":"3","body":"\"<p>I work for Spree Commerce and I'd like to apologise about this error. When we wrote the code that connects to Jirafe, we did not include safeguards against the situation where Jirafe was down. This means that when Jirafe inevitably goes down, we run into this sort of problem.<\\\/p>\\n\\n<p>I've personally fixed this now on the 1-3-stable, 2-0-stable and master branches. I've also just done a 2.0.3 release, which removes the dashboard completely. Please upgrade to that version:<\\\/p>\\n\\n<pre><code>gem \\\"spree\\\", \\\"2.0.3\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><spree>","commentcount":"6","accepted":"yes"},"17061051":{"id":"17061051","date":"2013-06","score":"1","body":"\"<p>To find only the article with ID=1:<\\\/p>\\n\\n<pre><code>Article.find(1)\\n<\\\/code><\\\/pre>\\n\\n<p>For more information like this, please read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/active_record_querying.html\\\" rel=\\\"nofollow\\\">Active Record Querying Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-3.1>","commentcount":"0","accepted":"yes"},"17308762":{"id":"17308762","date":"2013-06","score":"0","body":"\"<p>\\\"Chinese\\\" and \\\"Indian\\\" would be the taxonomies, while \\\"Noodles\\\", \\\"Mamos\\\", \\\"Dosa\\\" and \\\"Bread\\\" would be taxons nested inside those taxonomies.<\\\/p>\\n\\n<p>For more information, please read <a href=\\\"http:\\\/\\\/guides.spreecommerce.com\\\/developer\\\/products.html#taxons-and-taxonomies\\\" rel=\\\"nofollow\\\">the \\\"Taxons and Taxonomies\\\" section of the Products guide.<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<spree>","commentcount":"1","accepted":""},"17437938":{"id":"17437938","date":"2013-07","score":"1","body":"\"<p>This sounds like a perfect usage of <code>counter_cache<\\\/code>.<\\\/p>\\n\\n<pre><code>class OfferClaim\\n  belongs_to :offer, :counter_cache =&gt; true\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This would increment an <code>offer_claim_count<\\\/code> column on the <code>offers<\\\/code> table whenever a new <code>OfferClaim<\\\/code> is created (and decrement it when it's deleted).<\\\/p>\\n\\n<p>Then your query would be:<\\\/p>\\n\\n<pre><code>Offer.where(\\\"offer.claim_limit &gt; offer_claims_count\\\")\\n<\\\/code><\\\/pre>\\n\\n<p>No <code>joins<\\\/code> statement required.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"3","accepted":""},"17520222":{"id":"17520222","date":"2013-07","score":"1","body":"\"<p>I think the <code>lib<\\\/code> in your <code>require_dependency<\\\/code> is extraneous:<\\\/p>\\n\\n<pre><code>require_dependency 'extensions\\\/enumerable.rb'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3.2><rails-engines><activesupport>","commentcount":"1","accepted":"yes"},"17520246":{"id":"17520246","date":"2013-07","score":"1","body":"\"<p>Using this syntax within a controller: <\\\/p>\\n\\n<pre><code>render \\\"new\\\", :locals =&gt; { :template =&gt; @doc.template_id }\\n<\\\/code><\\\/pre>\\n\\n<p>means that you're rendering the <code>new.html.erb<\\\/code> template, not a partial. You are unable to pass local variables along to a non-partial view. What you should be doing is calling <code>render \\\"new\\\"<\\\/code>, and referring to <code>@doc<\\\/code> in that view as you require it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><templates>","commentcount":"0","accepted":"yes"},"17582035":{"id":"17582035","date":"2013-07","score":"2","body":"\"<p>It is indeed your routes file:<\\\/p>\\n\\n<pre><code>root to: \\\"root_path\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>This should be something like:<\\\/p>\\n\\n<pre><code>root to: \\\"controller#action\\\"\\n<\\\/code><\\\/pre>\\n\\n<p><code>root_path<\\\/code> is the helper name that is automatically generated by Rails when you have a <code>root<\\\/code> definition in your routes file.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"17582230":{"id":"17582230","date":"2013-07","score":"3","body":"\"<p>I work on an eCommerce gem written with Rails called <a href=\\\"http:\\\/\\\/spreecommerce.com\\\" rel=\\\"nofollow\\\">Spree<\\\/a>. Here's how we've solved that problem.<\\\/p>\\n\\n<p>We have 4 models: <code>Variant<\\\/code>, <code>Product<\\\/code>, <code>Order<\\\/code> and <code>LineItem<\\\/code>. These form the basics of our ordering system. A variant can be considered like a \\\"mutation\\\" of a product. Say you have a TShirt that could come in Red, Green or Blue. The Product is the TShirt, while the colours are the variants.<\\\/p>\\n\\n<p>Variants are linked to Orders by way of LineItems. The LineItem object stores: a <code>variant_id<\\\/code>, a <code>quantity<\\\/code> and the current price of the variant, just in case that changes later. You don't want prices changing on users unexpectedly!<\\\/p>\\n\\n<p>The logic for adding an item to the cart is simply a form with a variant_id and a quantity field on the product's page. <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/1-3-stable\\\/core\\\/app\\\/views\\\/spree\\\/products\\\/_cart_form.html.erb\\\" rel=\\\"nofollow\\\">Here's Spree's version<\\\/a>. The controller's action that deals with that form basically takes the variant_id and quantity, and does this:<\\\/p>\\n\\n<ol>\\n<li>Checks if an order already exists<\\\/li>\\n<li>If an order doesn't exist, creates one<\\\/li>\\n<li>Creates a new line item on the order with the quantity and variant_id specified, and stores the price.<\\\/li>\\n<\\\/ol>\\n\\n<p>Spree's voodoo around this is a little more complex as we care about inventory levels and so on, but that's the basic gist of it.<\\\/p>\\n\\n<p>When the user goes to view their cart, we present them with a form with all the line items and a quantity numeric field.  That form looks like this: <\\\/p>\\n\\n<p><img src=\\\"http:\\\/\\\/f.cl.ly\\\/items\\\/3P3t3o1F283a1e0Z3e0C\\\/Screen%20Shot%202013-07-11%20at%208.39.20%20AM.png\\\" alt=\\\"checkout\\\"><\\\/p>\\n\\n<p>The code to produce that form is in three files: <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/1993023ae154503274846496e4f16db906d12bae\\\/frontend\\\/app\\\/views\\\/spree\\\/orders\\\/edit.html.erb\\\" rel=\\\"nofollow\\\"><code>orders\\\/edit.html.erb<\\\/code><\\\/a>, <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/1993023ae154503274846496e4f16db906d12baee\\\/frontend\\\/app\\\/views\\\/spree\\\/orders\\\/_form.html.erb\\\" rel=\\\"nofollow\\\"><code>orders\\\/_form.html.erb<\\\/code><\\\/a> and <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/1993023ae154503274846496e4f16db906d12baee\\\/frontend\\\/app\\\/views\\\/spree\\\/orders\\\/_line_item.html.erb\\\" rel=\\\"nofollow\\\"><code>orders\\\/_line_item.html.erb<\\\/code><\\\/a><\\\/p>\\n\\n<p>That form works by submitting to <code>OrdersController#update<\\\/code>, and due to the fields in the form being nested attributes, the entire order and its line items are updated suitably.<\\\/p>\\n\\n<p>I hope this helps you!<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><forms><product><cart>","commentcount":"1","accepted":""},"17583727":{"id":"17583727","date":"2013-07","score":"0","body":"\"<p>This was filed on Spree and fixed there too: <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/issues\\\/3331\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/spree\\\/spree\\\/issues\\\/3331<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><spree>","commentcount":"0","accepted":""},"17648100":{"id":"17648100","date":"2013-07","score":"-1","body":"\"<p>Call it like a regular JavaScript function:<\\\/p>\\n\\n<pre><code>&lt;script&gt;    \\n  square(5)\\n&lt;\\\/script&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><scope><coffeescript><iced-coffeescript><coffeescript-resources>","commentcount":"1","accepted":""},"17666831":{"id":"17666831","date":"2013-07","score":"0","body":"\"<p>Use the <code>taps<\\\/code> gem, as shown in <a href=\\\"https:\\\/\\\/github.com\\\/radar\\\/forem\\\/issues\\\/421\\\" rel=\\\"nofollow\\\">this Railscast<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><sqlite><postgresql><heroku><sinatra>","commentcount":"0","accepted":""},"17824703":{"id":"17824703","date":"2013-07","score":"1","body":"\"<p>This is because when you installed Ruby you did not install the build tools as well.<\\\/p>\\n\\n<p>I wrote <a href=\\\"http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\/\\\" rel=\\\"nofollow\\\">a blog post about installing Ruby + Rails on Ubuntu<\\\/a> that has helped out a lot of people, and will probably help you too.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"3","accepted":"yes"},"17848714":{"id":"17848714","date":"2013-07","score":"0","body":"\"<p>This answer depends on what DBMS you're using.<\\\/p>\\n\\n<p>You can of course drop the entire database and create it once again... but if you have data in other tables you care about then this is a bad idea.<\\\/p>\\n\\n<p>I'm going to go right ahead and assume you're using one of SQLite3, MySQL or PostgreSQL.<\\\/p>\\n\\n<ul>\\n<li><a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/1601697\\\/sqlite-reset-primary-key-field\\\">Here's how to do it in SQLite3<\\\/a><\\\/li>\\n<li><a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/1809893\\\/reset-primary-key-in-mysql\\\">And MySQL<\\\/a><\\\/li>\\n<li><a href=\\\"http:\\\/\\\/stackoverflow.com\\\/questions\\\/3819292\\\/reset-postgresql-primary-key-to-1\\\">And PostgreSQL<\\\/a><\\\/li>\\n<\\\/ul>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"0","accepted":""},"17848730":{"id":"17848730","date":"2013-07","score":"1","body":"\"<p>Your answers are probably in the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/asset_pipeline.html\\\" rel=\\\"nofollow\\\">Asset Pipeline Guide<\\\/a>, but I'll provide some info here too.<\\\/p>\\n\\n<p>The server will only send these files all the time when your server is running in the development environment. In production, these files should be precompiled (using <code>rake assets:precompile<\\\/code>) so that as minimal amount of files are served as possible. <\\\/p>\\n\\n<p>I'd encourage you to give the guide a more thorough read through for what I mean.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"17849102":{"id":"17849102","date":"2013-07","score":"0","body":"\"<p>You would need to create your own version of that. I don't know of any extensions that offer that support.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.2><spree>","commentcount":"2","accepted":""},"17850525":{"id":"17850525","date":"2013-07","score":"0","body":"\"<p>This will work:<\\\/p>\\n\\n<pre><code>has_many :vendors, :class_name =&gt; 'User', :conditions =&gt; { :role =&gt; \\\"vendor\\\" }\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><associations>","commentcount":"0","accepted":""},"17894764":{"id":"17894764","date":"2013-07","score":"2","body":"\"<p>This is happening because your controller is nested inside the <code>Spree<\\\/code> namespace, but your routes are not. If you want to extend Spree's routes, then do this:<\\\/p>\\n\\n<pre><code>Spree::Core::Engine.routes.draw do\\n  namespace :admin do\\n    resources :workflow, :only =&gt; [:index, :show]\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><devise><spree>","commentcount":"2","accepted":"yes"},"17914208":{"id":"17914208","date":"2013-07","score":"1","body":"\"<p>You can do this by calling the <code>user<\\\/code> method on the comment, and then <code>name<\\\/code> on that:<\\\/p>\\n\\n<pre><code>&lt;%= comment.user.name %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>You can also define a <code>to_s<\\\/code> method in the <code>User<\\\/code> model:<\\\/p>\\n\\n<pre><code>def to_s\\n  name\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Which would mean you could get away with doing just this in the view:<\\\/p>\\n\\n<pre><code>&lt;%= comment.user %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>If you're loading a whole bunch of comments, then I would recommend loading them this way:<\\\/p>\\n\\n<pre><code>@comments = Comment.includes(:user)\\n<\\\/code><\\\/pre>\\n\\n<p>If you don't have that <code>includes(:user)<\\\/code> there, then Rails will issue a new query for every single comment to find that comment's user. Doing it this way makes Rails load all the users for all the comments upfront in just one query.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><blogs>","commentcount":"6","accepted":""},"17914222":{"id":"17914222","date":"2013-07","score":"2","body":"\"<p>Your code should be this:<\\\/p>\\n\\n<pre><code>where(\\\"fb_provider = ? and fb_uid = ?\\\", auth['provider'], auth['uid'].to_s ...\\n<\\\/code><\\\/pre>\\n\\n<p>This is because <code>auth<\\\/code> in this instance is a <code>Hash<\\\/code> object and <code>Hash<\\\/code> objects do not respond to methods by the same name as their keys. Instead, you should just use the <code>Hash#[]<\\\/code> method -- as I've demonstrated -- to access the value for those keys.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><facebook><rspec><capybara>","commentcount":"0","accepted":"yes"},"17935440":{"id":"17935440","date":"2013-07","score":"2","body":"\"<p>Please don't use regex for this. Use the Money gem:<\\\/p>\\n\\n<pre><code>Money.new(amount_in_cents)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><regex><string><floating-point><gsub>","commentcount":"1","accepted":"yes"},"17982879":{"id":"17982879","date":"2013-07","score":"0","body":"\"<p>I would guess that this was a bug that was fixed between Spree 1.3.2 and Spree 1.3.3. I highly recommend using 1.3.3, as that is the latest stable gem release from that branch and probably contains more than just that fix.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><spree>","commentcount":"0","accepted":""},"17982920":{"id":"17982920","date":"2013-07","score":"0","body":"\"<p>You're getting this error because <code>form_for(@short)<\\\/code>, where <code>@short<\\\/code> is a new <code>Short<\\\/code> record, will attempt to use the path helper called <code>shorts_path<\\\/code> to route to where the form needs to go. You're missing this route definition in your <code>config\\\/routes.rb<\\\/code> file:<\\\/p>\\n\\n<pre><code> resources :shorts\\n<\\\/code><\\\/pre>\\n\\n<p>Please read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\\\" rel=\\\"nofollow\\\">Getting Started<\\\/a> and <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing<\\\/a> guides, which should explain the things that you're missing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><form-for>","commentcount":"0","accepted":""},"17983224":{"id":"17983224","date":"2013-08","score":"1","body":"\"<p>You're changing the method call there on the <code>String<\\\/code>. Previously, you're doing effectively this:<\\\/p>\\n\\n<p><code>super.+(string)<\\\/code><\\\/p>\\n\\n<p>Now, you're doing this <code>super(+string)<\\\/code>. The <code>+@<\\\/code> method isn't defined on String (it's defined on numbers though, and just returns a positive number), and that's why you're seeing this error.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby>","commentcount":"0","accepted":"yes"},"18028334":{"id":"18028334","date":"2013-08","score":"0","body":"\"<p>The error is included in the logs:<\\\/p>\\n\\n<pre><code>ActionView::Template::Error (Missing partial songs\\\/new_songs, application\\\/new_songs with {:locale=&gt;[:en], :formats=&gt;[:js, \\\"application\\\/ecmascript\\\", \\\"application\\\/x-ecmascript\\\", :html, :text, :css, :ics, :csv, :png, :jpeg, :gif, :bmp, :tiff, :mpeg, :xml, :rss, :atom, :yaml, :multipart_form, :url_encoded_form, :json, :pdf, :zip], :handlers=&gt;[:erb, :builder, :raw, :ruby, :coffee, :jbuilder]}. Searched in:\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-4>","commentcount":"2","accepted":""},"18028447":{"id":"18028447","date":"2013-08","score":"1","body":"\"<p>What does <code>which gem<\\\/code> output? Ruby is already installed on a system level on your computer, and so if that outputs something beginning with <code>\\\/Library<\\\/code> then that's the system path.<\\\/p>\\n\\n<p>I'd recommend re-installing Ruby using something such as <a href=\\\"https:\\\/\\\/github.com\\\/sstephenson\\\/rbenv\\\" rel=\\\"nofollow\\\">rbenv<\\\/a> or <a href=\\\"https:\\\/\\\/github.com\\\/postmodern\\\/chruby\\\" rel=\\\"nofollow\\\">chruby<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-4>","commentcount":"1","accepted":""},"18048444":{"id":"18048444","date":"2013-08","score":"1","body":"\"<p>My guess is that you're running this command at a path that <em>is not<\\\/em> the root of your application, or that the file you're attempting to run does not exist.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec-rails>","commentcount":"0","accepted":""},"18048492":{"id":"18048492","date":"2013-08","score":"1","body":"\"<p>You must add this line to your <code>Gemfile<\\\/code>:<\\\/p>\\n\\n<pre><code>gem 'gmail'\\n<\\\/code><\\\/pre>\\n\\n<p>This is because the gems loaded by your application are restricted to just the ones specified inside the <code>Gemfile<\\\/code>, and their dependencies (and the dependencies of the dependencies, and so on).<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><gem><gmail>","commentcount":"1","accepted":""},"18057365":{"id":"18057365","date":"2013-08","score":"10","body":"\"<p>This is indicating that <code>index.html<\\\/code> has had one line removed, and one line added. This is typical for Git when you change a part of a line. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"0","accepted":"yes"},"18057386":{"id":"18057386","date":"2013-08","score":"1","body":"\"<pre><code>records = Model.limit(10).all\\nrecords.all? { |r| r.column? } \\n<\\\/code><\\\/pre>\\n\\n<p>I think <code>all?<\\\/code> is what you're looking for.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord><boolean-logic>","commentcount":"1","accepted":"yes"},"18061088":{"id":"18061088","date":"2013-08","score":"2","body":"\"<p>The <a href=\\\"https:\\\/\\\/github.com\\\/twbs\\\/bootstrap\\\/pull\\\/6342\\\" rel=\\\"nofollow\\\">v3 Pull Request<\\\/a> on GitHub contains a discussion regarding all the changes in V3. Have a read of that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<twitter-bootstrap>","commentcount":"0","accepted":""},"18095462":{"id":"18095462","date":"2013-08","score":"0","body":"\"<p>Seems quite obvious (to me at least) that you're trying to create a customer for which there is already a <code>Customer<\\\/code> record which has that email address. I can't see your validations, so I'm going to assume there's both a <code>validates_presence_of<\\\/code> and <code>validates_uniqueness_of<\\\/code> in that <code>Customer<\\\/code> model.<\\\/p>\\n\\n<p>Confirm that your CSV file does not contain customers with the same email address.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<csv><ruby-on-rails-3.2>","commentcount":"3","accepted":"yes"},"18096645":{"id":"18096645","date":"2013-08","score":"3","body":"\"<p>Observers were removed from Rails 4. Attempting to instantiate them will just not work. The code example you have is probably from Rails 3.<\\\/p>\\n\\n<p>Remove that line. Nothing bad will happen.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><rspec><spork>","commentcount":"0","accepted":"yes"},"18096663":{"id":"18096663","date":"2013-08","score":"1","body":"\"<p>You must put a space between key and value in YAML:<\\\/p>\\n\\n<pre><code>username: 'postgresql'\\npassword: ''\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby>","commentcount":"4","accepted":""},"18116102":{"id":"18116102","date":"2013-08","score":"5","body":"\"<p>You probably want to use <code>map<\\\/code> instead:<\\\/p>\\n\\n<pre><code>page.content.map do |item|\\n  item.content_id\\nend\\n<\\\/code><\\\/pre>\\n\\n<p><code>map<\\\/code> (aka <code>collect<\\\/code>) will iterate through an array and run whatever code you ask it to on the members of the array, one by one. It will return a new array containing the return values for those method calls.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><activerecord>","commentcount":"1","accepted":"yes"},"18176944":{"id":"18176944","date":"2013-08","score":"2","body":"\"<p><code>redirect_to<\\\/code> does not stop the method call chain. You're just calling the method there which tells the controller to send back a redirect header. If you want your <code>authorize<\\\/code> method in your <code>UsersController<\\\/code> to work, it would need to be something like this:<\\\/p>\\n\\n<pre><code>super &amp;&amp; current_user.username == 'admin'\\n<\\\/code><\\\/pre>\\n\\n<p>And you would need to modify the <code>ApplicationController<\\\/code>'s <code>authorize<\\\/code> method to also return<code>true<\\\/code>. If <code>ApplicationController<\\\/code>'s <code>authorize<\\\/code> returns <code>true<\\\/code> and <code>current_user.username<\\\/code> also returns <code>true<\\\/code>, then this new code in your UsersController's <code>authorize<\\\/code> will also return <code>true<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"2","accepted":"yes"},"18176963":{"id":"18176963","date":"2013-08","score":"1","body":"\"<p>The issue here is because you're validating the presence of the association. You don't need to do that at all. Remove <code>resource<\\\/code> from your <code>validates_presence_of<\\\/code> line.<\\\/p>\\n\\n<p>Is there an actual case in your application where log entries can be created without resources? If not, I wouldn't be too concerned with the validations of these attributes. If you're <em>super<\\\/em> worried about <code>resource_id<\\\/code> being null, then placing a database constraint on <code>resource_id<\\\/code> would be the appropriate way to go. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><factory-girl>","commentcount":"3","accepted":"yes"},"18177534":{"id":"18177534","date":"2013-08","score":"3","body":"\"<p>I actually cover this exact scenario in my <a href=\\\"https:\\\/\\\/leanpub.com\\\/multi-tenancy-rails\\\" rel=\\\"nofollow\\\">Multitenancy with Rails<\\\/a> book. <\\\/p>\\n\\n<p>The difference between your tests and Braintree's project's tests are that your tests are Capybara features and theirs' are controller specs.<\\\/p>\\n\\n<p>I mention <a href=\\\"https:\\\/\\\/github.com\\\/jnicklas\\\/capybara#racktest\\\" rel=\\\"nofollow\\\">this relevant part of Capybara's README<\\\/a> within the book:<\\\/p>\\n\\n<blockquote>\\n  <p>RackTest is Capybara's default driver. It is written in pure Ruby and does not\\n  have any support for executing JavaScript. Since the RackTest driver interacts\\n  directly with Rack interfaces, it does not require a server to be started.\\n  However, this means that if your application is not a Rack application (Rails,\\n  Sinatra and most other Ruby frameworks are Rack applications) then you cannot\\n  use this driver. <strong>Furthermore, you cannot use the RackTest driver to test a\\n  remote application, or to access remote URLs (e.g., redirects to external sites,\\n  external APIs, or OAuth services) that your application might interact with.<\\\/strong><\\\/p>\\n<\\\/blockquote>\\n\\n<p>The way I get around it is that I  wrote a gem called <code>fake_braintree_redirect<\\\/code> which inserts a piece of middleware into the request stack during the test environment to capture these requests and respond appropriately. The middleware is added to the stack using an <code>initializer<\\\/code> block defined within <code>application.rb<\\\/code>, like this:<\\\/p>\\n\\n<pre><code>initializer 'middleware.fake_braintree_redirect' do\\n  if Rails.env.test?\\n    require 'fake_braintree_redirect'\\n    config.middleware.use FakeBraintreeRedirect\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This takes Braintree out of the equation completely and returns a successful response whenever you send data to it.<\\\/p>\\n\\n<hr>\\n\\n<p>Alternatively, if you <em>really<\\\/em> want to test against Braintree's sandbox, you could switch to the JavaScript driver by tagging your <code>scenario<\\\/code> as:<\\\/p>\\n\\n<pre><code> scenario \\\"foo\\\", :js =&gt; true\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><capybara><rspec-rails><braintree>","commentcount":"2","accepted":"yes"},"18180272":{"id":"18180272","date":"2013-08","score":"1","body":"\"<pre><code>Cart.select(:quantity).where(:cart_id =&gt; cart_id, :product_id =&gt; product_id)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3><activerecord>","commentcount":"1","accepted":"yes"},"18198346":{"id":"18198346","date":"2013-08","score":"2","body":"\"<p>This code should be placed in an initializer at <code>config\\\/initializers\\\/cas_middleware.rb<\\\/code>.<\\\/p>\\n\\n<p>Alternatively, you could put this syntax inside the class of your <code>config\\\/application.rb<\\\/code> block:<\\\/p>\\n\\n<pre><code>config.middleware.use OmniAuth::Builder do\\n  provider :cas, host: 'cas.yourdomain.com'\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>And it would do just the same thing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><omniauth><ruby-on-rails-4><rack>","commentcount":"1","accepted":"yes"},"18198568":{"id":"18198568","date":"2013-08","score":"1","body":"\"<p>This error:<\\\/p>\\n\\n<pre><code>ActionController::RoutingError: No route matches {:controller=&gt;\\\"appointments\\\", :id=&gt;\\\"281110143\\\", :action=&gt;\\\"show\\\", :doctor_id=&gt;2}\\n<\\\/code><\\\/pre>\\n\\n<p>Shows that you're making a request to a controller called <code>AppointmentsController<\\\/code>, but judging by your routes:<\\\/p>\\n\\n<pre><code>new_admin_doctor_appointments GET    \\\/admin\\\/doctors\\\/:doctor_id\\\/appointments\\\/new(.:format) {:controller=&gt;\\\"admin\\\/appointments\\\", :action=&gt;\\\"new\\\"}\\nedit_admin_doctor_appointments GET    \\\/admin\\\/doctors\\\/:doctor_id\\\/appointments\\\/edit(.:format){:controller=&gt;\\\"admin\\\/appointments\\\", :action=&gt;\\\"edit\\\"}\\n     admin_doctor_appointments GET    \\\/admin\\\/doctors\\\/:doctor_id\\\/appointments(.:format)     {:controller=&gt;\\\"admin\\\/appointments\\\", :action=&gt;\\\"show\\\"}\\n                               PUT    \\\/admin\\\/doctors\\\/:doctor_id\\\/appointments(.:format)    {:controller=&gt;\\\"admin\\\/appointments\\\", :action=&gt;\\\"update\\\"}\\n                               DELETE \\\/admin\\\/doctors\\\/:doctor_id\\\/appointments(.:format)   {:controller=&gt;\\\"admin\\\/appointments\\\", :action=&gt;\\\"destroy\\\"}\\n                               POST   \\\/admin\\\/doctors\\\/:doctor_id\\\/appointments(.:format)   {:controller=&gt;\\\"admin\\\/appointments\\\", :action=&gt;\\\"create\\\"}\\n<\\\/code><\\\/pre>\\n\\n<p>That route is only available within the admin namespace, i.e. <code>Admin::AppointmentsController<\\\/code>.<\\\/p>\\n\\n<p>I'm going to bet that you're doing something like <code>describe AppointmentsController<\\\/code> rather than <code>describe Admin::AppointmentsController<\\\/code>. I don't know for certain because you've not included the critical part that is the test itself.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><testing><polymorphic-associations>","commentcount":"3","accepted":""},"18203727":{"id":"18203727","date":"2013-08","score":"2","body":"\"<p>The problem is that your code to create a new user in the database is not defining a <code>uid<\\\/code> value for the row. Your database has constrained that field to disable rows from ever having <code>uid<\\\/code> as null. Therefore, you should either remove this constraint from the database or change your code to pass through a <code>uid<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-4>","commentcount":"0","accepted":""},"18220494":{"id":"18220494","date":"2013-08","score":"0","body":"\"<p>You should probably be doing this instead:<\\\/p>\\n\\n<pre><code>@controller = Admin::AppointmentsController.new \\n<\\\/code><\\\/pre>\\n\\n<p>Otherwise you're referencing the controller inside the main namespace and not the <code>Admin<\\\/code> namespace.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><testing><polymorphic-associations>","commentcount":"3","accepted":""},"18246093":{"id":"18246093","date":"2013-08","score":"1","body":"\"<p>I think this is because your <code>repo<\\\/code> object isn't being magically updated by Ruby when the <code>Contribution<\\\/code> object is being saved to the database. You will need to reload the information from the database:<\\\/p>\\n\\n<pre><code>repo.reload.contributions_count\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><activerecord><rspec><padrino>","commentcount":"1","accepted":""},"18454078":{"id":"18454078","date":"2013-08","score":"1","body":"\"<pre><code> ((2.weeks.ago)..(1.week.ago)).include?(record.created_at)\\n<\\\/code><\\\/pre>\\n\\n<p>Assuming 2 weeks ago was the 13th of August, 1 week ago is the 20th of August and the record's <code>created_at<\\\/code> attribute lies somewhere in the middle, this will return <code>true<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><date>","commentcount":"3","accepted":"yes"},"18454134":{"id":"18454134","date":"2013-08","score":"2","body":"\"<p>This is indeed because Rails is trying to singularize <code>ties<\\\/code> to derive the class name. The best way around this would be to define a new inflection rule for this. In Rails 4 you would do this:<\\\/p>\\n\\n<pre><code>ActiveSupport::Inflector.inflections(:en) do |inflect|\\n  inflect.singular \\\/^ties$\\\/i, 'tie'\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>But in Rails 3 you would do this:<\\\/p>\\n\\n<pre><code>ActiveSupport::Inflector.inflections do |inflect|\\n  inflect.singular \\\/^ties$\\\/i, 'tie'\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"5","accepted":"yes"},"18477267":{"id":"18477267","date":"2013-08","score":"2","body":"\"<p>You've almost got the right code here already. Here's how I'd do it:<\\\/p>\\n\\n<pre><code>can :manage, User do |u|\\n  u.id == user.id ||\\n  u.account.founders.exists?(u.id) ||\\n  u.account.collaborators.exists?(u.id)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Comparing using <code>==<\\\/code> is the standard in Ruby. <code>eql?<\\\/code> is rarely used.<\\\/p>\\n\\n<p>The <code>exists?<\\\/code> method will perform a lightweight database query and returns <code>true<\\\/code> if the database does contain that ID within those records. How you were doing it before was wrong, because <code>includes<\\\/code> is an ActiveRecord method for eagerly loading associations. Even if you used the similarly named <code>include?<\\\/code> method, it still would've loaded all the founders and collaborators for the account, and then used Ruby to check to see if those collections contained that user.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-4><cancan>","commentcount":"1","accepted":"yes"},"18571170":{"id":"18571170","date":"2013-09","score":"0","body":"\"<pre><code>@clients.each_with_index do |client, index|\\n  if index % 2 == 0\\n      sheet1.row(index+1).default_format = bg_color1\\n  else\\n      sheet1.row(index+1).default_format = bg_color2\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p><code>each_with_index<\\\/code> iterates through an array and provides a variable to track the current position within that array.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":""},"18581825":{"id":"18581825","date":"2013-09","score":"1","body":"\"<p>Having the scores exist in their own table seems like madness, especially considering they're just a percentage. Why not have one table that links quizzes, employees together, that has an additional column for the percentage?<\\\/p>\\n\\n<pre><code>create_table :scores do |t|\\n  t.integer :quiz_id\\n  t.integer :customer_id\\n  t.integer :percentile\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>Then you would associate like this:<\\\/p>\\n\\n<pre><code>class Score &lt; ActiveRecord::Base\\n  belongs_to :quiz\\n  belongs_to :employee\\nend\\n\\nclass Employee &lt; ActiveRecord::Base\\n  has_many :scores\\n  has_many :quizzes, :through =&gt; :scores\\nend\\n\\nclass Quiz &lt; ActiveRecord::Base\\n  has_many :scores\\n  has_many :employees, :through =&gt; :scores\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>To get a score for an employee for a quiz:<\\\/p>\\n\\n<pre><code>quiz.scores.where(:employee_id =&gt; employee.id).first.percentile\\n<\\\/code><\\\/pre>\\n\\n<p>To create a new score:<\\\/p>\\n\\n<pre><code>quiz.scores.create(:employee_id =&gt; employee.id, :percentile =&gt; 99)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"3","accepted":"yes"},"18602920":{"id":"18602920","date":"2013-09","score":"0","body":"\"<p>I think you're missing the <code>libssl-dev<\\\/code> package. Try installing that package and recompiling Ruby. You may be missing other packages as well.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><mint>","commentcount":"2","accepted":""},"18603543":{"id":"18603543","date":"2013-09","score":"0","body":"\"<p>Putting the engine at some random directory inside your application won't make it magically work. I don't know where you learned this technique from, but it is wrong.<\\\/p>\\n\\n<p>You should put the engine outside your application and require it into your application's Gemfile, like this:<\\\/p>\\n\\n<pre><code>gem 'blog', :path =&gt; '..\\\/blog'\\n<\\\/code><\\\/pre>\\n\\n<p>Then the engine will be automatically loaded by Rails. <\\\/p>\\n\\n<p>The <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/engines.html\\\" rel=\\\"nofollow\\\">Engines Guide<\\\/a> goes into more detail. I highly recommend reading that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><routes><gem><ruby-on-rails-4>","commentcount":"0","accepted":"yes"},"18605376":{"id":"18605376","date":"2013-09","score":"1","body":"\"<p>Attempt to hit <code>lists\\\/tableOrder.json<\\\/code> instead. The default format is .html, and that is why it is complaining that it cannot find a template.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3.1>","commentcount":"3","accepted":"yes"},"18625803":{"id":"18625803","date":"2013-09","score":"1","body":"\"<p>I would suggest filing an issue on that gem's GitHub project. Most likely it is trying to connect to the database using the initialization process and, because the database is not available by that stage, it is failing.<\\\/p>\\n\\n<p>You may be able to solve this problem by adding this line to your <code>config\\\/environments\\\/production.rb<\\\/code> file:<\\\/p>\\n\\n<pre><code> config.assets.initialize_on_precompile = false\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><heroku><rubygems><bundler><asset-pipeline>","commentcount":"1","accepted":""},"18626665":{"id":"18626665","date":"2013-09","score":"4","body":"\"<p>I helped bl0b with this on the #rubyonrails IRC channel. Turns out that this line from the stacktrace:<\\\/p>\\n\\n<pre><code>activerecord (3.2.13) lib\\\/active_record\\\/associations\\\/collection_association.rb:310:in `replace'\\n<\\\/code><\\\/pre>\\n\\n<p>Indicates that AR is attempting to assign to a collection association. I asked OP to go through and attempt to assign each attribute one at a time in the <code>update_attributes<\\\/code> call. It turns out it was the <code>services<\\\/code> attribute which caused this, because there was also an association called \\\"services\\\" on the record.<\\\/p>\\n\\n<p>Removing the <code>services<\\\/code> attribute from the list of attributes to be updated solves this problem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"0","accepted":"yes"},"18646277":{"id":"18646277","date":"2013-09","score":"1","body":"\"<p>Upgrading to the latest paperclip, <code>3.5.1<\\\/code>, will fix this issue.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><ruby-on-rails-3><amazon-s3><paperclip>","commentcount":"1","accepted":"yes"},"18667431":{"id":"18667431","date":"2013-09","score":"1","body":"\"<p>In <code>vote_against_vendor<\\\/code>, directly after you call <code>vote_against<\\\/code>, you do this:<\\\/p>\\n\\n<pre><code>render :nothing =&gt; true, :status =&gt; 404\\n<\\\/code><\\\/pre>\\n\\n<p>When you should probably do this:<\\\/p>\\n\\n<pre><code>render :nothing =&gt; true, :status =&gt; 200\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ajax><vote-up-buttons>","commentcount":"1","accepted":"yes"},"18689371":{"id":"18689371","date":"2013-09","score":"2","body":"\"<p>I don't know why <code>myFunc<\\\/code> is even a function. It should be an object:<\\\/p>\\n\\n<pre><code>var myThing = {\\n  settings: {\\\/*my default settings *\\\/};  \\n}\\n<\\\/code><\\\/pre>\\n\\n<p>Then you can call <code>myThing.settings<\\\/code> to get the default settings.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript>","commentcount":"0","accepted":""},"18692373":{"id":"18692373","date":"2013-09","score":"0","body":"\"<p>You should be depending on the primary key, typically called <code>id<\\\/code>, from the <code>zones<\\\/code> table, not <code>zone_id<\\\/code>. In your <code>Zone<\\\/code> model, you would therefore have this:<\\\/p>\\n\\n<pre><code>has_many :networks\\n<\\\/code><\\\/pre>\\n\\n<p>For more information, please read the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/association_basics.html\\\" rel=\\\"nofollow\\\">Associations Guide<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-3>","commentcount":"1","accepted":""},"18861736":{"id":"18861736","date":"2013-09","score":"2","body":"\"<p>Here's lines 15-17 of your <code>UsersController<\\\/code>:<\\\/p>\\n\\n<pre><code> if !ENV['STRIPE_API_KEY'] || params[:coupon]\\n   @user.plan_id = Plan.find_by_stripe_id('free').id\\n end\\n<\\\/code><\\\/pre>\\n\\n<p>You are attempting to assign a value to the  <code>plan_id<\\\/code> attribute, but a field for that attribute does not exist within your <code>users<\\\/code> table. You need to add this field using a migration:<\\\/p>\\n\\n<pre><code>rails g migration add_plan_id_to_users plan_id:integer\\nrake db:migrate\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails>","commentcount":"1","accepted":"yes"},"18883852":{"id":"18883852","date":"2013-09","score":"2","body":"\"<p>You need to indent all the content for the <code>html<\\\/code> tag:<\\\/p>\\n\\n<pre><code>!!! 5\\n%html\\n  %head\\n    %title Hello\\n    = stylesheet_link_tag    'application', media: 'all'\\n    = javascript_include_tag 'application'\\n    = csrf_meta_tags\\n\\n  %body\\n    = yield\\n<\\\/code><\\\/pre>\\n\\n<p>What you're doing is different:<\\\/p>\\n\\n<pre><code>!!! 5\\n%html\\n%head\\n  ...\\n<\\\/code><\\\/pre>\\n\\n<p>This is telling haml to render a <code>html<\\\/code> tag with no embedded content, followed by a <code>head<\\\/code> tag which has embedded content. Indenting everything to be inside the <code>html<\\\/code> tag fixes this problem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><testing><capybara>","commentcount":"0","accepted":""},"18883878":{"id":"18883878","date":"2013-09","score":"1","body":"\"<p>You need to write your examples inside <code>it<\\\/code> blocks, not <code>describe<\\\/code> blocks:<\\\/p>\\n\\n<pre><code>it \\\"#bill_total\\\" do\\n  bill1.amount = 1.00\\n  bill2.amount = 1.00\\n\\n  expect(bills_helper.bill_total).to eq(2.00)\\nend \\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-4><rspec>","commentcount":"0","accepted":""},"18995557":{"id":"18995557","date":"2013-09","score":"5","body":"\"<p>It's not <code>'true<\\\/code>', it's <code>true<\\\/code>. Remove the quotes.<\\\/p>\\n\\n<p>In a JavaScript console:<\\\/p>\\n\\n<pre><code>'true' == true\\n=&gt; false\\ntrue == true\\n=&gt; true\\n'true' == 'true'\\n=&gt; true\\n<\\\/code><\\\/pre>\\n\\n<p>You may have thought this would be the case because in languages like PHP, <code>true<\\\/code> does indeed == <code>'true'<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><json>","commentcount":"2","accepted":"yes"},"19022025":{"id":"19022025","date":"2013-09","score":"1","body":"\"<p>A couple of things:<\\\/p>\\n\\n<ol>\\n<li><a href=\\\"http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActionView\\\/Helpers\\\/FormOptionsHelper.html#method-i-options_for_select\\\" rel=\\\"nofollow\\\"><code>options_for_select<\\\/code> takes two arguments<\\\/a>: the list of options and the value that you want selected.<\\\/li>\\n<li>You're passing through the value as a hash: <code>:selected =&gt; params...<\\\/code><\\\/li>\\n<li>The parameter name is wrong.<\\\/li>\\n<\\\/ol>\\n\\n<p>In your controller, you're saying that the parameter is called this:<\\\/p>\\n\\n<pre><code>params[:convertor][:from_currency]\\n<\\\/code><\\\/pre>\\n\\n<p>But in your view, you have <code>params[:from_currency]<\\\/code>.<\\\/p>\\n\\n<p>Therefore, the solution to this is to do this:<\\\/p>\\n\\n<pre><code>&lt;%= f.select :from_currency, options_for_select(currencies, params[:convertor][:from_currency]) %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<forms><ruby-on-rails-4>","commentcount":"5","accepted":""},"19026726":{"id":"19026726","date":"2013-09","score":"2","body":"\"<p>This should do the trick:<\\\/p>\\n\\n<pre><code>constraints :subdomain =&gt; \\\"admin\\\" do\\n  resources :users\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><routing><subdomain><rails-routing>","commentcount":"0","accepted":"yes"},"19026771":{"id":"19026771","date":"2013-09","score":"0","body":"\"<p>Try this out:<\\\/p>\\n\\n<pre><code>%header= raw(@person.name)\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<html><ruby-on-rails><escaping><html-escape-characters>","commentcount":"1","accepted":""},"19039930":{"id":"19039930","date":"2013-09","score":"1","body":"\"<p>Commits for TDD changes should be no different to any other changes. Therefore, you apply the same rules for the commit message.<\\\/p>\\n\\n<p>Here's <a href=\\\"http:\\\/\\\/tbaggery.com\\\/2008\\\/04\\\/19\\\/a-note-about-git-commit-messages.html\\\" rel=\\\"nofollow\\\">an example from tpope<\\\/a>:<\\\/p>\\n\\n<blockquote>\\n  <p><code>Capitalized, short (50 chars or less) summary<\\\/code><\\\/p>\\n  \\n  <p><code>More detailed explanatory text, if necessary.  Wrap it to about 72\\n  characters or so.  In some contexts, the first line is treated as the\\n  subject of an email and the rest of the text as the body.  The blank\\n  line separating the summary from the body is critical (unless you omit\\n  the body entirely); tools like rebase can get confused if you run the\\n  two together.<\\\/code><\\\/p>\\n  \\n  <p><code>Write your commit message in the imperative: \\\"Fix bug\\\" and not \\\"Fixed bug\\\"\\n  or \\\"Fixes bug.\\\"  This convention matches up with commit messages generated\\n  by commands like git merge and git revert.<\\\/code><\\\/p>\\n  \\n  <p><code>Further paragraphs come after blank lines.<\\\/code><\\\/p>\\n  \\n  <p><code>- Bullet points are okay, too<\\\/code><\\\/p>\\n  \\n  <p><code>- Typically a hyphen or asterisk is used for the bullet, preceded by a\\n    single space, with blank lines in between, but conventions vary here<\\\/code><\\\/p>\\n  \\n  <p><code>- Use a hanging indent<\\\/code><\\\/p>\\n<\\\/blockquote>\\n\"","title":"\"\"","favorite":null,"tags":"<git><tdd><commit>","commentcount":"0","accepted":"yes"},"19039946":{"id":"19039946","date":"2013-09","score":"3","body":"\"<p>This is happening because you're using single quotes to build the JSON string, and inside single quotes in Ruby, interpolation does not happen.<\\\/p>\\n\\n<p>A simpler example:<\\\/p>\\n\\n<pre><code>a = 1\\nputs '#{a}'\\nputs \\\"#{a}\\\"\\n<\\\/code><\\\/pre>\\n\\n<hr>\\n\\n<p>I would really recommend using a library to build your JSON, such as the built-in <code>JSON<\\\/code> module within Ruby.<\\\/p>\\n\\n<pre><code>require 'json'\\nJSON.generate(:id =&gt; @var, :observation =&gt; { :key =&gt; \\\"blah blah\\\", :value =&gt; [\\\"something\\\"] })\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><json>","commentcount":"2","accepted":""},"19086707":{"id":"19086707","date":"2013-09","score":"3","body":"\"<pre><code>string = string = '{\\\"key\\\": \\\"value\\\"}, {\\\"key\\\": \\\"value\\\"}'\\nJSON.parse(\\\"[\\\" + string + \\\"]\\\")\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><json>","commentcount":"5","accepted":""},"19105050":{"id":"19105050","date":"2013-09","score":"4","body":"\"<p>If you're wanting to reference the route of an engine from tests within an dummy application, or just an application itself, then you'll need to prefix the routing helpers with the engine name. For Spree, you would reference the routes like:<\\\/p>\\n\\n<pre><code>spree.products_path\\n<\\\/code><\\\/pre>\\n\\n<p>Similarly, if you want to reference routes of the main application from an engine, you'll need to use <code>main_app<\\\/code>:<\\\/p>\\n\\n<pre><code>main_app.root_path\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><rspec><rails-routing>","commentcount":"3","accepted":"yes"},"19108159":{"id":"19108159","date":"2013-10","score":"0","body":"\"<p>Your code was actually indented with tabs for the success, empty and error keys. I have fixed this up now.<\\\/p>\\n\\n<p>Please ensure that you are <em>really<\\\/em> using spaces. There's no other reason that I know of as to why this would break.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"19214822":{"id":"19214822","date":"2013-10","score":"0","body":"\"<p>I can't tell you why you're getting that error for spree_simple_sales, but I can tell you why you're seeing it for spree_fancy: that gem is not included in that list you have provided.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><generator><spree>","commentcount":"0","accepted":""},"19216445":{"id":"19216445","date":"2013-10","score":"2","body":"\"<p>You can stash your local changes first, then pull, then pop the stash.<\\\/p>\\n\\n<pre><code>git stash\\ngit pull origin master\\ngit stash pop\\n<\\\/code><\\\/pre>\\n\\n<p>Anything that overrides changes from remote will have conflicts which you will have to manually resolve.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git><github>","commentcount":"1","accepted":""},"19350825":{"id":"19350825","date":"2013-10","score":"3","body":"\"<p>If you want to pull those changes into your <code>new<\\\/code> branch, then I would recommend doing this instead:<\\\/p>\\n\\n<pre><code>git remote add suckless http:\\\/\\\/git.suckless.org\\\/dwm\\n<\\\/code><\\\/pre>\\n\\n<p>Adds a remote for future reference so you don't have to keep typing out that URL.<\\\/p>\\n\\n<pre><code>git checkout -b new\\ngit pull suckless master\\n<\\\/code><\\\/pre>\\n\\n<p>Creates a new branch called <code>new<\\\/code> and switch to it. You don't need the <code>-b<\\\/code> option if this branch already exists. Pull in the changes from the <code>suckless master<\\\/code> branch and add them to this branch.<\\\/p>\\n\\n<p>The <code>fetch<\\\/code> command only fetches the latest updates from the remote repository and will not apply them. You need to <code>pull<\\\/code> those changes to apply them.<\\\/p>\\n\\n<pre><code>git checkout master\\ngit merge new\\n<\\\/code><\\\/pre>\\n\\n<p>Switches back to the master branch and merges the <code>new<\\\/code> branch into the <code>master<\\\/code> branch. <\\\/p>\\n\\n<pre><code>git branch -d new\\n<\\\/code><\\\/pre>\\n\\n<p>Delete the <code>new<\\\/code> branch now that you don't need it.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"0","accepted":"yes"},"19352928":{"id":"19352928","date":"2013-10","score":"5","body":"\"<p>The correct syntax in the second example is:<\\\/p>\\n\\n<pre><code>{ a: 'b' }\\n<\\\/code><\\\/pre>\\n\\n<p>This is a new feature of Ruby 1.9 and beyond, allowing for a JSON-ish syntax to be used for Ruby hashes.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><hash><syntax>","commentcount":"7","accepted":""},"19357178":{"id":"19357178","date":"2013-10","score":"5","body":"\"<p>This error is originating from the <a href=\\\"https:\\\/\\\/github.com\\\/laserlemon\\\/figaro\\\">Figaro gem<\\\/a>, which would indicate to me that you probably have a syntax error in <code>config\\\/application.yml<\\\/code>. Double check this file for any incorrect YAML syntax.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"5","accepted":"yes"},"19370428":{"id":"19370428","date":"2013-10","score":"3","body":"\"<p>I suspect this problem is because Bundler 1.3.5 is not compatible with the latest version of Capistrano. Try upgrading to the Bundler pre-releases: <code>gem install bundler --pre<\\\/code>.<\\\/p>\\n\\n<hr>\\n\\n<p>I noticed also that you're using a very old version of Rails 3.2, which is probably vulnerable to some security exploits. I would really strongly recommend upgrading that version of Rails to something more recent, like Rails 3.2.14.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rubygems><capistrano>","commentcount":"2","accepted":""},"19376344":{"id":"19376344","date":"2013-10","score":"0","body":"\"<p>You can write the controller action like this (if you follow along with Mario's suggestion too):<\\\/p>\\n\\n<pre><code>def create\\n  @asset = Asset.create(:employee_id =&gt; params[:employee_id], :manufacturer_id ...)\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><controller><belongs-to>","commentcount":"0","accepted":""},"19415075":{"id":"19415075","date":"2013-10","score":"3","body":"\"<pre><code>git checkout [sha for d] -b [branch name]\\n[make your changes]\\n[git add your changes]\\n[git commit]\\n[push branch]\\n[deploy the branch]\\ngit checkout - # checks out back to the last checkout ref\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<git><version-control><github>","commentcount":"0","accepted":""},"19474158":{"id":"19474158","date":"2013-10","score":"0","body":"\"<p>This is happening because the spree_reviews extension is depending on a feature of Rails which has been removed in Rails 4. Please file an issue on that project about this problem.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree>","commentcount":"0","accepted":""},"19483174":{"id":"19483174","date":"2013-10","score":"0","body":"\"<p>You can use <code>in_groups_of<\\\/code> for this:<\\\/p>\\n\\n<pre><code>&lt;% @pages.in_groups_of(3) do |group| %&gt;\\n  &lt;%= render partial: 'thumbnail', collection: group %&gt;\\n&lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-4>","commentcount":"0","accepted":""},"19485191":{"id":"19485191","date":"2013-10","score":"3","body":"\"<p>I am not understanding how this is supposed to conflict. If master already has 1.0 and then you check out from there and create a new commit to bump it to 1.1, then rebase the master branch on top of this new branch, there will be no changes to apply. <\\\/p>\\n\\n<p>Unless <code>master<\\\/code> changes the version to something completely different and then you rebase that branch, you won't see any conflicts.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"1","accepted":"yes"},"19485803":{"id":"19485803","date":"2013-10","score":"0","body":"\"<p>Heroku runs a case-sensitive filesystem, whereas your OS may not be case-sensitive. Try changing that require to this instead:<\\\/p>\\n\\n<pre><code> require 'card'\\n<\\\/code><\\\/pre>\\n\\n<hr>\\n\\n<p>As a general rule of thumb, most files within Ruby are required using lowercase letters with underscores serving as a word separator, like this:<\\\/p>\\n\\n<pre><code> require 'card_shuffler'\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<heroku><ruby-on-rails-4>","commentcount":"0","accepted":""},"19485831":{"id":"19485831","date":"2013-10","score":"0","body":"\"<p>My guess is that you're not setting the <code>@tvshow<\\\/code> variable in the CharactersController#create action, and it's complaining about an \\\"undefined method characters for nil:nilClass\\\" because of that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-4><nomethoderror>","commentcount":"0","accepted":""},"19485899":{"id":"19485899","date":"2013-10","score":"6","body":"\"<p>Try changing this line:<\\\/p>\\n\\n<pre><code>@sold = @user.products.where(\\\"quantity == ?\\\", 0)\\n<\\\/code><\\\/pre>\\n\\n<p>To this:<\\\/p>\\n\\n<pre><code>@sold = @user.products.where(quantity: 0)\\n<\\\/code><\\\/pre>\\n\\n<p>I think the problem is because you're trying to use the double equals as a matcher in PostgreSQL, but it does not support that. You should use <code>=<\\\/code> if you want to check for equality there.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><heroku>","commentcount":"5","accepted":"yes"},"19485999":{"id":"19485999","date":"2013-10","score":"2","body":"\"<p>I'd recommend leaving <code>config.time_zone<\\\/code> as <code>UTC<\\\/code> so you don't see these  kind of weird changes happening in the database.<\\\/p>\\n\\n<p>If you want to force a particular timezone on the users of the application, then your best bet is as a <code>before_filter<\\\/code> inside <code>ApplicationController<\\\/code>:<\\\/p>\\n\\n<pre><code>before_filter :set_timezone\\ndef set_timezone\\n  Time.zone = \\\"Eastern Time (US &amp; Canada)\\\"\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>That way then, all the times will be saved to the database as UTC times, but will be displayed on the site as being in Eastern time.<\\\/p>\\n\\n<hr>\\n\\n<p>The reasons for doing this are pretty simple: it's easier to convert from one universal central time (UTC) than it is to convert from some arbitrary point back to UTC and then to some other arbitrary point.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><datetime>","commentcount":"0","accepted":""},"19505750":{"id":"19505750","date":"2013-10","score":"7","body":"\"<p>I believe this setting is only available in the more recent versions of Devise, 3.1.x and above. You should either upgrade the gem to this version or remove that line from your <code>config\\\/initializers\\\/devise.rb<\\\/code> file.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<devise><ruby-on-rails-4><secret-key>","commentcount":"4","accepted":"yes"},"19507326":{"id":"19507326","date":"2013-10","score":"6","body":"\"<p>require 'yaml'<\\\/p>\\n\\n<pre><code>yml = %Q{\\nen:\\n  questions:\\n    new: 'New Question'\\n    other:\\n      recent: 'Recent'\\n      old: 'Old'\\n}\\n\\nyml = YAML.load(yml)\\ntranslations = {}\\n\\ndef process_hash(translations, current_key, hash)\\n  hash.each do |new_key, value|\\n    combined_key = [current_key, new_key].delete_if { |k| k == '' }.join(\\\".\\\")\\n    if value.is_a?(Hash)\\n      process_hash(translations, combined_key, value)\\n    else\\n      translations[combined_key] = value\\n    end\\n  end\\nend\\n\\nprocess_hash(translations, '', yml['en'])\\np translations\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><rails-i18n>","commentcount":"1","accepted":"yes"},"19802304":{"id":"19802304","date":"2013-11","score":"5","body":"\"<p>The <code>after_action<\\\/code> callback is triggered after the action has run its course. You cannot use it to render or redirect. Do that within the action itself by calling the method:<\\\/p>\\n\\n<pre><code>def update\\n  ...\\n  redirect_home\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><routing><ruby-on-rails-4>","commentcount":"0","accepted":"yes"},"19920346":{"id":"19920346","date":"2013-11","score":"5","body":"\"<p><strong>No.<\\\/strong><\\\/p>\\n\\n<p>This is because parameters are protected when they come into the controller by the strong parameters feature within Rails. In controllers now you define a create action like this:<\\\/p>\\n\\n<pre><code>def create\\n  @user = User.new(user_params)\\n  ...\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>That <code>user_params<\\\/code> method looks like this:<\\\/p>\\n\\n<pre><code>def user_params\\n  params.require(:user).permit(:name)\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>This code will permit the name parameter from the user parameters and outright reject everything else.<\\\/p>\\n\\n<p>This is talked about <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html#saving-data-in-the-controller\\\">in this section of the Getting Started guide.<\\\/a><\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><security><form-for>","commentcount":"0","accepted":""},"19924704":{"id":"19924704","date":"2013-11","score":"1","body":"\"<p>From the <code>master<\\\/code> branch, you can reset the repo back to that stage:<\\\/p>\\n\\n<pre><code>git reset --hard 0885b6e57c76c0fe\\n<\\\/code><\\\/pre>\\n\\n<p>Then force push the changes:<\\\/p>\\n\\n<pre><code>git push origin master --force\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<git>","commentcount":"0","accepted":""},"20276661":{"id":"20276661","date":"2013-11","score":"3","body":"\"<p>Use <code>current_user<\\\/code>:<\\\/p>\\n\\n<pre><code>form_for(current_user)\\n<\\\/code><\\\/pre>\\n\\n<p>This of course assumes you've defined the <code>user_path<\\\/code> route within <code>config\\\/routes.rb<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><devise><ruby-on-rails-4>","commentcount":"1","accepted":"yes"},"20458634":{"id":"20458634","date":"2013-12","score":"3","body":"\"<p>You cannot do this. You should move it into a <code>js<\\\/code> file and then include that <code>js<\\\/code> file in your template:<\\\/p>\\n\\n<pre><code>&lt;script type='text\\\/javascript' src='some_other_file.js'&gt;&lt;\\\/script&gt;\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript><html><call>","commentcount":"0","accepted":""},"21034452":{"id":"21034452","date":"2014-01","score":"0","body":"\"<p>You have two options. You can drop the table by logging into your database server and using <code>drop table microposts<\\\/code>, or you can run <code>rails g migration drop_microposts<\\\/code> to generate a migration which you can then run to delete the table. After that migration is run, you can delete the migration.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3>","commentcount":"2","accepted":"yes"},"21771408":{"id":"21771408","date":"2014-02","score":"0","body":"\"<p>I don't think that it's possible to do that because each engine is its own container and you can't reach across between engines to do what you're attempting to do.<\\\/p>\\n\\n<p>Instead, define a module which you can include in both contexts which define the same concern:<\\\/p>\\n\\n<pre><code>module CommentableConcern\\n  def self.included(base)\\n    base.instance_eval do\\n      concern :commentable do\\n        resources :comments\\n      end\\n    end\\n  end\\nend\\n<\\\/code><\\\/pre>\\n\\n<p>I think this is the only way you can accomplish that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-4><routing><nested-forms><rails-engines>","commentcount":"2","accepted":"yes"},"22117845":{"id":"22117845","date":"2014-03","score":"2","body":"\"<p>A taxonomy is representative of the root node. It provides the over-arching classification for a set of items. For example, \\\"Clothing\\\" could be a taxonomy (with a root \\\"Clothing\\\" <em>taxon<\\\/em>) and then underneath that root there would be other taxons like \\\"Pants\\\", \\\"Shirts\\\", \\\"Shoes\\\" and so on. <\\\/p>\\n\\n<p>There's no particular reason why we have both taxonomies and taxons other than that's the way it's always been and to change it right now does not leads to any particular benefit.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<spree>","commentcount":"2","accepted":"yes"},"22157536":{"id":"22157536","date":"2014-03","score":"0","body":"\"<p>We get around this by drawing all the routes on the core engine using <code>add_routes<\\\/code> which exists for reasons I won't go into here because it's a long tangent. Necessary evil for this kind of work, though.<\\\/p>\\n\\n<p>The <code>isolate_namespace<\\\/code> method within <code>Core::Engine<\\\/code> scopes everything to the <code>spree<\\\/code> namespace. If you're inside a controller that's been drawn underneath the <code>Spree::Core::Engine<\\\/code> routes and you want to reference a route for another controller also drawn under that route then you can leave off the <code>spree.<\\\/code> prefix on the routing helper.<\\\/p>\\n\\n<p>If you're routing to a different engine, then you will need to have the prefix: <code>main_app.<\\\/code> or whatever.<\\\/p>\\n\\n<p>The <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/engines.html\\\" rel=\\\"nofollow\\\">Engines Guide<\\\/a> explains this in greater detail, and I'd recommend reading that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-4><spree><rails-routing>","commentcount":"0","accepted":""},"22199435":{"id":"22199435","date":"2014-03","score":"2","body":"\"<p>Why are you assigning the basket twice?<\\\/p>\\n\\n<pre><code> Basket.first.bananas.build(basket_ids: [Basket.first.id])\\n<\\\/code><\\\/pre>\\n\\n<p>I would write this like this:<\\\/p>\\n\\n<pre><code> Basket.first.bananas.build\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><activerecord><ruby-on-rails-4><activeadmin><inherited-resources>","commentcount":"1","accepted":""},"22240171":{"id":"22240171","date":"2014-03","score":"1","body":"\"<p>The correct URL for that would be <code>\\\/system\\\/quizzes\\\/141\\\/index.html<\\\/code>, because it's within the <code>system<\\\/code> directory within the <code>public<\\\/code> directory. If you wanted it without the \\\"system\\\" part, move it out of that directory.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><testing><iframe><localhost>","commentcount":"1","accepted":"yes"},"22261379":{"id":"22261379","date":"2014-03","score":"3","body":"\"<p>Firstly, remove this route from your <code>config\\\/routes.rb<\\\/code>:<\\\/p>\\n\\n<pre><code>match ':controller(\\\/:action(\\\/:id))', :via =&gt; [:get, :post]\\n<\\\/code><\\\/pre>\\n\\n<p>This is a catch-all route and can cause misbehavior within your app. You should be using <code>resources<\\\/code> and friends, as per the <a href=\\\"http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\\\" rel=\\\"nofollow\\\">Routing Guide<\\\/a>.<\\\/p>\\n\\n<p>Secondly, all your form is really just a button to delete. You can accomplish this much more easily:<\\\/p>\\n\\n<pre><code>&lt;p&gt;Are you sure you want to permanently delete this page?&lt;\\\/p&gt;\\n\\n&lt;p class=\\\"reference-name\\\"&gt;&lt;%= @page.permalink %&gt;&lt;\\\/p&gt;\\n\\n&lt;%= button_to \\\"Delete Page\\\", [:admin, :page], :method =&gt; :delete %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>The <code>button_to<\\\/code> method creates a form, so that you don't have to. It's important to note here that this <code>button_to<\\\/code> is using <code>:method =&gt; :delete<\\\/code>, which will cause a <code>DELETE \\\/admin\\\/pages\\\/4<\\\/code> route to be used; which goes to the <code>destroy<\\\/code> action within your controller.<\\\/p>\\n\\n<p>Your form <em>was not<\\\/em> doing this before, it was submitting a <code>PUT<\\\/code> request to the same route, which goes to the <code>update<\\\/code> action, which is what you're seeing happening. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-4><routing>","commentcount":"4","accepted":"yes"},"22262406":{"id":"22262406","date":"2014-03","score":"1","body":"\"<p>You would probably write it like this:<\\\/p>\\n\\n<pre><code>  &lt;% @account_names.each_with_index do |name, index| %&gt;                    \\n    &lt;tr&gt;\\n      &lt;td&gt;&lt;%= name %&gt;&lt;td&gt;\\n      &lt;td&gt;&lt;%= @combined_conversions[index] %&gt;&lt;\\\/td&gt;\\n      &lt;td&gt;&lt;%= @combined_spend[index] %&gt;&lt;\\\/td&gt;\\n    &lt;\\\/tr&gt;\\n  &lt;% end %&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>Since each key in each array maps 1-to-1 with its values in the corresponding arrays, you can just reference the other arrays and find the same index there. \\\"Cleveland\\\" will show 0 in the second column and \\\"103.65\\\" in the third.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><erb>","commentcount":"3","accepted":"yes"},"22262478":{"id":"22262478","date":"2014-03","score":"0","body":"\"<p>Typically they don't differ. As far as I know, <code>ActionController::Base.cache_store<\\\/code> uses <code>Rails.application.config.cache_store<\\\/code> unless it's otherwise told not to. <\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3><caching>","commentcount":"1","accepted":""},"22271909":{"id":"22271909","date":"2014-03","score":"0","body":"\"<p>You could look at using an asset precompilation framework such as <a href=\\\"https:\\\/\\\/github.com\\\/joliss\\\/broccoli\\\" rel=\\\"nofollow\\\">Broccoli<\\\/a>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<javascript>","commentcount":"0","accepted":""},"22273954":{"id":"22273954","date":"2014-03","score":"1","body":"\"<p>Call <code>cents<\\\/code> on it to convert it into its cents value, and query on that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails-4><rails-activerecord><money><money-rails>","commentcount":"2","accepted":"yes"},"22273989":{"id":"22273989","date":"2014-03","score":"1","body":"\"<p>Do this from within a directory that contains a Gemfile:<\\\/p>\\n\\n<pre><code>vim `bundle show GEM_NAME`\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><bundler>","commentcount":"0","accepted":""},"22274168":{"id":"22274168","date":"2014-03","score":"1","body":"\"<p>My guess is that this is happening because Spree's API is inheriting from <code>ActionController::Metal<\\\/code>, where NewRelic doesn't hook into.<\\\/p>\\n\\n<p>Check here: <a href=\\\"https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/6ac62c32f91e6626b338564aab7a7ad570cbd4c3\\\/api\\\/app\\\/controllers\\\/spree\\\/api\\\/base_controller.rb#L5\\\" rel=\\\"nofollow\\\">https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/6ac62c32f91e6626b338564aab7a7ad570cbd4c3\\\/api\\\/app\\\/controllers\\\/spree\\\/api\\\/base_controller.rb#L5<\\\/a><\\\/p>\\n\\n<p>This is probably a good argument for switching away from this within Spree, so please submit an issue for that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><spree><newrelic>","commentcount":"3","accepted":""},"22341293":{"id":"22341293","date":"2014-03","score":"0","body":"\"<p><a href=\\\"http:\\\/\\\/www.ruby-doc.org\\\/core-2.1.1\\\/Time.html#method-i-usec\\\" rel=\\\"nofollow\\\">The <code>Time<\\\/code> class within Ruby has a <code>usec<\\\/code> method<\\\/a>, which gets the milliseconds within a Time object, so you can go finer grained than a second within Ruby's Time objects.<\\\/p>\\n\\n<p>If you used 30 as a variable, it would indeed count that as seconds:<\\\/p>\\n\\n<pre><code>irb(main):001:0&gt; time = Time.now\\n=&gt; 2014-03-12 14:13:44 +1100\\nirb(main):002:0&gt; time + 1\\n=&gt; 2014-03-12 14:13:45 +1100\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby><time>","commentcount":"0","accepted":"yes"},"22341307":{"id":"22341307","date":"2014-03","score":"4","body":"\"<p>Hard to know without seeing your form, the field and the controller, but here we go.<\\\/p>\\n\\n<pre><code> params[:urls].split(\\\"\\\\n\\\").each do |url|\\n   PostUrl.create(url: url)\\n end\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-4>","commentcount":"4","accepted":"yes"},"22341434":{"id":"22341434","date":"2014-03","score":"3","body":"\"<p><code>require_tree<\\\/code> will require the files in whatever order it feels like. If you want them required in the order you want, then you will need to have many <code>require<\\\/code> calls. <\\\/p>\\n\\n<p>Alternatively, you could put all those other files into one directory, then <code>require_tree that_directory<\\\/code> and then <code>require app<\\\/code> immediately after that.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby-on-rails-3>","commentcount":"1","accepted":"yes"},"22369621":{"id":"22369621","date":"2014-03","score":"1","body":"\"<p>As far as I know, this is not possible within Paperclip because the settings are done on a class level. You would need to switch the settings on the class on a per-user basis, and that code might be difficult to write.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><paperclip>","commentcount":"1","accepted":""},"22395986":{"id":"22395986","date":"2014-03","score":"0","body":"\"<p>I don't think Digest is the cause of your problems. It seems that MySQL can't connect to your database correctly. Are you sure that your <code>config\\\/database.yml<\\\/code> settings are correct for your current environment?<\\\/p>\\n\\n<p>I don't know for certain, but if the error is pointing <a href=\\\"https:\\\/\\\/github.com\\\/brianmario\\\/mysql2\\\/blob\\\/0.3.13\\\/lib\\\/mysql2\\\/client.rb#L58\\\" rel=\\\"nofollow\\\">directly at this line<\\\/a> then it's my best guess that you've got your database mis-configured within <code>config\\\/database.yml<\\\/code>.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-4><spree>","commentcount":"3","accepted":""},"22446158":{"id":"22446158","date":"2014-03","score":"1","body":"\"<p>Exactly as the error says: you are not a super user and you can't copy from a file.<\\\/p>\\n\\n<p>Your syntax errors are the result of you using, again as the error says, invalid syntax. You can't copy from a file on Heroku, so you're going to have to make do with some other solution.<\\\/p>\\n\\n<p><a href=\\\"http:\\\/\\\/stackoverflow.com\\\/a\\\/6780870\\\/15245\\\">The answer here<\\\/a> is what I would recommend doing.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"","commentcount":"4","accepted":""},"22468324":{"id":"22468324","date":"2014-03","score":"3","body":"\"<p>This is attempting to use the wrong route helper:<\\\/p>\\n\\n<pre><code>&lt;td&gt;&lt;%= link_to 'Destroy', manufacturer_lines_path, method: :delete, data: { confirm: 'Are you sure?' } %&gt;&lt;\\\/td&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>It should be:<\\\/p>\\n\\n<pre><code>&lt;td&gt;&lt;%= link_to 'Destroy', manufacturer_line_path(line.manufacturer, line), method: :delete, data: { confirm: 'Are you sure?' } %&gt;&lt;\\\/td&gt;\\n<\\\/code><\\\/pre>\\n\\n<p>What <code>manufacturer_lines_path<\\\/code> is doing is using the routing helper to generate a path such as <code>\\\/manufacturers\\\/1\\\/lines<\\\/code>, which is perfectly valid. What's <em>not<\\\/em> valid is that this link is making a <code>DELETE<\\\/code> request to that route, and if you look in your <code>rake routes<\\\/code> output you'll see that you don't have a route for this. You probably only have one for <code>GET<\\\/code> and another for <code>POST<\\\/code>, but not for <code>DELETE<\\\/code>.<\\\/p>\\n\\n<p>So the solution is to use the right path helper, <code>manufacturer_line_path<\\\/code>, which takes a <code>Manufacturer<\\\/code> object and a <code>Line<\\\/code> object and from that it generates a route such as <code>\\\/manufacturers\\\/1\\\/lines\\\/2<\\\/code>. Again, looking in the output of <code>rake routes<\\\/code>, you'll see that you have a couple of routes defined for this path. A <code>GET<\\\/code>, a <code>PUT<\\\/code>, a <code>PATCH<\\\/code> and a <code>DELETE<\\\/code>.<\\\/p>\\n\\n<p>This last route is what's going to be matched when you make a <code>DELETE \\\/manufacturers\\\/1\\\/lines\\\/2<\\\/code> request, and your application's router will route that to <code>LinesController<\\\/code>'s <code>destroy<\\\/code> action, passing in <code>manufacturer_id=1<\\\/code> and <code>id=2<\\\/code> in the parameters.<\\\/p>\\n\"","title":"\"\"","favorite":null,"tags":"","commentcount":"4","accepted":""},"22493890":{"id":"22493890","date":"2014-03","score":"0","body":"\"<p>The difference between your two routes files is that Rails doesn't know how to imply a controller\\\/action for this route:<\\\/p>\\n\\n<pre><code>get \\\"\\\/center\\\/show_user\\\/\\\"\\n<\\\/code><\\\/pre>\\n\\n<p>So you have to tell it:<\\\/p>\\n\\n<pre><code>get \\\"\\\/center\\\/show_user\\\", :to =&gt; \\\"center#show_user\\\"\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"","commentcount":"3","accepted":""},"22493908":{"id":"22493908","date":"2014-03","score":"3","body":"\"<p>You're not defining this variable:<\\\/p>\\n\\n<pre><code>var status = vote_status.evalJSON();\\n<\\\/code><\\\/pre>\\n\\n<p>You must define that variable.<\\\/p>\\n\\n<p>It seems likely that you intended for that code to go into the <code>success<\\\/code> function, which returns the data from the ajax call as the first argument in that function:<\\\/p>\\n\\n<pre><code>success: function(data) {\\n  console.log(data)\\n}\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"","commentcount":"2","accepted":""},"22652245":{"id":"22652245","date":"2014-03","score":"3","body":"\"<p>There is not a method in Active Support that will do this. I recommend <code>each<\\\/code> and <code>send<\\\/code>:<\\\/p>\\n\\n<pre><code>hash.each do |method, arg|\\n  obj.public_send(method, arg)\\nend\\n<\\\/code><\\\/pre>\\n\"","title":"\"\"","favorite":null,"tags":"","commentcount":"2","accepted":""}},"comments":{"3836226":{"date":"2010-09","id":"3836226","postid":"3641549","body":"\"@WedTM: Then require Bundler, point it at your Gemfile and then put the script gems in a group called \\\"script\\\" and include them using Bundler.require(:script)?\"","score":"0","tags":""},"4041662":{"date":"2010-09","id":"4041662","postid":"3810275","body":"\"@Makis: updated answer\"","score":"0","tags":""},"4041780":{"date":"2010-09","id":"4041780","postid":"3809741","body":"\"Please show us your current code.\"","score":"3","tags":"<ruby-on-rails><json>"},"4042098":{"date":"2010-09","id":"4042098","postid":"3810275","body":"\"@Chris Johnsen: you're right, I should have use `git push` or `git branch -dr`. I'll update the answer to reflect this now.\"","score":"0","tags":""},"4205915":{"date":"2010-10","id":"4205915","postid":"3939757","body":"\"Please don't send it to just Jaime, put the code in the question so other people can see it and offer answers. I am finding it hard to believe that Bundler is doing this, betting its something in _config\\\/boot.rb_ instead.\"","score":"0","tags":"<ruby-on-rails><routes><bundler>"},"4293402":{"date":"2010-10","id":"4293402","postid":"4006892","body":"\"possible duplicate of [Rails - Paper_Clip - Support for Multi File Uploads](http:\\\/\\\/stackoverflow.com\\\/questions\\\/4001376\\\/rails-paper-clip-support-for-multi-file-uploads) (AKA: See my answer there)\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4293409":{"date":"2010-10","id":"4293409","postid":"4007027","body":"\"Please provide more context with your questions. I have found them to be lacking in it :(\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4361685":{"date":"2010-10","id":"4361685","postid":"4057103","body":"\"@Mark Thomas: yes it was supposed to be humour. He gave an input and an output time that wouldn't match, ever. Tricksie little hobbit!\"","score":"2","tags":""},"4552520":{"date":"2010-11","id":"4552520","postid":"4207774","body":"\"GiH: The tutorial probably doesn't cover installing the sqlite3-ruby gem because the author already has it installed. If you don't want to use a database, revert the settings in config\\\/database.yml to sqlite3 and install the sqlite3-ruby gem.\"","score":"1","tags":""},"4652662":{"date":"2010-11","id":"4652662","postid":"4288042","body":"\"You don't need to be on 1.9.2 to run Rails 3, 1.8.7p302 will work fine.\"","score":"0","tags":""},"4652669":{"date":"2010-11","id":"4652669","postid":"4287998","body":"\"+1 Scott Lowe. How'd you upgrade? Did you just clone Rails to vendor\\\/rails? This is what it looks like to me.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4653396":{"date":"2010-11","id":"4653396","postid":"4288958","body":"\"Greg: it's a Rails (Active Support) extension to the Array class that, for some reason, doesn't appear on api.rubyonrails.org\"","score":"0","tags":""},"4667228":{"date":"2010-11","id":"4667228","postid":"4299597","body":"\"possible duplicate of [How to filter In ActionController?](http:\\\/\\\/stackoverflow.com\\\/questions\\\/1671620\\\/how-to-filter-in-actioncontroller)\"","score":"0","tags":"<ruby-on-rails>"},"4667233":{"date":"2010-11","id":"4667233","postid":"4299597","body":"\"Please see my answer on the question in the comment above.\"","score":"0","tags":"<ruby-on-rails>"},"4668306":{"date":"2010-11","id":"4668306","postid":"4299724","body":"\"@mswallace perhaps then accept this answer?\"","score":"0","tags":""},"4668477":{"date":"2010-11","id":"4668477","postid":"4300240","body":"\"Where is the `Item` model kept? The usual spot?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><rake>"},"4815518":{"date":"2010-12","id":"4815518","postid":"4414596","body":"\"Please edit your question and format your code.\"","score":"0","tags":"<ruby-on-rails><paperclip><devise>"},"4840798":{"date":"2010-12","id":"4840798","postid":"4434077","body":"\"@Tadas: There was nothing about a view or a form in the original question so I answered to the best of my ability in that respect. If you're looking to test the view \\\/ form on this then I would recommend going with something such as Cucumber or Steak for full-stack integration testing.\"","score":"0","tags":""},"4841817":{"date":"2010-12","id":"4841817","postid":"4435127","body":"\"This doesn't make any sense. Show us how you've set up a working app. What is in the User model?\"","score":"0","tags":"<ruby-on-rails><session><devise><ruby-on-rails-3>"},"4868122":{"date":"2010-12","id":"4868122","postid":"4456110","body":"\"define \\\"random error\\\"\"","score":"2","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4868265":{"date":"2010-12","id":"4868265","postid":"4456254","body":"\"Show us how you get a `NoMethodError` with Rails.\"","score":"0","tags":"<ruby-on-rails><ruby>"},"4868425":{"date":"2010-12","id":"4868425","postid":"4456177","body":"\"@Nerian: you have to restart your server for the changes to be detected to these files.\"","score":"1","tags":""},"4030995":{"date":"2010-09","id":"4030995","postid":"3801364","body":"\"@TheApprentice, well in that case use the `:vague` option in dotiw.\"","score":"0","tags":""},"4389216":{"date":"2010-11","id":"4389216","postid":"4081810","body":"\"Could you please open a new question about the API thing rather than answering with a question? That way we have the questions & answers searchable.\"","score":"3","tags":""},"4415994":{"date":"2010-11","id":"4415994","postid":"4101570","body":"\"@Trip: I think you'll find it *is* in the params.\"","score":"0","tags":""},"4416026":{"date":"2010-11","id":"4416026","postid":"4102743","body":"\"What style attribute? For what tag? Do you perhaps mean the style tag?\"","score":"0","tags":"<xhtml>"},"4631243":{"date":"2010-11","id":"4631243","postid":"4271590","body":"\"@Sam: Great! Happy to help\"","score":"0","tags":""},"4631293":{"date":"2010-11","id":"4631293","postid":"4261493","body":"\"@magnushjelm: This is actually working for me, I don't know why yours would be nil: https:\\\/\\\/gist.github.com\\\/516d3dd3989dffe9ded5\"","score":"0","tags":""},"4631382":{"date":"2010-11","id":"4631382","postid":"4271649","body":"\"I think it's a little more than this... possibly a `shop` object that hasn't yet been saved.\"","score":"0","tags":""},"4631389":{"date":"2010-11","id":"4631389","postid":"4270067","body":"\"Do you have a `shop` object that hasn't yet been saved? i.e. is this inside a nested resource where you're doing `something.shops.build` in the controller action?\"","score":"0","tags":"<ruby-on-rails>"},"4631449":{"date":"2010-11","id":"4631449","postid":"4270067","body":"\"Alternatively, do you have a custom `to_param` method on the `Shop` class and does one of the shops contain a period (.) in its `to_param` version?\"","score":"0","tags":"<ruby-on-rails>"},"4678217":{"date":"2010-11","id":"4678217","postid":"4288042","body":"\"@Bob: Then use 1.8.7p302.\"","score":"0","tags":""},"4705453":{"date":"2010-12","id":"4705453","postid":"4329730","body":"\"Actually by the looks of things, they are out of space. What's the git command that's running when this happens?\"","score":"0","tags":"<git>"},"4719667":{"date":"2010-12","id":"4719667","postid":"4340094","body":"\"I would run `rake db:schema:load` because that's the FINAL database schema, where as migrations will run every single little change.\"","score":"1","tags":""},"4733823":{"date":"2010-12","id":"4733823","postid":"4350511","body":"\"@Rails101: current_user.pages.build(params[:page].merge(:other_id => other_id)\"","score":"2","tags":""},"4733962":{"date":"2010-12","id":"4733962","postid":"4350856","body":"\"Please explain the exact steps you're taking to get that error.\"","score":"0","tags":"<ruby-on-rails><ruby><routes><partial-views>"},"4856753":{"date":"2010-12","id":"4856753","postid":"4446735","body":"\"@Misha: Download the rails.js file in the src directory and put it into your public\\\/javascripts folder as rails.js. If you're using jQuery, you *must* replace the Prototype `rails.js` with the jQuery equivalent.\"","score":"2","tags":""},"4869613":{"date":"2010-12","id":"4869613","postid":"4456932","body":"\"@BlankMan: if you're doing [:admin, :post] then it would go to \\\/admin\\\/posts\\\/new. Use @post. There's a massive difference.\"","score":"2","tags":""},"4883787":{"date":"2010-12","id":"4883787","postid":"4468351","body":"\"Isn't this what I posted, only longer? Sorry to be a spoil sport :(\"","score":"0","tags":""},"4885165":{"date":"2010-12","id":"4885165","postid":"4467768","body":"\"@Misha: Yes they'd become global but that's generally Not A Good Idea(tm). Best thing to do in this case is to `extend` the class with the module.\"","score":"0","tags":""},"4898971":{"date":"2010-12","id":"4898971","postid":"4480153","body":"\"Please demonstrate how you're using this in the model.\"","score":"2","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4899107":{"date":"2010-12","id":"4899107","postid":"4479136","body":"\"Show us your spec\\\/spec_helper.rb file please.\"","score":"0","tags":"<ruby-on-rails><rspec2><spork>"},"4941893":{"date":"2010-12","id":"4941893","postid":"4507140","body":"\"@Dex: Oh I see you want to create it. Then `:create_commentable` is what will create that object before create.\"","score":"0","tags":""},"4942273":{"date":"2010-12","id":"4942273","postid":"4513684","body":"\"Can you show us the stacktrace from this error please?\"","score":"0","tags":"<ruby-on-rails><ubuntu><ruby-on-rails-3><rmagick>"},"4955945":{"date":"2010-12","id":"4955945","postid":"4523891","body":"\"It would be more helpful if you explained how the `hidden_field` was useful.\"","score":"0","tags":"<sql><ruby-on-rails><join><fields-for>"},"4970407":{"date":"2010-12","id":"4970407","postid":"4530092","body":"\"Sadly not in Rails 3 any more, you need to require things manually now.\"","score":"0","tags":""},"4970429":{"date":"2010-12","id":"4970429","postid":"4530092","body":"\"Or you could add them to the autoload_path setting and when their constants are referenced they will be autoloaded\"","score":"0","tags":""},"4970763":{"date":"2010-12","id":"4970763","postid":"4532349","body":"\"@siride: Perhaps you should try being less condescending and linking to what you consider to be the best description of what questioners are asking for.\"","score":"1","tags":"<git><version-control><branch>"},"5000180":{"date":"2010-12","id":"5000180","postid":"4558501","body":"\"You should use `ActiveSupport::SecureRandom` for this rather than coding your own functionality.\"","score":"10","tags":""},"3858433":{"date":"2010-09","id":"3858433","postid":"3663235","body":"\"@Jian Lin: Yes, to initially generate a Rails application you need to have the Rails gem installed without using Bundler. To run a Rails project however you only need it installed as a bundled gem.\"","score":"0","tags":""},"3955256":{"date":"2010-09","id":"3955256","postid":"2982686","body":"\"Why not `simple_format`?\"","score":"9","tags":""},"4030354":{"date":"2010-09","id":"4030354","postid":"3801067","body":"\"Could you show the exact error you're getting and the steps you go through to make it happen? It could mean either that it can't find a model's object or it's the 404.html page.\"","score":"0","tags":"<ruby-on-rails><ruby>"},"4030361":{"date":"2010-09","id":"4030361","postid":"3800924","body":"\"@TheApprentice: Absolutely if you want to uniquely identify them.\"","score":"0","tags":""},"4084613":{"date":"2010-10","id":"4084613","postid":"3844561","body":"\"Please show us your Gemfile.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4158488":{"date":"2010-10","id":"4158488","postid":"3902486","body":"\"There is no version of Rails that is 1.8.7, that would be your Ruby version.\"","score":"1","tags":"<ruby-on-rails><routing><mongrel><dispatch>"},"4556305":{"date":"2010-11","id":"4556305","postid":"4212503","body":"\"Do you have an example you're using right now that you could show us?\"","score":"0","tags":"<curl>"},"4557010":{"date":"2010-11","id":"4557010","postid":"4207774","body":"\"GiH: i don't think you'd be missing any more gems. As long as you've got Rails and sqlite3-ruby installed I think you're set. Good luck, and if you need any more help keep asking!\"","score":"1","tags":""},"4655247":{"date":"2010-11","id":"4655247","postid":"4288042","body":"\"@Bob: It needs to be anything *above* p249. 249 has been known to break Rails. I'd advise just upgrading to 1.9.2.\"","score":"0","tags":""},"4683444":{"date":"2010-11","id":"4683444","postid":"4312513","body":"\"Alternatively add the `buy` action as a collection route to your `resources :apps`.\"","score":"4","tags":""},"4777682":{"date":"2010-12","id":"4777682","postid":"4384735","body":"\"I think that the OP should be using the index action for this, not the list action. The list action is old tech.\"","score":"0","tags":""},"4821431":{"date":"2010-12","id":"4821431","postid":"4418971","body":"\"I think he wants it to happen automatically.\"","score":"1","tags":""},"4821488":{"date":"2010-12","id":"4821488","postid":"4419373","body":"\"Could you show us a screenshot of what it is precisely you want to change?\"","score":"1","tags":"<wordpress>"},"4894774":{"date":"2010-12","id":"4894774","postid":"4473088","body":"\"It should go in a new file in config\\\/initializers\"","score":"0","tags":""},"4894778":{"date":"2010-12","id":"4894778","postid":"4476769","body":"\"Do you have some links to your \\\"research\\\"?\"","score":"0","tags":"<ruby-on-rails><authlogic><passenger><webfaction>"},"4895757":{"date":"2010-12","id":"4895757","postid":"4475917","body":"\"Could you expand on why this wouldn't be reliable? Don't these directories *have* to exist in order for Git and Mercurial to work?\"","score":"0","tags":""},"4895777":{"date":"2010-12","id":"4895777","postid":"4477347","body":"\"Could you provide us with the query you're using as an example?\"","score":"2","tags":"<ruby-on-rails><ruby><rails-activerecord>"},"4966718":{"date":"2010-12","id":"4966718","postid":"4532890","body":"\"Yes, please don't put these in `db\\\/migrate`, they belong in a separate folder such as `db\\\/seed`.\"","score":"1","tags":""},"4966775":{"date":"2010-12","id":"4966775","postid":"4515566","body":"\"It would be better to run `rake db:test:prepare` because that just copies over the schema rather than running the migrations.\"","score":"2","tags":""},"4966885":{"date":"2010-12","id":"4966885","postid":"4533285","body":"\"That *is* the correct output for a `rails c` session though.\"","score":"0","tags":""},"4993269":{"date":"2010-12","id":"4993269","postid":"4550332","body":"\"@weotch: well this simply means your tag is nil. You would get an `undefined method \\\\`name' for nil:nilClass` if you tried Abdullah's way.\"","score":"0","tags":""},"4993752":{"date":"2010-12","id":"4993752","postid":"4554705","body":"\"Expanding on \\\"not to store in Database\\\" answer: Files are for the filesystem. Databases are not designed for files. Just don't do that, please.\"","score":"0","tags":""},"5031881":{"date":"2011-01","id":"5031881","postid":"4573465","body":"\"@minikomi: It only needs `Time.zone` to be set. Just set `Time.zone = 'Sydney'` for example in your application.\"","score":"0","tags":""},"5032185":{"date":"2011-01","id":"5032185","postid":"4582564","body":"\"Good answer, but in future please direct users to use the simpler routing helpers, such as `sessions_path`, which they must generate themselves in `config\\\/routes.rb`.\"","score":"1","tags":""},"3826584":{"date":"2010-09","id":"3826584","postid":"3640628","body":"\"Please show us your Gemfile.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><bundler>"},"4089156":{"date":"2010-10","id":"4089156","postid":"3844618","body":"\"@Zabba: Updated answer to use splat operator and flatten. This will work now.\"","score":"0","tags":""},"4089163":{"date":"2010-10","id":"4089163","postid":"3847597","body":"\"Thanks for the plug!\"","score":"0","tags":""},"4204528":{"date":"2010-10","id":"4204528","postid":"3938709","body":"\"Your problem is because you're passing @name.each as the variable in the form_for, but I am not sure of the solution. Are you trying to edit more than one record at once?\"","score":"0","tags":"<ruby-on-rails><forms><activerecord><scaffold>"},"4554860":{"date":"2010-11","id":"4554860","postid":"4210554","body":"\"It's best practice to use concat around the content_tag here rather than `join` at the end. This is exceptionally helpful if you've got multiple levels of nesting.\"","score":"0","tags":""},"4587453":{"date":"2010-11","id":"4587453","postid":"4236745","body":"\"Not quite sure you understand MVC. The logic for Post objects belongs in the Post model, not the controller. The controller is only there to provide an interface between the models and the views.\"","score":"0","tags":""},"4618361":{"date":"2010-11","id":"4618361","postid":"4260290","body":"\"Yes, that gives him \\\/users\\\/:username. He wants it without the \\\/users\\\/ prefix.\"","score":"0","tags":""},"4634498":{"date":"2010-11","id":"4634498","postid":"4274002","body":"\"Please show the syntax error that you're getting.\"","score":"0","tags":"<ruby-on-rails>"},"4634508":{"date":"2010-11","id":"4634508","postid":"4274002","body":"\"ALso please only tag the questions with the *language*, additional tags such as \\\"helpers\\\" \\\/ \\\"link-to\\\" are not helpful and are just tagspam :(\"","score":"0","tags":"<ruby-on-rails>"},"4635443":{"date":"2010-11","id":"4635443","postid":"4274719","body":"\"And if you want something more precise, http:\\\/\\\/github.com\\\/radar\\\/dotiw\"","score":"0","tags":""},"4741376":{"date":"2010-12","id":"4741376","postid":"4357174","body":"\"Why not just use File.new rather than Tempfile.new?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4827959":{"date":"2010-12","id":"4827959","postid":"4423978","body":"\"@AnApprentice: Set the variables before the exception is raised, they will be available in the rescue.\"","score":"0","tags":""},"4842910":{"date":"2010-12","id":"4842910","postid":"4435212","body":"\"@John: That's right.\"","score":"0","tags":""},"4844217":{"date":"2010-12","id":"4844217","postid":"4436864","body":"\"Did you research this? `:product` for me takes the form to the same route: `\\\/products\\\/new`. Same with the edit page: `\\\/products\\\/1\\\/edit`. I'm just confused with your answer, is all. It contradicts what I'm actually seeing in *my research*.\"","score":"0","tags":""},"4844242":{"date":"2010-12","id":"4844242","postid":"4436950","body":"\":product also effects the URL that the `form_for` generates.\"","score":"0","tags":""},"4859296":{"date":"2010-12","id":"4859296","postid":"4446735","body":"\"@Misha: You can change the defaults using this in _config\\\/application.rb_ `config.action_view.javascript_expansions[:default] = [\\\"jquery\\\", \\\"rails\\\"]`\"","score":"1","tags":""},"4859461":{"date":"2010-12","id":"4859461","postid":"4448815","body":"\"And what would you do with a name such as \\\"de Wit\\\"?\"","score":"0","tags":"<ruby-on-rails>"},"4917335":{"date":"2010-12","id":"4917335","postid":"4494309","body":"\"Why not index the created_at column?\"","score":"0","tags":""},"4917646":{"date":"2010-12","id":"4917646","postid":"4494674","body":"\"Please show us the users_controller_spec code where this is failing.\"","score":"1","tags":"<ruby-on-rails><rspec>"},"4946184":{"date":"2010-12","id":"4946184","postid":"4516163","body":"\"@Zabba: No, by default Bundler is used to load the directory where Rails is. You must be explicit in this fashion to be able to have it at vendor\\\/rails.\"","score":"0","tags":""},"4973098":{"date":"2010-12","id":"4973098","postid":"4537573","body":"\"Please use the path helpers to generate the route to this action.\"","score":"0","tags":""},"4987717":{"date":"2010-12","id":"4987717","postid":"4545224","body":"\"@hurikhan77: Thanks I've fixed this up now.\"","score":"0","tags":""},"5001491":{"date":"2010-12","id":"5001491","postid":"4559597","body":"\"@Zabba: Actually `create_skill` will do that. Now if you'd be so kind as to remove your downvote.\"","score":"0","tags":""},"5001497":{"date":"2010-12","id":"5001497","postid":"4559597","body":"\"@Bruno: I've updated my answer with the correct form_for line now.\"","score":"0","tags":""},"5043997":{"date":"2011-01","id":"5043997","postid":"4489542","body":"\"1) accept answers please, you have an acceptance rating of 0% right now 2) Rails 3 doesn't have config.gem anymore, are you sure you're using Rails 3? 3) Only use the `right_aws` as it does the same thing as the `aws-s3` gem, but is more recent.\"","score":"0","tags":"<amazon-s3><ruby-on-rails-3><paperclip>"},"5044061":{"date":"2011-01","id":"5044061","postid":"4590836","body":"\"This is totally correct. If you alter an existing migration, other developers would need to pull it in and run those tricky bastard commands to get it to the same state as you, or even worse run `rake db:schema:load`. If you've committed a migration, it should *never* change.\"","score":"2","tags":""},"3897201":{"date":"2010-09","id":"3897201","postid":"3694311","body":"\"@TK: Yes, and running it twice is to my knowledge slower than checking an include? once.\"","score":"0","tags":""},"4095836":{"date":"2010-10","id":"4095836","postid":"3852759","body":"\"You can see the errors but we can't. Are we allowed to see them too?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><rake><populate>"},"4169156":{"date":"2010-10","id":"4169156","postid":"3910894","body":"\"Please show us the config\\\/routes.rb file.\"","score":"0","tags":"<ruby-on-rails>"},"4169267":{"date":"2010-10","id":"4169267","postid":"3910778","body":"\"One more thing: Is Terminal completely disabled or is it just \\\"Rails\\\"?\"","score":"0","tags":"<ruby-on-rails><ruby><osx>"},"4661108":{"date":"2010-11","id":"4661108","postid":"4295033","body":"\"Please show us your Gemfile\"","score":"0","tags":"<ruby-on-rails><bundle><bundler>"},"4720387":{"date":"2010-12","id":"4720387","postid":"4329753","body":"\"@jimmybandit: Please note I've used a SYMBOL in my `form_for` code intentionally, where you've used an INSTANCE VARIABLE. Because it's a singular resource, the reference in the `form_for` MUST be a SYMBOL.\"","score":"0","tags":""},"4720402":{"date":"2010-12","id":"4720402","postid":"4340599","body":"\"The first argument to `link_to` is the text for the link, the second is the URL to the resource (or the resource itself, where Rails will determine the URL for it) and then the final arguments are options for `link_to` and then html options. Read the docs here: http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActionView\\\/Helpers\\\/UrlHelper.html#method-i-link_to\"","score":"0","tags":""},"4813348":{"date":"2010-12","id":"4813348","postid":"4396572","body":"\"attr_accessible defines fields which are mass-assignable. If you used `attr_accessible :foo` then you could only assign `foo` during mass-assignment.\"","score":"1","tags":"<ruby-on-rails><ruby>"},"4934763":{"date":"2010-12","id":"4934763","postid":"4508096","body":"\"With or without duplicates?\"","score":"0","tags":"<ruby><string>"},"4934773":{"date":"2010-12","id":"4934773","postid":"4507122","body":"\"@Aditya: It's *more* performant in 1.9 and 1.8.7p302 afaik.\"","score":"0","tags":""},"4981536":{"date":"2010-12","id":"4981536","postid":"4543226","body":"\"Could you show us how you installed this Ruby? It looks like it's broken.\"","score":"0","tags":"<ruby-on-rails-3><rake><yaml><ruby-1.9.1>"},"5010609":{"date":"2010-12","id":"5010609","postid":"4567064","body":"\"Or convert it to a `Time` object.\"","score":"0","tags":""},"5010623":{"date":"2010-12","id":"5010623","postid":"4566681","body":"\"The code is available at http:\\\/\\\/github.com\\\/rails3book\\\/ticketee\"","score":"0","tags":"<ruby-on-rails><cucumber>"},"5011242":{"date":"2010-12","id":"5011242","postid":"4567531","body":"\"This is correct: OP is attempting to install Oniguruma which is already contained within Ruby 1.9. You don't need to re-install it.\"","score":"1","tags":""},"5011252":{"date":"2010-12","id":"5011252","postid":"4566569","body":"\"Could you show us the stacktrace associated with that error? it could contain useful information that will allow us to track down that error.\"","score":"0","tags":"<ruby-on-rails><ruby>"},"5024168":{"date":"2011-01","id":"5024168","postid":"4576693","body":"\"@seth.vargo: no you don't have to put it into an array to escape.\"","score":"0","tags":""},"5024204":{"date":"2011-01","id":"5024204","postid":"4576693","body":"\"@seth.vargo - really.\"","score":"0","tags":""},"5024365":{"date":"2011-01","id":"5024365","postid":"4576902","body":"\"Cool, I didn't know about the `new_offset` method.\"","score":"0","tags":""},"5025041":{"date":"2011-01","id":"5025041","postid":"4577224","body":"\"Ruby is not used to count the number of posts, the `count` method is this: http:\\\/\\\/api.rubyonrails.org\\\/classes\\\/ActiveRecord\\\/Calculations.html#method-i-count\"","score":"2","tags":"<ruby-on-rails><ruby><database><sqlite3>"},"5095842":{"date":"2011-01","id":"5095842","postid":"4631705","body":"\"@mtay: Ah yes, you need a `do` too.\"","score":"0","tags":""},"5095937":{"date":"2011-01","id":"5095937","postid":"4630311","body":"\"You only need to specify `gem 'friendly_id`'  there, as the gem as a runtime dependency of the babosa gem, so it will be automatically included.\"","score":"2","tags":""},"4090871":{"date":"2010-10","id":"4090871","postid":"3848124","body":"\"@holden: Your initial question wasn't clear then. Please clarify it.\"","score":"0","tags":""},"4193512":{"date":"2010-10","id":"4193512","postid":"3921105","body":"\"@marcamillion: No worries, glad to help out! Ah yes, the `.rhtml` extension is something that I totally had forgotten about! In Rails 3 there's now the `.html.erb` extension for these files where the file name is `<format>.<extension>`, which is how Rails can decide what template to render based on the request type. The \\\"Getting Started\\\" guide kinda covers this with mention to respond_to, but nothing seriously in-depth.\"","score":"1","tags":""},"4193517":{"date":"2010-10","id":"4193517","postid":"3921105","body":"\"Also: there's no such thing as a dumb question. Knowledge should be shared, never hoarded.\"","score":"4","tags":""},"4193724":{"date":"2010-10","id":"4193724","postid":"3930332","body":"\"What is the evidence that you have that this is being called twice?\"","score":"0","tags":"<ruby-on-rails><controller><action><halting-problem>"},"4416582":{"date":"2010-11","id":"4416582","postid":"4103185","body":"\"Please show us the \\\"below code\\\"\"","score":"0","tags":"<ruby-on-rails>"},"4416592":{"date":"2010-11","id":"4416592","postid":"4103070","body":"\"Please show us your en.yml file. It, somewhere, does not have the correct number of spaces. Probably around the area it's telling you.\"","score":"1","tags":"<ruby-on-rails><internationalization>"},"4428581":{"date":"2010-11","id":"4428581","postid":"4112667","body":"\"I agree, Devise really is the quickest and best solution to this problem\"","score":"0","tags":""},"4552764":{"date":"2010-11","id":"4552764","postid":"4209535","body":"\"Hugo is right here, you just need to pass a File object to the accessor setup on your model.\"","score":"0","tags":""},"4840375":{"date":"2010-12","id":"4840375","postid":"4433719","body":"\"@Meltemi: Right, which is why you should be calling `@user.confirm!` on the record before trying to do anything to it. I'll update my answer with that.\"","score":"2","tags":""},"4840395":{"date":"2010-12","id":"4840395","postid":"4433438","body":"\"@Trip: try my updated answer\"","score":"0","tags":""},"4855325":{"date":"2010-12","id":"4855325","postid":"4445036","body":"\"Wow, looks like we posted at the very same second. Tough luck :(\"","score":"0","tags":""},"4855342":{"date":"2010-12","id":"4855342","postid":"4445853","body":"\"This is correct and needs 10 upvotes.\"","score":"1","tags":""},"4856111":{"date":"2010-12","id":"4856111","postid":"4446455","body":"\"This is correct.\"","score":"0","tags":""},"4871399":{"date":"2010-12","id":"4871399","postid":"4456653","body":"\"@forellana: is the expense you're using in the Cucumber feature w valid one?\"","score":"0","tags":""},"4885835":{"date":"2010-12","id":"4885835","postid":"4467768","body":"\"@Misha: your model\"","score":"0","tags":""},"4887017":{"date":"2010-12","id":"4887017","postid":"4467768","body":"\"@Misha: No, you're `include`'ing the module. `extend` is different.\"","score":"0","tags":""},"4900201":{"date":"2010-12","id":"4900201","postid":"4481079","body":"\"This is correct, but a little bit more expansion is required: provided you have _vendor\\\/plugins\\\/plugin_name\\\/init.rb_ or _vendor\\\/plugins\\\/plugin_name\\\/lib\\\/plugin_name.rb it will be automatically loaded.\"","score":"0","tags":""},"4900763":{"date":"2010-12","id":"4900763","postid":"4481578","body":"\"This is also covered in the Query Interface guide: http:\\\/\\\/guides.rubyonrails.org\\\/active_record_querying.html\"","score":"0","tags":""},"4901267":{"date":"2010-12","id":"4901267","postid":"4481777","body":"\"Where is this helper located?\"","score":"0","tags":"<ruby-on-rails>"},"4929959":{"date":"2010-12","id":"4929959","postid":"4503595","body":"\"This is a hack, sorry to say. OP should use the `:as` option on `resources`.\"","score":"1","tags":""},"4988756":{"date":"2010-12","id":"4988756","postid":"4550680","body":false,"score":"1","tags":"<php><regex>"},"5018550":{"date":"2011-01","id":"5018550","postid":"4572993","body":"\"Thanks for the speedy and apt reply!\"","score":"0","tags":""},"5087886":{"date":"2011-01","id":"5087886","postid":"4625827","body":"\"I would guess that he's using Rails 3 and that he hasn't put `gem 'httparty' in his Gemfile.\"","score":"0","tags":""},"5111803":{"date":"2011-01","id":"5111803","postid":"4643565","body":"\"Show us how they fail, it would provide useful context.\"","score":"3","tags":"<ruby-on-rails><rspec><cucumber>"},"3854314":{"date":"2010-09","id":"3854314","postid":"3641549","body":"\"@WedTM: Updated. Give that a go.\"","score":"0","tags":""},"4201984":{"date":"2010-10","id":"4201984","postid":"3930395","body":"\"I'm using SendGrid right now on my day job's work application. It works perfect for our needs (sending out 3.5 million emails a month)\"","score":"0","tags":""},"4320120":{"date":"2010-10","id":"4320120","postid":"4027474","body":"\"+1 for Thinking Sphinx,\"","score":"2","tags":""},"4334262":{"date":"2010-10","id":"4334262","postid":"4038410","body":"\"@zetetic: I don't think he's using Rails 3.\"","score":"0","tags":""},"4563051":{"date":"2010-11","id":"4563051","postid":"4217961","body":"\"In future use backticks rather than the pre tag to stop automatic escaping.\"","score":"0","tags":""},"4563124":{"date":"2010-11","id":"4563124","postid":"4213276","body":"\"But what is `@topic` and perhaps more importantly, what is that object's `id`?\"","score":"0","tags":"<ruby><ruby-on-rails-3><send>"},"4606752":{"date":"2010-11","id":"4606752","postid":"4252370","body":"\"Splitting your question into two makes it kind of difficult for people to get the answers they seek. If you could move the errors into this question it'd be much appreciated.\"","score":"0","tags":"<ruby-on-rails><rubygems><installation>"},"4607850":{"date":"2010-11","id":"4607850","postid":"4252941","body":"\"3.0.3 was to fix a bug introduced in 3.0.2.\"","score":"0","tags":""},"4607905":{"date":"2010-11","id":"4607905","postid":"4252922","body":"\"No you can't. This will iterate through each object in that collection, assigning it to the local variable `foobars` inside the partial. There is no `size` method on a `Fixnum`, nor a `[]` method.\"","score":"0","tags":""},"4731660":{"date":"2010-12","id":"4731660","postid":"4349615","body":"\"What is backwards? This question doesn't make any sense.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4792499":{"date":"2010-12","id":"4792499","postid":"4396572","body":"\"You shouldn't use attr_accessible unless you want that field to be the *only* field that is accessible.\"","score":"1","tags":"<ruby-on-rails><ruby>"},"4822985":{"date":"2010-12","id":"4822985","postid":"4420449","body":"\"Show us the step and its definition please.\"","score":"0","tags":"<ruby-on-rails><cucumber><capybara>"},"4919502":{"date":"2010-12","id":"4919502","postid":"4495790","body":"\"@drinian: Rails gem management is now taken care of by Bundler. The Gemfile is your one-stop-shop for all gem versioning.\"","score":"3","tags":""},"4920260":{"date":"2010-12","id":"4920260","postid":"4496521","body":"\"I agree wholeheartedly.\"","score":"2","tags":"<hibernate><spring>"},"4953150":{"date":"2010-12","id":"4953150","postid":"4514522","body":"\"I'm using this for Rails 3 in Action and the lines of code can't extend past 72 characters in length. Tables are also preferred because it's very easy to add additional information to them without drastically changing the step.\"","score":"0","tags":""},"4953162":{"date":"2010-12","id":"4953162","postid":"4514153","body":"\"Never thought of using a tagged hook for this, that would work out fine!\"","score":"0","tags":""},"4965754":{"date":"2010-12","id":"4965754","postid":"4532405","body":"\"Could you describe in more detail what this specific constant is used for?\"","score":"0","tags":"<ruby><dependencies><warnings>"},"5191819":{"date":"2011-01","id":"5191819","postid":"4703751","body":"\"If you accept the highest voted answer you'll triple your reputation! :O\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rake><rakefile>"},"5215039":{"date":"2011-01","id":"5215039","postid":"4721313","body":"\"Your question would be better if we could see a sample of the javascript you're talking about.\"","score":"0","tags":"<ruby-on-rails>"},"5215050":{"date":"2011-01","id":"5215050","postid":"4719987","body":"\"You don't need to put \\\"Ruby on Rails (3)\\\" in the title. Please use the ruby-on-rails-3 tag for this instead.\"","score":"1","tags":"<ruby-on-rails><css><ruby-on-rails-3><selectbox>"},"5229017":{"date":"2011-01","id":"5229017","postid":"4730319","body":"\"Why not just have this use `console.log` or an `alert`? I don't see why this has to go through `Rails.logger`\"","score":"1","tags":"<javascript><jquery-ui><ruby-on-rails-3>"},"5229027":{"date":"2011-01","id":"5229027","postid":"4730830","body":"\"Why a `BigDecimal`? Wouldn't `to_f` on the end of these values be enough?\"","score":"2","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"5230162":{"date":"2011-01","id":"5230162","postid":"4732213","body":"\"You could add further information such as your operating system and how you installed MySQL\"","score":"1","tags":"<mysql><ruby-on-rails>"},"5243075":{"date":"2011-01","id":"5243075","postid":"4621934","body":"\"You don't have to add the sub-directories to the load path as app\\\/models is already there. By referencing a nested model such as `User::Group`, Rails will load it automatically by looking in these paths. All `app` constants are eager loaded in production mode.\"","score":"0","tags":""},"5260887":{"date":"2011-01","id":"5260887","postid":"4753819","body":"\"There will be a chapter in Rails 3 in Action about this, (but the route being site.com\\\/api, easily changeable). I would encourage you to buy it in about a week when it goes on sale.\"","score":"0","tags":"<ruby><api><ruby-on-rails-3><routing>"},"5260992":{"date":"2011-01","id":"5260992","postid":"4756334","body":"\"This is absolutely the problem.\"","score":"0","tags":""},"3939720":{"date":"2010-09","id":"3939720","postid":"3719984","body":"\"kolosy: You don't need a global constant (a variable beginning with `$`) just capitalize the first letter (yes, it **has** to be a letter) of the variable and that will define it as a constant. The rest of the letters don't need to be capitalized.\"","score":"1","tags":""},"4041368":{"date":"2010-09","id":"4041368","postid":"3809880","body":"\"@doctororange: No worries, happy to help.\"","score":"0","tags":""},"4041436":{"date":"2010-09","id":"4041436","postid":"3808987","body":"\"Could you please show us the query you would use for this so we have something to work with?\"","score":"1","tags":"<ruby-on-rails>"},"4180433":{"date":"2010-10","id":"4180433","postid":"3911018","body":"\"@sethg: Is there a specific thing that you'd like to see documented? There's many books out there at the moment such as The Rails 3 way by Obie Fernandez, Agile Web Development with Rails by DHH & co and Rails 3 in Action by myself and Yehuda Katz. I think the documentation and tutorials are already plentiful, but I'll admit that there's also some more advanced concepts that need fleshing out.\"","score":"0","tags":""},"4181572":{"date":"2010-10","id":"4181572","postid":"3920488","body":"\"Please format your code when you post answers (use 4 spaces to indent)\"","score":"1","tags":""},"4286254":{"date":"2010-10","id":"4286254","postid":"4001515","body":"\"You're going to have to provide us with more information than simply an error message. The code that you're using would be a great start.\"","score":"3","tags":"<ruby-on-rails><ruby-on-rails-3>"},"4652615":{"date":"2010-11","id":"4652615","postid":"4285228","body":"\"@Cezar: I don't see any conceivable way that is correct.\"","score":"0","tags":""},"4680773":{"date":"2010-11","id":"4680773","postid":"4310161","body":"\"Is the class in the model ProfileNotifications or ProfileNotification? In your comment above you have it listed as both.\"","score":"1","tags":"<ruby-on-rails>"},"4817079":{"date":"2010-12","id":"4817079","postid":"4416173","body":"\"That's pretty spot on. I would use `all` rather than `find(:all...` however. I also corrected your example to have the pluralized table names. But it's a good effort.\"","score":"2","tags":""},"4933604":{"date":"2010-12","id":"4933604","postid":"4507122","body":"\"And in 1.8.7p302: `str.split(',').map(&:to_i)`\"","score":"3","tags":""},"4961982":{"date":"2010-12","id":"4961982","postid":"4529343","body":"\"This is the better solution of the two imo.\"","score":"1","tags":""},"5019237":{"date":"2011-01","id":"5019237","postid":"4572037","body":"\"Please follow the question formatting guidelines when writing posts. Indent codeblocks with four spaces and for in-line code examples use \\\\`backticks\\\\`.\"","score":"0","tags":"<ruby-on-rails>"},"5019368":{"date":"2011-01","id":"5019368","postid":"4573465","body":"\"@minikomi: It should work with Active Record in any context.\"","score":"0","tags":""},"5019695":{"date":"2011-01","id":"5019695","postid":"4573821","body":"\"I'd agree, but I think you got your versions of Rails around the wrong way. By the looks of things it's not compatible with Rails *THREE* and used to be compatible with *TWO*.\"","score":"0","tags":""},"5019699":{"date":"2011-01","id":"5019699","postid":"4573611","body":"\"You should mention that \\\/products simply defaults to \\\/products.html, with \\\".html\\\" and \\\".xml\\\" being known as the \\\"format\\\".\"","score":"0","tags":""},"5019703":{"date":"2011-01","id":"5019703","postid":"4573507","body":"\"Depends on what these scripts do.\"","score":"2","tags":"<ruby><hosting>"},"5115702":{"date":"2011-01","id":"5115702","postid":"4646745","body":"\"Show us line 16 of `users_controller.rb` please.\"","score":"0","tags":"<ruby-on-rails><mongodb><mongomapper><mongodb-ruby>"},"5189889":{"date":"2011-01","id":"5189889","postid":"4702482","body":"\"How have you specified RSpec in your application? I'm interested in how you set it to be the default and also it's positioning in the Gemfile. Thanks.\"","score":"0","tags":"<ruby-on-rails><ruby><testing><rspec>"},"5233096":{"date":"2011-01","id":"5233096","postid":"4735303","body":"\"I have fixed up the indentation of your console output. Please use a four-space indent in the future when showing code or output.\"","score":"0","tags":"<ruby-on-rails>"},"5246251":{"date":"2011-01","id":"5246251","postid":"4743553","body":"\"Undefined method Struct? What version of Ruby is this? That should be giving you an uninitialized constant error.\"","score":"0","tags":"<ruby-on-rails><passenger><delayed-job>"},"5257137":{"date":"2011-01","id":"5257137","postid":"4753325","body":"\"Upvotes will be rewarded for code samples ;)\"","score":"0","tags":""},"5257176":{"date":"2011-01","id":"5257176","postid":"4752558","body":"\"What is \\\"\\\/lib\\\/fk_fixture_patch.rb:10:in `disable_referential_integrity'\\\" doing?\"","score":"0","tags":"<ruby-on-rails><upgrade>"},"5258194":{"date":"2011-01","id":"5258194","postid":"4753996","body":"\"What would you do in that case then? There's not enough information to answer this question effectively.\"","score":"0","tags":"<ruby-on-rails><activerecord><dynamic-finders>"},"5271713":{"date":"2011-01","id":"5271713","postid":"4764321","body":"\"`Dir` is Ruby Standrd Library.\"","score":"0","tags":""},"5113405":{"date":"2011-01","id":"5113405","postid":"4614466","body":"\"This works in the cases that I've tried it in, thanks!\"","score":"1","tags":""},"5126232":{"date":"2011-01","id":"5126232","postid":"4654294","body":"\"What is the `lib\\\/generators\\\/rspec\\\/model\\\/model_generator.rb` file in your application doing? It shows up in the stacktrace trying to look inconspicuous. It's failing.\"","score":"0","tags":"<ruby-on-rails><rspec><ruby-on-rails-3>"},"5168033":{"date":"2011-01","id":"5168033","postid":"4611575","body":"\"@Jack: yes, which is why I said \\\"you could adapt\\\" it.\"","score":"0","tags":""},"5254861":{"date":"2011-01","id":"5254861","postid":"4751292","body":"\"@the Tin Man: It doesn't? :)\"","score":"0","tags":"<ruby>"},"5269885":{"date":"2011-01","id":"5269885","postid":"4758069","body":"\"@Rohit: I've re-written the answer. If you'd be kind enough to review and remove the down-vote, I'd appreciate it.\"","score":"0","tags":""},"5337719":{"date":"2011-01","id":"5337719","postid":"4813666","body":"\"I'm sure this question has been asked at least 3 times before and I've answered one of them, but I cannot find it...\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"5352711":{"date":"2011-01","id":"5352711","postid":"4825235","body":"\"Should be using rubygems.org as the official source now.\"","score":"4","tags":""},"5352718":{"date":"2011-01","id":"5352718","postid":"4825048","body":"\"500 questions? Did you mean email?\"","score":"0","tags":""},"5380719":{"date":"2011-01","id":"5380719","postid":"4845523","body":"\"Could you explain how it's not working by showing us what you see?\"","score":"0","tags":"<ruby-on-rails><recaptcha>"},"5380733":{"date":"2011-01","id":"5380733","postid":"4845187","body":"\"Please link to the other questions in an answer here.\"","score":"3","tags":"<ruby><arrays><search><hashmap>"},"5380818":{"date":"2011-01","id":"5380818","postid":"4842564","body":"\"Show us your drawers... I mean code\"","score":"0","tags":"<unit-testing><ruby-on-rails-3><rspec>"},"5380878":{"date":"2011-01","id":"5380878","postid":"4845690","body":"\"What is self in this context? Where is the self.state= method being called?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"5380896":{"date":"2011-01","id":"5380896","postid":"4845667","body":"\"@demondeac11: You will have to use `raw`, as Rails 3 automatically escapes content. It would appear this plugin is not doing that automatically. The answer has been updated.\"","score":"0","tags":""},"5381195":{"date":"2011-01","id":"5381195","postid":"4845880","body":"\"Wrap the arguments of the `link_to` in parenthesis too.\"","score":"1","tags":""},"5381445":{"date":"2011-01","id":"5381445","postid":"4845702","body":"\"While it may be valid it's still not going to be what Webrat's after. Don't go against the flow and you won't have these problems :(\"","score":"0","tags":""},"5395185":{"date":"2011-01","id":"5395185","postid":"4847136","body":"\"@urschrei: such as?\"","score":"0","tags":""},"5538185":{"date":"2011-02","id":"5538185","postid":"4953390","body":"\"user368937: This is the old syntax that was the norm in Rails 2. dmarkow's is for Rails 3.\"","score":"0","tags":""},"5574349":{"date":"2011-02","id":"5574349","postid":"4989303","body":"\"You should use `Rails.root` now instead of RAILS_ROOT, as the latter has now been deprecated.\"","score":"2","tags":""},"5631724":{"date":"2011-02","id":"5631724","postid":"5034149","body":"\"There's more to the code. Show us the parts where it references categories, brands and merchants from the product partial please.\"","score":"0","tags":"<ruby><ruby-on-rails-3>"},"5631753":{"date":"2011-02","id":"5631753","postid":"5033571","body":"\"Please show us some code or errors.\"","score":"1","tags":"<ruby-on-rails><capybara>"},"5631768":{"date":"2011-02","id":"5631768","postid":"5032922","body":"\"Please show us your `db\\\/schema.rb` code for the `questions` table.\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><activerecord><migration>"},"5631785":{"date":"2011-02","id":"5631785","postid":"5033152","body":"\"Your route is already provided: just do `users_path`. It's the same thing.\"","score":"0","tags":"<ruby-on-rails><devise>"},"5632533":{"date":"2011-02","id":"5632533","postid":"5034786","body":"\"Please try to give your questions more descriptive titles in the future.\"","score":"2","tags":"<python><loops><vowel>"},"5661824":{"date":"2011-02","id":"5661824","postid":"4565314","body":"\"This is wrong, you don't need to do this at all\"","score":"0","tags":""},"5717137":{"date":"2011-02","id":"5717137","postid":"5098216","body":"\"I think it's not getting to `PasswordsController` because you've got some sort of login check there or in one of its super controllers.\"","score":"2","tags":"<ruby-on-rails><ruby-on-rails-3><testing><tdd><rspec>"},"5844850":{"date":"2011-03","id":"5844850","postid":"5199352","body":"\"The foreign_key is implicit. You should only use that option if it's not `[association_name]_id`.\"","score":"1","tags":""},"5983190":{"date":"2011-02","id":"5983190","postid":"4964800","body":"\"Did you not add Nokogiri to the `Gemfile` of your application?\"","score":"0","tags":"<ruby-on-rails-3><heroku><nokogiri>"},"6146994":{"date":"2011-03","id":"6146994","postid":"5429978","body":"\"I think Matteo's on to something: I can't duplicate this issue on my local project. Make sure the file is in the same location as the project's Rakefile.\"","score":"0","tags":""},"6279223":{"date":"2011-04","id":"6279223","postid":"5526756","body":"\"It would be really helpful if you showed the *actual* code you were using, so that we're both debugging the same issue.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><cucumber><capybara>"},"6280153":{"date":"2011-04","id":"6280153","postid":"5528038","body":"\"Where is your `person` variable defined in your `setup_person` method?\"","score":"0","tags":""},"6280160":{"date":"2011-04","id":"6280160","postid":"5528019","body":"\"A shorter way: if Rails.env.production?\"","score":"6","tags":""},"4881637":{"date":"2010-12","id":"4881637","postid":"4466677","body":"\"Small correction: != isn't a method.\"","score":"0","tags":""},"4882435":{"date":"2010-12","id":"4882435","postid":"4445853","body":"\"shoot me an email. It's on http:\\\/\\\/ryanbigg.com\"","score":"1","tags":""},"4882733":{"date":"2010-12","id":"4882733","postid":"4467372","body":"\"@sjsc: for both have the scoped one and the unscoped one, with the one you want recipes_path to go to defined first.\"","score":"1","tags":""},"4953789":{"date":"2010-12","id":"4953789","postid":"4522803","body":"\"Show code example please.\"","score":"0","tags":""},"4955468":{"date":"2010-12","id":"4955468","postid":"4522809","body":"\"To all the people saying \\\"it won't work with big ranges\\\", the question originally stated two very small ranges. I answered to suit the question.\"","score":"0","tags":""},"4969817":{"date":"2010-12","id":"4969817","postid":"4533680","body":"\"@David: Yes, to my knowledge the routing system uses the reverse, where it would take game_states#index and match it to the GameStatesController class.\"","score":"0","tags":""},"5011731":{"date":"2010-12","id":"5011731","postid":"4567830","body":"\"There is more than likely more to that error than the final line. Please show us the steps you are using to get that error.\"","score":"0","tags":"<ruby><osx><rvm>"},"5055911":{"date":"2011-01","id":"5055911","postid":"4591894","body":"\"@user297221: It's the ckeditor gem: https:\\\/\\\/github.com\\\/galetahub\\\/rails-ckeditor\\\/blob\\\/master\\\/config\\\/routes.rb\"","score":"1","tags":""},"5056989":{"date":"2011-01","id":"5056989","postid":"4602115","body":"\"Please give your questions more descriptive titles in the future.\"","score":"1","tags":"<javascript><raphael>"},"5072172":{"date":"2011-01","id":"5072172","postid":"4613477","body":"\"Please show us the code for the view where this is happening.\"","score":"0","tags":"<ruby-on-rails><heroku>"},"5072297":{"date":"2011-01","id":"5072297","postid":"4600889","body":"\"@owilde1900: If the update form wasn't working perhaps the to_param value was non-parameterized and contained invalid route characters.\"","score":"0","tags":""},"5171789":{"date":"2011-01","id":"5171789","postid":"4688978","body":"\"What is search.php? How are we to debug this problem without any code to go by?\"","score":"0","tags":"<search><keyword>"},"5226139":{"date":"2011-01","id":"5226139","postid":"4729806","body":"\"@chrisaycock: Thank you for the kind words.\"","score":"0","tags":""},"5226300":{"date":"2011-01","id":"5226300","postid":"4729806","body":"\"@Alix Axel: If that were the case then I would be mightily confused. There is another man who has been claiming the same thing for a much longer time now.\"","score":"2","tags":""},"5255570":{"date":"2011-01","id":"5255570","postid":"4751292","body":"\"@the Tin Man: I think it ran away IN FEAR.\"","score":"0","tags":"<ruby>"},"5462833":{"date":"2011-02","id":"5462833","postid":"4906205","body":"\"There's good reasons why people don't use FCGI these days. Try finding a host that supports Apache \\\/ Nginx.\"","score":"1","tags":"<ruby-on-rails><ruby><apache><rack><fcgi>"},"5462849":{"date":"2011-02","id":"5462849","postid":"4905464","body":"\"Wait what? `not request.format == \\\"html\\\"`? Did you mean `request.format != \\\"html\\\"?\"","score":"1","tags":""},"5586414":{"date":"2011-02","id":"5586414","postid":"4998366","body":"\"Wouldn't this be better as `delete_all(:project_id => project_id, :user_id => user_id)`\"","score":"3","tags":""},"5586712":{"date":"2011-02","id":"5586712","postid":"4998170","body":"\"+1 for \\\"NaCl\\\" reference. Oh, and the answer's good too :)\"","score":"0","tags":""},"5781632":{"date":"2011-03","id":"5781632","postid":"5150293","body":"\"Which Ruby on Rails tutorial?\"","score":"0","tags":"<ruby-on-rails><windows><rspec>"},"5781650":{"date":"2011-03","id":"5781650","postid":"5150372","body":"\"Please only use tags to \\\"tag\\\" your post rather than putting them in the title also.\"","score":"0","tags":"<ruby-on-rails-3><paperclip>"},"5795511":{"date":"2011-03","id":"5795511","postid":"5160343","body":"\"What I don't like about this solution is that it instantiates a new `User` object per record in the DB; which just doesn't scale. One can get around this little problem by using `connection.select_values` on a model, and a little bit of ARel goodness: `User.connection.select_values(User.select(\\\"email\\\").to_sql)`. This will give you the straight strings of the email addresses from the database. No faffing about with user objects.\"","score":"7","tags":""},"5984862":{"date":"2011-03","id":"5984862","postid":"5305398","body":"\"Greg's right, use this to set you up in development http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\/ and this in production: http:\\\/\\\/ryanbigg.com\\\/deployment\\\/getting_started_ubuntu.html\"","score":"0","tags":""},"6231563":{"date":"2011-03","id":"6231563","postid":"5492578","body":"\"What are you expecting the assign method to do?\"","score":"0","tags":"<ruby-on-rails><ruby><rspec><rspec-rails>"},"6257810":{"date":"2011-04","id":"6257810","postid":"5492799","body":"\"Thanks buddy, great to know!\"","score":"0","tags":""},"6285972":{"date":"2011-04","id":"6285972","postid":"5532325","body":"\"You will have to provide us with more code, like the form around this fields_for as well as the action where it posts to.\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><nested-attributes>"},"5105083":{"date":"2011-01","id":"5105083","postid":"4638770","body":"\"Please check my answer in this question [Drawing routes using user name in Rails 3 w\\\/ devise](http:\\\/\\\/stackoverflow.com\\\/questions\\\/4514533\\\/drawing-routes-using-user-name-in-rails-3-w-devise) as I believe the two questions are identical.\"","score":"0","tags":"<ruby-on-rails><routing><ruby-on-rails-3>"},"5258666":{"date":"2011-01","id":"5258666","postid":"4753325","body":"\"Yes, awarded :)\"","score":"0","tags":""},"5259033":{"date":"2011-01","id":"5259033","postid":"4754166","body":"\"@gotgenes: I don't think that's the case at all. Git has the biggest community on Stack Overflow and there's a ton of people who use it (the Ruby community, for one). If there's a large number of questions, then the common stumbling blocks will be covered by them, thereby making it *easier* to use.\"","score":"2","tags":""},"5386358":{"date":"2011-01","id":"5386358","postid":"4849241","body":"\"Could you explain what you did in your answer please?\"","score":"0","tags":""},"5386363":{"date":"2011-01","id":"5386363","postid":"4848911","body":"\"possible duplicate of [Rails Tutorial - Errors with User.rb File](http:\\\/\\\/stackoverflow.com\\\/questions\\\/4849208\\\/rails-tutorial-errors-with-user-rb-file)\"","score":"0","tags":"<ruby-on-rails>"},"5386486":{"date":"2011-01","id":"5386486","postid":"4847136","body":"\"Wouldn't this also be set if the OP did `git pull hub master`?\"","score":"0","tags":""},"5469978":{"date":"2011-02","id":"5469978","postid":"4911596","body":"\"For the sake of people reading your code, please give your block variables more useful names than `k` and `v`. Alphabet soup should be food, not code.\"","score":"2","tags":""},"5570180":{"date":"2011-02","id":"5570180","postid":"4983305","body":"\"@SpyrosP: Please listen to the *years* of experience I have. Using a named route would fix this problem instantly and requires no effort what so ever.\"","score":"0","tags":""},"5848361":{"date":"2011-03","id":"5848361","postid":"5195924","body":"\"Thank you for the answer, that was me who filed that issue. Good on you for taking the time to explain it as an answer on SO.\"","score":"0","tags":""},"5848528":{"date":"2011-03","id":"5848528","postid":"5161550","body":"\"@Rishav Rastogi: Done\"","score":"0","tags":""},"5918207":{"date":"2011-03","id":"5918207","postid":"5255504","body":"\"@SpyrosP: no, you're mocking the string \\\"User\\\" which isn't used anywhere. Perhaps you meant to use `mock_model` and then sign in as that user?\"","score":"0","tags":""},"5918273":{"date":"2011-03","id":"5918273","postid":"5255565","body":"\"@Anshu: do you have a verion of Rails within the `vendor\\\/rails` directory of your application?\"","score":"0","tags":"<ruby-on-rails><ruby><rubygems><ubuntu-10.04>"},"5990194":{"date":"2011-03","id":"5990194","postid":"5306761","body":"\"@ryeguy: People cannot type the URL into the address bar and have it work. The method needs to be PUT, but URLs are GET.\"","score":"0","tags":""},"5990205":{"date":"2011-03","id":"5990205","postid":"5306761","body":"\"@ryeguy: Secondly, I'd like you to take away that downvote you've put there, unless you've got a solid reason why this isn't a solution.\"","score":"0","tags":""},"6005796":{"date":"2011-03","id":"6005796","postid":"5322239","body":"\"Please take all the unnecessary code out of your example and show only what is important. Right now it is very difficult to read.\"","score":"1","tags":"<javascript><python><cherrypy><genshi>"},"6035408":{"date":"2011-03","id":"6035408","postid":"4271722","body":"\"@Pullets I disagree, you should be testing the public methods of the API which will be calling the private ones, as my original answer says. You should be testing the API you provide, not the private methods only you can see.\"","score":"4","tags":""},"6345008":{"date":"2011-04","id":"6345008","postid":"5576623","body":"\"This is probably related to this question: http:\\\/\\\/stackoverflow.com\\\/questions\\\/5575981\\\/nokogiri-segmentation-fault\"","score":"1","tags":"<ruby-on-rails><ruby><rubygems><gem>"},"6345535":{"date":"2011-04","id":"6345535","postid":"5577213","body":"\"OP just wants the column names.\"","score":"0","tags":""},"6360664":{"date":"2011-04","id":"6360664","postid":"5573675","body":"\"@AnApprentice: True, TRUE and true are all very, very different.\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><devise><cancan>"},"5113680":{"date":"2011-01","id":"5113680","postid":"4645036","body":"\"This is what I'm already doing, using different controllers to return the different fields. That part I've definitely nailed I think. The question is more along the lines of \\\"is this the right way to do it?\\\"\"","score":"0","tags":""},"5170580":{"date":"2011-01","id":"5170580","postid":"4687864","body":"\"You're duplicating the extensions here, just method_name.text.erb will do... additionally you'll need a `respond_to` in your Mailer class's method which will cause it to send a multi-part email containing both the text and html components.\"","score":"0","tags":""},"5198066":{"date":"2011-01","id":"5198066","postid":"4708303","body":"\"Please separate the code blocks into meaningful chunks. There's quite a lot to read.\"","score":"2","tags":"<ruby-on-rails>"},"5212054":{"date":"2011-01","id":"5212054","postid":"4718430","body":"\"@Andrew: yes this is correct.\"","score":"0","tags":""},"5261824":{"date":"2011-01","id":"5261824","postid":"4757030","body":"\"That could be it. I am using 1.1.5.\"","score":"0","tags":""},"5262035":{"date":"2011-01","id":"5262035","postid":"4757030","body":"\"And to the victor go the spoils. Thank you. Works like a charm on 1.2.\"","score":"0","tags":""},"5262992":{"date":"2011-01","id":"5262992","postid":"4754166","body":"\"@Wim: SVN was the next best (free) thing to CVS for a very long time and there has been a high level of adoption for it over the years it has been around. Git, in comparison, is fairly new. When I said \\\"Git has the biggest community\\\", I should have said \\\"biggest DVCS community\\\".\"","score":"0","tags":""},"5263048":{"date":"2011-01","id":"5263048","postid":"4758019","body":"\"Please format your code correctly by indenting it with 4 spaces or by using \\\\` inline.\"","score":"0","tags":"<ruby-on-rails>"},"5290403":{"date":"2011-01","id":"5290403","postid":"4777194","body":"\"What version of Ruby?\"","score":"0","tags":"<ruby><windows><rubygems><gem>"},"5290415":{"date":"2011-01","id":"5290415","postid":"4777629","body":"\"Did you try that? It may just work.\"","score":"2","tags":"<ruby-on-rails><ruby>"},"5290899":{"date":"2011-01","id":"5290899","postid":"4777629","body":"\"Posted as an answer to follow the correct format.\"","score":"0","tags":"<ruby-on-rails><ruby>"},"5304883":{"date":"2011-01","id":"5304883","postid":"4788903","body":"\"Please indent the output of this error with four spaces\"","score":"0","tags":"<ruby-on-rails><sqlite3><sqlite3-ruby>"},"5367065":{"date":"2011-01","id":"5367065","postid":"4835559","body":"\"Why `Array.new` instead of `[]`?\"","score":"2","tags":""},"5367091":{"date":"2011-01","id":"5367091","postid":"4835059","body":"\"Show us your `Gemfile` please.\"","score":"1","tags":"<ruby-on-rails><rspec><bundler><rvm>"},"5565570":{"date":"2011-02","id":"5565570","postid":"4982450","body":"\"Please don't rescue from `Exception`, as that is the superclass of all exceptions in Ruby. You are effectively rescuing *all* exceptions. Just `ActiveRecord::RecordInvalid` will do.\"","score":"2","tags":""},"5565571":{"date":"2011-02","id":"5565571","postid":"4982388","body":"\"As Dex points out, the correct exception is ActiveRecord::RecordInvalid.\"","score":"0","tags":""},"6325858":{"date":"2011-04","id":"6325858","postid":"5561400","body":"\"He's using Windows, these steps apply for Linux.\"","score":"1","tags":""},"6341766":{"date":"2011-04","id":"6341766","postid":"5573675","body":"\"sorry, `== TRUE`? Is `TRUE` a constant in your app?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><devise><cancan>"},"6341795":{"date":"2011-04","id":"6341795","postid":"5573675","body":"\"Also: where does the `through` option come from for `load_and_authorize_resource`?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><devise><cancan>"},"6341927":{"date":"2011-04","id":"6341927","postid":"5388455","body":"\"@Prabesh: the URL to the image is specially formed and should actually will hit your Rails application, the URL would be something like \\\/emails\\\/open.png?user_id=1&email_id=2. The endpoint for that then sends back a tiny image.\"","score":"2","tags":""},"6342849":{"date":"2011-04","id":"6342849","postid":"5574889","body":"\"I would recommend moving all that HTML out into a partial which the `.js.erb` file then renders.\"","score":"3","tags":"<javascript><jquery><ruby-on-rails><ruby><ruby-on-rails-3>"},"6434193":{"date":"2011-04","id":"6434193","postid":"5643294","body":"\"Close, but not quite there: 0.0.0.0 isn't a valid IP address. What this actually is indicating is that the server is listening on all interfaces and not just a specific one. Your suggestion to try localhost:3000 is a spot-on solution though.\"","score":"2","tags":""},"5000828":{"date":"2010-12","id":"5000828","postid":"4299957","body":"\"The method is implemented correctly on the model an should be accessible in the view\"","score":"0","tags":""},"5068328":{"date":"2011-01","id":"5068328","postid":"4600889","body":"\"@owilde1900: I have no idea without any further information to go on, sorry.\"","score":"0","tags":""},"5109447":{"date":"2011-01","id":"5109447","postid":"4641826","body":"\"OP should use fields_for with `accepts_nested_attributes_for` for this.\"","score":"0","tags":""},"5109552":{"date":"2011-01","id":"5109552","postid":"4640283","body":"\"The application is configured to use postgresql: https:\\\/\\\/github.com\\\/potionfactory\\\/potionstore\\\/blob\\\/master\\\/config\\\/database.yml. It may \\\/ may not work with MySQL.\"","score":"0","tags":"<ruby-on-rails-3>"},"5109642":{"date":"2011-01","id":"5109642","postid":"4636734","body":"\"How are projects and users related?\"","score":"0","tags":"<ruby-on-rails-3>"},"5138913":{"date":"2011-01","id":"5138913","postid":"4649230","body":"\"It's for Rails 3 in Action. I don't want to use Sinatra for this because of that reason. I think Rails should be capable of doing this just fine too.\"","score":"0","tags":""},"5368213":{"date":"2011-01","id":"5368213","postid":"4836487","body":"\"Show us the full code of `spot_spec.rb` please.\"","score":"0","tags":"<ruby-on-rails><ruby><rspec>"},"5467562":{"date":"2011-02","id":"5467562","postid":"4909891","body":"\"Please format your code per the formattting guidelines on the right hand side of the new question \\\/ answer pages.\"","score":"0","tags":"<python><django><google-app-engine>"},"5621448":{"date":"2011-02","id":"5621448","postid":"5026098","body":"\"I think your username needs to be \\\"username@gmail.com\\\", rather than just the \\\"username\\\" part.\"","score":"1","tags":"<ruby-on-rails><gmail><actionmailer>"},"5634379":{"date":"2011-02","id":"5634379","postid":"5036185","body":"\"For this to work you must also build the `network` object on the `User` object, `@user.networks.build`. I assume you already did this in your controller, which is why it worked for you.\"","score":"1","tags":""},"5764734":{"date":"2011-02","id":"5764734","postid":"5137324","body":"\"`@type length > 1` is invalid, perhaps you meant `@type.length > 1`\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"5779194":{"date":"2011-02","id":"5779194","postid":"5147779","body":"\"No, there is no `script\\\/rails` within older versions of Rails.\"","score":"3","tags":""},"5796217":{"date":"2011-03","id":"5796217","postid":"5160343","body":"\"@mislav Done! It's there.\"","score":"0","tags":""},"5949406":{"date":"2011-03","id":"5949406","postid":"5268585","body":"\"Tom: yes you should be using `rake` to run them. If you want to run a single one I would recommend running this command `ruby -Itest test\\\/unit\\\/ticket_test.rb`. I'll update the answer with an explanation.\"","score":"0","tags":""},"5949616":{"date":"2011-03","id":"5949616","postid":"4828663","body":"\"possible duplicate of [Do I need to manually create a migration for a HABTM join table?](http:\\\/\\\/stackoverflow.com\\\/questions\\\/564306\\\/do-i-need-to-manually-create-a-migration-for-a-habtm-join-table)\"","score":"1","tags":"<ruby-on-rails><rails-migrations>"},"6145261":{"date":"2011-03","id":"6145261","postid":"5427687","body":"\"Have you tried using Capybara instead?\"","score":"0","tags":"<ruby-on-rails-3><rspec2><webrat>"},"6146302":{"date":"2011-03","id":"6146302","postid":"5429344","body":"\"Could you explain how that situation isn't working for you now?\"","score":"0","tags":"<ruby-on-rails><rest><delete>"},"6146308":{"date":"2011-03","id":"6146308","postid":"5429332","body":"\"Your adapter should be `mysql2`, I think.\"","score":"1","tags":"<mysql><ruby><activerecord><rubygems>"},"6306586":{"date":"2011-04","id":"6306586","postid":"5547377","body":"\"Be aware that hash order isn't guaranteed in Ruby versions earlier than 1.9\"","score":"1","tags":"<ruby><hash><iterate>"},"6306648":{"date":"2011-04","id":"6306648","postid":"5543719","body":"\"I assume you mean it's rendering the layout of the page again? Is this correct? If so, please update your question with this information.\"","score":"0","tags":"<jquery><ruby-on-rails-3><jrails><kaminari>"},"6321039":{"date":"2011-04","id":"6321039","postid":"5558105","body":"\"@Jamie Wong: Passive aggressive messages are not what Stack Overflow is about. We need to be welcoming to the new people. They don't know they're doing things wrong.\"","score":"0","tags":"<ruby-on-rails>"},"6653236":{"date":"2011-04","id":"6653236","postid":"5801377","body":"\"Personally I would put the `@group` definition in a `before_filter` and have it called before every action in the `ProjectsController`\"","score":"0","tags":""},"6653298":{"date":"2011-04","id":"6653298","postid":"5798548","body":"\"<%= render @posts %> works in Rails 3 just fine and does exactly what your second example does, except will take a little while longer to render.\"","score":"0","tags":""},"6653343":{"date":"2011-04","id":"6653343","postid":"5798482","body":"\"Please point us at the section where this is happening so that we can debug the same things that you are.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><view><local-variables>"},"5110653":{"date":"2011-01","id":"5110653","postid":"4640188","body":"\"Why are you passing `post_id` as a hidden_field? It will automatically be passed through on account of you using a nested form (`[@post, @post.likes.build]`)\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3>"},"5136732":{"date":"2011-01","id":"5136732","postid":"4653873","body":"\"My bad, it seems that `Profile` isn't an ActiveRecord class like I thought it was.\"","score":"0","tags":""},"5292194":{"date":"2011-01","id":"5292194","postid":"4779061","body":"\"What is user_accounts:48 in this context? It looks to me like a file reference.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"5292276":{"date":"2011-01","id":"5292276","postid":"4776970","body":"\"As the Tin Man says, the OP needs to `require 'fileutils'`\"","score":"0","tags":""},"5292456":{"date":"2011-01","id":"5292456","postid":"4778218","body":"\"@Katy: Happens to the best of us. Glad I helped :)\"","score":"0","tags":""},"5292531":{"date":"2011-01","id":"5292531","postid":"4779484","body":"\"What programming language?\"","score":"0","tags":"<linux><voice>"},"5292534":{"date":"2011-01","id":"5292534","postid":"4779466","body":"\"Why, what for? Show us some code and elaborate on the reasons why.\"","score":"0","tags":"<ruby>"},"5292753":{"date":"2011-01","id":"5292753","postid":"4779664","body":"\"Please show us how this method is defined.\"","score":"0","tags":"<ruby-on-rails><methods><console>"},"5434057":{"date":"2011-02","id":"5434057","postid":"4885263","body":"\"Please accept some of your question's answers to raise it above 0.\"","score":"0","tags":"<ruby-on-rails><postgresql><boolean><seed>"},"5590986":{"date":"2011-02","id":"5590986","postid":"5002723","body":"\"Please explain this question better. Where did you define this method?\"","score":"0","tags":"<ruby-on-rails>"},"5605147":{"date":"2011-02","id":"5605147","postid":"5013714","body":"\"Please show us how you defined this attribute.\"","score":"1","tags":"<ruby-on-rails><ruby><activerecord>"},"5667607":{"date":"2011-02","id":"5667607","postid":"5061068","body":"\"Could you run the test with the `-b` switch at the end of the command so we can see a backtrace of the error?\"","score":"0","tags":"<ruby-on-rails><rspec2>"},"5780066":{"date":"2011-03","id":"5780066","postid":"5149081","body":"\"protip: you can get this by running the `paperclip` generator\"","score":"1","tags":""},"5781038":{"date":"2011-03","id":"5781038","postid":"5149715","body":"\"Maybe you or something else has overriden the `environment` task?\"","score":"0","tags":"<ruby-on-rails><console><rake><environment>"},"5864105":{"date":"2011-03","id":"5864105","postid":"5212798","body":"\"You should explain here that they need to create a RolePerson model too, which acts as the intermediary model.\"","score":"0","tags":""},"5933302":{"date":"2011-03","id":"5933302","postid":"5266809","body":"\"x, y and z aren't helpful names. Please use real values instead of fake ones. We will not steal your ideas. It also allows us to speak in your terms.\"","score":"6","tags":"<ruby-on-rails><ruby-on-rails-3><activerecord>"},"6001428":{"date":"2011-03","id":"6001428","postid":"5318789","body":"\"No, this is not it. See: https:\\\/\\\/github.com\\\/dejan\\\/auto_html\\\/blob\\\/master\\\/lib\\\/auto_html.rb\"","score":"2","tags":""},"6001439":{"date":"2011-03","id":"6001439","postid":"4924809","body":"\"Please show us how you're trying to call this method.\"","score":"0","tags":"<ruby-on-rails-3><gem>"},"6269834":{"date":"2011-04","id":"6269834","postid":"5520484","body":"\"Do you actually have a file called `test\\\/test_helper.rb`?\"","score":"1","tags":"<ruby-on-rails><ruby><unit-testing>"},"6323922":{"date":"2011-04","id":"6323922","postid":"5560482","body":"\"Please show us what is in this `app\\\/controllers\\\/public_files_controller.rb`. What I'm looking for is the class definition at the top, so if you don't want to show the whole controller please at least show this.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rails-engines>"},"6378907":{"date":"2011-04","id":"6378907","postid":"5601940","body":"\"In future, please separate the individual files in your post as shown in the updated version of this post. It helps make them extra-readable.\"","score":"0","tags":"<ruby-on-rails>"},"6378921":{"date":"2011-04","id":"6378921","postid":"5601585","body":"\"possible duplicate of [Finding all records without associated ones](http:\\\/\\\/stackoverflow.com\\\/questions\\\/1314408\\\/finding-all-records-without-associated-ones)\"","score":"0","tags":"<ruby-on-rails><datamapper>"},"6378927":{"date":"2011-04","id":"6378927","postid":"5400359","body":"\"@John: you can follow most of the same steps for Mac, except you will have to replace the `apt-get` stuff with whatever is required on Mac. I'd recommend using the homebrew package management system for that.\"","score":"0","tags":""},"6668437":{"date":"2011-04","id":"6668437","postid":"5812057","body":"\"You would get that error if one of your keys in your hash were \\\"identifier\\\"... is there code you're not showing us where identifier is mentioned?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><activerecord>"},"6714356":{"date":"2011-05","id":"6714356","postid":"5844945","body":"\"@marcamillion: You may have to use increment! instead so that it actually saves the user.\"","score":"1","tags":""},"5272931":{"date":"2011-01","id":"5272931","postid":"4765216","body":"\"Thank you Luis for stepping in and answering, I knew you would know best.\"","score":"0","tags":""},"5289307":{"date":"2011-01","id":"5289307","postid":"4776796","body":"\"This is wrong as it will not work for two reasons. 1) don't use `size`, use `count` instead as it does an SQL count rather than a Ruby one 2) this will return \\\"SMART ZOMBIE\\\" for zombies that only have one tweet.\"","score":"1","tags":""},"5290265":{"date":"2011-01","id":"5290265","postid":"4777312","body":"\"does RUBY_CONFIG contain this information?\"","score":"1","tags":"<ruby><debug-symbols>"},"5372492":{"date":"2011-01","id":"5372492","postid":"4838823","body":"\"user502052: Going \\\"against the flow\\\" of Rails and creating your own validations is frowned upon. Generally, most validation things can be taken care of by Rails. If it cannot, then that is where you would use validations. Perhaps you could edit your answer to include what the validations are doing?\"","score":"0","tags":"<ruby-on-rails><ruby><validation><ruby-on-rails-3><methods>"},"5401673":{"date":"2011-02","id":"5401673","postid":"4861238","body":"\"Show the query you are executing please.\"","score":"3","tags":"<sql-server><sql-server-2000>"},"5401678":{"date":"2011-02","id":"5401678","postid":"4861145","body":"\"And what if the last name was something like \\\"del Cacto\\\"?\"","score":"0","tags":""},"5429395":{"date":"2011-02","id":"5429395","postid":"4881505","body":"\"Thanks, I didn't know about this before today.\"","score":"0","tags":""},"5716474":{"date":"2011-02","id":"5716474","postid":"5099835","body":"\"What makes this model different? Show us the code for it please.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"5811885":{"date":"2011-03","id":"5811885","postid":"5173924","body":"\"That doesn't even begin to explain what a Range is. It only shows the methods on it.\"","score":"0","tags":""},"5811981":{"date":"2011-03","id":"5811981","postid":"5173908","body":"\"No code example? What the?\"","score":"0","tags":""},"5856705":{"date":"2011-03","id":"5856705","postid":"5207941","body":"\"Show us what (FAIL) is, that'd be helpful.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><rails-routing>"},"6169599":{"date":"2011-03","id":"6169599","postid":"5445689","body":"\"@ynkr updated answer\"","score":"0","tags":""},"6213370":{"date":"2011-03","id":"6213370","postid":"5478985","body":"\"This answer is overly long and doesn't answer the question at all. \\\"list of dependencies\\\"? How does a newbie know what that is? Be explicit.\"","score":"1","tags":""},"6213416":{"date":"2011-03","id":"6213416","postid":"5465482","body":"\"@Luc I've updated the answer, just above the break.\"","score":"0","tags":""},"6277294":{"date":"2011-04","id":"6277294","postid":"5526023","body":"\"possible duplicate of [AJAX\\\/HTTP issue](http:\\\/\\\/stackoverflow.com\\\/questions\\\/5525580\\\/ajax-http-issue)\"","score":"0","tags":"<ruby-on-rails><ruby><ajax><jquery>"},"6277302":{"date":"2011-04","id":"6277302","postid":"5525888","body":"\"@Justin: The URL should be whatever URL will return the updated text. That's up to you to decide what that would be.\"","score":"0","tags":""},"6277322":{"date":"2011-04","id":"6277322","postid":"5526023","body":"\"Referencing another question in a question isn't best SO practices. Please follow up on the comment thread for the first answer in the original question.\"","score":"0","tags":"<ruby-on-rails><ruby><ajax><jquery>"},"6277381":{"date":"2011-04","id":"6277381","postid":"5525675","body":"\"I wouldn't call a column \\\"end\\\", because its a keyword in Ruby. `end_time` is better.\"","score":"2","tags":"<ruby-on-rails><migration>"},"6278236":{"date":"2011-04","id":"6278236","postid":"5526115","body":"\"@????: Updated answer now\"","score":"0","tags":""},"6303458":{"date":"2011-04","id":"6303458","postid":"5544679","body":"\"If you could provide us with the symptoms of the problem (i.e. an actual error that indicates you can't run any Ruby scripts) we can help you solve it much easier.\"","score":"0","tags":"<ruby><osx><rubygems>"},"6362504":{"date":"2011-04","id":"6362504","postid":"5590114","body":"\"@ceejayoz: OmniAuth is very particular about how it works with Devise, due to how the authentication process works I think having it open in a popup window would be more work than it's worth.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><authentication><facebook>"},"6362608":{"date":"2011-04","id":"6362608","postid":"5590060","body":"\"May I ask why you're defining a title method in the `Course` model that is calling the title method that you're defining in the `Course` model?\"","score":"0","tags":""},"6458293":{"date":"2011-04","id":"6458293","postid":"5660338","body":"\"In future please 1) indent stack traces or code examples in your post and 2) show the code which is causing the error that you would like fixed.\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"6669772":{"date":"2011-04","id":"6669772","postid":"5812269","body":"\"Is there a question here? It certainly doesn't seem like it.\"","score":"0","tags":"<ruby-on-rails><model-associations>"},"6434908":{"date":"2011-04","id":"6434908","postid":"5643522","body":"\"Please show us how your application is mounted.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><routes><rack>"},"6689997":{"date":"2011-04","id":"6689997","postid":"5826871","body":"\"@Ian: No, Twitter wouldn't do this. It requires too much computation.\"","score":"0","tags":""},"6690164":{"date":"2011-04","id":"6690164","postid":"5827351","body":"\"It's probably rendering it that way because that's how it's coming through in the XML. Can you provide us with an example of that XML?\"","score":"1","tags":"<ruby-on-rails><xml><escaping><hpricot>"},"6690299":{"date":"2011-04","id":"6690299","postid":"5827683","body":"\"@recursive_acronym: Please show us your exact code, I think you may not be using @thing.\"","score":"0","tags":""},"6704911":{"date":"2011-04","id":"6704911","postid":"5827607","body":"\"@fivetwentysix: No, you just pass it through as nested parameters to the parent model and the code within the model (the `work_days=` method) will take care of it. Your controller shouldn't be responsible for that.\"","score":"0","tags":""},"6704915":{"date":"2011-04","id":"6704915","postid":"4906205","body":"\"@avakar: It's old and it's exceptionally difficult to set up. THere are simply better alternatives out there.\"","score":"0","tags":"<ruby-on-rails><ruby><apache><rack><fcgi>"},"6704919":{"date":"2011-04","id":"6704919","postid":"5827724","body":"\"I would have a helper that is called for the comment text and parses the names out and formats them correctly, with the output then being cached by the `cache` helper.\"","score":"0","tags":""},"6756823":{"date":"2011-05","id":"6756823","postid":"5875621","body":"\"That most likely would not fix his problem.\"","score":"0","tags":""},"6756835":{"date":"2011-05","id":"6756835","postid":"5875581","body":"\"Try using `find_by_name!` instead. The `params[:name]` variable coming through may not be what you expect it to be.\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3>"},"6779139":{"date":"2011-05","id":"6779139","postid":"5891529","body":"\"Use `YAML.load_file` instead of `load` and `File.open`.\"","score":"3","tags":"<ruby-on-rails><ruby><activerecord><yaml>"},"6836227":{"date":"2011-05","id":"6836227","postid":"5932885","body":"\"I would advise that the OP doesn't use controller tests for this, but rather creates new tests in `spec\\\/integration` for these. Controller tests test *single* actions, integration tests the whole stack.\"","score":"3","tags":""},"6870981":{"date":"2011-05","id":"6870981","postid":"5957337","body":"\"Where is `DevelopmentMailInterceptor` referenced in your application?\"","score":"0","tags":"<ruby-on-rails-3><actionmailer>"},"6999152":{"date":"2011-05","id":"6999152","postid":"6049093","body":"\"Good, but not quite there. This does not generate a hash with a filters key which has a hash with a colour key which has an *array* as a value... which is what `Rack::Utils.parse_nested_query` does.\"","score":"1","tags":""},"7000138":{"date":"2011-05","id":"7000138","postid":"6049054","body":"\"@gjb: yeah sorry my bad, I get the two confused all the time.\"","score":"0","tags":""},"7058565":{"date":"2011-05","id":"7058565","postid":"6087906","body":"\"Uh, no. Once a gem is loaded it's loaded until the server is stopped. By doing what you show, the first time this method is called it would load the gem, winding the app up in the same situation as if you were to load it normally. You're going the long way about it.\"","score":"0","tags":""},"7136810":{"date":"2011-05","id":"7136810","postid":"6146000","body":"\"Is your form issuing a GET request, by chance? You could check this by looking at the output of your server as you press the submit button.\"","score":"2","tags":"<ruby-on-rails>"},"7165903":{"date":"2011-05","id":"7165903","postid":"6165934","body":"\"possible duplicate of [Why can't i get rake db:migrate to work for ruby.railstutorial.org](http:\\\/\\\/stackoverflow.com\\\/questions\\\/6091617\\\/why-cant-i-get-rake-dbmigrate-to-work-for-ruby-railstutorial-org)\"","score":"0","tags":"<ruby-on-rails-3>"},"7195821":{"date":"2011-05","id":"7195821","postid":"6185497","body":"\"These questions are answered in [Rails 3 in Action](http:\\\/\\\/manning.com\\\/katz), it's a beginner -> intermediate book for Rails 3. Should bring you up to speed on these things.\"","score":"1","tags":"<ruby-on-rails><ruby><symbols><block>"},"7196071":{"date":"2011-05","id":"7196071","postid":"6186591","body":"\"@Arsen7: I don't even know why we are typing comments to each other. We should be able to communicate through our shared mind.\"","score":"3","tags":""},"7196083":{"date":"2011-05","id":"7196083","postid":"6186591","body":"\"I'll delete mine and you can have this one. You answered the other half of his question before I did.\"","score":"1","tags":""},"7358345":{"date":"2011-06","id":"7358345","postid":"6298455","body":"\"@meager: \\\"Rails convention\\\" would probably have the field called `active` and be a boolean, no `is` prefix required :)\"","score":"4","tags":"<ruby-on-rails><ruby><postgresql>"},"5272298":{"date":"2011-01","id":"5272298","postid":"4764935","body":"\"@AnApprentice: This is not happening with any code that I can see. Please provide more code.\"","score":"1","tags":""},"5333787":{"date":"2011-01","id":"5333787","postid":"4810931","body":"\"Could you explain more abou what these files do?\"","score":"0","tags":"<ruby-on-rails><include><initalization>"},"5333801":{"date":"2011-01","id":"5333801","postid":"4810954","body":"\"Please use backticks or four space indenting for code examples in your questions.\"","score":"0","tags":"<ruby-on-rails><forms>"},"5617981":{"date":"2011-02","id":"5617981","postid":"5022454","body":"\"@TK-421: It's not the `show_exceptions` setting, I set it to `true` and when I run `RAILS_ENV=test rails s` it shows the exception when I go to the controller, but Cucumber doesn't show the exception. I'm pretty sure it's a setting.\"","score":"0","tags":"<ruby-on-rails-3><cucumber>"},"5686653":{"date":"2011-02","id":"5686653","postid":"5073698","body":"\"Pretty sure now the problem is that you've got the association around the wrong way. See if my answer helps you.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"5815111":{"date":"2011-03","id":"5815111","postid":"5176227","body":"\"If you wanted to golf it and save iterating twice through the same array: `some_string.split(',').reject(&:empty?).map { |e| e.strip.downcase }`\"","score":"0","tags":""},"5899472":{"date":"2011-03","id":"5899472","postid":"5240325","body":"\"Please indent your rake db:migrate --trace output, including the command itself.\"","score":"0","tags":"<ruby-on-rails-3><rake>"},"6219411":{"date":"2011-03","id":"6219411","postid":"5482127","body":"\"Or even better: Don't use sudo or rvmsudo at all. Instead, use a webserver like apache or nginx with Passenger to load your Rails application and manage it.\"","score":"0","tags":""},"6631380":{"date":"2011-04","id":"6631380","postid":"4725949","body":"\"This won't be necessary for Rails 3.1.\"","score":"5","tags":""},"6631630":{"date":"2011-04","id":"6631630","postid":"5783955","body":"\"@Preacher: I think the question clearly explains what it is doing now. \\\/dev\\\/null is a location which can be written to but it doesn't actually write it anywhere, the data is discarded.\"","score":"1","tags":""},"6715387":{"date":"2011-05","id":"6715387","postid":"5845722","body":"\"@marcamillion: No, that has nothing to do with it. Controllers and models are linked ONLY by name. A controller can access any model. Your `update_space` method isn't saving the user record after it updates the space. You need to call `save` at the end of the model.\"","score":"1","tags":""},"6730467":{"date":"2011-05","id":"6730467","postid":"5855680","body":"\"Please format your code by using backticks \\\\`these\\\\` or using four space indenting if it's multiple lines.\"","score":"0","tags":"<ruby-on-rails>"},"6760029":{"date":"2011-05","id":"6760029","postid":"5877665","body":"\"The sprockets stuff is currently under going some work, but the rest of what you said is spot-on. Well done.\"","score":"1","tags":""},"7033139":{"date":"2011-05","id":"7033139","postid":"6072961","body":"\"Could you explain why you need this?\"","score":"2","tags":"<ruby-on-rails><ruby-on-rails-3>"},"7079451":{"date":"2011-05","id":"7079451","postid":"6105241","body":"\"Please format your code using 4-space indenting or backticks.\"","score":"1","tags":"<ruby-on-rails><ruby><activeresource>"},"7177910":{"date":"2011-05","id":"7177910","postid":"6172507","body":"\"Just googling \\\"undefined method task\\\" links you straight to a Stack Overflow question as the first result.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><gem><admin>"},"7177914":{"date":"2011-05","id":"7177914","postid":"6172721","body":"\"And when the world has switched to Rake 0.9...\"","score":"0","tags":""},"7320707":{"date":"2011-06","id":"7320707","postid":"6272588","body":"\"Please do `box = params[:b:] || \\\"received_messages\\\"` rather than a ternary statement.\"","score":"1","tags":""},"7613163":{"date":"2011-06","id":"7613163","postid":"6477134","body":"\"Please do not use FCGI to set up your Rails application. There are *much* better solutions such as Passenger, Unicorn or even a Mongrel cluster.\"","score":"0","tags":"<ruby-on-rails-3><dispatch>"},"6726257":{"date":"2011-05","id":"6726257","postid":"5853930","body":"\"Just googling for \\\"Rails 3 Authentication\\\" comes up with so many questions already on SO.\"","score":"1","tags":"<ruby-on-rails><authentication>"},"6726259":{"date":"2011-05","id":"6726259","postid":"5853930","body":"\"possible duplicate of [Rails 3 authentication solutions](http:\\\/\\\/stackoverflow.com\\\/questions\\\/4236524\\\/rails-3-authentication-solutions)\"","score":"0","tags":"<ruby-on-rails><authentication>"},"6726297":{"date":"2011-05","id":"6726297","postid":"5854013","body":"\"He said topics show, not forums\\\/show.\"","score":"0","tags":""},"6726309":{"date":"2011-05","id":"6726309","postid":"5851907","body":"\"@c00lryguy: But you are using `find_all`, not `find`. There is a difference that is important: `find_all` will iterate through an array and find ALL the matches when `find` \\\/ `detect` will loop through until it finds a SINGLE match and then stops.\"","score":"0","tags":""},"6726353":{"date":"2011-05","id":"6726353","postid":"5852813","body":"\"Please update your question with a tag for the relevant programming language. Previously, this question was tagged with asp.net, php and ruby-on-rails.\"","score":"0","tags":"<facebook>"},"6869797":{"date":"2011-05","id":"6869797","postid":"5956506","body":"\"What are you expecting to define that route?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><authentication><devise>"},"7059736":{"date":"2011-05","id":"7059736","postid":"6090632","body":"\"Please show us the error you are getting.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><models><rails-models>"},"7231673":{"date":"2011-06","id":"7231673","postid":"6211301","body":"\"Just clear your terminal before each debug? The variable will then be at the top of the latest output. Generally this is a one-off thing. Cmd+K on Mac clears the terminal for me.\"","score":"0","tags":"<ruby-on-rails>"},"7491332":{"date":"2011-06","id":"7491332","postid":"6384189","body":"\"@Mark: The association for transactions in on a SINGLE activity, not on many of them. You're calling `transactions` on the Array representing all the `Activity` objects here.\"","score":"0","tags":""},"7550522":{"date":"2011-06","id":"7550522","postid":"6433694","body":"\"@Seymon: Dang, you caught me when I was in the middle of an edit! I've cleaned it up now. How's it look?\"","score":"0","tags":""},"7711910":{"date":"2011-07","id":"7711910","postid":"6545990","body":"\"Please format your code using 4-space indentation or backticks. Thank you.\"","score":"0","tags":"<ruby-on-rails><kaminari>"},"7870701":{"date":"2011-07","id":"7870701","postid":"6657760","body":"\"Line 3 is what's going to be causing your original problem if it's uncommented, as that's a regex in Ruby. If it's commented, you won't be getting that error. So what is the *new* error?\"","score":"0","tags":"<ruby-on-rails-3><deployment><error-handling><heroku><stack-trace>"},"7914197":{"date":"2011-07","id":"7914197","postid":"6688796","body":"\"Please format your code by using four space indenting or backticks (`) Thanks.\"","score":"0","tags":"<ruby-on-rails-3><sorting><where>"},"8050058":{"date":"2011-07","id":"8050058","postid":"6783813","body":"\"Could you go into more detail and explain why these changes are necessary please?\"","score":"0","tags":""},"8109989":{"date":"2011-07","id":"8109989","postid":"6810552","body":"\"@Avc1298: yes, that's it. Try that.\"","score":"0","tags":""},"8110007":{"date":"2011-07","id":"8110007","postid":"5480152","body":"\"@ChrisBedoya: This means that the post you're accessing doesn't have a User object associated with it. You must associate a post to a user by setting the `user_id` field on that post object.\"","score":"0","tags":""},"8126481":{"date":"2011-07","id":"8126481","postid":"6837220","body":"\"You're trying to apply scope to a `validates_uniqueness_of`? Did you know there's the `:scope` option for that?\"","score":"0","tags":"<ruby-on-rails-3><validation><activerecord><activemodel>"},"8126512":{"date":"2011-07","id":"8126512","postid":"6836545","body":"\"@rgoraya: I would accept this answer to your question and ask another regarding the \\\"String can't be coerced into Fixnum\\\" issue.\"","score":"1","tags":""},"8195925":{"date":"2011-07","id":"8195925","postid":"6883995","body":"\"`Property` is not a reserved word in Rails as far as I know. What other gems are you using?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1>"},"6714359":{"date":"2011-05","id":"6714359","postid":"4514554","body":"\"@Peter: thank you!\"","score":"0","tags":""},"6741865":{"date":"2011-05","id":"6741865","postid":"5864985","body":"\"Too long, didn't read.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"6742193":{"date":"2011-05","id":"6742193","postid":"5863409","body":"\"The helpers *should* work in a controller if you have the resources defined in the `config\\\/routes.rb` file.\"","score":"0","tags":""},"6917686":{"date":"2011-05","id":"6917686","postid":"5991016","body":"\"Why? Just why would you want to do this? This sounds like you are attempting to shoot yourself in the foot.\"","score":"5","tags":"<ruby>"},"7195730":{"date":"2011-05","id":"7195730","postid":"6186591","body":"\"This is effectively the same as my answer, or perhaps you should be saying the same thing to me? :)\"","score":"1","tags":""},"7208591":{"date":"2011-06","id":"7208591","postid":"6183760","body":"\"@Angela: put them in `lib` still, you will just have to manually require them like you would in any other Ruby library too. Rails has just hanged their behaviour to be more standard.\"","score":"0","tags":""},"7208962":{"date":"2011-06","id":"7208962","postid":"6195556","body":"\"Ah good point. You win ;)\"","score":"0","tags":""},"7209343":{"date":"2011-06","id":"7209343","postid":"6195346","body":"\"Running `sudo bundle install` is silly. Just `bundle install`.\"","score":"1","tags":""},"7209603":{"date":"2011-06","id":"7209603","postid":"6195991","body":"\"Please format your answers using four-space indenting or backticks where appropriate. Thank you!\"","score":"2","tags":""},"7665404":{"date":"2011-06","id":"7665404","postid":"6511382","body":"\"how do you mean it's installing to the root directory?\"","score":"0","tags":"<ruby-on-rails-3><paperclip><ruby-1.8>"},"7898178":{"date":"2011-07","id":"7898178","postid":"6675464","body":"\"@Joern: Why are you even doing that? Doesn't YoutubeVideo's table have a `user_id` column on it and therefore you would be able to do `user.youtube_videos` or something of the like?\"","score":"0","tags":""},"7969576":{"date":"2011-07","id":"7969576","postid":"6714075","body":"\"@rtfminc: Glad to help! It was a very fun question to answer :)\"","score":"0","tags":""},"8088611":{"date":"2011-07","id":"8088611","postid":"6810677","body":"\"What is the full path of this view?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><routes>"},"8171240":{"date":"2011-07","id":"8171240","postid":"6147939","body":"\"Thanks for the recommendation Andrei!\"","score":"0","tags":""},"8171512":{"date":"2011-07","id":"8171512","postid":"6868872","body":"\"String or symbol it doesn't matter, nor does a relative path\"","score":"0","tags":""},"8171654":{"date":"2011-07","id":"8171654","postid":"6868260","body":"\"@jamesw: Correct. This unfortunately will not fix the issue though.\"","score":"1","tags":"<ruby-on-rails><associations><belongs-to>"},"8171663":{"date":"2011-07","id":"8171663","postid":"6868909","body":"\"@imjp: If you clarified what's \\\"still not working\\\" then perhaps yes.\"","score":"0","tags":""},"8171673":{"date":"2011-07","id":"8171673","postid":"6868909","body":"\"@imjp: Actually I noticed you made a mistake in your form. Middle paragraph in my answer fixes that mistake.\"","score":"0","tags":""},"8171681":{"date":"2011-07","id":"8171681","postid":"5480152","body":"\"@ChrisBedoya: You need to do `@post.user_id = current_user.id`, as this needs to link to the foreign_key in the users table which should be the `id` field. It should be adequately explained in the associations guide. Please let me know if you're still having difficulty or pop into the #rubyonrails channel on irc.freenode.net and ask someone in there to explain it.\"","score":"0","tags":""},"8171764":{"date":"2011-07","id":"8171764","postid":"6868864","body":"\"@Robert: The method would be available because it's available for instances of your `Order` model. You need to stop thinking that there's a restriction on the models based on what controller you're in. There simply isn't. Just call `order.purchase` exactly like you're doing and it will work.\"","score":"1","tags":""},"8247124":{"date":"2011-08","id":"8247124","postid":"6922120","body":"\"Where did you put that content? Did you set up Bundler correctly?\"","score":"0","tags":"<ruby-on-rails><rspec><ruby-on-rails-plugins><rspec-rails><ruby-on-rails-2>"},"8308059":{"date":"2011-08","id":"8308059","postid":"6966500","body":"\"@Jake: it would have been set to `:defaults` because you had upgraded your application from 3.0 to 3.1. In 3.0, it used to be :defaults which could be customized. Now it should only ever point to a file which may or may not contain dependencies.\"","score":"0","tags":""},"6399909":{"date":"2011-04","id":"6399909","postid":"5617615","body":"\"No this doesn't make sense, you want an array that consists of two arrays to be an array that consists of two arrays: the same thing? Why?\"","score":"2","tags":"<arrays><ruby-on-rails-3><multidimensional-array><ruby-1.9.2>"},"6400049":{"date":"2011-04","id":"6400049","postid":"5617600","body":"\"Where are you seeing `Params.sort.key` could you give us an example?\"","score":"0","tags":"<ruby-on-rails>"},"6413233":{"date":"2011-04","id":"6413233","postid":"5626530","body":"\"please show us your spec\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><testing><rspec>"},"6413483":{"date":"2011-04","id":"6413483","postid":"5627576","body":"\"@Daniel: if you think that users cared that much about URLs, then why does ebay have such terrible ones, but is still successful? You're honestly spending too much time thinking about a problem that nobody will notice \\\/ care about.\"","score":"0","tags":""},"6414144":{"date":"2011-04","id":"6414144","postid":"5627576","body":"\"@Jesse: With all due respect, I think my users are smart enough to be able to read my URLs and discover that they are pluralized words and adapt easily. Even SO has pluralized \\\"resources\\\", so why differ from the mainstream for such little gain?\"","score":"0","tags":""},"6414188":{"date":"2011-04","id":"6414188","postid":"5627683","body":"\"Correct method would be to use `detect` rather than `select` here, as `detect` will return the first element it comes across and stop looking. Just a helpful FYI.\"","score":"1","tags":""},"6651297":{"date":"2011-04","id":"6651297","postid":"5799922","body":"\"This is correct. A small addendum: you could use a service such as SendGrid to send out emails rather than using Google's. Sendgrid allows for 200 a day.\"","score":"0","tags":""},"6766421":{"date":"2011-05","id":"6766421","postid":"5854009","body":"\"@icco: Then you would do `scope :path => \\\"1.0\\\", :module => \\\"V1\\\" do`. Simple.\"","score":"1","tags":""},"6839081":{"date":"2011-05","id":"6839081","postid":"5935201","body":"\"It's as if you read my mind, picked out all the jumbled pieces and formed it into a cohesive answer built by the gods themselves.\"","score":"0","tags":""},"6850719":{"date":"2011-05","id":"6850719","postid":"5942369","body":"\"You don't have to do :association_attributes, just `:association` with `accepts_nested_attributes_for` in your model will automatically make the attributes called `association_attributes`.\"","score":"1","tags":""},"7282205":{"date":"2011-06","id":"7282205","postid":"6245671","body":"\"Please use routing helpers provided to you instead of hashes containing `:controller` and `:action` keys for your links.\"","score":"1","tags":"<ruby-on-rails><ruby><model-view-controller><routing>"},"7707154":{"date":"2011-07","id":"7707154","postid":"6542499","body":"\"@mercxi: Please do not put your test in the comment. Edit your question and put it there so we can see it.\"","score":"0","tags":""},"7872829":{"date":"2011-07","id":"7872829","postid":"6659175","body":"\"Show the RegistrationsController and the form for the `new` action in this controller please.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><devise>"},"7971454":{"date":"2011-07","id":"7971454","postid":"6728831","body":"\"You don't need the `generator.rb` initializer, this is taken care of by RSpec's railtie. All you need is `rspec-rails` within the `development` group of the `Gemfile` which is enough to require it for the generators. You also don't need to generate the app with `-T`, you can delete the `test` dir and it will work.\"","score":"41","tags":""},"7971739":{"date":"2011-07","id":"7971739","postid":"6729074","body":"\"Right you are Mr @natedavisolds. Corrected.\"","score":"0","tags":""},"7971741":{"date":"2011-07","id":"7971741","postid":"6729078","body":"\"You mean loaded the parents?\"","score":"0","tags":""},"7972090":{"date":"2011-07","id":"7972090","postid":"6729287","body":"\"Please format your question correctly using four-space indenting or backticks as well as formatting your question neatly using the markdown style tags provided. Thanks.\"","score":"0","tags":"<ruby-on-rails-3>"},"8245735":{"date":"2011-08","id":"8245735","postid":"6906364","body":"\"@Noli: generally it is \\\"[object_class_name]_[field_name]\\\". I do not know where in Rails it generates it, look in the `text_field` or `label` method's code.\"","score":"1","tags":""},"8387081":{"date":"2011-08","id":"8387081","postid":"7021810","body":"\"@chell: If this answers your question could you please accept it or provide info to why you wouldn't? Thank you.\"","score":"0","tags":""},"6387124":{"date":"2011-04","id":"6387124","postid":"5607952","body":"\"possible duplicate of [How to modify a Rails engine to require my library?](http:\\\/\\\/stackoverflow.com\\\/questions\\\/5607877\\\/how-to-modify-a-rails-engine-to-require-my-library)\"","score":"0","tags":"<ruby-on-rails><ruby><monkeypatching>"},"6387128":{"date":"2011-04","id":"6387128","postid":"5607952","body":"\"please try to keep related questions in the one question. This question and your other one are very closely related.\"","score":"0","tags":"<ruby-on-rails><ruby><monkeypatching>"},"6387151":{"date":"2011-04","id":"6387151","postid":"5606942","body":"\"Please restrict the tags you use for a post to be only related to the programming language you're using.\"","score":"0","tags":"<ruby-on-rails-3>"},"6387160":{"date":"2011-04","id":"6387160","postid":"5608340","body":"\"you should really `git add .` (or `git add -p` if you only want to add *some* things) rather than `git commit -a`\"","score":"0","tags":""},"6401950":{"date":"2011-04","id":"6401950","postid":"5619008","body":"\"I think what fl00r is after is the stack trace of the error. If you could provide this then we can help you much easier.\"","score":"1","tags":"<ruby><ruby-on-rails-3>"},"6416615":{"date":"2011-04","id":"6416615","postid":"5630189","body":"\"Have you tried 3.0.6 to see if you still get this issue there?\"","score":"0","tags":"<ruby-on-rails><activerecord>"},"6459801":{"date":"2011-04","id":"6459801","postid":"5661577","body":"\"No `ruby` prefix required.\"","score":"2","tags":""},"6531885":{"date":"2011-04","id":"6531885","postid":"5713677","body":"\"what is is_online defined as? Is it a boolean field?\"","score":"0","tags":"<ruby-on-rails><ruby><unit-testing>"},"6629804":{"date":"2011-04","id":"6629804","postid":"5784037","body":"\"This would only pipe the OUTPUT to \\\/dev\\\/null, not the logger output.\"","score":"0","tags":""},"6629827":{"date":"2011-04","id":"6629827","postid":"5783955","body":"\"@Preacher: here I was thinking that Rails would be smart enough to provide one location to set the logger instance for the whole application. Silly me. Updated the answer with a better solution.\"","score":"0","tags":""},"6725406":{"date":"2011-05","id":"6725406","postid":"5853319","body":"\"A good idea would be to show the code you use for this in C \\\/ C++.\"","score":"0","tags":"<ruby><sockets><byte>"},"6994529":{"date":"2011-05","id":"6994529","postid":"6044667","body":"\"Could you show us your Omniauth configuration please? It looks to be a problem with that.\"","score":"0","tags":"<ruby><ruby-on-rails-3>"},"7053745":{"date":"2011-05","id":"7053745","postid":"6086382","body":"\"@Sayanne: please *edit* your answer and put the code from the `create` action in it rather than leaving a comment.\"","score":"0","tags":"<ruby-on-rails-3><gmail><mailer>"},"7053759":{"date":"2011-05","id":"7053759","postid":"6087102","body":"\"This definitely sounds like the most likely case.\"","score":"0","tags":""},"7053761":{"date":"2011-05","id":"7053761","postid":"6085414","body":"\"Rather than using screenshots of your code, please just paste your code into the question with four-space indentation\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-plugins>"},"7053763":{"date":"2011-05","id":"7053763","postid":"6085845","body":"\"@ahuang7: Please show us how you're defining the `poster` method.\"","score":"0","tags":""},"7053787":{"date":"2011-05","id":"7053787","postid":"6084186","body":"\"Just a note: indenting your code makes it easier to read not only for other people but also for yourself. Please try to do this in the future.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><models>"},"7230538":{"date":"2011-06","id":"7230538","postid":"6210367","body":"\"Why not use `Rack::Utils.parse_nested_query` to parse this string?\"","score":"2","tags":""},"7244514":{"date":"2011-06","id":"7244514","postid":"6147202","body":"\"You're passing through `credit_card` as `options`, which seems wrong to me. Try to find *how* you should be passing `credit_card`. This code is expecting `options` to be a hash.\"","score":"0","tags":"<ruby-on-rails><activemerchant>"},"7244536":{"date":"2011-06","id":"7244536","postid":"6218705","body":"\"@yuval: `post_path(@post.permalink)` when necessary then.\"","score":"0","tags":""},"7503969":{"date":"2011-06","id":"7503969","postid":"6400581","body":"\"Your `\\\/shared\\\/bundle\\\/ruby\\\/1.8\\\/` gives it away: your console is still using 1.8, not 1.9.\"","score":"2","tags":"<ruby-on-rails-3><encoding><rvm><bundler><ruby-1.9.2>"},"8206856":{"date":"2011-08","id":"8206856","postid":"6893829","body":"\"@Victor: you don't need to run jquery:install on Rails 3.1, assuming application.js is set up correctly.\"","score":"0","tags":""},"8406397":{"date":"2011-08","id":"8406397","postid":"7035254","body":"\"@Jesse: Please do not fix the syntax in the question, but rather post the correction as your own answer. Edits should only be used to fix terrible grammar or code formatting.\"","score":"0","tags":""},"8406426":{"date":"2011-08","id":"8406426","postid":"7035185","body":"\"This question doesn't make any sense :( Why are you running `bundle update`? What is the first output of `rake db:migrate` and what are you expecting it to do?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><bundle><bundler>"},"8406430":{"date":"2011-08","id":"8406430","postid":"7035185","body":"\"To note: `bundle update rake` will update the bundle's version of rake to the highest that can be supported by the restrictions enforced by the other gems that you're using. You're using Rails 3.0.5 and so the rake version is going to be 0.8.7 based on the dep in `railties 3.0.5`. To use 0.9.2, upgrade to Rails 3.0.9.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><bundle><bundler>"},"6286452":{"date":"2011-04","id":"6286452","postid":"5526115","body":"\"@????: Yes. Most likely Rails will set this higher when Rails 3.1 comes out.\"","score":"0","tags":""},"6344344":{"date":"2011-04","id":"6344344","postid":"5575981","body":"\"What happens if you uninstall the nokogiri gem and re-install it?\"","score":"0","tags":"<ruby-on-rails><ruby><nokogiri><railscasts>"},"6390846":{"date":"2011-04","id":"6390846","postid":"5611063","body":"\"Yes and yes. 15char\"","score":"0","tags":""},"6490256":{"date":"2011-04","id":"6490256","postid":"5683561","body":"\"This is correct, as Capybara is not sure what button you mean to click on.\"","score":"1","tags":""},"6547120":{"date":"2011-04","id":"6547120","postid":"5723357","body":"\"@Rein: I would like to know how.\"","score":"0","tags":""},"6649175":{"date":"2011-04","id":"6649175","postid":"5797783","body":"\"Is that really your entire `environment.rb` file? It looks like it's missing an `end` at the end if it. Also: calling `initialize!` in it is wrong, that's not what `environment.rb` does... `application.rb` does that.\"","score":"2","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"6723094":{"date":"2011-05","id":"6723094","postid":"5850464","body":"\"Show us the code for `CsvEngine::ImportsController` please.\"","score":"0","tags":"<ruby-on-rails-3><rubygems><gem><rails-engines>"},"6723431":{"date":"2011-05","id":"6723431","postid":"5851907","body":"\"Why not use `detect` instead of `find_all`?\"","score":"1","tags":""},"6777181":{"date":"2011-05","id":"6777181","postid":"5890768","body":"\"+1 for `(a-b).empty?`\"","score":"8","tags":""},"7012775":{"date":"2011-05","id":"7012775","postid":"6058253","body":"\"Please show us how you put `root\\\/lib` in the load path.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"7097745":{"date":"2011-05","id":"7097745","postid":"6118239","body":"\"You didn't finish your answ\"","score":"1","tags":""},"7175508":{"date":"2011-05","id":"7175508","postid":"6171842","body":"\"To explain further: Rails will assume you mean the current parameter if you don't pass a valid ID through, so if `params[:id]` is set, it will assume that.\"","score":"1","tags":""},"7190444":{"date":"2011-05","id":"7190444","postid":"6182423","body":"\"Are you not starting these processes using Heroku's built in worker functionality and instead attempting to use `rake jobs:work`?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><heroku><rake><delayed-job>"},"7190485":{"date":"2011-05","id":"7190485","postid":"6182421","body":"\"It would help us if you showed us the NoMethodError you were getting.\"","score":"0","tags":"<ruby-on-rails-3><methods>"},"7246121":{"date":"2011-06","id":"7246121","postid":"6221323","body":"\"Or you could `bundle install --binstubs` and just run `bin\\\/rspec spec`, which is basically a shorter way of writing `bundle exec rspec`.\"","score":"2","tags":""},"7246128":{"date":"2011-06","id":"7246128","postid":"6221269","body":"\"Please show us the relevant code or particular section from Chapter 5 that is causing this issue.\"","score":"0","tags":"<ruby-on-rails-3>"},"7246141":{"date":"2011-06","id":"7246141","postid":"6220933","body":"\"You don't need to put the schema in a migration, it will be in `db\\\/schema.rb` and that's good enough, as people can load it using `rake db:schema:load`.\"","score":"1","tags":""},"7501502":{"date":"2011-06","id":"7501502","postid":"6399293","body":"\"How are you trying to access these files?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3>"},"7756642":{"date":"2011-07","id":"7756642","postid":"6577468","body":"\"\\\"No joy\\\" isn't exactly descriptive. Could you explain this a little better please?\"","score":"0","tags":"<ruby-on-rails-3><activerecord>"},"7949965":{"date":"2011-07","id":"7949965","postid":"6713935","body":"\"@fl00r: I would rather not do that, given that the `create!` method in Element must somehow know what Chapter it is being created for.\"","score":"0","tags":"<ruby-on-rails><mongoid>"},"7960990":{"date":"2011-07","id":"7960990","postid":"6714717","body":"\"Thanks, I worked around this by using fl00r's suggestion. Your's is the closest.\"","score":"0","tags":""},"8052032":{"date":"2011-07","id":"8052032","postid":"6770649","body":"\"I hit this one myself today and remembered reading your question yesterday. Good to see @John Wang has come out and explained it :)\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><osx><postgresql><osx-lion>"},"8168600":{"date":"2011-07","id":"8168600","postid":"6218947","body":"\"@henry74: Thanks for the recommendation & link! :)\"","score":"0","tags":""},"8383551":{"date":"2011-08","id":"8383551","postid":"7017231","body":"\"This \\\"smells\\\" to me. What does the `showemployees` action do that the `index` action wouldn't? I agree with mikhailov\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><rails-routing>"},"8384480":{"date":"2011-08","id":"8384480","postid":"7019758","body":"\"When posting questions please separate out the individual concerns of your code into separate, titled blocks. This makes it easier for potential answerers to interpret your question :)\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"8384504":{"date":"2011-08","id":"8384504","postid":"7019499","body":"\"What do you have in your `User` model which determines this relationship? My guess is that you're missing an `accepts_nested_attributes_for` call.\"","score":"0","tags":"<ruby-on-rails-3><devise>"},"8446241":{"date":"2011-08","id":"8446241","postid":"7060736","body":"\"@luis: Yes you could do it that way.\"","score":"0","tags":""},"8446538":{"date":"2011-08","id":"8446538","postid":"7061608","body":"\"You could explain this answer a little further, couldn't you?\"","score":"0","tags":""},"7685617":{"date":"2011-06","id":"7685617","postid":"6527826","body":"\"And then a `Status` would `has_many :issues`.\"","score":"0","tags":""},"8150237":{"date":"2011-07","id":"8150237","postid":"6853770","body":"\"What does the full error say? \\\"NameError\\\" isn't helpful but at least the stacktrace could provide helpful context for what is going wrong.\"","score":"1","tags":"<ruby-on-rails>"},"8312122":{"date":"2011-08","id":"8312122","postid":"6969569","body":"\"What is line 7? What method does it claim to be missing?\"","score":"0","tags":"<ruby-on-rails><ruby>"},"8341320":{"date":"2011-08","id":"8341320","postid":"6989267","body":"\"I would recommend following this guide to set up your machine: http:\\\/\\\/ryanbigg.com\\\/2010\\\/12\\\/ubuntu-ruby-rvm-rails-and-you\\\/. I think you've probably installed the packages via aptitude.\"","score":"0","tags":"<ruby-on-rails-3><ubuntu><gem><ubuntu-11.04>"},"8382540":{"date":"2011-08","id":"8382540","postid":"7004877","body":"\"@Yuri: First of all I wouldn't call the variable `a`. Try it give it a more descriptive name. `fields = resource_class.all.collect { |r| r.fields.keys } - %w(_id _type created_at updated_at encrypted_password)` would be how I would write this.\"","score":"0","tags":""},"8383000":{"date":"2011-08","id":"8383000","postid":"7018924","body":"\"Please tag your questions with one or two tags. Tags are used for categorization of questions and as such you should really tag them with `ruby-on-rails` or `ruby-on-rails-3` depending on what your question pertains to.\"","score":"0","tags":"<ruby-on-rails-3>"},"8383081":{"date":"2011-08","id":"8383081","postid":"7018833","body":"\"Please show us the output of `rake routes`\"","score":"0","tags":"<ruby><ruby-on-rails-3>"},"8525110":{"date":"2011-08","id":"8525110","postid":"7114409","body":"\"@hrickards: Files are not automatically loaded by Rails from the `lib` directory unless `config.autoload_paths` is configured to contain that directory. Hint: it's not by default. The problem is that Luca is not requiring the file that defines that constant before he attempts to reference it.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><routing><sinatra><rack>"},"8525370":{"date":"2011-08","id":"8525370","postid":"7115452","body":"\"I am not sure that this actually answers the question, sorry :( I think he was interested in learning how the parts of Rails works so that he could borrow ideas and put them to work in his own thing. Aside from that, this is a very well-written answer! We need more like it on SO.\"","score":"0","tags":""},"8585898":{"date":"2011-08","id":"8585898","postid":"7156052","body":"\"Please don't be embarrassed by not knowing things. You are human and you cannot be expected to know everything immediately. Great to see you could solve this before someone else could come along and answer your question though!\"","score":"1","tags":""},"8628779":{"date":"2011-08","id":"8628779","postid":"7185493","body":"\"What is on line 10 of the company model?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><testing><rspec><paperclip>"},"8629082":{"date":"2011-08","id":"8629082","postid":"7183868","body":"\"@Thomas: I would really *really* recommend going through the Getting Started guide example and going along with that. That should give you enough of a basic understanding to translate it across to what you want to do here. It's basically the same thing, but with different names.\"","score":"0","tags":""},"8629204":{"date":"2011-08","id":"8629204","postid":"7183837","body":"\"@FuZion: if this did fix your question please click the checkmark underneath it.\"","score":"0","tags":""},"8675054":{"date":"2011-08","id":"8675054","postid":"7218075","body":"\"No description of what's in the `User` model that could be making it fail? :(\"","score":"0","tags":"<ruby-on-rails><ruby><model><controller><save>"},"8686347":{"date":"2011-08","id":"8686347","postid":"7225248","body":"\"I don't see the difference in the routes? What are you trying to accomplish with this?\"","score":"0","tags":"<ruby-on-rails-3><routes>"},"8686360":{"date":"2011-08","id":"8686360","postid":"7224555","body":"\"Just for future visitor's sakes: If you edit the migration file *before* you run it then it will still be runnable. Otherwise you will need to roll it back and then migrate forward again.\"","score":"0","tags":""},"8745944":{"date":"2011-09","id":"8745944","postid":"7265981","body":"\"Why are you defining this scope? Wouldn't it be more appropriate to access the collection of whatever this is from the author side using something standard like associations?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><unit-testing>"},"8745952":{"date":"2011-09","id":"8745952","postid":"4240627","body":"\"@Blankman: this is a question that you could accept.\"","score":"2","tags":"<ruby-on-rails>"},"9047224":{"date":"2011-09","id":"9047224","postid":"7475972","body":"\"This is correct. All Paperclip requires is that you have `attr_accessor`s for each attribute that paperclip requires.\"","score":"0","tags":""},"9047234":{"date":"2011-09","id":"9047234","postid":"7475705","body":"\"You may have to refer to it as `ActiveRecord::Fixtures` now.\"","score":"0","tags":"<ruby><ruby-on-rails-3><ruby-on-rails-3.1>"},"7510407":{"date":"2011-06","id":"7510407","postid":"6400581","body":"\"@coneybeare: But the `\\\/shared\\\/bundle\\\/ruby\\\/1.8` says 1.8? Remove `\\\/shared\\\/bundle\\\/ruby\\\/1.8` if you're not using it. You may have to run `bundle install` again.\"","score":"0","tags":"<ruby-on-rails-3><encoding><rvm><bundler><ruby-1.9.2>"},"7628705":{"date":"2011-06","id":"7628705","postid":"6488153","body":"\"Wouldn't you need to keep the salt around in the database to check that an entered password is correct when encrypted with it?\"","score":"1","tags":""},"7628708":{"date":"2011-06","id":"7628708","postid":"6488156","body":"\"Codeglot's answer is not correct, it won't keep around the salt value (see my comment). Using something like Devise would definitely be a good thing, but this could be a learning exercise for someone\"","score":"2","tags":""},"7628809":{"date":"2011-06","id":"7628809","postid":"6488126","body":"\"This is correct. Without it being in the `Gemfile`, it won't be in the `Gemfile.lock` file either and so Bundler will not load it.\"","score":"0","tags":""},"7645563":{"date":"2011-06","id":"7645563","postid":"6499798","body":"\"+1 order, not_closed would need to be in the `Job` model, or whatever it is that defines the `jobs` association's objects, and `page` comes from the Kaminari gem.\"","score":"0","tags":""},"7686187":{"date":"2011-06","id":"7686187","postid":"6526539","body":"\"Uh, it won't generate a separate query per table if there's a condition in the query to reference that table. Instead, it will use `LEFT OUTER JOIN` and a single query.\"","score":"1","tags":""},"8129252":{"date":"2011-07","id":"8129252","postid":"6838336","body":"\"I don't think this is the real fix for it. `@relationship` is not referenced in the view anywhere.\"","score":"0","tags":""},"8129256":{"date":"2011-07","id":"8129256","postid":"6839268","body":"\"No, it should be `f.fields_for`, otherwise they will just be fields out in the open.\"","score":"0","tags":""},"8285447":{"date":"2011-08","id":"8285447","postid":"6950201","body":"\"Good, but I would set up the object in the action which renders this form and reference it from there. This is just more an accepted standard than \\\"you must do this\\\".\"","score":"0","tags":""},"8285499":{"date":"2011-08","id":"8285499","postid":"5711512","body":"\"Where did you put Cucumber in your Gemfile? Is it inside the development group?\"","score":"0","tags":"<ruby><ruby-on-rails-3><cucumber>"},"8443544":{"date":"2011-08","id":"8443544","postid":"7059700","body":"\"possible duplicate of [Finding all records without associated ones](http:\\\/\\\/stackoverflow.com\\\/questions\\\/1314408\\\/finding-all-records-without-associated-ones)\"","score":"0","tags":"<ruby-on-rails-3><activerecord><model><controller>"},"8443547":{"date":"2011-08","id":"8443547","postid":"7059700","body":"\"Please check the \\\"Finding all records without associated ones\\\" question.\"","score":"0","tags":"<ruby-on-rails-3><activerecord><model><controller>"},"8444579":{"date":"2011-08","id":"8444579","postid":"7060402","body":"\"Not putting this as an answer as I believe it smells also, but you could do `@d.flea_ids` rather than mapping.\"","score":"1","tags":"<ruby-on-rails><activerecord><rspec>"},"8603692":{"date":"2011-08","id":"8603692","postid":"7168492","body":"\"You do not need to add the id fields in your migration, they are automatically added.\"","score":"0","tags":"<ruby-on-rails><rails-migrations>"},"8649885":{"date":"2011-08","id":"8649885","postid":"7200806","body":"\"Please don't do `if coupon.started.nil? == true`. Just `if coupon.started.nil?` will do.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><declarative-authorization>"},"9088113":{"date":"2011-09","id":"9088113","postid":"7505152","body":"\"Rails 3 or Rails 3.1?\"","score":"0","tags":"<jquery><ruby-on-rails>"},"9088450":{"date":"2011-09","id":"9088450","postid":"7505384","body":"\"Woah, pretty good guess. I would have never thought about that :)\"","score":"0","tags":""},"9103820":{"date":"2011-09","id":"9103820","postid":"7514656","body":"\"This won't work, as `find_by_xxx` returns a single record. You want `find_all_by_xxx`.\"","score":"4","tags":""},"9103895":{"date":"2011-09","id":"9103895","postid":"7514586","body":"\"Definitely looks like you're using RVM here. By doing `sudo gem install` you install the gem onto the system. The `rails` command therefore will access the RVM one and not the system one.\"","score":"0","tags":""},"9103914":{"date":"2011-09","id":"9103914","postid":"7515601","body":"\"Correct! A hanging dot indicates the method chain continues on the next line in all the Ruby versions I've used. By putting it on the next line, it's ambiguous what precisely it's continuing and so the parser throws an error.\"","score":"1","tags":""},"9284035":{"date":"2011-10","id":"9284035","postid":"6273311","body":"\"@RobDavis: This works in 2 and 3 as far as I am aware.\"","score":"0","tags":""},"8437907":{"date":"2011-08","id":"8437907","postid":"5771693","body":"\"Says he's using shared hosting. Cannot change it.\"","score":"1","tags":""},"8482916":{"date":"2011-08","id":"8482916","postid":"7086245","body":"\"@neimad: `session` is a Rails method, `devise` is a Devise method and where are you seeing user?\"","score":"0","tags":""},"8483276":{"date":"2011-08","id":"8483276","postid":"7086601","body":"\"@B Seven: Where in the documentation would you expect to see this? You do know Rails is open source, right? And that documentation patches are more than welcome?\"","score":"1","tags":"<ruby-on-rails><testing>"},"8523830":{"date":"2011-08","id":"8523830","postid":"7114294","body":"\"@Zando: Great to hear :)\"","score":"1","tags":""},"8582879":{"date":"2011-08","id":"8582879","postid":"7153794","body":"\"Your original example of it generating `\\\/javascripts` rather than `\\\/assets` indicates a bigger problem is afoot. Are you sure you got this right?\"","score":"0","tags":"<ruby-on-rails><nginx><ruby-on-rails-3.1><thin><asset-pipeline>"},"8625858":{"date":"2011-08","id":"8625858","postid":"7183822","body":"\"@pst: I did it in the controller as that would be where you could show  a flash error and redirect out. However, you could get the model to raise a custom `ProtectedRecord` error and then catch that in the controller. Sure.\"","score":"0","tags":""},"9069944":{"date":"2011-09","id":"9069944","postid":"7491707","body":"\"@alex: It would be, but you would need to restart your server or console, depending on what you're using to access it. The `autoload_paths` option configures directories containing files which will be automatically loaded, and so if it's *not* being loaded I suspect you've not done of those two things I just said.\"","score":"0","tags":""},"9265672":{"date":"2011-10","id":"9265672","postid":"7630129","body":"\"Please show us the contents of your `config\\\/application.rb` file. It looks like there's something on line 8 that is calling to sprockets\\\/railtie. Please post this as an edit to your question rather than another comment, just so the formatting is neater\"","score":"0","tags":"<ruby-on-rails><ruby>"},"9337803":{"date":"2011-10","id":"9337803","postid":"7681574","body":"\"I created a gem that would help with this called `find_by_hash`: http:\\\/\\\/github.com\\\/radar\\\/find_by_hash.\"","score":"0","tags":""},"9339010":{"date":"2011-10","id":"9339010","postid":"7680594","body":"\"May I ask: How did you get Spree 0.30.1 installed when the latest is 0.60.2?\"","score":"0","tags":"<ruby-on-rails><spree>"},"9339054":{"date":"2011-10","id":"9339054","postid":"7225685","body":"\"Confirm, this would work.\"","score":"0","tags":""},"9339059":{"date":"2011-10","id":"9339059","postid":"7141272","body":"\"Hey, I recognise that guide! I wrote it. Could you outline how RSpec is unable to read that file?\"","score":"0","tags":"<ruby-on-rails-3.1><rspec2><spree><rails-engines>"},"9339167":{"date":"2011-10","id":"9339167","postid":"7682678","body":"\"Show us the code to create the request please. My money is on that you're making another HTTP request to another part of your application and because WEBrick being a single-threaded server it's not able to serve it at the same time as the initial request.\"","score":"2","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rest-client><net-http>"},"9353724":{"date":"2011-10","id":"9353724","postid":"7141272","body":"\"I've just finished publishing my book and... well, it's a secret. Wait a month, you'll see.\"","score":"1","tags":"<ruby-on-rails-3.1><rspec2><spree><rails-engines>"},"9427033":{"date":"2011-10","id":"9427033","postid":"1332145","body":"\"@pedrorolo: This is not outdated. This task has no description and so it will not show up in `rake -T`.\"","score":"3","tags":""},"9659999":{"date":"2011-10","id":"9659999","postid":"7909922","body":"\"It would be helpful to see the log output of what *does* happen when the user submits this form\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rubygems><ruby-on-rails-3.1>"},"9660016":{"date":"2011-10","id":"9660016","postid":"7909752","body":"\"@Jordan: `$_SESSION`? I think you're thinking of PHP. This is Ruby. You would use `session` if that was the case.\"","score":"1","tags":"<ruby-on-rails><design><shipping>"},"9704921":{"date":"2011-10","id":"9704921","postid":"7934956","body":"\"@Aslak: Thank you for the correction.\"","score":"0","tags":""},"9733129":{"date":"2011-11","id":"9733129","postid":"7961267","body":"\"I don't see why it wouldn't be possible... is there a problem that you're encountering?\"","score":"0","tags":"<ruby-on-rails><ruby><thor>"},"9748313":{"date":"2011-11","id":"9748313","postid":"7971898","body":"\"@PlatinumAzure: I think Programmers.SE would be a better spot for this.\"","score":"0","tags":"<ruby-on-rails-3><wiki>"},"9748328":{"date":"2011-11","id":"9748328","postid":"7972084","body":"\"You're missing the key part: how you're rendering the partial. Also, don't unset the flash at the bottom. Rails already does that for you.\"","score":"1","tags":"<ruby-on-rails>"},"9748340":{"date":"2011-11","id":"9748340","postid":"7972067","body":"\"Please show us real examples.\"","score":"0","tags":"<ruby-on-rails><cucumber>"},"10015499":{"date":"2011-11","id":"10015499","postid":"8158155","body":"\"What is at the top of this XML file? It could have a namespace that you're not correctly referencing.\"","score":"0","tags":"<php><xml>"},"10170170":{"date":"2011-11","id":"10170170","postid":"8263112","body":"\"Could you explain what it's not doing?\"","score":"0","tags":"<ruby-on-rails><ruby><hash><params>"},"8387531":{"date":"2011-08","id":"8387531","postid":"7021617","body":"\"@lulalala: You could set `ip` as a virtual attribute (using `attr_accessor`) on your `Discussion` model and set it as you pass through the parameters from the controller.\"","score":"0","tags":""},"8404333":{"date":"2011-08","id":"8404333","postid":"7033762","body":"\"It looks like your app just can't connect to gmail for some reason. Perhaps look into using an alternative service like [SendGrid](http:\\\/\\\/sendgrid.com)\"","score":"1","tags":"<ruby-on-rails><ruby>"},"8404341":{"date":"2011-08","id":"8404341","postid":"7033483","body":"\"Agreed with Markdown. RedCarpet 2 is some pretty sweet tech.\"","score":"0","tags":""},"8404351":{"date":"2011-08","id":"8404351","postid":"7032516","body":"\"It would be helpful if you explained what these objects are. As arnep points out, if they are supposed to be files then you should be using the xsendfile module for Apache to send them.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"8703946":{"date":"2011-08","id":"8703946","postid":"7237212","body":"\"How does it not work? Does `find_by_email` return `nil`? Please explain better.\"","score":"0","tags":"<ruby-on-rails-3><activerecord><dynamic-finders>"},"8703954":{"date":"2011-08","id":"8703954","postid":"7236774","body":"\"Do you still get this with Sprockets 2.0.0.?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1>"},"8703959":{"date":"2011-08","id":"8703959","postid":"7237584","body":"\"Please run this command again with `--trace` on the end of it. I suspect you're still running an older version of Rails which tries to use the `static_root=` method which is not available in this final release.\"","score":"0","tags":"<ruby-on-rails><sprockets><railstutorial.org>"},"9337054":{"date":"2011-10","id":"9337054","postid":"7680782","body":"\"If a `Student` and a `Teacher` is the same, why not make them both inherit from a `User` model where the logic is kept for the two and then have them inherit from that? `class Student < User` & `class Teacher < User`.\"","score":"0","tags":"<ruby-on-rails-3><polymorphism><has-many>"},"9410430":{"date":"2011-10","id":"9410430","postid":"7731352","body":"\"You can also use `Rails.application.routes.draw`\"","score":"4","tags":""},"9410798":{"date":"2011-10","id":"9410798","postid":"7733824","body":"\"@parndt: No, this project is already well established and we tried capybara-webkit and found it to be at least twice as slow as Selenium.\"","score":"0","tags":"<firefox><selenium>"},"9484513":{"date":"2011-10","id":"9484513","postid":"7787183","body":"\"Minor critique: In Rails 3 you can get away with just `projects#index` rather than `ProjectsController#index`.\"","score":"0","tags":""},"9485042":{"date":"2011-10","id":"9485042","postid":"7780740","body":"\"Right, then use `distance_of_time_in_words` and for the second time pass in `Time.now`. Your arguments should be `(time1, time2, options)`\"","score":"0","tags":""},"9485309":{"date":"2011-10","id":"9485309","postid":"7787763","body":"\"This would be right. :defaults is a hangover from < 3.1 days.\"","score":"2","tags":""},"9642668":{"date":"2011-10","id":"9642668","postid":"7898371","body":"\"Well researched and explained answer. Thank you :)\"","score":"0","tags":""},"9642824":{"date":"2011-10","id":"9642824","postid":"7895277","body":"\"This also doesn't answer the question.\"","score":"0","tags":""},"9643631":{"date":"2011-10","id":"9643631","postid":"7898859","body":"\"Did you restart your server after installing CanCan? I don't think this is a Rails 3.1 issue.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><cancan>"},"10253833":{"date":"2011-11","id":"10253833","postid":"8318102","body":"\"Why are you using the `__c` prefix? It's quite disgusting.\"","score":"1","tags":"<ruby-on-rails-3>"},"10255026":{"date":"2011-11","id":"10255026","postid":"8319751","body":"\"What is the error that this is giving? I don't think defining them as empty classes in the initializer is going to do you any good, as it won't go looking for the \\\"real\\\" code for the validators.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rails-engines>"},"10371654":{"date":"2011-12","id":"10371654","postid":"8399883","body":"\"Show us what `User.new` outputs in the console please.\"","score":"0","tags":"<ruby-on-rails>"},"10371744":{"date":"2011-12","id":"10371744","postid":"8400022","body":"\"You can then use this to get access to the `scope`, which will be an array of the namespaces that this task is nested inside: `namespace.instance_variable_get(\\\"@scope\\\")`\"","score":"2","tags":""},"10383629":{"date":"2011-12","id":"10383629","postid":"8379931","body":"\"An application with 1000 actions has its own kinds of problems. This is when the routes file should probably be split up into smaller, more manageable chunks.\"","score":"1","tags":""},"6834266":{"date":"2011-05","id":"6834266","postid":"5931026","body":"\"Just Record.first in this case would return a truthy value by itself. If you wanted to convert it into `true` or `false` just do `!!Record.first`. You don't need to `? true : false`\"","score":"0","tags":""},"6992925":{"date":"2011-05","id":"6992925","postid":"6043738","body":"\"`helper_method` makes this method available in the views. This would not fix then problem.\"","score":"0","tags":""},"7101562":{"date":"2011-05","id":"7101562","postid":"6120126","body":"\"FYI: `:ref` will work for commits, branches and tags.\"","score":"22","tags":""},"7229209":{"date":"2011-06","id":"7229209","postid":"6209502","body":"\"@Abe: That's what the title says? ;)\"","score":"0","tags":"<ruby-on-rails><ruby>"},"7229214":{"date":"2011-06","id":"7229214","postid":"6209354","body":"\"I didn't know that `--pre` was broken currently. Thanks for the answer!\"","score":"0","tags":""},"7302904":{"date":"2011-06","id":"7302904","postid":"6259900","body":"\"sorry, `null?` ? What is this magical method of which you speak?\"","score":"1","tags":""},"7620933":{"date":"2011-06","id":"7620933","postid":"6482971","body":"\"Awesome! I didn't know about the `:trailing_slash` option.\"","score":"0","tags":""},"8089705":{"date":"2011-07","id":"8089705","postid":"6811094","body":"\"Please show us how the `surveys` association is set up.\"","score":"0","tags":"<mysql><ruby-on-rails-3>"},"8090008":{"date":"2011-07","id":"8090008","postid":"6810677","body":"\"@Jhorra: I meant the actual template path.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><routes>"},"8385155":{"date":"2011-08","id":"8385155","postid":"7020317","body":"\"Is there more to this error? If so please show it here. A stacktrace can be helpful for tracking down where this is coming from.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><sqlite><sqlite3>"},"8386728":{"date":"2011-08","id":"8386728","postid":"7020094","body":"\"@Corey: No worries, thank you :)\"","score":"0","tags":""},"8558781":{"date":"2011-08","id":"8558781","postid":"7137758","body":"\"I can't see anything immediately that shows what's going wrong. When are these records being generated? When you hit the submit button?\"","score":"0","tags":"<ruby-on-rails-3>"},"8586204":{"date":"2011-08","id":"8586204","postid":"7137774","body":"\"Oh durr! That *always* gets me. Nice catch!\"","score":"1","tags":""},"8646504":{"date":"2011-08","id":"8646504","postid":"7197709","body":"\"This route could also be written as `get '\\\/party\\\/:id', :to => \\\"rooms#party\\\", :as => :party`, FYI.\"","score":"0","tags":"<ruby-on-rails>"},"8766858":{"date":"2011-09","id":"8766858","postid":"7280204","body":"\"\\\"The create is failing\\\"... failing how?\"","score":"1","tags":"<ruby-on-rails><rspec><paperclip>"},"9050339":{"date":"2011-09","id":"9050339","postid":"7475705","body":"\"Added it as an answer so you can accept it :)\"","score":"0","tags":"<ruby><ruby-on-rails-3><ruby-on-rails-3.1>"},"9122466":{"date":"2011-09","id":"9122466","postid":"7530059","body":"\"Please use correct casing for your association and class names: i.e `project_collaborations`, not `projectcollaborations` and `ProjectCollaboration`, not `Projectcollaboration`. This makes you code much more readable for all involved.\"","score":"1","tags":"<ruby-on-rails><many-to-many><relationships>"},"9122489":{"date":"2011-09","id":"9122489","postid":"7530479","body":"\"There's no proof for us to go on that the controller actually has an edit action, or that the edit action has a call to `Bundle.find`. Show us more code, please.\"","score":"0","tags":"<ruby-on-rails><ruby><rspec><controller>"},"9302967":{"date":"2011-10","id":"9302967","postid":"5832908","body":"\"I wonder if it would be possible to set this as some sort of global somewhere so it doesn't have to be passed to each of the tests...\"","score":"2","tags":""},"9373179":{"date":"2011-10","id":"9373179","postid":"7707196","body":"\"This won't work, as if someone clears their session then they can vote again.\"","score":"0","tags":""},"9373253":{"date":"2011-10","id":"9373253","postid":"7707196","body":"\"@adeandrade: I interpreted that as something he *didn't* want.\"","score":"0","tags":""},"9374359":{"date":"2011-10","id":"9374359","postid":"7707227","body":"\"@Dru: yes IP would be good. If people have dynamic IPs then there's no way to stop that cleanly.\"","score":"0","tags":""},"9478811":{"date":"2011-10","id":"9478811","postid":"7783125","body":"\"Why did you put choose_list there?\"","score":"0","tags":"<ruby-on-rails><rest>"},"9523131":{"date":"2011-10","id":"9523131","postid":"7814355","body":"\"This works well for days, but what if the duration was months, years, decades, centuries, millenia or eons?\"","score":"1","tags":""},"9823896":{"date":"2011-11","id":"9823896","postid":"8025452","body":"\"What kind of tests are you writing at the moment? Can you give us an example?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"10278888":{"date":"2011-12","id":"10278888","postid":"8319751","body":"\"Could it be that you're just not requiring the file anywhere?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rails-engines>"},"10280341":{"date":"2011-12","id":"10280341","postid":"8337396","body":"\"Please describe how you're getting this error message.\"","score":"0","tags":"<ruby-on-rails><ruby><controller>"},"10540919":{"date":"2011-12","id":"10540919","postid":"8514048","body":"\"`User.find_by_id(blah) || User.find_by_name(blah)` not good enough for you? :)\"","score":"3","tags":""},"10541842":{"date":"2011-12","id":"10541842","postid":"8512682","body":"\"You're right, `scope` is perfect for this case where you want the URL to be scoped but the controller to not be in a URL.\"","score":"0","tags":""},"8446839":{"date":"2011-08","id":"8446839","postid":"7061110","body":"\"Oh that is *so* cheating! By that I mean I wish I had thought of it first :) Nice work.\"","score":"0","tags":""},"8446939":{"date":"2011-08","id":"8446939","postid":"7062053","body":"\"Please elaborate on the \\\"did not work\\\" part. How is it broken?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-plugins>"},"8604533":{"date":"2011-08","id":"8604533","postid":"7169152","body":"\"In the RSpec test, what is `Shop.first` returning?\"","score":"0","tags":"<ruby-on-rails><activerecord><rspec><activemodel>"},"9187586":{"date":"2011-09","id":"9187586","postid":"7576623","body":"\"Please show an example of how to use these routes within the context of a `link_to`. I think it will make your answer better! :)\"","score":"1","tags":""},"9321359":{"date":"2011-10","id":"9321359","postid":"7669186","body":"\"I think the users aren't actually being deleted but are kept by some sort of system like acts_as_paranoid. The permalinks are generated by another library, making them unique for each user as they are created.\"","score":"0","tags":"<ruby-on-rails-3><url><methods><devise>"},"9321363":{"date":"2011-10","id":"9321363","postid":"7669081","body":"\"Great find :) Thank you for this.\"","score":"1","tags":""},"9377681":{"date":"2011-10","id":"9377681","postid":"7190559","body":"\"I cannot duplicate this issue on my machine. How are you getting logs to look like they do?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-1.9>"},"9378337":{"date":"2011-10","id":"9378337","postid":"7710668","body":"\"To be honest, I didn't know of `hook_for` before I did the research here. I knew that *somehow* this other generator was being invoked, I just didn't know *how*. Now I know, thanks to your question!\"","score":"0","tags":""},"9378409":{"date":"2011-10","id":"9378409","postid":"7190559","body":"\"That doesn't look like the output of that to me. For one, there's no timestamps at the *beginning* of each line. I have this, for example: `Completed 422 Unprocessable Entity in 3ms (Views: 1.5ms | ActiveRecord: 0.3ms)`\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-1.9>"},"9476905":{"date":"2011-10","id":"9476905","postid":"7781264","body":"\"Did you not run `rails g spree:site`?\"","score":"1","tags":"<ruby-on-rails-3><installation><spree>"},"9563977":{"date":"2011-10","id":"9563977","postid":"7843441","body":"\"Wouldn't `feedback_url(user, @feedback)` also be possible? Given that the route would be expecting the first argument to be the `username`?\"","score":"0","tags":""},"9621982":{"date":"2011-10","id":"9621982","postid":"7883970","body":"\"Updated the title.\"","score":"0","tags":"<ruby-on-rails><ruby><rspec2>"},"9622666":{"date":"2011-10","id":"9622666","postid":"7884703","body":"\"First: No, there is not a way. Follow my advice in the second paragraph of my answer.\"","score":"0","tags":""},"9622670":{"date":"2011-10","id":"9622670","postid":"7884703","body":"\"Second: you're attempting to merge into the record and not the attributes for the record. You want to do `record.attributes.merge`.\"","score":"0","tags":""},"10073152":{"date":"2011-11","id":"10073152","postid":"8197311","body":"\"possible duplicate of [Rails 3.1 execjs and Could not find a JavaScript runtime](http:\\\/\\\/stackoverflow.com\\\/questions\\\/6282307\\\/rails-3-1-execjs-and-could-not-find-a-javascript-runtime)\"","score":"0","tags":"<ruby-on-rails-3>"},"10134159":{"date":"2011-11","id":"10134159","postid":"8238248","body":"\"Any reason why you're not using routing helpers to generate the URL?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"10342626":{"date":"2011-12","id":"10342626","postid":"8379471","body":"\"I would separate out the `track` into a local variable, just to make the line shorter. But besides that, great answer.\"","score":"2","tags":""},"10342636":{"date":"2011-12","id":"10342636","postid":"8379029","body":"\"I suspect you may have a `counter_cache` defined on `belongs_to :user` that is caching this count. No exact idea though.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><pagination><will-paginate>"},"10342642":{"date":"2011-12","id":"10342642","postid":"8366748","body":"\"Could you explain how you would like to modify this gem? Why not just follow the Logic Customization guide? http:\\\/\\\/guides.spreecommerce.com\\\/logic_customization.html\"","score":"0","tags":"<ruby-on-rails-3><rubygems><spree>"},"10385883":{"date":"2011-12","id":"10385883","postid":"8408936","body":"\"@madth3: because the activerecord-mysql-adapter gem isn't a \\\"thing\\\". It's the `mysql` gem that is missing.\"","score":"0","tags":"<mysql><ruby-on-rails><rake>"},"10429180":{"date":"2011-12","id":"10429180","postid":"8436906","body":"\"What else is in your routes file that you're not showing us?\"","score":"0","tags":"<ruby-on-rails><routing><namespaces>"},"10473348":{"date":"2011-12","id":"10473348","postid":"8468248","body":"\"@NeoRiddle: Remove the line that references `config.assets` from the files in `config`.\"","score":"2","tags":""},"10515982":{"date":"2011-12","id":"10515982","postid":"8482575","body":"\"Any chance that you're stubbing this in a test somewhere or overriding it in the controller? That is the only two situations where I think that this would be happening.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><devise>"},"10666533":{"date":"2011-12","id":"10666533","postid":"8597674","body":"\"Then what is it you want to do? If the system Ruby is 1.9.2 there's nothing you *should* do to change it. Use RVM and set 1.8.7 as your default. That's the easiest way.\"","score":"0","tags":""},"8503645":{"date":"2011-08","id":"8503645","postid":"7100503","body":"\"You need to create an `Admin` constant if you're going to reference it..\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><cancan>"},"8625502":{"date":"2011-08","id":"8625502","postid":"7183636","body":"\"Why is it trying to use SSL for the `http:\\\/\\\/` URL. That isn't right.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><rvm>"},"8625511":{"date":"2011-08","id":"8625511","postid":"7183185","body":"\"Where is the form element that sends back `xcode`?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"8722871":{"date":"2011-08","id":"8722871","postid":"7250838","body":"\"You don't *need* to use `autoload_paths`, you can just as easily `require` those files you need in the Rake task. By using `autoload_paths` you are forcing those files to be loaded *all the time*.\"","score":"3","tags":""},"8856092":{"date":"2011-09","id":"8856092","postid":"7340923","body":"\"You don't need to specify `sqlite3-ruby` AND `sqlite3`. Just `sqlite3` is good enough.\"","score":"2","tags":"<ruby><ruby-on-rails-3><bundler><aptana>"},"8932265":{"date":"2011-09","id":"8932265","postid":"7382631","body":"\"@Bohemian: Agreed, their answer is more in-depth.\"","score":"0","tags":""},"8932338":{"date":"2011-09","id":"8932338","postid":"7394818","body":"\"Please please *please* indent your code properly. It is an absolute mess to read. By using proper indentation it will also make it easier for you to read.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"9060955":{"date":"2011-09","id":"9060955","postid":"7484487","body":"\"@Mischa: No, you're right. That will be available.\"","score":"0","tags":"<ruby-on-rails-3>"},"9090151":{"date":"2011-09","id":"9090151","postid":"7506269","body":"\"Why even use `update_attributes` for this? What's stopping you from using a setter?\"","score":"0","tags":"<ruby-on-rails-3>"},"9340048":{"date":"2011-10","id":"9340048","postid":"7683277","body":"\"This will most likely not fix the problem unless he recompiles Ruby as well. The problem is caused by the libopenssl-ruby library missing during the compilation of Ruby. If, by chance, this is still broken, then read the output of `rvm notes` which will tell you the exact packages to install.\"","score":"0","tags":""},"9431861":{"date":"2011-10","id":"9431861","postid":"7733910","body":"\"Confirm, upgrading to selenium-webdriver fixed the issue. Thank you!\"","score":"0","tags":""},"9446496":{"date":"2011-10","id":"9446496","postid":"7759942","body":"\"Could you show us an example of how this variable is being used? Your question is a bit vague.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"9716433":{"date":"2011-10","id":"9716433","postid":"7949386","body":"\"Correct. Looks like OP still has `<%= javascript_include_tag :defaults %>`\"","score":"0","tags":""},"10213405":{"date":"2011-11","id":"10213405","postid":"8291211","body":"\"You're not explaining at all where this server is located. That's kind of important information.\"","score":"0","tags":"<ruby-on-rails-3><facebook-credits>"},"10302351":{"date":"2011-12","id":"10302351","postid":"8347366","body":"\"You could also create these initializers and have them load files from a directory such as `your_engine\\\/validators`. The reason for this is that I wouldn't *expect* validators to be in the initializers. It's library code so it should go in `lib`.\"","score":"3","tags":""},"10389095":{"date":"2011-12","id":"10389095","postid":"8411463","body":"\"Won't work, route needs both `:trunk_id` and `:root_id` parameters passed in or available on the request where this form is being rendered.\"","score":"0","tags":""},"10430595":{"date":"2011-12","id":"10430595","postid":"8439479","body":"\"What is in your `config\\\/environments\\\/development.rb` file? Could you show us that please?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><windows-7>"},"10493409":{"date":"2011-12","id":"10493409","postid":"8482302","body":"\"You can have a check in the controller if that worries you. If you build an idiot proof system...\"","score":"0","tags":""},"10538245":{"date":"2011-12","id":"10538245","postid":"8512181","body":"\"+1 solid and informative answer! Thank you!\"","score":"0","tags":""},"10713812":{"date":"2011-12","id":"10713812","postid":"8626133","body":"\"It would be helpful if we could see the code within the context of the controller itself. Also, please don't use Pastebin as its formatting is absolutely terrible. Instead, use http:\\\/\\\/gist.github.com instead.\"","score":"1","tags":"<ruby-on-rails>"},"10713867":{"date":"2011-12","id":"10713867","postid":"8622729","body":"\"Yes you did remove it. You cannot generate models if you're not using a gem that doesn't provide ORM functionality for Rails.\"","score":"0","tags":"<ruby-on-rails>"},"10713877":{"date":"2011-12","id":"10713877","postid":"8624456","body":"\"And did it work?\"","score":"0","tags":""},"8363402":{"date":"2011-08","id":"8363402","postid":"7004817","body":"\"If you're *including* `Backend::ResourceHelper` then the `attributes` method wouldn't be coming from that. Including a module into a class will make that module's methods available on instances of the class, not the class itself.\"","score":"0","tags":""},"8364428":{"date":"2011-08","id":"8364428","postid":"7004877","body":"\"@Bloudermilk: Right you are. I have updated this answer to now use `Model.fields.keys`, as that will return the correct fields.\"","score":"0","tags":""},"8464710":{"date":"2011-08","id":"8464710","postid":"7073006","body":"\"What happens if you use `Time.now` rather than `DateTime.now` ?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><datetime><factory-girl>"},"8688628":{"date":"2011-08","id":"8688628","postid":"7224794","body":"\"Or `find_by_id`, which is a shorter version of the above.\"","score":"3","tags":""},"8743582":{"date":"2011-09","id":"8743582","postid":"7264626","body":"\"This question is *really* lacking in substance. Please explain what you want to do with either of these two things and you will get a *much* better answer.\"","score":"0","tags":"<ruby-on-rails-3><message-queue>"},"9378914":{"date":"2011-10","id":"9378914","postid":"7711233","body":"\"Thanks Ben! Much appreciated.\"","score":"0","tags":""},"9542782":{"date":"2011-10","id":"9542782","postid":"7828486","body":"\"I wrote a post covering installing with Mac OS X + RVM: http:\\\/\\\/ryanbigg.com\\\/2011\\\/06\\\/mac-os-x-ruby-rvm-rails-and-you\\\/\"","score":"0","tags":""},"9543075":{"date":"2011-10","id":"9543075","postid":"7828649","body":"\"We're going to need more information on what `UserService` *is*. Why does it connect somewhere?\"","score":"1","tags":"<ruby-on-rails><rspec><rspec2><rspec-rails>"},"9705139":{"date":"2011-10","id":"9705139","postid":"7942125","body":"\"Well, you don't have a `display_name` method for it. The `to_s` method should return whatever string you want to display for your `ErnetClient` object.\"","score":"0","tags":""},"9705779":{"date":"2011-10","id":"9705779","postid":"7942125","body":"\"The `display_name` method there is provided to your *views*, not to your model. The problem here is that your view is attempting to call `to_s` on your model. Define the `to_s` method, fix the problem.\"","score":"0","tags":""},"9720414":{"date":"2011-10","id":"9720414","postid":"7950221","body":"\"No sorry, I don't know of one.\"","score":"0","tags":""},"9734047":{"date":"2011-11","id":"9734047","postid":"7961913","body":"\"Please show us how you're trying to download it.\"","score":"1","tags":"<heroku>"},"9749968":{"date":"2011-11","id":"9749968","postid":"7972358","body":"\"@Guided33: I've updated my answer now to explain it further.\"","score":"1","tags":""},"9870352":{"date":"2011-11","id":"9870352","postid":"8056906","body":"\"Why not use `@post.user.comments`?\"","score":"1","tags":""},"9971719":{"date":"2011-11","id":"9971719","postid":"8127814","body":"\"Please show us your `User` model, around line 47.\"","score":"3","tags":"<ruby-on-rails><ruby><local-variables>"},"10171733":{"date":"2011-11","id":"10171733","postid":"8263112","body":"\"What is it printing instead?\"","score":"0","tags":"<ruby-on-rails><ruby><hash><params>"},"10199970":{"date":"2011-11","id":"10199970","postid":"8282926","body":"\"Show us your `ForexController#index` action please.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"10230160":{"date":"2011-11","id":"10230160","postid":"8290127","body":"\"@Marnen: it doesn't matter what you test it with. Both are fine tools for testing user-facing things.\"","score":"0","tags":""},"10230389":{"date":"2011-11","id":"10230389","postid":"8302888","body":"\"@PlatinumAzure: Did *you* try it?\"","score":"2","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-3.1>"},"10230553":{"date":"2011-11","id":"10230553","postid":"8303286","body":"\"Show us what `method_call` is please.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><actionmailer><delayed-job>"},"10230736":{"date":"2011-11","id":"10230736","postid":"8290158","body":"\"@justingordon: You would probably encounter a conflict in your db\\\/schema.rb file if that happened. If that does happen, just use the larger number\"","score":"1","tags":""},"10273688":{"date":"2011-11","id":"10273688","postid":"8332625","body":"\"jcollum: That \\\"ton of sample code\\\" is wrong. It's never, ever been `flash[:notice] =>`. If you can find an example it woudl help.\"","score":"1","tags":""},"10601865":{"date":"2011-12","id":"10601865","postid":"8551250","body":"\"I can't debug that error without a stacktrace. Could you please gist it?\"","score":"0","tags":""},"10601997":{"date":"2011-12","id":"10601997","postid":"8552475","body":"\"TL;DR ;) Well done!\"","score":"0","tags":""},"10704042":{"date":"2011-12","id":"10704042","postid":"8621667","body":"\"@slabounty: has_many :signatures needs `:foreign_key => :signer_id` on there. It's expecting the field to be called `user_id`.\"","score":"0","tags":""},"10704051":{"date":"2011-12","id":"10704051","postid":"8621600","body":"\"Did you edit the `config.assets.precompile` setting inside `config\\\/environments\\\/production.rb`?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3.1><asset-pipeline>"},"10704055":{"date":"2011-12","id":"10704055","postid":"8621509","body":"\"Try using Devise 2.0.0.rc\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"10719982":{"date":"2011-12","id":"10719982","postid":"8630315","body":"\"%Q is definitely valid Ruby syntax *by itself* (i.e. %Q{something}) but it's not valid in this context. See my answer for information.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"10749348":{"date":"2011-12","id":"10749348","postid":"8647564","body":"\"I think you're being a little pedantic about this... there's no reason to remove the methods other than just so the instance won't respond to them. And whatever the reason behind that is, well, it's just unclear. Clarify please why you want to do this at all.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><activerecord><dry>"},"9284125":{"date":"2011-10","id":"9284125","postid":"7643149","body":"\"@Michael: I don't see how this is a bad idea or why it was downvoted.\"","score":"0","tags":""},"9284136":{"date":"2011-10","id":"9284136","postid":"7643203","body":"\"This won't work (I think). Don't you need to have some sort of query there like `self.voted_users.all(:conditions => \\\"video_votes.value = '1'\\\")` ?\"","score":"0","tags":""},"9284507":{"date":"2011-10","id":"9284507","postid":"7643298","body":"\"You don't put anything inside the model. You leave the models as they are. You just put the `role` field in the `memberships` table and query off that.\"","score":"0","tags":""},"9372084":{"date":"2011-10","id":"9372084","postid":"7706500","body":"\"-a will add everything that has been modified or deleted, but not new files.\"","score":"1","tags":""},"9545918":{"date":"2011-10","id":"9545918","postid":"7830750","body":"\"That exception should have more of a stacktrace. Could you show us that? That would provide much needed information to figure out what your error is.\"","score":"3","tags":"<ruby-on-rails>"},"10450292":{"date":"2011-12","id":"10450292","postid":"8453245","body":"\"What type of input should this show up as?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><simple-form>"},"10478583":{"date":"2011-12","id":"10478583","postid":"8472146","body":"\"Is Elektronik mentioned anywhere in your view?\"","score":"0","tags":"<ruby-on-rails-3><view><partial>"},"10493011":{"date":"2011-12","id":"10493011","postid":"8482044","body":"\"Please format your code using four-space indentation for codeblocks and backticks for inline code examples.\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3>"},"10493026":{"date":"2011-12","id":"10493026","postid":"8481553","body":"\"What you want is called a \\\"vanity URL\\\". I explain these here: http:\\\/\\\/stackoverflow.com\\\/questions\\\/2575475\\\/how-to-implement-short-nested-vanity-urls-in-rails\\\/2577050#2577050\"","score":"0","tags":"<ruby-on-rails><primary-key>"},"10493032":{"date":"2011-12","id":"10493032","postid":"8482070","body":"\"Or alternatively use a straight string `\\\"data-role\\\"`. No need for it to be a symbol. #codegolf\"","score":"1","tags":""},"10493086":{"date":"2011-12","id":"10493086","postid":"8481665","body":"\"Does this still break with Spree 0.70?\"","score":"0","tags":"<ruby-on-rails><internet-explorer><devise><http-protocols>"},"10644804":{"date":"2011-12","id":"10644804","postid":"8582934","body":"\"Start doing the tips in my link. Don't use apt-get to install Ruby, EVER.\"","score":"0","tags":""},"10644958":{"date":"2011-12","id":"10644958","postid":"8583131","body":"\"You need to define the :fb_friend_cache association before attempting to reference it in another association.\"","score":"1","tags":""},"10645197":{"date":"2011-12","id":"10645197","postid":"8583131","body":"\"No, you've not defined the original :fb_friend_cache association before you try to reference it in your `fb_friends` association. Which is exactly what I explained in my answer!\"","score":"1","tags":""},"10645226":{"date":"2011-12","id":"10645226","postid":"8583131","body":"\"The `:through` option in a `has_many` association must reference a previously defined association.\"","score":"0","tags":""},"10645436":{"date":"2011-12","id":"10645436","postid":"8574910","body":"\"Don't ever re-define the `initialize` method in an AR class without calling `super` as well. By doing it this way you've lost any functionality that AR provides through its own `initialize` method.\"","score":"0","tags":""},"10687705":{"date":"2011-12","id":"10687705","postid":"8379931","body":"\"@Marnen: Put, the thesaurus, down.\"","score":"0","tags":""},"10687719":{"date":"2011-12","id":"10687719","postid":"8583392","body":"\"You can copy over the views from the parts of spree and put them at the exact paths within your application. Rails will search in your application for the views before falling back to looking into the engines.\"","score":"0","tags":""},"10703178":{"date":"2011-12","id":"10703178","postid":"8379931","body":"\"\\\"stultifying\\\" is not a word I knew of before you used it. Attempting to implement this within Rails would be madness.\"","score":"0","tags":""},"10747214":{"date":"2011-12","id":"10747214","postid":"8649905","body":"\"Because there's a better way to do that: `controller.send :_layout`.\"","score":"3","tags":""},"10834622":{"date":"2012-01","id":"10834622","postid":"8705982","body":"\"You can't make it dynamically from the routes... easily at least. Check the output of `Rails.application.routes.routes` and go from there.\"","score":"1","tags":""},"10852565":{"date":"2012-01","id":"10852565","postid":"8708316","body":"\"Show more information regarding this \\\"uninitialized constant\\\" error please. Really really hard to debug it without it.\"","score":"0","tags":"<ruby-on-rails-3><ruby-on-rails-3.1><tdd><factory-girl>"},"10943718":{"date":"2012-01","id":"10943718","postid":"8776818","body":"\"Not true, it will work for belongs_to, there just isn't an example of it there. If the has_one works, the belongs_to will work also.\"","score":"0","tags":""},"11095901":{"date":"2012-01","id":"11095901","postid":"8873732","body":"\"This looks to me like you've not run the migrations on your production environment's database. You'll need to do that.\"","score":"1","tags":""},"10749585":{"date":"2011-12","id":"10749585","postid":"8651803","body":"\"@GeekChick: If this answers your question please click the accept button.\"","score":"0","tags":""},"10783618":{"date":"2010-10","id":"10783618","postid":"3940704","body":"\"I'd recommend you try using [OmniAuth](http:\\\/\\\/github.com\\\/intridea\\\/omniauth ) instead. It has several helpful tutorials located in its project wiki page.\"","score":"0","tags":"<ruby-on-rails><facebook><facebooker>"},"10783771":{"date":"2011-12","id":"10783771","postid":"8674822","body":"\"Please show us what this nil error is that you're getting.\"","score":"0","tags":"<ruby-on-rails><routes><update-attributes>"},"10783843":{"date":"2011-12","id":"10783843","postid":"8583392","body":"\"Great to hear Tom :) If you have any other issues please let us know.\"","score":"0","tags":""},"10783851":{"date":"2011-12","id":"10783851","postid":"8651871","body":"\"Yes, that'll do it.\"","score":"0","tags":""},"10783861":{"date":"2011-12","id":"10783861","postid":"1332145","body":"\"The undescribed tasks don't display on that list. That's a \\\"feature\\\" of Rake.\"","score":"0","tags":""},"10860072":{"date":"2012-01","id":"10860072","postid":"8722869","body":"\"Yes, you would only override this in the case that you *didn't* want to use STI.\"","score":"0","tags":""},"10860225":{"date":"2012-01","id":"10860225","postid":"8722869","body":"\"You really shouldn't update the question with *more* question... but updated anyway.\"","score":"0","tags":""},"11116442":{"date":"2012-01","id":"11116442","postid":"8890938","body":"\"Woah slowdown :) Careful of those typos.\"","score":"0","tags":""},"11116451":{"date":"2012-01","id":"11116451","postid":"8886440","body":"\"Are you able to provide a bigger stacktrace for this issue? How did you configure your `config\\\/database.yml`? You must've done something different as a Rails application comes with sqlite3 by default.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><spree>"},"11116459":{"date":"2012-01","id":"11116459","postid":"8864510","body":"\"I don't think the problem is with his *local* RubyGems, but rather the one that's on the Heroku stack. Hard to tell.\"","score":"0","tags":""},"11116475":{"date":"2012-01","id":"11116475","postid":"8847412","body":"\"Hi, I'm the Community Manager for Spree. I don't know of a way to do this in Spree. Perhaps try asking on the spree-user mailing list? https:\\\/\\\/groups.google.com\\\/group\\\/spree-user.\"","score":"0","tags":"<ruby-on-rails><spree>"},"11157053":{"date":"2012-01","id":"11157053","postid":"8918050","body":"\"Agreed with Olof. This question has been asked at least 4,213 times.\"","score":"0","tags":"<ruby-on-rails><ruby><web>"},"11185437":{"date":"2012-01","id":"11185437","postid":"2350837","body":"\"You don't need to use *_url for controllers, path will work just as well. You should only use `_url` when displaying the route to outside sources.\"","score":"2","tags":""},"11185527":{"date":"2012-01","id":"11185527","postid":"2350837","body":"\"To clarify some more: the `_path` output will work just as well for the `Location` header in a Redirect. The browser will interpret that as a relative-to-root redirect.\"","score":"2","tags":""},"11501633":{"date":"2012-02","id":"11501633","postid":"9144977","body":"\"I guess it was lucky you had your app on GitHub after all :) Would have been difficult to track it down otherwise.\"","score":"1","tags":""},"11502571":{"date":"2012-02","id":"11502571","postid":"5832908","body":"\"I'd also like to know how you came to know this.\"","score":"1","tags":""},"11605735":{"date":"2012-02","id":"11605735","postid":"9153645","body":"\"No other suggestions. I only went by what is in the readme. Try contacting the project owner.\"","score":"0","tags":""},"11704636":{"date":"2012-02","id":"11704636","postid":"9274175","body":"\"This should be `<%= javascript_include_tag :application %>` if he's using Rails 3.1. Then application should be including the proper jQuery files.\"","score":"1","tags":""},"11964067":{"date":"2012-02","id":"11964067","postid":"9457185","body":"\"Please show us the full stacktrace associated with that error.\"","score":"0","tags":"<ruby-on-rails><will-paginate><ruby-on-rails-3.2.1>"},"12026648":{"date":"2012-02","id":"12026648","postid":"9498816","body":"\"Still won't work.\"","score":"0","tags":""},"12026725":{"date":"2012-02","id":"12026725","postid":"9498305","body":"\"It would be helpful to know precisely what format it's in, as that is what the answer depends upon\"","score":"0","tags":"<mysql><ruby><casting>"},"12026765":{"date":"2012-02","id":"12026765","postid":"9497800","body":"\"I don't think it would be that. Usually when you run `rake db:migrate` on Heroku it *does* pickup the changes (as OP says), regardless of what that setting is set to.\"","score":"0","tags":""},"12142934":{"date":"2012-03","id":"12142934","postid":"9571551","body":"\"I stopped using shoulda-context.\"","score":"0","tags":""},"12168619":{"date":"2012-03","id":"12168619","postid":"9593670","body":"\"What is `has_super_powers?` Scopes will only work on data inside the database, not Ruby methods.\"","score":"2","tags":"<ruby-on-rails><ruby-on-rails-3><activerecord>"},"12197254":{"date":"2012-03","id":"12197254","postid":"9613005","body":"\"FYI: ` if ((@selected_group != nil) && (@selected_company != nil))` should be written as `if @selected_group && selected_company`. Much neater.\"","score":"0","tags":"<ruby-on-rails><ruby>"},"10343580":{"date":"2011-12","id":"10343580","postid":"8380442","body":"\"This question doesn't make any sense. `create` and `update` are standard controller actions. I don't understand how it seems \\\"hacked out\\\".\"","score":"0","tags":"<ruby-on-rails><model-view-controller><methods><model>"},"10343743":{"date":"2011-12","id":"10343743","postid":"8380625","body":"\"Yup, I agree :) I even wrote a book on Rails (Rails 3 in Action) which suffered from this change. I would really look into using the \\\"new\\\" style of syntax as Aslak recommends, given he is the expect on this.\"","score":"0","tags":""},"10432494":{"date":"2011-12","id":"10432494","postid":"8440590","body":"\"This error would be caused by you using Rails 3.1, where Rails Tutorial uses 3.0.\"","score":"0","tags":"<ruby-on-rails>"},"10432913":{"date":"2011-12","id":"10432913","postid":"8439479","body":"\"@jcollum 20 lines is fine. I'm interested in the `config.cache_classes` line.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><windows-7>"},"10596249":{"date":"2011-12","id":"10596249","postid":"8546657","body":"\"This happens when the line item doesn't link to an order. Could you please provide steps to reproduce that?\"","score":"0","tags":"<ruby-on-rails><spree>"},"10610263":{"date":"2011-12","id":"10610263","postid":"8560206","body":"\"@taro I don't think it would work.\"","score":"0","tags":"<ruby-on-rails-3>"},"10610272":{"date":"2011-12","id":"10610272","postid":"8560206","body":"\"@Robert if you're on 1.9.2 please do `User.method(:find_by_email).source_location` and show us the result of that. Perhaps something else is overriding this method and it's not going to AR? Second thing to try if that's not working is to inspect the SQL that AR is generating for this query and see if it's any different from the version that works.\"","score":"1","tags":"<ruby-on-rails-3>"},"10610319":{"date":"2011-12","id":"10610319","postid":"8559938","body":"\"Please show us the exact commands you are running. From your question, due to the lack of punctuation, it is difficult to tell if you're using `bundle install therubyracer` or just simply `bundle install`.\"","score":"1","tags":"<ruby-on-rails-3><gem><rvm>"},"10715759":{"date":"2011-12","id":"10715759","postid":"8628200","body":"\"Not really, `rails\\\/all` simply requires all of Rails, which may not be what you want. All the `rails\\\/all` require line does is require this file: https:\\\/\\\/github.com\\\/rails\\\/rails\\\/blob\\\/3-1-stable\\\/railties\\\/lib\\\/rails\\\/all.rb\"","score":"0","tags":""},"10731253":{"date":"2011-12","id":"10731253","postid":"8639857","body":"\"possible duplicate of [Finding all records without associated ones](http:\\\/\\\/stackoverflow.com\\\/questions\\\/1314408\\\/finding-all-records-without-associated-ones)\"","score":"2","tags":"<ruby-on-rails><ruby><arrays>"},"10834170":{"date":"2012-01","id":"10834170","postid":"8705982","body":"\"@poochenza: Updated.\"","score":"0","tags":""},"10878270":{"date":"2012-01","id":"10878270","postid":"8409258","body":"\"\\\"Not work yet\\\" is pretty vague...\"","score":"0","tags":""},"10878289":{"date":"2012-01","id":"10878289","postid":"4756221","body":"\"It's not an ApplicationController though. It's the *base* for a namespace, where everywhere else inherits from. My reasons for this is mainly because it's `ActiveRecord::Base` that we inherit from in our models. Just a bit of consistency.\"","score":"0","tags":""},"10878319":{"date":"2012-01","id":"10878319","postid":"8719866","body":"\"It has some quirks to it and sometimes doesn't detect these changes. No way of knowing if this was or wasn't the issue.\"","score":"0","tags":""},"10878872":{"date":"2012-01","id":"10878872","postid":"8735053","body":"\"Please provide a more solid example.\"","score":"0","tags":"<ruby-on-rails><rails-engines>"},"10879017":{"date":"2012-01","id":"10879017","postid":"8732835","body":"\"Show us the stacktrace from this error please\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"10907234":{"date":"2012-01","id":"10907234","postid":"8753691","body":"\"How does this relate to Rails?\"","score":"1","tags":"<ruby><string>"},"10953110":{"date":"2012-01","id":"10953110","postid":"8782954","body":"\"I suspect it's because you've compiled your PostgreSQL gem against a different Ruby version, as Sergio suggests. I would recommend re-installing Ruby (by using RVM) and trying again\"","score":"0","tags":"<ruby-on-rails><ruby><rvm><bundle>"},"10953157":{"date":"2012-01","id":"10953157","postid":"8782224","body":"\"Having the coffee-rails gem inside there doesn't mean that it provides a coffee handler.\"","score":"0","tags":"<ruby-on-rails-3><coffeescript><passenger>"},"11711565":{"date":"2012-02","id":"11711565","postid":"9287100","body":"\"What directory?\"","score":"0","tags":"<ruby-on-rails-3><ruby-on-rails-3.1><asset-pipeline><sprockets>"},"12058731":{"date":"2012-03","id":"12058731","postid":"9520439","body":"\"Please better explain the associations here. I am not sure if a partner should have many proposal trackings, or just one.\"","score":"0","tags":"<ruby-on-rails><ruby>"},"12235405":{"date":"2012-03","id":"12235405","postid":"9638449","body":"\"You're running Rails 2.3.8 but you originally tagged this with `ruby-on-rails-3`? Please don't do that.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-2>"},"12235412":{"date":"2012-03","id":"12235412","postid":"9638512","body":"\"Please use better titles for your questions.\"","score":"1","tags":"<ruby-on-rails><controller><edit>"},"12235426":{"date":"2012-03","id":"12235426","postid":"9638512","body":"\"Is `current_user.id` returning a string or an integer? Same question, but for `@game.user_id`.\"","score":"0","tags":"<ruby-on-rails><controller><edit>"},"9107392":{"date":"2011-09","id":"9107392","postid":"7518498","body":"\"You wouldn't need to edit the routes if you just simply overwrote the routing helper, defining it like `:as => :page` rather than `:as => :static`. The last route defined will be the one that takes precedence.\"","score":"0","tags":""},"9183240":{"date":"2011-09","id":"9183240","postid":"7572711","body":"\"Show us your config\\\/routes.rb file please. Specfically, line 34 or there abouts.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"9286451":{"date":"2011-10","id":"9286451","postid":"7643523","body":"\"@mooddha: Not a bad one at all! It was clear what you were trying to do, you just weren't doing it in the right way. That's all.\"","score":"0","tags":""},"9300514":{"date":"2011-10","id":"9300514","postid":"7654700","body":"\"`find.where` would not work. Just `where` will, though.\"","score":"0","tags":""},"9300554":{"date":"2011-10","id":"9300554","postid":"7654613","body":"\"@derp: `find_all` is deprecated in Rails 3, replaced by `find(:all)`. A better solution is to use `where`, as shown in my answer.\"","score":"1","tags":"<ruby-on-rails><ruby>"},"9300597":{"date":"2011-10","id":"9300597","postid":"6273311","body":"\"Because `home_phone` may return an empty string, which *I think* would make the validation pass anyway. The boolean method I think only checks for `nil`.\"","score":"0","tags":""},"9300612":{"date":"2011-10","id":"9300612","postid":"7643298","body":"\"@TJSherrill: Updated answer, please see.\"","score":"0","tags":""},"9300747":{"date":"2011-10","id":"9300747","postid":"7654775","body":"\"@Grant: This way is the way to get it to work *and* the correct way.\"","score":"0","tags":""},"9301443":{"date":"2011-10","id":"9301443","postid":"7655375","body":"\"Paragraph breaks are your friend. Please space out your question so it isn't just a block of text and, as Andy asks, show us some code of how you think this would work. Thanks!\"","score":"0","tags":"<ruby-on-rails><ruby><parameters><new-operator>"},"9525386":{"date":"2011-10","id":"9525386","postid":"7816041","body":"\"Alternatively, if you're doing something like `@params = @params || 5 `you can shorten it to `@params ||= 5`\"","score":"2","tags":""},"9694828":{"date":"2011-10","id":"9694828","postid":"7926564","body":"\"@Mika: you should be running Rails 3.1.\"","score":"1","tags":""},"9694933":{"date":"2011-10","id":"9694933","postid":"7934110","body":"\"Did you accidentally copy the .git directory from Rails into your .git directory?\"","score":"1","tags":"<ruby-on-rails><git><version-control><branch>"},"9695006":{"date":"2011-10","id":"9695006","postid":"7933642","body":"\"@NoahClark: There's no reason to use one or the other. All that is required for the first element in that array is an object that is of the `User` class. The second object has to be an object of the `Relationship` class.\"","score":"1","tags":""},"10189995":{"date":"2011-11","id":"10189995","postid":"1370415","body":"\"You should never re-defined constants in Ruby.\"","score":"1","tags":""},"10495236":{"date":"2011-12","id":"10495236","postid":"8483451","body":"\"I don't get how your MySQL database is tied at all to Git. Could you please explain this part more clearly?\"","score":"0","tags":"<mysql><git><web-applications><githooks>"},"10593993":{"date":"2011-12","id":"10593993","postid":"8549734","body":"\"`User.find_by_id(:id)` looks... wrong. What are you trying to do there?\"","score":"0","tags":"<ruby-on-rails-3>"},"10622955":{"date":"2011-12","id":"10622955","postid":"8568070","body":"\"Show us the stacktrace for this error please\"","score":"0","tags":"<ruby-on-rails>"},"10855395":{"date":"2012-01","id":"10855395","postid":"8719866","body":"\"You probably restarted your server which made Rails co-operate.\"","score":"0","tags":""},"10855773":{"date":"2012-01","id":"10855773","postid":"8718156","body":"\"Dylan: Thanks, I've updated this.\"","score":"0","tags":""},"11153509":{"date":"2012-01","id":"11153509","postid":"8901435","body":"\"Right, but how are you even getting to that stage? I need some steps to reproduce this issue locally before I can even begin to offer a solution.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3.1><spree>"},"11226538":{"date":"2012-01","id":"11226538","postid":"8958879","body":"\"you may have to require the file somewhere, [like we do in spree](https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/master\\\/auth\\\/lib\\\/spree\\\/auth\\\/engine.rb#L11-21). The file is not automatically loaded.\"","score":"0","tags":""},"11390405":{"date":"2012-01","id":"11390405","postid":"7580848","body":"\"Thanks buddy, this one really helped me out :)\"","score":"1","tags":""},"11433005":{"date":"2012-02","id":"11433005","postid":"9102047","body":"\"Couldn't you use the iPhone simulator from XCode?\"","score":"0","tags":"<objective-c><ios><osx>"},"11975990":{"date":"2012-02","id":"11975990","postid":"9465218","body":"\"What is `Routes`?\"","score":"0","tags":"<jquery><ruby-on-rails><json><get>"},"12089517":{"date":"2012-03","id":"12089517","postid":"9538871","body":"\"And thank you for listening.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"12318790":{"date":"2012-03","id":"12318790","postid":"9693565","body":"\"Could you please show us what hirefire is? It's the first time I've heard of it.\"","score":"0","tags":"<ruby-on-rails><multithreading><queue><delayed-job>"},"12318800":{"date":"2012-03","id":"12318800","postid":"9693565","body":"\"Also, have you considered switching to something like Resque which does support multiple queues?\"","score":"0","tags":"<ruby-on-rails><multithreading><queue><delayed-job>"},"10383638":{"date":"2011-12","id":"10383638","postid":"8379931","body":"\"The point is, it's useless having this discussion. Rails does it a certain way and you cannot change that. If you don't like it, go use something else. Simple, really.\"","score":"0","tags":""},"10473839":{"date":"2011-12","id":"10473839","postid":"8463695","body":"\"The quotes in your `link_to` look wrong...\"","score":"0","tags":"<ruby-on-rails><activerecord><ruby-on-rails-3.1><habtm>"},"10621664":{"date":"2011-12","id":"10621664","postid":"8567540","body":"\"Why  is your model namespaced? I don't think it should be, as this should be precisely the same model that is used for the admin and non-admin views of your site.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1>"},"10622345":{"date":"2011-12","id":"10622345","postid":"8380614","body":"\"@Michael: This error is fixed now. It was this one: https:\\\/\\\/github.com\\\/radar\\\/forem\\\/issues\\\/88. I've left it open because I am not happy with the solution. I may end up changing `user_class` to take a string rather than a class, as I think that is what is causing that problem.\"","score":"0","tags":""},"10708026":{"date":"2011-12","id":"10708026","postid":"8623736","body":"\"Actually, the `app\\\/views` dir contains a `layouts` directory which contains an `application.html.erb` file that is the application layout.\"","score":"0","tags":"<ruby-on-rails-3>"},"10708063":{"date":"2011-12","id":"10708063","postid":"8624434","body":"\"Any particular reason for this? You could use the Rails console (type `rails console` inside a Rails application) to see the database there.\"","score":"0","tags":"<ruby-on-rails><database><ruby-on-rails-3.1><database-management>"},"10708111":{"date":"2011-12","id":"10708111","postid":"8622729","body":"\"Did you accidentally \\\/ on purpose take out Active Record from the list of things that Rails uses? Show us the top of your `config\\\/application.rb` file please. That should tell us enough.\"","score":"0","tags":"<ruby-on-rails>"},"10837606":{"date":"2012-01","id":"10837606","postid":"8708316","body":"\"Do you have a Course model defined yet?\"","score":"0","tags":"<ruby-on-rails-3><ruby-on-rails-3.1><tdd><factory-girl>"},"10906567":{"date":"2012-01","id":"10906567","postid":"8749979","body":"\"Toggling it to false once the job is done.\"","score":"0","tags":""},"11021278":{"date":"2012-01","id":"11021278","postid":"8828163","body":"\"Not an answer? 15char.\"","score":"0","tags":""},"11253484":{"date":"2012-01","id":"11253484","postid":"8980919","body":"\"Other than by running your server and fixing this up as they crop up, nope.\"","score":"1","tags":""},"12029301":{"date":"2012-02","id":"12029301","postid":"9481124","body":"\"Is... this an answer or part of the question?\"","score":"0","tags":""},"12029879":{"date":"2012-02","id":"12029879","postid":"9498456","body":"\"No, why? You shouldn't be doing this. The controller has the routing helpers available to it.\"","score":"0","tags":""},"12029988":{"date":"2012-02","id":"12029988","postid":"9500414","body":"\"Just `rake db:migrate` would be enough.\"","score":"0","tags":""},"12030088":{"date":"2012-02","id":"12030088","postid":"9500487","body":"\"It looks like you're operating on an empty list of gems. You'll need to install Rails before trying to use it.\"","score":"0","tags":"<ruby-on-rails><rubygems>"},"12730815":{"date":"2012-04","id":"12730815","postid":"9931644","body":"\"Issue is that it claims adapter isn't specified.\"","score":"0","tags":""},"12730820":{"date":"2012-04","id":"12730820","postid":"9930361","body":"\"Can you put the code for this application on GitHub so we can clone it and poke around in it?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"13057887":{"date":"2012-04","id":"13057887","postid":"10175650","body":"\"We would have also accepted \\\"Array-like object\\\"\"","score":"0","tags":""},"13057900":{"date":"2012-04","id":"13057900","postid":"10175610","body":"\"Please format your code using backticks or 4-space indentation. This is almost unreadable.\"","score":"0","tags":"<ruby-on-rails>"},"13085802":{"date":"2012-04","id":"13085802","postid":"10193381","body":"\"Why did you call this method `get_sub` when it's clearly setting a value? Also, why shorten it? `set_subdomain` or `stub_subdomain` would be excellent names for this method.\"","score":"6","tags":""},"13085858":{"date":"2012-04","id":"13085858","postid":"10192822","body":"\"Agreed with defaye. Going to need an example XML of what to match and also a simple way that we can reproduce it. Please take out all the variables that you're using to build this XML and show us it.\"","score":"0","tags":"<ruby-on-rails><xml><nokogiri><builder>"},"13085947":{"date":"2012-04","id":"13085947","postid":"10193371","body":"\"Please explain clearer that the problem is because he's using a *prerelease* version of a gem, rather than the full version.\"","score":"1","tags":""},"13085975":{"date":"2012-04","id":"13085975","postid":"10192149","body":"\"Please do not post such short answers. Explain the reason why this works. That way, questioners go away with a better understanding of why this worked, rather than just the answer.\"","score":"1","tags":""},"13086020":{"date":"2012-04","id":"13086020","postid":"10175998","body":"\"@Alexander: Please update your `Gemfile` again. It looks like it has a serious syntax error. If you have already posted it here, please considering posting it on http:\\\/\\\/gist.github.com.\"","score":"0","tags":""},"11096493":{"date":"2012-01","id":"11096493","postid":"7516961","body":"\"@Coderama: I suggest submitting a patch, but I couldn't tell you *what* part of the gem to patch. That is what I meant by that answer.\"","score":"0","tags":""},"11111781":{"date":"2012-01","id":"11111781","postid":"8873732","body":"\"That would set it up in in the development environment. You would need to run `rake db:bootstrap` (with NO sudo) like this: `rake db:bootstrap RAILS_ENV=production`.\"","score":"1","tags":""},"11159304":{"date":"2012-01","id":"11159304","postid":"8919381","body":"\"I would still use SendGrid even for the one-off emails. Better delivery, primarily, analytics secondarily.\"","score":"1","tags":""},"11159433":{"date":"2012-01","id":"11159433","postid":"8919398","body":"\"Right on the money!\"","score":"0","tags":""},"11231493":{"date":"2012-01","id":"11231493","postid":"8966932","body":"\"Ah, correct yes you need to do `@course.build_project` before hand.\"","score":"1","tags":""},"11413977":{"date":"2012-02","id":"11413977","postid":"9073362","body":"\"`spec|test\\\/dummy\\\/config`. An engine has no `config\\\/application.rb`... because it's an engine! :)\"","score":"0","tags":""},"11413982":{"date":"2012-02","id":"11413982","postid":"8981530","body":"\"No worries mate, I hope it helps you out.\"","score":"0","tags":""},"11820694":{"date":"2012-02","id":"11820694","postid":"5957603","body":"\"@Jasmine: Don't `validate_presence_of :user_id`. That's what is causing this problem.\"","score":"0","tags":""},"11820708":{"date":"2012-02","id":"11820708","postid":"9343181","body":"\"Check `user.valid_password?(params[:password])` first, then.\"","score":"8","tags":""},"11820812":{"date":"2012-02","id":"11820812","postid":"9361826","body":"\"Where did you read that in the documentation? And what was your exact solution by \\\"Adding \\\/images to the path\\\"?\"","score":"0","tags":""},"11847075":{"date":"2012-02","id":"11847075","postid":"9379044","body":"\"What is the request you're doing to get that error?\"","score":"0","tags":"<ruby-on-rails><routes>"},"12028800":{"date":"2012-02","id":"12028800","postid":"9498305","body":"\"Well, that's quite a way to store a date!\"","score":"0","tags":"<mysql><ruby><casting>"},"12028822":{"date":"2012-02","id":"12028822","postid":"9499076","body":"\"Nice little voting ring you've got going on here...\"","score":"2","tags":""},"12028847":{"date":"2012-02","id":"12028847","postid":"9498816","body":"\"Great answer, thanks.\"","score":"0","tags":""},"12086695":{"date":"2012-03","id":"12086695","postid":"9538871","body":"\"Please, for the love of God, do NOT call the association  `reservefunctionrooms`. Call it `reserve_function_rooms` instead. You'll thank me later.\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"12286568":{"date":"2012-03","id":"12286568","postid":"9672126","body":"\"Where are you configuring the logging of your application? Why is it `log\\\/production\\\/production.log` and not `log\\\/production.log` like normal\"","score":"0","tags":"<ruby-on-rails><heroku><thin>"},"12393466":{"date":"2012-03","id":"12393466","postid":"9742188","body":"\"Including the jquery-1.7 version is probably conflicting with the one typically included by application.js. Please show the code inside application.js.\"","score":"0","tags":""},"12546947":{"date":"2012-03","id":"12546947","postid":"9815673","body":"\"+1 Azolo. Need to see some controller code before we can know what it is you're trying to do.\"","score":"0","tags":"<ruby-on-rails-3>"},"12562653":{"date":"2012-03","id":"12562653","postid":"9855304","body":false,"score":"2","tags":""},"12879907":{"date":"2012-04","id":"12879907","postid":"10063549","body":"\"What \\\"Default server page\\\" error is this? Could you take a a screenshot and show us?\"","score":"0","tags":"<ruby-on-rails><apache><passenger>"},"13141584":{"date":"2012-04","id":"13141584","postid":"10228882","body":"\"By putting that line inside `Rails.application.routes.draw`. Please read the [routing guide](https:\\\/\\\/guides.rubyonrails.org\\\/routing.html)\"","score":"1","tags":""},"14147598":{"date":"2012-06","id":"14147598","postid":"10860431","body":"\"possible duplicate of [Help installing static binary for wkhtmltopdf](http:\\\/\\\/stackoverflow.com\\\/questions\\\/3713004\\\/help-installing-static-binary-for-wkhtmltopdf)\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-plugins><wkhtmltopdf><wicked-pdf>"},"14703413":{"date":"2012-06","id":"14703413","postid":"11199411","body":"\"You will need to define a member route for that, which is covered in the routing guide I linked to.\"","score":"0","tags":""},"14794267":{"date":"2012-06","id":"14794267","postid":"11255363","body":"\"Please include stacktrace of error. Asset precompilation should NOT be requiring the view. If it is requiring the view, then something is very, very wrong.\"","score":"1","tags":"<ruby-on-rails-3>"},"11496868":{"date":"2012-02","id":"11496868","postid":"9144761","body":"\"The issue with posting code on GitHub is that you're linking to the master branch. Over time, this will change into something different and so it won't be super obvious what it was that was wrong in the first place. It's better to link to another branch or a specific ref that's not master so people can see it for historical reasons.\"","score":"2","tags":"<ruby-on-rails>"},"11497031":{"date":"2012-02","id":"11497031","postid":"9144761","body":"\"Is there a bigger error message for that test failure? I can't get it to display on my machine.\"","score":"0","tags":"<ruby-on-rails>"},"11497094":{"date":"2012-02","id":"11497094","postid":"9144843","body":"\"Nope, this is not what's causing it. See my answer.\"","score":"1","tags":""},"11713128":{"date":"2012-02","id":"11713128","postid":"9287100","body":"\"My answer still stands.\"","score":"0","tags":"<ruby-on-rails-3><ruby-on-rails-3.1><asset-pipeline><sprockets>"},"11729296":{"date":"2012-02","id":"11729296","postid":"9299807","body":"\"You're going to need to explain this so much better if you want anyone to answer it. Especially what you mean by the @2x convention\"","score":"3","tags":"<iphone><ruby-on-rails><ios><retina-display>"},"11729497":{"date":"2012-02","id":"11729497","postid":"564327","body":"\"@Giovanni: Done. Thanks!\"","score":"0","tags":""},"11729621":{"date":"2012-02","id":"11729621","postid":"9296244","body":"\"I actually didn't know this before today. Thanks for the answer!\"","score":"2","tags":""},"12169205":{"date":"2012-03","id":"12169205","postid":"9590038","body":"\"I think you truly don't have them installed. Did you install them using `sudo apt-get install libxml2-dev libxslt-dev`?\"","score":"4","tags":"<ruby><gem><nokogiri><libxml>"},"12269860":{"date":"2012-03","id":"12269860","postid":"9651457","body":"\"I think this answer isn't terribly helpful. If a German user enters the price in typical German fashion of \\\"2,99\\\", how would any application convert that to the \\\"correct\\\" number of \\\"2.99\\\"? Overriding of the setter methods on the model?\"","score":"0","tags":""},"12269885":{"date":"2012-03","id":"12269885","postid":"9660992","body":"\"No. Why on earth would you want to do this? If a user is making a request, the URL will *always* be visible. Why would you hide it? What purpose would that serve?\"","score":"1","tags":"<ruby-on-rails>"},"12269907":{"date":"2012-03","id":"12269907","postid":"9660985","body":"\"It is always super helpful if you show some Ruby code that would reproduce the problem you're seeing. Defining two methods with both referencing the other does not produce and error. That would only happen if you were to call one of the methods before the other method that it referenced was defined.\"","score":"0","tags":"<ruby>"},"12269932":{"date":"2012-03","id":"12269932","postid":"9660788","body":"\"Please do not define an `initialize` method inside a model class within Rails. I am assuming of course that this class inherits from ActiveRecord::Base. The reason why I suggest not doing this is because it would override the `initialize` method that comes from `ActiveRecord::Base`.\"","score":"0","tags":"<ruby-on-rails><ruby>"},"12269955":{"date":"2012-03","id":"12269955","postid":"9660426","body":"\"This guy has the same problem as you: https:\\\/\\\/github.com\\\/rails\\\/rails\\\/issues\\\/5360. It is not expected behaviour.\"","score":"2","tags":"<ruby-on-rails><windows>"},"12269982":{"date":"2012-03","id":"12269982","postid":"9661115","body":"\"Heroku overrides the database.yml file to use its own PostgreSQL instance. Could you please add your Gemfile to this question?\"","score":"0","tags":"<ruby-on-rails><heroku><rake>"},"12374766":{"date":"2012-03","id":"12374766","postid":"9731504","body":"\"Excellent description, Mr. mu.\"","score":"0","tags":""},"12405337":{"date":"2012-03","id":"12405337","postid":"9750049","body":"\"If Git never knew about these files, how is it supposed to bring them back?\"","score":"0","tags":"<git><git-reset>"},"12462457":{"date":"2012-03","id":"12462457","postid":"9788024","body":"\"The children are destroyed before the parent is destroyed. There will be no flag available on the parent, afaik.\"","score":"2","tags":"<ruby-on-rails><activerecord><associations><destroy>"},"12462512":{"date":"2012-03","id":"12462512","postid":"9727237","body":"\"Can you please show us your Gemfile?\"","score":"0","tags":"<ruby-on-rails><spree>"},"12929204":{"date":"2012-04","id":"12929204","postid":"10056536","body":"\"There you go, that's a pretty good selling point!\"","score":"0","tags":""},"13198570":{"date":"2012-04","id":"13198570","postid":"4559245","body":"\"Updated the answer to reflect that.\"","score":"1","tags":""},"13287464":{"date":"2012-04","id":"13287464","postid":"10297676","body":"\"Please show the Gemfile.\"","score":"0","tags":"<spree>"},"13802831":{"date":"2012-05","id":"13802831","postid":"10645590","body":"\"This is not Capybara, it is RSpec.\"","score":"3","tags":"<ruby-on-rails><ruby><rspec><capybara>"},"13936274":{"date":"2012-05","id":"13936274","postid":"10728538","body":"\"I am not sure I understand the question. What are the two ways? Namespacing and not namespacing?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"14795971":{"date":"2012-06","id":"14795971","postid":"11251008","body":"\"I'd consider this serious enough to warrant a bug report on the Spree project itself. Can you please file one there? https:\\\/\\\/github.com\\\/spree\\\/spree\\\/issues.\"","score":"0","tags":"<ruby-on-rails><devise><spree>"},"10541962":{"date":"2011-12","id":"10541962","postid":"8513961","body":"\"Uh, why aren't you using `parameterize` on the `f.name` object? That would do the gsubs and strips for you.\"","score":"0","tags":""},"10785507":{"date":"2011-12","id":"10785507","postid":"8675609","body":"\"What's the stacktrace for this error? I don't see how it could be occuring.\"","score":"0","tags":"<ruby-on-rails-3>"},"10901338":{"date":"2012-01","id":"10901338","postid":"8749524","body":"\"It would be helpful to see some actual code, rather than just a description of the code.\"","score":"0","tags":"<ruby-on-rails><database><unit-testing>"},"11000904":{"date":"2012-01","id":"11000904","postid":"8814557","body":"\"Windows? Linux? Mac OS X? More info please.\"","score":"0","tags":"<ruby-on-rails><ruby><performance><osx><asset-pipeline>"},"11541191":{"date":"2012-02","id":"11541191","postid":"9174276","body":"\"Please take care to format your code and stacktraces by indenting them with four spaces when posting here. Thank you.\"","score":"0","tags":"<ruby-on-rails><rspec><rspec-rails>"},"12036870":{"date":"2012-02","id":"12036870","postid":"9505282","body":"\"Person doesn't break. Added it to my answer.\"","score":"2","tags":"<ruby-on-rails><ruby><string><plural><idempotent>"},"12037025":{"date":"2012-02","id":"12037025","postid":"9505361","body":"\"Updated with chains.\"","score":"0","tags":""},"12037042":{"date":"2012-02","id":"12037042","postid":"9501043","body":"\"This is a good explanation. Would you be able to submit a patch to the docrails project explaining it in the same way? http:\\\/\\\/github.com\\\/lifo\\\/docrails.\"","score":"2","tags":""},"12162310":{"date":"2012-03","id":"12162310","postid":"9590038","body":"\"It would be helpful to know what operating system this is.\"","score":"1","tags":"<ruby><gem><nokogiri><libxml>"},"12292582":{"date":"2012-03","id":"12292582","postid":"9672547","body":"\"Yes, it will work fine inside the controllers\\\/views for your application but you shouldn't be referencing it in assets. If you want to asset the engine path in assets [its a little more complicated](https:\\\/\\\/github.com\\\/kunalchaudhari\\\/spree\\\/blob\\\/266180a69daee79fe462bd8747b92066a34f0ec2\\\/core\\\/app\\\/assets\\\/javascripts\\\/store\\\/helpers.js.erb).\"","score":"0","tags":""},"12341802":{"date":"2012-03","id":"12341802","postid":"9709379","body":"\"Please format your code in your questions by using four-space indenting. Also: there is no need to sign your messages.\"","score":"0","tags":"<ruby-on-rails><activerecord>"},"12342373":{"date":"2012-03","id":"12342373","postid":"9709689","body":"\"No. This is not something that Rails provides out of the box. It is not what Rails is made for.\"","score":"0","tags":"<ruby-on-rails><ms-word>"},"12387465":{"date":"2012-03","id":"12387465","postid":"9630029","body":"\"How would you deal with the final case? i.e. `\\\/api\\\/asdf\\\/users?` as well as `\\\/api\\\/users\\\/1`? I couldn't figure that out in my updated answer, so figured that you might know of a way\"","score":"0","tags":""},"12403674":{"date":"2012-03","id":"12403674","postid":"9750669","body":"\"@DavidGrayson: Please read OP.\"","score":"4","tags":""},"12597775":{"date":"2012-03","id":"12597775","postid":"9721554","body":"\"This is an excellent way of doing it also, and would probably cater for the \\\"\\\/api\\\/asdf\\\/users\\\" request as well.\"","score":"0","tags":""},"12677508":{"date":"2012-03","id":"12677508","postid":"9627796","body":"\"@Robin: Most likely. How would you go about fixing it?\"","score":"0","tags":""},"13036917":{"date":"2012-04","id":"13036917","postid":"10161908","body":"\"I would suggest that stabbing yourself with a fork is more painful, (and that the scars are more longer lasting) than debugging spree, and so your title is factually incorrect. Are you sure that is everything in that controller? What version of Spree is this?\"","score":"1","tags":"<ruby-on-rails><spree>"},"13036939":{"date":"2012-04","id":"13036939","postid":"10154670","body":"\"Please show us the steps you used to get to this point. It's very hard for us to debug this issue as we don't know where you're running `rake test_app` at all.\"","score":"1","tags":"<ruby-on-rails-3.2><spree>"},"13453289":{"date":"2012-05","id":"13453289","postid":"10424961","body":"\"Prove it. Show us the diff.\"","score":"1","tags":"<git-diff>"},"14246485":{"date":"2012-06","id":"14246485","postid":"10922427","body":"\"Is your current branch called master?\"","score":"1","tags":"<ruby-on-rails><git><github><terminal>"},"10666585":{"date":"2011-12","id":"10666585","postid":"8597674","body":"\"If you `rvm use 1.8.7` then it will use the 1.8.7 version of Ruby.\"","score":"0","tags":""},"11136294":{"date":"2012-01","id":"11136294","postid":"8901994","body":"\"Just to clarify the accepted answer some: `4ed90a6..52673f3  my_branch -> my_branch` indicates that `my_branch` has been updated successfully, but `! [rejected]        master -> master (non-fast-forward)` indicates that the master branch has failed. This means that *some refs* have failed to be pushed to the repository, but some others *may* have gone through ok, like `my_branch`.\"","score":"0","tags":""},"11136298":{"date":"2012-01","id":"11136298","postid":"8901435","body":"\"Any pages in particular? Would you be able to provide some steps to reproduce this issue?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3.1><spree>"},"11421474":{"date":"2012-02","id":"11421474","postid":"9093832","body":"\"I can't actually find the file the guide references in the history of Rails. What version of Rails can you see this in?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.1>"},"11510526":{"date":"2012-02","id":"11510526","postid":"9153435","body":"\"What does the 500 error show?\"","score":"0","tags":"<ruby-on-rails><asset-pipeline><sprockets><ruby-on-rails-3.2>"},"11701107":{"date":"2012-02","id":"11701107","postid":"9280738","body":"\"What is the precise commands that you're using to install rails?\"","score":"0","tags":"<ruby-on-rails><ruby><gem><rvm><bundler>"},"11731283":{"date":"2012-02","id":"11731283","postid":"9301142","body":"\"This is correct. We should elaborate further. Consider it like a timeline, where the tag has been signed at a single point along that timeline, much like the Declaration of Independence was signed on July 4th, 1776.\"","score":"0","tags":""},"11731331":{"date":"2012-02","id":"11731331","postid":"9301094","body":"\"Can you show us the step definition for this step please?\"","score":"0","tags":"<ruby><api><cucumber><automated-tests><json-spec>"},"11822879":{"date":"2012-02","id":"11822879","postid":"9350684","body":"\"Why not just use Spree and share a database with a Grails app?\"","score":"0","tags":"<grails><groovy><spree>"},"11853841":{"date":"2012-02","id":"11853841","postid":"9379044","body":"\"But what is the request? Is a link to? how are you making this request?\"","score":"0","tags":"<ruby-on-rails><routes>"},"11966894":{"date":"2012-02","id":"11966894","postid":"9457729","body":"\"@SpyrosP: Don't use `attr_accessor`. leader should be saved as an association on the clan. See my updated answer.\"","score":"0","tags":""},"11967630":{"date":"2012-02","id":"11967630","postid":"9448937","body":"\"I'm the Community Manager for Spree and I validate that this is a bug that we would take quite serious and we will probably spend some time looking into a proper fix for it this week if somebody else doesn't beat us to it. Thanks for the informative answer!\"","score":"0","tags":""},"12350076":{"date":"2012-03","id":"12350076","postid":"9712967","body":"\"I suspect this could be the problem. Try using something else such as rvm or rbenv instead.\"","score":"0","tags":"<ruby-on-rails><ruby><rubygems>"},"12409158":{"date":"2012-03","id":"12409158","postid":"9751347","body":"\"What is thumbnail?\"","score":"0","tags":""},"12982613":{"date":"2012-04","id":"12982613","postid":"10128186","body":"\"Why not just `@user = current_user`?\"","score":"1","tags":""},"13612320":{"date":"2012-05","id":"13612320","postid":"10508589","body":"\"Please separate the different code blocks into different, uh, code blocks. Like, put some line breaks between them or something to make it easier for us to read. Thanks.\"","score":"0","tags":"<ruby-on-rails>"},"13855101":{"date":"2012-05","id":"13855101","postid":"10677435","body":"\"Fails *how*? Please be more precise in your descriptions.\"","score":"3","tags":"<ruby-on-rails><templates><erb><require>"},"14170725":{"date":"2012-06","id":"14170725","postid":"10874673","body":"\"Please format your code using four-space indentation.\"","score":"0","tags":"<ruby-on-rails><subdomains>"},"15390468":{"date":"2012-07","id":"15390468","postid":"11514977","body":"\"@Mittenchops: It would be redirecting to nil only if you had not set `@user` yet, or purposely set it to `nil`.\"","score":"0","tags":""},"12284505":{"date":"2012-03","id":"12284505","postid":"9660992","body":"\"If someone enters the id of a post that they *shouldn't* have access to, that is the responsibility of the controller\\\/endpoint that is serving the request to block that person from accessing that resource. Obfuscating the URLs is a pathetic solution to this problem.\"","score":"1","tags":"<ruby-on-rails>"},"12342672":{"date":"2012-03","id":"12342672","postid":"9709791","body":"\"What is `@message_template`? More information required.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><forms>"},"12699167":{"date":"2012-03","id":"12699167","postid":"9945650","body":"\"What were the commands that you used to compile it from source?\"","score":"0","tags":"<ruby-on-rails><ruby>"},"12699388":{"date":"2012-03","id":"12699388","postid":"9944913","body":"\"I don't understand the question. What in particular is going wrong?\"","score":"0","tags":"<ruby-on-rails-3><unit-testing>"},"12699563":{"date":"2012-03","id":"12699563","postid":"9944346","body":"\"What version of Rails are you using? What version of BrowserCMS?\"","score":"2","tags":"<ruby-on-rails><ruby><content-management-system><browsercms>"},"13588301":{"date":"2012-05","id":"13588301","postid":"4482594","body":"\"@BrianArmstrong Create a gist of yuor test somewhere.\"","score":"0","tags":""},"14095907":{"date":"2012-05","id":"14095907","postid":"10827837","body":"\"Thanks @DhruvPathak, updated answer.\"","score":"1","tags":""},"14197455":{"date":"2012-06","id":"14197455","postid":"10891529","body":"\"One internet for you, sir.\"","score":"1","tags":""},"14197878":{"date":"2012-06","id":"14197878","postid":"10891891","body":"\"Are you sure that's the gem that you're using? Can you show us your Gemfile?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><amazon-s3>"},"14700752":{"date":"2012-06","id":"14700752","postid":"11193522","body":"\"Improper indentation would cause a YAML parsing error, not this error.\"","score":"0","tags":""},"14848865":{"date":"2012-07","id":"14848865","postid":"11287683","body":"\"Ah, the deadlock recursive error... That happens sometimes. I haven't yet investigated why it happens or how to fix it sorry.\"","score":"0","tags":""},"16382781":{"date":"2012-09","id":"16382781","postid":"12226545","body":"\"Why are you doing `params['\\\/people']`? That doesn't look like valid syntax to me.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><params><nil><param>"},"16707450":{"date":"2012-09","id":"16707450","postid":"12427648","body":"\"It would be very useful to know *how* you got that error in the first place.\"","score":"0","tags":"<mysql><ruby-on-rails><ruby><postgresql>"},"17324980":{"date":"2012-10","id":"17324980","postid":"12810152","body":"\"Will this solution work for non-thousand dollar amounts, i.e. $178.50?\"","score":"1","tags":""},"17325505":{"date":"2012-10","id":"17325505","postid":"12810152","body":"\"How about amounts in the hundreds of thousands?\"","score":"0","tags":""},"17325580":{"date":"2012-10","id":"17325580","postid":"12810152","body":"\"Or in the millions, or billions, or trillions, or quadrillions, or quintillions, or sextillions, or septillions, or octillions... basically, any unit listed here: https:\\\/\\\/github.com\\\/radar\\\/humanize\\\/blob\\\/master\\\/lib\\\/lots.rb\"","score":"0","tags":""},"17325592":{"date":"2012-10","id":"17325592","postid":"12810152","body":"\"The point I'm trying to (perhaps excessively) make is that parsing money amounts with regexes is bad and should not be attempted at all. See also: http:\\\/\\\/stackoverflow.com\\\/questions\\\/1732348\\\/regex-match-open-tags-except-xhtml-self-contained-tags\"","score":"0","tags":""},"17486163":{"date":"2012-10","id":"17486163","postid":"12908181","body":"\"Seems quite convoluted.\"","score":"4","tags":""},"17550234":{"date":"2012-10","id":"17550234","postid":"12947177","body":"\"Out of interest: why is everything double spaced?\"","score":"0","tags":"<ruby-on-rails><rake><seeding>"},"17550302":{"date":"2012-10","id":"17550302","postid":"12947177","body":"\"Ok. I fixed it up for you. Where are you seeing this message1 field? How are you retrieving that value from the database?\"","score":"1","tags":"<ruby-on-rails><rake><seeding>"},"17551344":{"date":"2012-10","id":"17551344","postid":"12944638","body":"\"`bundle -v` would give you the version.\"","score":"0","tags":"<ruby-on-rails><bundle>"},"17551944":{"date":"2012-10","id":"17551944","postid":"12948272","body":"\"Please show the code that you've used to get this to happen.\"","score":"0","tags":"<facebook><wordpress><comments>"},"17646318":{"date":"2012-10","id":"17646318","postid":"4779720","body":"\"@bcackerman Then call it however you would call a method that takes arguments: `Podcast.generate_list(arg1, arg2)`\"","score":"1","tags":""},"17646338":{"date":"2012-10","id":"17646338","postid":"13004999","body":"\"Please show the full stacktrace for the error and tell us which line it's pointing to. Hard to debug this issue without it.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><facebook-graph-api><koala>"},"17799116":{"date":"2012-10","id":"17799116","postid":"13096009","body":"\"@MarkReed, oops! Thanks for pointing that out.\"","score":"0","tags":""},"17840365":{"date":"2012-10","id":"17840365","postid":"13121038","body":"\"Please explain in further detail what this dynamic text field does.\"","score":"0","tags":"<javascript><html>"},"14905005":{"date":"2012-07","id":"14905005","postid":"11303392","body":"\"It doesn't open it up because a hacker can't fake a HTTP put to that controller unless they're an admin. If they're not an admin *and* the controller has authorization protection on it (checking if current session is an admin) then it would not allow it. Typical updates won't allow admin to be assigned because they won't use `:as => :admin`.\"","score":"0","tags":""},"15011081":{"date":"2012-07","id":"15011081","postid":"11387760","body":"\"The problem here is because you're attempting to pass the fields through as a string, rather than a Hash. What you're seeing there isn't a problem with the backslashes, but rather a failure to understand that params[:workout] passed into a field and then submitted through a form won't magically turn into a Hash. Could you please explain why you're attempting to do this rather than just persisting the workout in the database?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><params>"},"15217252":{"date":"2012-07","id":"15217252","postid":"11514909","body":"\"Good that you figured it out by yourself! A couple more tips: You shouldn't put a space between the method definition and the arguments for the method. It's just not done that way in the Ruby world. Now with regards to the `included` method, what that'll do is evaluate that whole block within the context of the class. If you want to define methods for the class, I would recommend just defining the methods on the module itself, rather than wrapping them inside the included block as well.\"","score":"0","tags":""},"15217497":{"date":"2012-07","id":"15217497","postid":"11514977","body":"\"@Mittenchops Update answer.\"","score":"0","tags":""},"15833229":{"date":"2012-08","id":"15833229","postid":"11890490","body":"\"You don't have to do this for the latest versions of Deface, and the views that are broken are now fixed in the latest version of Spree that's going through release candidate status now.\"","score":"0","tags":""},"16030789":{"date":"2012-08","id":"16030789","postid":"12004453","body":"\"I don't understand the obsession of having this association. What benefits does it provide? Why is it useful at all to have this association? What am I not understanding with your question?\"","score":"0","tags":""},"16076335":{"date":"2012-08","id":"16076335","postid":"12004453","body":"\"Ah, now I get it. We do it this way due to some prescience in knowing that we're going to have different types of permissions later down the line. If we had this type of association then it would be fine for the read permission, but we'd need to architect a separate way for the other permissions. I've done it this way so that there's just the one way of defining the different permissions for each object and for each user.\"","score":"0","tags":""},"16409526":{"date":"2012-09","id":"16409526","postid":"12242754","body":"\"Hi, welcome to Stack Overflow. Please take care to format your posts appropriately with four spaces for code and terminal output. Thanks!\"","score":"1","tags":"<ruby-on-rails>"},"16409560":{"date":"2012-09","id":"16409560","postid":"12242754","body":"\"It's hard to debug this problem without seeing the other code for the application. Could you please put it on GitHub?\"","score":"1","tags":"<ruby-on-rails>"},"16624536":{"date":"2012-09","id":"16624536","postid":"12376323","body":"\"Please show us the code as you have it now so that we know what you are doing wrong.\"","score":"6","tags":"<ruby-on-rails><arrays>"},"17238774":{"date":"2012-10","id":"17238774","postid":"12758175","body":"\"Pleas define \\\"something broken\\\". If we can't reproduce the problem you're seeing, then it makes it very hard for us to know what exactly is going wrong.\"","score":"0","tags":"<ruby-on-rails>"},"17546170":{"date":"2012-10","id":"17546170","postid":"12944638","body":"\"Hi, welcome to Stack Overflow. If you could please indent code inside your posts with four-space indenting, that'd make it easier to see. Thanks! What version of Bundler are you using?\"","score":"0","tags":"<ruby-on-rails><bundle>"},"17546190":{"date":"2012-10","id":"17546190","postid":"12944616","body":"\"Please explain what use of this you're planning to get.\"","score":"0","tags":"<ruby><constants><private><ruby-1.9.3>"},"17669809":{"date":"2012-10","id":"17669809","postid":"12991000","body":"\"That'd be because the default log level within Rails is \\\"info\\\", and those are info messages. In `development`, it's \\\"debug\\\" instead.\"","score":"0","tags":"<ruby-on-rails><spree><deface>"},"17883473":{"date":"2012-10","id":"17883473","postid":"10628782","body":"\"possible duplicate of [Efficient algorithm to determine if an alleged binary tree contains a cycle?](http:\\\/\\\/stackoverflow.com\\\/questions\\\/7140215\\\/efficient-algorithm-to-determine-if-an-alleged-binary-tree-contains-a-cycle)\"","score":"0","tags":"<loops><time><binary-tree>"},"13666745":{"date":"2012-05","id":"13666745","postid":"10558869","body":"\"Please only tag your questions with language tags please. This is so we can keep tagspam on Stack Overflow to a minimum. Thanks.\"","score":"0","tags":"<ruby-on-rails-3>"},"13666813":{"date":"2012-05","id":"13666813","postid":"10558690","body":"\"Please format code using a four-space indentation before it.\"","score":"0","tags":"<ruby-on-rails><activerecord>"},"13938608":{"date":"2012-05","id":"13938608","postid":"10729698","body":"\"For what reason? Please spend more time explaining your questions.\"","score":"1","tags":"<ruby-on-rails-3>"},"14332612":{"date":"2012-06","id":"14332612","postid":"10967820","body":"\"Updated answer.\"","score":"0","tags":""},"14927502":{"date":"2012-07","id":"14927502","postid":"11336868","body":"\"Close, but it's `order`, not `order_by`.\"","score":"0","tags":""},"15485691":{"date":"2012-07","id":"15485691","postid":"11680401","body":"\"Show `config\\\/routes.rb` too please.\"","score":"0","tags":"<ruby-on-rails><ruby><session><routing>"},"15487013":{"date":"2012-07","id":"15487013","postid":"11681647","body":"\"You *can* use super? I thought that Rails didn't define attribute accessors if there was already a method defined called the same? Just tried it in my own project and it seems you're right. Cool :)\"","score":"0","tags":""},"16375067":{"date":"2012-08","id":"16375067","postid":"12221762","body":"\"@iceiceice: This was a recent Rails update (Rails 3.2.3 I think?). The course books may not be updated to reflect this. I would really, really recommend that you just add each attribute that can be mass-assigned through a form to the list of accessible attributes, with `attr_accessible`\"","score":"0","tags":""},"17327580":{"date":"2012-10","id":"17327580","postid":"12811835","body":"\"Please tell us what operating system you're on and how you installed Ruby so that we can better help you.\"","score":"0","tags":"<ruby-on-rails><ruby><sqlite3><rake>"},"17327613":{"date":"2012-10","id":"17327613","postid":"12811842","body":"\"See updated answer.\"","score":"0","tags":""},"17327889":{"date":"2012-10","id":"17327889","postid":"12811870","body":"\"No... you need a server which sits in front of the Rails server and pipes the requests to it. Passenger will spool up an instance of your application automatically and deal with the piping of the requests. The frontend server (apache or nginx) is much faster at serving static assets than anything written in Ruby, that's why it's the preferred method.\"","score":"0","tags":""},"17385719":{"date":"2012-10","id":"17385719","postid":"12847889","body":"\"Please explain what you mean by \\\"UTMs passed into by the URI\\\"... i..e how the URI is actually constructed and used to make a request to the server. Could be a simple job just for `params`.\"","score":"0","tags":"<ruby-on-rails><google-analytics><analytics>"},"17385771":{"date":"2012-10","id":"17385771","postid":"12847809","body":"\"Why does the id parameter need `\\\/company` in it?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.2><routes>"},"17385803":{"date":"2012-10","id":"17385803","postid":"12832424","body":"\"Please show the output of `git remote show heroku`.\"","score":"0","tags":""},"17385814":{"date":"2012-10","id":"17385814","postid":"12832380","body":"\"My mistake, I missed the `count` on the end.\"","score":"0","tags":""},"17514098":{"date":"2012-10","id":"17514098","postid":"12924732","body":"\"What is gelf and why does `config\\\/initializers\\\/graylog.rb` need it?\"","score":"1","tags":"<ruby-on-rails><rake><bundler><assets>"},"17815197":{"date":"2012-10","id":"17815197","postid":"13103206","body":"\"Move it to `spec\\\/helpers\\\/my_engine_helper_spec.rb`. RSpec has a hook for things in `spec\\\/helpers` to add the helper method.\"","score":"0","tags":"<ruby-on-rails-3><rspec>"},"17831898":{"date":"2012-10","id":"17831898","postid":"13115572","body":"\"**Calling anything in Ruby `Classes` or `Class` is treading a very fine line. Don't do this!!**\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3.1>"},"17883741":{"date":"2012-10","id":"17883741","postid":"13147195","body":"\"Um, how are you going to calculate the location of the element including the parents' locations if you *don't* iterate through the parents? I am not sure that's possible.\"","score":"2","tags":"<javascript><dom>"},"17883897":{"date":"2012-10","id":"17883897","postid":"13146992","body":"\"I don't see how this relates to ruby-on-rails or ruby, so I'm going to remove those tags.\"","score":"1","tags":"<git>"},"17883927":{"date":"2012-10","id":"17883927","postid":"13147323","body":"\"There's no need to use `File.join` because `Rails.root` is a `Pathname` object. Just do this: `Rails.root + \\\"app\\\/csv\\\/names.csv\\\"`\"","score":"7","tags":""},"17884019":{"date":"2012-10","id":"17884019","postid":"13147343","body":"\"Depends. Maybe `chmod 660 <that directory>`\"","score":"1","tags":""},"17884540":{"date":"2012-10","id":"17884540","postid":"13147657","body":"\"Please show us the form for this action. I suspect you're passing in the username as a string, rather than an association's id. Why is `Username` a model, anyway? Why must it be separate from the `jokers` table?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><activerecord><ruby-on-rails-3.2>"},"17884906":{"date":"2012-10","id":"17884906","postid":"13147848","body":"\"No proof here that the person is using Rails.\"","score":"3","tags":""},"12346962":{"date":"2012-03","id":"12346962","postid":"9712675","body":"\"Or delete the line mentioning twitter from `.bundle\\\/config` inside the project.\"","score":"1","tags":""},"12347259":{"date":"2012-03","id":"12347259","postid":"9712662","body":"\"Updated! Read below the line for an explanation.\"","score":"0","tags":""},"12347682":{"date":"2012-03","id":"12347682","postid":"9712967","body":"\"How did you install Ruby?\"","score":"0","tags":"<ruby-on-rails><ruby><rubygems>"},"12361778":{"date":"2012-03","id":"12361778","postid":"9627796","body":"\"@bjeanes: Please review now.\"","score":"0","tags":""},"12390638":{"date":"2012-03","id":"12390638","postid":"9742159","body":"\"Please walk us through what commands you would use the latter case so we can understand what you mean\"","score":"0","tags":"<git><git-branch><git-fork>"},"13097882":{"date":"2012-04","id":"13097882","postid":"10200271","body":"\"Or, alternatively, reference the right constant: `class DashboardController < Enginedemo::ApplicationController` so you don't have to explicitly load it everywhere.\"","score":"15","tags":""},"14759921":{"date":"2012-06","id":"14759921","postid":"11233522","body":"\"`find_all_by_*` methods are going to be deprecated in Rails 4. It's best if you use a `where` here.\"","score":"6","tags":""},"14877762":{"date":"2012-07","id":"14877762","postid":"11305481","body":"\"I downvoted. This answer is incorrect and won't fix the problem of it needing a `RegistrantsController`. See my answer for why and how to fix it.\"","score":"0","tags":""},"14877782":{"date":"2012-07","id":"14877782","postid":"11305947","body":"\"Downvoting this answer without commenting on it makes you a jackass, just FYI. Anonymous cowards.\"","score":"3","tags":""},"15039674":{"date":"2012-07","id":"15039674","postid":"11405386","body":"\"Please post an answer if you figured this one out.\"","score":"0","tags":"<ruby-on-rails><rspec>"},"16011511":{"date":"2012-08","id":"16011511","postid":"12004147","body":"\"Why would the user need to have many projects? That would mean that a project needs to have `user_id` attribute defined for it.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><associations><has-many>"},"16326520":{"date":"2012-08","id":"16326520","postid":"12191822","body":"\"Why is your code underneath a `components` directory? What is making you do that? Components are an ancient feature of Rails (1.2).\"","score":"0","tags":"<ruby-on-rails><helper><rails-engines>"},"16326617":{"date":"2012-08","id":"16326617","postid":"12192788","body":"\"Yes you can add scopes at runtime. Just call `scope` method on the class you want to add a scope to.\"","score":"1","tags":""},"16466132":{"date":"2012-09","id":"16466132","postid":"12251631","body":"\"Will need to see more of the stacktrace for that error. Please open a new question for this problem.\"","score":"0","tags":""},"17147135":{"date":"2012-10","id":"17147135","postid":"12666013","body":"\"That won't fetch records from the DB. It'll do an SQL count exactly as you have it. The only difference is that the code will be shorter.\"","score":"0","tags":""},"17147142":{"date":"2012-10","id":"17147142","postid":"7476607","body":"\"@tjmw: It's not that exciting... it's just \\\"will conflict and Bundler will tell you so.\\\"\"","score":"0","tags":""},"17328917":{"date":"2012-10","id":"17328917","postid":"12811842","body":"\"Yes, use `rvm use 1.9.3 --default` to switch to that version of Ruby being your default.\"","score":"0","tags":""},"17328937":{"date":"2012-10","id":"17328937","postid":"12811870","body":"\"It's looking in the correct folder :) `public` files are actually served without their `public` prefix. This is why you could put `index.html` inside your public dir, run `rails s` and go to localhost:3000 and see the contents of that `index` file locally, even though the request is `\\\/`, and not `\\\/public\\\/`\"","score":"3","tags":""},"17519845":{"date":"2012-10","id":"17519845","postid":"12928581","body":"\"Please format your post using four-space indentation for terminal output.\"","score":"0","tags":"<ruby><osx><gcc><rvm><osx-mountain-lion>"},"17799854":{"date":"2012-10","id":"17799854","postid":"13097316","body":"\"Why not do the calculation before that value is passed to the template? Can you please show us the code that you're using to render the template?\"","score":"2","tags":"<javascript><template-engine><mustache>"},"17835447":{"date":"2012-10","id":"17835447","postid":"13117881","body":"\"What is the problem here? That is precisely what your code is going to do.\"","score":"0","tags":"<javascript>"},"18075457":{"date":"2012-11","id":"18075457","postid":"13262494","body":"\"I don't understand the question. Your \\\"I want it to be this\\\" is not a valid Ruby array. The first example is exactly what you should be getting back from your code.\"","score":"1","tags":"<ruby><arrays>"},"18075487":{"date":"2012-11","id":"18075487","postid":"13261172","body":"\"In the future please embed your code inside your questions, rather than off-site linking. This preserves it for future generations.\"","score":"0","tags":"<html><css><google-chrome>"},"18139772":{"date":"2012-11","id":"18139772","postid":"13301524","body":"\"Can't tell if trolling or legit.\"","score":"0","tags":"<javascript><webserver>"},"18140231":{"date":"2012-11","id":"18140231","postid":"13301585","body":"\"You don't need the Ruby command to install RVM.\"","score":"0","tags":""},"18196754":{"date":"2012-11","id":"18196754","postid":"13335788","body":"\"What exact problem are you trying to solve here? Why are you raising events and not using something like `ActiveSupport::Notifications`?\"","score":"0","tags":"<ruby-on-rails><global-variables><rack>"},"12319029":{"date":"2012-03","id":"12319029","postid":"9693445","body":"\"You've run `bundle install rake` at some point. Go into `.bundle\\\/config` and remove the option containing \\\"rake\\\"\"","score":"0","tags":"<ruby-on-rails><rake>"},"12540690":{"date":"2012-03","id":"12540690","postid":"5060258","body":"\"@PankajSonawane: Then create a new question with your problem and somebody will answer it.\"","score":"0","tags":""},"13940766":{"date":"2012-05","id":"13940766","postid":"10731214","body":"\"Agreed. The `vote_up` route is on a member resource. The error is because you're not passing the `id` parameter along to this route.\"","score":"0","tags":""},"14193539":{"date":"2012-06","id":"14193539","postid":"10889258","body":"\"Definitely agreeing with Cody here. If you ever want to exec Ruby code like that, chances are that you're doing it wrong.\"","score":"2","tags":"<ruby-on-rails><ruby-on-rails-3>"},"14358851":{"date":"2012-06","id":"14358851","postid":"10990051","body":"\"Please show us how you're getting these sets of articles from the database. We cannot debug a problem if we only have your description and no code to go by.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"15130658":{"date":"2012-07","id":"15130658","postid":"1727037","body":"\"Same way, but without the `map.`\"","score":"2","tags":""},"15130683":{"date":"2012-07","id":"15130683","postid":"11446620","body":"\"You posted \\\"waiting for response\\\" *one hour* after your first comment. It's a bit rude to expect another response immediately. I am not your personal manslave.\"","score":"0","tags":""},"15130696":{"date":"2012-07","id":"15130696","postid":"11446620","body":"\"In answer to your question: I don't know how the server is receiving those parameters, so I don't know if it's correct or not. Show me the Rails logs for the request and I can tell you.\"","score":"0","tags":""},"15282027":{"date":"2012-07","id":"15282027","postid":"11554974","body":"\"Merge them in what way exactly? These files look very different from one to another.\"","score":"0","tags":"<git><github>"},"17091048":{"date":"2012-10","id":"17091048","postid":"12666013","body":"\"Why not do `@issue.votes` and save interpolating values?\"","score":"0","tags":""},"17321815":{"date":"2012-10","id":"17321815","postid":"12807510","body":"\"Is it really that much of a \\\"pita\\\" if it means that the attributes for your site are now better protected? This feature, although tiresome to implement, is actually quite useful in the end.\"","score":"0","tags":""},"17357235":{"date":"2012-10","id":"17357235","postid":"12830107","body":"\"Please show the context around how you're getting this error.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"17357243":{"date":"2012-10","id":"17357243","postid":"12830034","body":"\"Why do you want to test something that Devise itself should've already tested? Do you have any custom code around it that could be interfering?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><authentication><devise>"},"17575491":{"date":"2012-10","id":"17575491","postid":"12948272","body":"\"Please put your code inside the question, where it can be formatted, not inside a comment.\"","score":"0","tags":"<facebook><wordpress><comments>"},"17859444":{"date":"2012-10","id":"17859444","postid":"13122683","body":"\"possible duplicate of [using setOnItemClickListener for items in listview](http:\\\/\\\/stackoverflow.com\\\/questions\\\/4993026\\\/using-setonitemclicklistener-for-items-in-listview)\"","score":"0","tags":"<android><android-listview><onclick>"},"17923467":{"date":"2012-11","id":"17923467","postid":"13171091","body":"\"No, there is no `Admin` model. `Admin` is just a namespace. I missed mentioning the namespace stuff in the answer the first time. I'll add it now.\"","score":"0","tags":""},"17923485":{"date":"2012-11","id":"17923485","postid":"13171288","body":"\"Why are you doing this? I am not understanding from your description of the question *why* you would want to do this.\"","score":"0","tags":"<git><bash><git-clone>"},"17953453":{"date":"2012-11","id":"17953453","postid":"13189220","body":"\"Without using singleton is at the bottom of the post.\"","score":"0","tags":""},"18014641":{"date":"2012-11","id":"18014641","postid":"13225420","body":"\"Updated answer to reflect that the code should go into the model.\"","score":"0","tags":""},"18015323":{"date":"2012-11","id":"18015323","postid":"13225439","body":"\"Please provide examples when answering questions.\"","score":"1","tags":""},"18221778":{"date":"2012-11","id":"18221778","postid":"13350827","body":"\"Please don't link to your website. Put all relevant code into a [JSFiddle](http:\\\/\\\/jsfiddle.net) and link to that so we can see the code.\"","score":"1","tags":"<javascript><html><css>"},"16198298":{"date":"2012-08","id":"16198298","postid":"12115579","body":"\"It depends on how you're running the server. Are you running it in the production environment? Rails has a setting (`config.serve_static_assets`) inside `config\\\/environments\\\/production.rb` that is set to `false`, which means that the rails instance itself will not serve static assets. So perhaps you're running it in production and that's why it can't see the assets? I can't think of any other reason with the information provided so far.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><e-commerce><spree>"},"16374467":{"date":"2012-08","id":"16374467","postid":"12221518","body":"\"As Sush said, the routes would be helpful now. And it would be good to know what class the `transaction` object is. I suspect `PaymentTransaction`.\"","score":"0","tags":"<ruby-on-rails><rest><routes><partial-views><put>"},"17324203":{"date":"2012-10","id":"17324203","postid":"12808135","body":"\"This new error is because your user doesn't own that directory that it's trying to write to. I would recommend using `sudo` to change the permissions there or imploding RVM and starting again.\"","score":"1","tags":""},"17546422":{"date":"2012-10","id":"17546422","postid":"12925139","body":"\"This question is rather confusing... could you please explain better?\"","score":"0","tags":"<ruby-on-rails><ruby><arrays><multidimensional-array>"},"17547749":{"date":"2012-10","id":"17547749","postid":"7656653","body":"\"@Inc1982: No worries. Happy to help!\"","score":"0","tags":""},"17547779":{"date":"2012-10","id":"17547779","postid":"12945650","body":"\"I call lies. Sorry, I know that sounds harsh. The `form_for` helper would not leave out the end for the form tag if it's putting in the beginning. Please show us the complete output for the page.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><forms>"},"17547833":{"date":"2012-10","id":"17547833","postid":"12945650","body":"\"It's impossible for us to debug your issue without seeing real code. If you need us to debug your problem, we're going to need to see the most code you can provide us that will reproduce the issue on your system.\"","score":"4","tags":"<ruby-on-rails><ruby-on-rails-3><forms>"},"17609201":{"date":"2012-10","id":"17609201","postid":"12945717","body":"\"Not that I am aware of.\"","score":"0","tags":""},"17829387":{"date":"2012-10","id":"17829387","postid":"10177790","body":"\"For posterity's sake,  I would put the script into this answer so that other people can edit it if they find a mistake with it.\"","score":"1","tags":""},"18140785":{"date":"2012-11","id":"18140785","postid":"13300719","body":"\"@user1810958: Yes there is, actually. Please look at the files that that command generates.\"","score":"0","tags":"<ruby-on-rails>"},"18140847":{"date":"2012-11","id":"18140847","postid":"13301910","body":"\"Please show us the `User` model. I suspect there is a `default_scope` on it which is interfering. Your user isn't being deleted, just hidden from the default scope.\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><activerecord>"},"18140872":{"date":"2012-11","id":"18140872","postid":"13302211","body":"\"What makes an author similar to another one?\"","score":"0","tags":"<ruby-on-rails><activerecord><ruby-on-rails-3.1><ruby-on-rails-3.2>"},"18346214":{"date":"2012-11","id":"18346214","postid":"4792699","body":"\"If you have a new question, please ask it by clicking the [Ask Question](http:\\\/\\\/stackoverflow.com\\\/questions\\\/ask) button. Include a link to this question if it helps provide context.\"","score":"0","tags":""},"18482667":{"date":"2012-11","id":"18482667","postid":"13503874","body":"\"Did you migrate your database correctly? What shows for the `prompts` table in `db\\\/schema.rb`?\"","score":"1","tags":"<ruby-on-rails><ruby><postgresql>"},"18710518":{"date":"2012-11","id":"18710518","postid":"13639128","body":"\"How are you making this request to this controller? It would be really helpful to see this request's code. The problem right now is because you're attempting to use `[]` on a string, not a hash. Look at the params, it s string.\"","score":"0","tags":"<ruby-on-rails><xml><ruby-on-rails-3><json>"},"18772010":{"date":"2012-12","id":"18772010","postid":"13675360","body":"\"Your solution is correct, but the reason it is failing is not. `link_to` *can* work with `:controller => :products`, but because he's rendering this partial within the scope of a namespace (\\\"devise\\\"), it's prefixing the namespace to the controller, and therefore is looking for `devise\\\/products`.\"","score":"3","tags":""},"18772036":{"date":"2012-12","id":"18772036","postid":"13674840","body":"\"(disclaimer: I am the Community Manager for Spree) Is there a reason you're not using [Spree](http:\\\/\\\/spreecommerce.com) for your shopping cart? It looks like your app implements a lot of the common basic workflow that Spree already gives you for free.\"","score":"0","tags":"<ruby-on-rails><model-view-controller><devise><routes><partials>"},"15105076":{"date":"2012-07","id":"15105076","postid":"11445238","body":"\"It's hard to look at that code and see exactly where the problem is. Could you please upload the code you have to GitHub and provide a link in your question so we can try to replicate it ourselves?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><testing><rspec-rails><railstutorial.org>"},"15105091":{"date":"2012-07","id":"15105091","postid":"11445496","body":"\"If you think the Spree documentation is lacking, I would consider that a bug. Please file an issue on https:\\\/\\\/github.com\\\/spree\\\/spree-guides and we will fix it up. Thanks!\"","score":"0","tags":""},"15134907":{"date":"2012-07","id":"15134907","postid":"11464556","body":"\"Updated answer with more information on how to fix it. It's pretty hard for us to advise on this problem from so far away.\"","score":"0","tags":""},"15134960":{"date":"2012-07","id":"15134960","postid":"11464556","body":"\"If you don't know what `nil` is then you're *really really* new to Ruby and you should probably learn the basics before proceeding.\"","score":"1","tags":""},"15334871":{"date":"2012-07","id":"15334871","postid":"11570531","body":"\"I would just have an object that transitions through multiple states like we do with the `Order` class in Spree. The update action then just knows what params to update based on the current state.\"","score":"0","tags":""},"15417465":{"date":"2012-07","id":"15417465","postid":"11622022","body":"\"`distance_of_time_in_words(thing.time, Time.now.utc)` will give an accurate to the second representation of the time that has passed since `thing.time`\"","score":"1","tags":""},"15571801":{"date":"2012-07","id":"15571801","postid":"11733983","body":"\"Indeed. The command is now `rspec` and not `spec`. It's been this way for almost two years now.\"","score":"4","tags":""},"17811945":{"date":"2012-10","id":"17811945","postid":"13014941","body":"\"Please explain why you would want to do something like this.\"","score":"0","tags":"<ruby-on-rails><spree>"},"17812012":{"date":"2012-10","id":"17812012","postid":"13104388","body":"\"Please improve your question. I am not understanding what you're asking.\"","score":"2","tags":"<javascript><function><callback>"},"17812032":{"date":"2012-10","id":"17812032","postid":"13104387","body":"\"Deleted snark. Stack overflow is not the place for snark.\"","score":"1","tags":""},"17812084":{"date":"2012-10","id":"17812084","postid":"13104299","body":"\"Hi, welcome to Stack Overflow. Please remember to use backticks (\\\\`) to markup inline code in your posts.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"17812163":{"date":"2012-10","id":"17812163","postid":"8854975","body":"\"What you're recommending is the *old* style of doing this. Since the introduction of the asset pipeline, the first example block in your code is correct.\"","score":"1","tags":""},"17812213":{"date":"2012-10","id":"17812213","postid":"13103206","body":"\"Where is the spec located relative to your spec directory?\"","score":"0","tags":"<ruby-on-rails-3><rspec>"},"17812220":{"date":"2012-10","id":"17812220","postid":"13103206","body":"\"Also, you can just do `require 'spec_helper'`.\"","score":"0","tags":"<ruby-on-rails-3><rspec>"},"17828400":{"date":"2012-10","id":"17828400","postid":"13108040","body":"\"possible duplicate of [PHP Regex to get youtube video ID?](http:\\\/\\\/stackoverflow.com\\\/questions\\\/3392993\\\/php-regex-to-get-youtube-video-id)\"","score":"0","tags":"<php><mysql>"},"17828454":{"date":"2012-10","id":"17828454","postid":"13103206","body":"\"Done. Please accept :)\"","score":"0","tags":"<ruby-on-rails-3><rspec>"},"17856346":{"date":"2012-10","id":"17856346","postid":"13130195","body":"\"Please show us the actual `search` method, and tell us what database systems you're using in development and production. I suspect they are different.\"","score":"1","tags":"<ruby-on-rails><controller><production>"},"17856780":{"date":"2012-10","id":"17856780","postid":"13130195","body":"\"Just a note for the future: Please use four-space indenting for multiple lines of code.\"","score":"0","tags":"<ruby-on-rails><controller><production>"},"17888431":{"date":"2012-10","id":"17888431","postid":"13147615","body":"\"You could make a form that submitted it as a hidden field and contained the button.\"","score":"0","tags":""},"17952942":{"date":"2012-11","id":"17952942","postid":"13189177","body":"\"The question title and the question aren't similar. Could you please fix that? EDIT: Ok good, you fixed it. Thanks.\"","score":"0","tags":"<ruby>"},"19599879":{"date":"2013-01","id":"19599879","postid":"14151061","body":"\"Why would you do that? Wouldn't you have more than one project?\"","score":"0","tags":"<ruby-on-rails>"},"18774205":{"date":"2012-12","id":"18774205","postid":"3433243","body":"\"@AndersonGreen Fixed.\"","score":"0","tags":""},"20020717":{"date":"2013-01","id":"20020717","postid":"14346901","body":"\"It'd be helpful to know *how* you installed piggybak. Please remember to try and give people useful steps so that they could reproduce your mistake.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><piggybak>"},"20089276":{"date":"2013-01","id":"20089276","postid":"14430368","body":"\"Did you save your `user.rb` file?\"","score":"1","tags":"<ruby-on-rails><devise><ruby-on-rails-3.2><associations>"},"20376654":{"date":"2013-01","id":"20376654","postid":"14595740","body":"\"Please explain your reasoning for wanting to do this.\"","score":"0","tags":"<ruby-on-rails><ember.js>"},"20521187":{"date":"2013-02","id":"20521187","postid":"14677376","body":"\"Please explain how you're verifying that it's sending back plain\\\/text rather than application\\\/rss+xml.\"","score":"0","tags":"<ruby-on-rails-3><heroku><rss><mime-types><scraper>"},"20521967":{"date":"2013-02","id":"20521967","postid":"14676932","body":"\"Please explain how you failed.  Your \\\"error\\\" only shows the output HTML, not the actual error. Also: do you have a Rails app that we could clone and attempt to reproduce this error?\"","score":"0","tags":"<ruby-on-rails-3><routes><spree>"},"18135153":{"date":"2012-11","id":"18135153","postid":"13282519","body":"\"I used the wrong method in the button to. Please see the updated answer.\"","score":"0","tags":""},"18135204":{"date":"2012-11","id":"18135204","postid":"13298930","body":"\"You don't need to wrap upvote.js.erb in a document ready, because the document should already be ready by the time the AJAX request is triggered.\"","score":"0","tags":"<jquery><ajax><ruby-on-rails-3>"},"18135220":{"date":"2012-11","id":"18135220","postid":"13298930","body":"\"Please show us the code of the upvote action. You should ideally have a `@review` variable defined in it, which could be used.\"","score":"0","tags":"<jquery><ajax><ruby-on-rails-3>"},"18135239":{"date":"2012-11","id":"18135239","postid":"13298761","body":"\"Please show the full trace for this issue. A one-line error message is not sufficient to be able to debug this issue.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"18135325":{"date":"2012-11","id":"18135325","postid":"13299017","body":"\"I don't understand \\\"it logs data\\\". What do you mean?\"","score":"0","tags":"<javascript><jquery><html>"},"18135342":{"date":"2012-11","id":"18135342","postid":"13299024","body":"\"I assume you meant the *first* one is selected as yes? Yes?\"","score":"1","tags":"<javascript><html>"},"18135818":{"date":"2012-11","id":"18135818","postid":"13299117","body":"\"Updated my answer entirely. Sorry for missing the important part where you `sudo`'d. Please just use `gem install`, not `sudo gem install`. I think my guide *does* say to do that too..\"","score":"1","tags":""},"18136333":{"date":"2012-11","id":"18136333","postid":"13298975","body":"\"You're not really passing a variable here, you're just using what's made available to you through the request. The request routes to a URL which contains a `review_id` and inside your controller you're finding the matching review. Using it like you are doing is fine.\"","score":"1","tags":""},"18230184":{"date":"2012-11","id":"18230184","postid":"13355829","body":"\"What have you tried so far?\"","score":"2","tags":"<javascript><jquery><html><css>"},"18257339":{"date":"2012-11","id":"18257339","postid":"13370661","body":"\"Why are you making a request to another controller and action of your application? What are you hoping to accomplish from doing this?\"","score":"0","tags":"<ruby-on-rails><ruby><net-http>"},"18290213":{"date":"2012-11","id":"18290213","postid":"13390092","body":"\"Why test the functionality of ActiveRecord, and not the functionality of the application that depends on Active Record?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rspec><associations>"},"18800003":{"date":"2012-12","id":"18800003","postid":"13692113","body":"\"I don't know of any other way other than to `git blame` that file continuously and find the line manually. I don't think Git has a way of doing it automatically.\"","score":"0","tags":""},"19104642":{"date":"2012-12","id":"19104642","postid":"13871654","body":"\"Updated the answer.\"","score":"0","tags":""},"20234490":{"date":"2013-01","id":"20234490","postid":"14513950","body":"\"The answer really depends on what you're going to do with this minor version afterwards. What is the purpose of having this?\"","score":"0","tags":"<ruby-on-rails><rest><routes>"},"20234508":{"date":"2013-01","id":"20234508","postid":"14513731","body":"\"I don't understand what the problem is here. On Heroku, your assets are going to be precompiled down into one file for CSS and one file for JavaScript. Are you actually seeing some *real* JavaScript errors or is the question more about why there's only two files shown int he head tag for your output?\"","score":"0","tags":"<javascript><ruby-on-rails><heroku><asset-pipeline>"},"20380907":{"date":"2013-01","id":"20380907","postid":"14598410","body":"\"Please explain why you want to change this.\"","score":"1","tags":"<ruby-on-rails>"},"20629076":{"date":"2013-02","id":"20629076","postid":"14741471","body":"\"Thank you very much :)\"","score":"0","tags":""},"20629078":{"date":"2013-02","id":"20629078","postid":"14741471","body":"\"Sorry, use `products_url`\"","score":"0","tags":""},"20629165":{"date":"2013-02","id":"20629165","postid":"14741471","body":"\"@daveatflow: Try passing a host option to it as well.\"","score":"1","tags":""},"20658962":{"date":"2013-02","id":"20658962","postid":"14743981","body":"\"How did you install Ruby on your machine? Did you use RVM? Did you use rbenv?\"","score":"0","tags":"<ruby><rubygems><bundler>"},"14876854":{"date":"2012-07","id":"14876854","postid":"11305405","body":"\"`RegistrationsController` needs to live inside `Portal` because it's a part of the functionality of that namespace.\"","score":"1","tags":""},"15244797":{"date":"2012-07","id":"15244797","postid":"11515697","body":"\"Your `ProductCategory` objects don't respond to `primary_category_name`. That's another problem entirely.\"","score":"0","tags":""},"15244810":{"date":"2012-07","id":"15244810","postid":"11514977","body":"\"@Mittenchops: That's quite ugly. What I would do is override to_param on the user model to return just `username` and then just `redirect_to @user` will redirect to the correct path.\"","score":"1","tags":""},"16423949":{"date":"2012-09","id":"16423949","postid":"12251762","body":"\"I've never seen `\\\\h` before. What's it supposed to do?\"","score":"0","tags":"<ruby><ruby-1.8.7>"},"16425304":{"date":"2012-09","id":"16425304","postid":"12251977","body":"\"What happens if you *don't* `render_views`?\"","score":"0","tags":"<ruby><ruby-on-rails-3><rspec><devise><factory-girl>"},"16425319":{"date":"2012-09","id":"16425319","postid":"12252286","body":"\"@prem: Thanks! Was about to link to that myself.\"","score":"0","tags":"<ruby-on-rails><twitter-bootstrap>"},"17645447":{"date":"2012-10","id":"17645447","postid":"12991000","body":"\"Please show examples of this logging output.\"","score":"0","tags":"<ruby-on-rails><spree><deface>"},"17645494":{"date":"2012-10","id":"17645494","postid":"13004509","body":"\"Adrian: added a warning. Explained how to get back to prior state. I don't know how this answer *doesn't* answer the question.\"","score":"0","tags":""},"17645507":{"date":"2012-10","id":"17645507","postid":"13003760","body":"\"Please show the code that you're using to do this now.\"","score":"0","tags":"<ruby><archive><tar>"},"17833509":{"date":"2012-10","id":"17833509","postid":"9214963","body":"\"This is the same as the accepted answer.\"","score":"0","tags":""},"18052018":{"date":"2012-11","id":"18052018","postid":"13248520","body":"\"Your original question was \\\"what is the difference?\\\". I explained what the difference was.\"","score":"1","tags":""},"18052105":{"date":"2012-11","id":"18052105","postid":"13248510","body":"\"I'm not understanding why this question is being downvoted. It's a perfectly legitimate question.\"","score":"3","tags":"<ruby><oop><class><object>"},"18067746":{"date":"2012-11","id":"18067746","postid":"13248510","body":false,"score":"2","tags":"<ruby><oop><class><object>"},"18114983":{"date":"2012-11","id":"18114983","postid":"13286638","body":"\"Please show the example output for the JSON.\"","score":"0","tags":"<javascript><jquery>"},"18553470":{"date":"2012-11","id":"18553470","postid":"13546744","body":"\"This won't maintain the history for these files. You would need to `git log --follow` to see the history.\"","score":"0","tags":""},"18968339":{"date":"2012-12","id":"18968339","postid":"13782205","body":"\"@ardavis: No there is no method like that in Rails as far as I know. You can move the code into a module, indeed.\"","score":"0","tags":""},"19259235":{"date":"2012-12","id":"19259235","postid":"13961703","body":"\"Wouldn't this still create two users, which I think was his initial problem?\"","score":"0","tags":""},"20595548":{"date":"2013-02","id":"20595548","postid":"14721930","body":"\"`public\\\/stylesheets` should only be used for *static* stylesheets. By including them into the asset pipeline, you make it compile those assets too when they don't need to be compiled. Ergo, bad coding practice.\"","score":"1","tags":""},"20719372":{"date":"2013-02","id":"20719372","postid":"14795307","body":"\"What is `request`? Why are you using that method rather than using jQuery's `$.get`?\"","score":"0","tags":"<javascript><ruby-on-rails><ajax><xmlhttprequest>"},"20719538":{"date":"2013-02","id":"20719538","postid":"14795014","body":"\"Please explain how you installed Ruby.\"","score":"0","tags":"<ruby-on-rails><ruby><linux><ubuntu><path>"},"20766564":{"date":"2013-02","id":"20766564","postid":"14823178","body":"\"Please show the complete test file.\"","score":"0","tags":"<ruby-on-rails><unit-testing>"},"20766705":{"date":"2013-02","id":"20766705","postid":"14823174","body":"\"Please provide more information, like what version of Rails this app should be using.\"","score":"0","tags":"<ruby-on-rails><rake>"},"17921377":{"date":"2012-11","id":"17921377","postid":"13170000","body":"\"Why are you implementing this yourself and not using a plugin like select2 or chosen? These plugins have already solved this problem for you.\"","score":"0","tags":"<javascript><css><autocomplete><positioning><haml>"},"17921423":{"date":"2012-11","id":"17921423","postid":"13153437","body":"\"This question will be closed because it is too localized and doesn't provide any useful context for other visitors.\"","score":"0","tags":"<javascript><html5><object>"},"17921478":{"date":"2012-11","id":"17921478","postid":"13170000","body":"\"You can make it operate on a hidden field as well. The data can be retrieved from an AJAX source. Both chosen and select2 do provide visible text boxes for people to type things into.\"","score":"0","tags":"<javascript><css><autocomplete><positioning><haml>"},"17921653":{"date":"2012-11","id":"17921653","postid":"13170156","body":"\"Please show us the output of `which ruby`\"","score":"0","tags":"<ruby-on-rails><ruby><sqlite3>"},"18166433":{"date":"2012-11","id":"18166433","postid":"13317666","body":"\"What are the params for the request?\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><character-encoding>"},"18769075":{"date":"2012-12","id":"18769075","postid":"13639128","body":"\"What URL that the 3rd party is making a request to? Does it end in .json?\"","score":"0","tags":"<ruby-on-rails><xml><ruby-on-rails-3><json>"},"19323626":{"date":"2012-12","id":"19323626","postid":"13328833","body":"\"@wrburgess: What version of Spree?\"","score":"0","tags":""},"19323638":{"date":"2012-12","id":"19323638","postid":"13328833","body":"\"Note that the module has changed names recently to just `Order`: https:\\\/\\\/github.com\\\/spree\\\/spree\\\/blob\\\/master\\\/core\\\/lib\\\/spree\\\/core\\\/controller_helpers\\\/order.rb\"","score":"1","tags":""},"19439865":{"date":"2012-12","id":"19439865","postid":"14064261","body":"\"Why would you post it as a Ruby object and not just a string? Setting the `Content-Type` header to be `application\\\/json` should make the server on the other end know that the request is being made with JSON.\"","score":"0","tags":"<ruby><json>"},"20264450":{"date":"2013-01","id":"20264450","postid":"14514104","body":"\"Yes, they should be uploaded into the `public\\\/system` directory and never `vendor\\\/assets`\"","score":"0","tags":""},"20405750":{"date":"2013-01","id":"20405750","postid":"8025497","body":"\"If you're worried about filtering, then define another association that links to the same class and which applies the filtering for you.\"","score":"0","tags":""},"20731254":{"date":"2013-02","id":"20731254","postid":"14801919","body":"\"Not `render_to_string`?\"","score":"2","tags":""},"20839890":{"date":"2013-02","id":"20839890","postid":"14865630","body":"\"Why do you need a controller to serve files out of the `public` dir?\"","score":"1","tags":""},"20169015":{"date":"2013-01","id":"20169015","postid":"14476573","body":"\"@Maximus S: That would be because your `@question` object is not set up correctly. Please show us how you're setting it up within your controller.\"","score":"1","tags":""},"20169041":{"date":"2013-01","id":"20169041","postid":"14475863","body":"\"Please show us the routes for your `ItemsController` too.\"","score":"0","tags":"<ruby-on-rails>"},"20169067":{"date":"2013-01","id":"20169067","postid":"14473502","body":"\"Please show us your entire `Gemfile`.\"","score":"0","tags":"<ruby-on-rails><installation><spree>"},"20169178":{"date":"2013-01","id":"20169178","postid":"14476926","body":"\"It would be useful for us to see the rest of the form where this checkbox is located, and the controller to which it submits to. Without this, I don't think this problem can be debugged.\"","score":"0","tags":"<ruby-on-rails><devise><cancan><rolify>"},"20169208":{"date":"2013-01","id":"20169208","postid":"14475638","body":"\"Please don't use activescaffold. It's terrible and gets in your way more often than it helps. I would really recommend building this yourself.\"","score":"1","tags":"<ruby-on-rails><activescaffold>"},"20288846":{"date":"2013-01","id":"20288846","postid":"14545332","body":"\"Please show us what the `User` class is defined as, as well as the stack trace for that error you're displaying.\"","score":"0","tags":"<ruby><ruby-on-rails-3>"},"20334658":{"date":"2013-01","id":"20334658","postid":"6182769","body":"\"Um... that's why I said you could use namespace if you want them to be at a specific path, or scope if not.\"","score":"0","tags":""},"20557162":{"date":"2013-02","id":"20557162","postid":"14699668","body":"\"No code examples at all? Please help us help you by providing these.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><instagram>"},"20632257":{"date":"2013-02","id":"20632257","postid":"14743981","body":"\"Please provide information about how you set up Ruby on your machine.\"","score":"0","tags":"<ruby><rubygems><bundler>"},"21466334":{"date":"2013-03","id":"21466334","postid":"15227765","body":"\"Which class? Please provide examples.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><gem>"},"17840410":{"date":"2012-10","id":"17840410","postid":"13121042","body":"\"What code have you tried so far?\"","score":"0","tags":"<javascript><jquery><json><jsonp><blackberry-webworks>"},"17855036":{"date":"2012-10","id":"17855036","postid":"13121042","body":"\"Please put code inside your question, not in a comment, as it's better formatted there.\"","score":"0","tags":"<javascript><jquery><json><jsonp><blackberry-webworks>"},"17855049":{"date":"2012-10","id":"17855049","postid":"13121137","body":"\"The output of his JSON in his question already looks like JSON to me. No?\"","score":"0","tags":""},"17855249":{"date":"2012-10","id":"17855249","postid":"11598116","body":"\"@Cristian: It would've been better to open a new question for this, rather than editing this person's.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><activeadmin>"},"18052818":{"date":"2012-11","id":"18052818","postid":"13248520","body":"\"I don't know the answer to that. You asked a Ruby question, so I gave a Ruby answer.\"","score":"0","tags":""},"18052879":{"date":"2012-11","id":"18052879","postid":"13249067","body":"\"You lost me with that final paragraph. What total count?\"","score":"0","tags":""},"18068394":{"date":"2012-11","id":"18068394","postid":"13258406","body":"\"Please format code\\\/command examples  in your post using backticks (`)\"","score":"0","tags":"<ruby-on-rails-3><haml>"},"18290584":{"date":"2012-11","id":"18290584","postid":"13390092","body":"\"You should write integration tests for your application and make sure that it does the things it needs to do. When you have some complex low-level logic, then test that using unit tests.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rspec><associations>"},"18352194":{"date":"2012-11","id":"18352194","postid":"13217769","body":"\"@Luke: Did you try this?\"","score":"0","tags":""},"19099629":{"date":"2012-12","id":"19099629","postid":"13868334","body":"\"If you're going to be using text then, get rid of the `:limit` options after them.\"","score":"0","tags":""},"19669555":{"date":"2013-01","id":"19669555","postid":"14131150","body":"\"We got rid of it in 1.1.\"","score":"2","tags":""},"20446836":{"date":"2013-01","id":"20446836","postid":"14636568","body":"\"What are you going to do with it once you've got it? If you explain that, perhaps we could recommend an alternative way of writing the tests that wouldn't involve finding out the method name.\"","score":"0","tags":"<ruby><unit-testing><methods><testunit>"},"20805290":{"date":"2013-02","id":"20805290","postid":"14823040","body":"\"It will be in the same place as the old stack trace. Click \\\"Full trace\\\" on the page and it's the bunch of file references underneath that we want.\"","score":"0","tags":""},"21406057":{"date":"2013-03","id":"21406057","postid":"15191924","body":"\"It doesn't make sense to me that that route is being used based off the rake routes output. Can you show the contents of Config\\\/routes.rb instead please?\"","score":"0","tags":"<ruby-on-rails-3><ruby-on-rails-3.2>"},"21406318":{"date":"2013-03","id":"21406318","postid":"15191924","body":"\"It's still not making sense. Are you sure you're showing the right form? That form should be generating a URL like \\\/movies, not \\\/searches\"","score":"0","tags":"<ruby-on-rails-3><ruby-on-rails-3.2>"},"21486897":{"date":"2013-03","id":"21486897","postid":"15239117","body":"\"@Alexey: His answer was incorrect first. He has since edited it.\"","score":"0","tags":""},"21486905":{"date":"2013-03","id":"21486905","postid":"15239117","body":"\"@bretterer: The http means that it will look it up online, rather than on the local file path. Go ahead, try copypasta'ing OP's code to somewhere local and opening it in your browser. You'll see the same error he is seeing.\"","score":"0","tags":""},"21487640":{"date":"2013-03","id":"21487640","postid":"15239139","body":"\"NewB answered it better than I could :)\"","score":"0","tags":""},"21487661":{"date":"2013-03","id":"21487661","postid":"15239528","body":"\"Marking as \\\"not constructive\\\", as this is a polling type of question. Both have their pros and cons. You will need to choose which one you want. There are ways to improve the responses for Rabl. For instance, you could cache the responses.\"","score":"0","tags":"<ruby-on-rails-3><performance><comparison><rabl><jsonbuilder>"},"21642746":{"date":"2013-03","id":"21642746","postid":"15322334","body":"\"I would recommend cloning the repository again into a separate directory and looking at it there.\"","score":"0","tags":""},"23088094":{"date":"2013-04","id":"23088094","postid":"5813224","body":"\"A number of your choosing.\"","score":"0","tags":""},"18226276":{"date":"2012-11","id":"18226276","postid":"13352882","body":"\"What is your intention with this script? What is the ideal outcome?\"","score":"0","tags":"<ruby><arrays><hash><segmentation-fault><permutation>"},"18257846":{"date":"2012-11","id":"18257846","postid":"13371692","body":"\"Why are you redefining these methods to point to a header which doesn't typically contain IP address information?\"","score":"1","tags":"<ruby-on-rails><ruby><rack>"},"18258448":{"date":"2012-11","id":"18258448","postid":"13360224","body":"\"Please run that command again with `--trace` appended.\"","score":"0","tags":"<ruby-on-rails><ruby><rake>"},"18287059":{"date":"2012-11","id":"18287059","postid":"13360224","body":"\"Thanks. It looks like it's coming from inside `config\\\/routes.rb`. Please show us the contents of that file.\"","score":"0","tags":"<ruby-on-rails><ruby><rake>"},"18970809":{"date":"2012-12","id":"18970809","postid":"13791910","body":"\"Why would it be necessary for the URL to reflect the submitted form value?\"","score":"0","tags":""},"19110648":{"date":"2012-12","id":"19110648","postid":"13875482","body":"\"Have you tried upgrading to the latest 1.9.3 release? (p327 as of this writing)\"","score":"1","tags":"<ruby-on-rails><ruby><nginx><production-environment>"},"20518611":{"date":"2013-02","id":"20518611","postid":"4504352","body":"\"@MikeCampbell: Sorry, it was wrong. The correct option to use is `:path`.\"","score":"0","tags":""},"20595256":{"date":"2013-02","id":"20595256","postid":"14721930","body":"\"Please don't recommend to add `public\\\/stylesheets`, as this is a bad coding practice. Please have all assets inside `app\\\/assets`.\"","score":"0","tags":""},"20595261":{"date":"2013-02","id":"20595261","postid":"14721964","body":"\"Show us your form please.\"","score":"2","tags":"<ruby-on-rails>"},"20595361":{"date":"2013-02","id":"20595361","postid":"14722006","body":"\"Did you use RVM or rbenv at all to install Ruby? Which tutorial are you following?\"","score":"0","tags":"<ruby-on-rails><ruby>"},"20737128":{"date":"2013-02","id":"20737128","postid":"14803935","body":"\"The Getting Started guide does a good job of explaining this: http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html\"","score":"1","tags":"<ruby-on-rails><routes>"},"20737139":{"date":"2013-02","id":"20737139","postid":"14805556","body":"\"Where is `user_model.rb` located in your app exactly? Why aren't you loading ActiveRecord in your test?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"20802880":{"date":"2013-02","id":"20802880","postid":"14823040","body":"\"@Apane101: Show us the complete stacktrace for this new error. The error message itself won't do. Please do this in a ***new** question*\"","score":"0","tags":""},"20802900":{"date":"2013-02","id":"20802900","postid":"14805556","body":"\"require 'active_record'\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"20913083":{"date":"2013-02","id":"20913083","postid":"14907316","body":"\"He wouldn't NEED to rescue if he was making a valid API request!\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rubygems><mediawiki>"},"21097748":{"date":"2013-02","id":"21097748","postid":"15015240","body":"\"@Metraton So did it work then? :)\"","score":"0","tags":""},"21405881":{"date":"2013-03","id":"21405881","postid":"15191924","body":"\"Please show us the routes defined for this create action. I think that is the problem.\"","score":"0","tags":"<ruby-on-rails-3><ruby-on-rails-3.2>"},"21405914":{"date":"2013-03","id":"21405914","postid":"15192451","body":"\"Why do you think RVM is better? Please explain :)\"","score":"0","tags":""},"21405926":{"date":"2013-03","id":"21405926","postid":"15192369","body":"\"What files are currently in that directory?\"","score":"0","tags":"<ruby-on-rails><ruby>"},"21405948":{"date":"2013-03","id":"21405948","postid":"15191332","body":"\"Yes, definitely need to provide more logs. Please show us everything that this command is outputting\"","score":"0","tags":"<ruby-on-rails><deployment><capistrano>"},"21468766":{"date":"2013-03","id":"21468766","postid":"15227765","body":"\"It would be extremely useful if we could see how `ImportSpec` is defined, specifically within what file.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><gem>"},"21892464":{"date":"2013-03","id":"21892464","postid":"15469320","body":"\"I had to drill down too. I had no idea about LogSubscriber, but I did know about ActiveSupport::Notifications before.\"","score":"0","tags":""},"22431399":{"date":"2013-04","id":"22431399","postid":"9011250","body":"\"I don't know how this answer would even work. `@item_list` is an array, and arrays aren't methods and so this would be a syntax error.\"","score":"0","tags":""},"23132904":{"date":"2013-04","id":"23132904","postid":"16181969","body":"\"What happens if you write `gem 'chef', '11.4.2'`?\"","score":"0","tags":"<ruby><rubygems><bundler><chef>"},"23134408":{"date":"2013-04","id":"23134408","postid":"16182891","body":"\"possible duplicate of [Error Installing nokogiri when run bundle install](http:\\\/\\\/stackoverflow.com\\\/questions\\\/16135596\\\/error-installing-nokogiri-when-run-bundle-install)\"","score":"0","tags":"<ruby-on-rails><ruby><rubygems><nokogiri>"},"26207442":{"date":"2013-07","id":"26207442","postid":"17914208","body":"\"When you create the comment in the `CommentsController`, `Comment.new(:user => current_user)`\"","score":"0","tags":""},"26249862":{"date":"2013-07","id":"26249862","postid":"17959544","body":"\"Ah yes. I should've thought about that. Great idea :)\"","score":"0","tags":""},"20842263":{"date":"2013-02","id":"20842263","postid":"14865630","body":"\"Yes, I was the one. Upvoted now.\"","score":"0","tags":""},"20842319":{"date":"2013-02","id":"20842319","postid":"14867100","body":"\"When you say \\\"it throws an error\\\" in a question, it would be *really* helpful if you could show that error. Otherwise, we have a terrible time trying to work out what the error is. The error message is good, but the error message *and the stacktrace* and the related code is best. Please remember to do this in the future, as it will help everyone involved.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><constants>"},"20842339":{"date":"2013-02","id":"20842339","postid":"14867173","body":"\"The \\\"it was like this\\\" and \\\"The solution is this\\\" look identical to me. What am I missing?\"","score":"0","tags":""},"20842629":{"date":"2013-02","id":"20842629","postid":"14867173","body":"\"I have no idea how this even relates to OP. I don't think private is the cause of your problems.\"","score":"0","tags":""},"21279838":{"date":"2013-02","id":"21279838","postid":"4506034","body":"\"Zenph: Yes, it does actually. Did you read the first line?\"","score":"0","tags":""},"21524723":{"date":"2013-03","id":"21524723","postid":"15254964","body":"\"Rails will assume that all the model names are singular. So you need to force it to be plural.\"","score":"0","tags":""},"21525306":{"date":"2013-03","id":"21525306","postid":"15260737","body":"\"Please follow this advice: http:\\\/\\\/stackoverflow.com\\\/questions\\\/3747002\\\/heroku-rails-3-and-sqlite3\"","score":"0","tags":"<ruby-on-rails><heroku><sqlite3>"},"21649086":{"date":"2013-03","id":"21649086","postid":"14699299","body":"\"So will `rm -rf public\\\/assets`.\"","score":"0","tags":""},"21978840":{"date":"2013-03","id":"21978840","postid":"15518551","body":"\"Please show your complete `config\\\/routes.rb`\"","score":"0","tags":"<ruby-on-rails-3><devise><controller>"},"22045899":{"date":"2013-03","id":"22045899","postid":"15543676","body":"\"Thanks Arjan, you're right.\"","score":"0","tags":""},"22046845":{"date":"2013-03","id":"22046845","postid":"15556623","body":"\"Please explain what isn't working.\"","score":"0","tags":"<ruby-on-rails><ember.js>"},"22389500":{"date":"2013-04","id":"22389500","postid":"15754335","body":"\"Define \\\"slow\\\" please. Showing the output of the command would help us diagnose the problem as well.\"","score":"2","tags":"<git><tortoisegit><git-clone><git-bash><git-commands>"},"22390296":{"date":"2013-04","id":"22390296","postid":"15754335","body":"\"Is Tortoise configured any differently?\"","score":"0","tags":"<git><tortoisegit><git-clone><git-bash><git-commands>"},"22828246":{"date":"2013-04","id":"22828246","postid":"8481156","body":"\"Thank you couling. I wasn't able to connect and setting up the unix_socket_directory was the right thing to do.\"","score":"0","tags":""},"22859632":{"date":"2013-04","id":"22859632","postid":"16013975","body":"\"@apneadiving I created this example app which reproduces the issue I'm seeing: http:\\\/\\\/github.com\\\/radar\\\/capybara_remote. Run `bundle exec ruby test\\\/form_test.rb` and it'll pass.\"","score":"0","tags":"<ruby-on-rails>"},"23093969":{"date":"2013-04","id":"23093969","postid":"16160360","body":"\"How are you starting your server?\"","score":"1","tags":"<apache><ubuntu>"},"24738578":{"date":"2013-06","id":"24738578","postid":"17057318","body":"\"@Nizar: Could you please try 2.0.3 instead?\"","score":"0","tags":""},"25102621":{"date":"2013-06","id":"25102621","postid":"17057318","body":"\"We have removed Jirafe completely. It will be back once their service is back.\"","score":"1","tags":""},"25734541":{"date":"2013-07","id":"25734541","postid":"16210515","body":"\"@JavierFigueroa: Yes it does.\"","score":"0","tags":""},"26095655":{"date":"2013-07","id":"26095655","postid":"17849102","body":"\"I am not in charge of maintaining that extension so I cannot answer that question.\"","score":"0","tags":""},"26170244":{"date":"2013-07","id":"26170244","postid":"17914169","body":"\"Why are you passing it all those options?\"","score":"0","tags":"<ruby><nokogiri>"},"26170263":{"date":"2013-07","id":"26170263","postid":"17914116","body":"\"This question does not provide adequate information in order to be able to debug it. Can you show us what you mean by \\\"garbage files\\\"? Maybe you still have them committed to Git?\"","score":"0","tags":"<ruby-on-rails><heroku><asset-pipeline>"},"26170320":{"date":"2013-07","id":"26170320","postid":"17914205","body":"\"I've removed the postgresql + sql tags from this question, as it's Ruby \\\/ Ruby on Rails specifically that you're having the problems with.\"","score":"0","tags":"<ruby-on-rails><ruby>"},"26170331":{"date":"2013-07","id":"26170331","postid":"17914182","body":"\"Can you please provide steps to reproduce this issue? Can you reproduce it in a new application? It's pretty hard for us to debug this issue without anything to go on.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"26170399":{"date":"2013-07","id":"26170399","postid":"17914182","body":"\"Then I'd say it's a gem that you're using. Try removing gems from your Gemfile and reproducing the problem and see what happens.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"26170564":{"date":"2013-07","id":"26170564","postid":"17914208","body":"\"Then you did not associate any user with that comment.\"","score":"0","tags":""},"26170858":{"date":"2013-07","id":"26170858","postid":"17914116","body":"\"I have absolutely no idea what could be causing this then. It might do you to contact support@heroku.com\"","score":"0","tags":"<ruby-on-rails><heroku><asset-pipeline>"},"26172010":{"date":"2013-07","id":"26172010","postid":"15685432","body":"\"Could you please explain why?\"","score":"5","tags":""},"26290170":{"date":"2013-07","id":"26290170","postid":"9002673","body":"\"@Lavixu not if the gem dependency specifications of other gems require something other than the latest. Doing `gem 'spree'` just means \\\"I want any version of Spree\\\"\"","score":"1","tags":""},"20720964":{"date":"2013-02","id":"20720964","postid":"14795307","body":"\"Please show us how you are defining that variable. That is what I meant.\"","score":"0","tags":"<javascript><ruby-on-rails><ajax><xmlhttprequest>"},"20873502":{"date":"2013-02","id":"20873502","postid":"14883828","body":"\"Which \\\"other actions\\\" do you mean?\"","score":"0","tags":"<ruby-on-rails>"},"20874160":{"date":"2013-02","id":"20874160","postid":"14885593","body":"\"my guess is that you don't have a before filter (or whatever it is that AA uses) that calls `build_schedule.`\"","score":"0","tags":""},"21812852":{"date":"2013-03","id":"21812852","postid":"15412931","body":"\"It would typically clone from the master branch, which is why it wasn't working.\"","score":"0","tags":""},"24361217":{"date":"2013-06","id":"24361217","postid":"16868370","body":"\"@Darendal If this answered your question then please click the green tick to accept it as the answer. Thanks!\"","score":"0","tags":""},"25332673":{"date":"2013-07","id":"25332673","postid":"17437938","body":"\"What do you mean \\\"clearing the cache\\\"? Nothing is being cleared here, it's either incrementing or decrementing.\"","score":"1","tags":""},"25508646":{"date":"2013-07","id":"25508646","postid":"17539111","body":"\"Are there any errors in your JS console?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><jquery><ruby-on-rails-3.2>"},"25694258":{"date":"2013-07","id":"25694258","postid":"4477684","body":"\"@GregoryHigley Then you are doomed.\"","score":"0","tags":""},"25694275":{"date":"2013-07","id":"25694275","postid":"17644588","body":"\"What is `Mate`? How was the `email` field ever added to the `mates` table? Is there a migration for that? Is that migration committed to version control? Did you push the latest commits to Heroku?\"","score":"0","tags":"<ruby-on-rails><heroku>"},"26056054":{"date":"2013-07","id":"26056054","postid":"17848580","body":"\"Question is kind of vague. What libraries? What classes? What lives in `public` and what lives in `assets`? I tried my best, but not sure it's \\\"correct\\\".\"","score":"0","tags":"<ruby-on-rails>"},"26057029":{"date":"2013-07","id":"26057029","postid":"17849298","body":"\"Please explain your problem using real examples. In a comment below, you say that the string is each time different. Please show real examples of this.\"","score":"0","tags":"<javascript>"},"26406072":{"date":"2013-08","id":"26406072","postid":"18048284","body":"\"Please provide information from the logs in order for us to be able to debug this question. The logs should contain some request information which might enable us to debug what's breaking.\"","score":"1","tags":"<ruby-on-rails><ruby><ajax><jquery><polymorphic-associations>"},"26406092":{"date":"2013-08","id":"26406092","postid":"18046074","body":"\"I would advise you to read the [Getting Started with Rails Guide](http:\\\/\\\/guides.rubyonrails.org\\\/getting_started.html). It appears there are some basic principles (such as routing) that you do not understand yet.\"","score":"1","tags":"<ruby-on-rails-3><form-for>"},"26406124":{"date":"2013-08","id":"26406124","postid":"18047321","body":"\"Please do not post duplicate questions for the same problem. This is the third question that I've seen for the same error now.\"","score":"1","tags":"<ruby-on-rails><terminal><nlp><rails-activerecord>"},"26406126":{"date":"2013-08","id":"26406126","postid":"18047321","body":"\"possible duplicate of [Rails Server crashes Chrome \\\"No Data Received\\\"](http:\\\/\\\/stackoverflow.com\\\/questions\\\/18047661\\\/rails-server-crashes-chrome-no-data-received)\"","score":"0","tags":"<ruby-on-rails><terminal><nlp><rails-activerecord>"},"26406151":{"date":"2013-08","id":"26406151","postid":"18048473","body":"\"Please show some code for this problem.\"","score":"0","tags":"<go>"},"26422484":{"date":"2013-08","id":"26422484","postid":"18058230","body":"\"Why not use one of the hundreds of thousands of image carousel plugins that already exist?\"","score":"0","tags":"<javascript>"},"26424202":{"date":"2013-08","id":"26424202","postid":"18059200","body":"\"Please show us your `config\\\/routes.rb` file.\"","score":"1","tags":"<ruby-on-rails>"},"26565535":{"date":"2013-08","id":"26565535","postid":"18139157","body":"\"I don't understand this question at all. What language?\"","score":"0","tags":"<eclipse>"},"27435460":{"date":"2013-09","id":"27435460","postid":"18634509","body":"\"What versions of `aws-sdk` and `aws-s3` show up in your `bundle list`?\"","score":"0","tags":"<ruby><ruby-on-rails-3><amazon-s3><paperclip>"},"27492021":{"date":"2013-09","id":"27492021","postid":"18665934","body":"\"For what purpose? This seems like a really weird request.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><routes><rack>"},"27492411":{"date":"2013-09","id":"27492411","postid":"18667331","body":"\"Why does this `.gem` file live at the top of the path and not in a subdirectory like `pkg`, as is typical?\"","score":"0","tags":"<ruby><gem><bundler>"},"27492432":{"date":"2013-09","id":"27492432","postid":"18666362","body":"\"Please provide the stacktrace for this error.\"","score":"0","tags":"<ruby-on-rails><file-upload>"},"27492484":{"date":"2013-09","id":"27492484","postid":"18665276","body":"\"There is not enough information in this post, and so I've voted it to be closed. Please show us the code that you have tried and explain why it didn't work. If you don't have any code, please explain the problem in greater detail than just a few short sentences.\"","score":"0","tags":"<ruby-on-rails><paypal><shopping-cart><checkout><cart>"},"27492523":{"date":"2013-09","id":"27492523","postid":"18665045","body":"\"@zyriuse: Your question does not provide enough information for us to go on. You've provided the code, but no information about what actually is breaking. Please show us the stacktrace of your error.\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3>"},"20806531":{"date":"2013-02","id":"20806531","postid":"14846069","body":"\"+1 for reading the stacktrace.\"","score":"0","tags":""},"20911549":{"date":"2013-02","id":"20911549","postid":"14907316","body":"\"If you look at the actual page in the browser, you can see it is an error: http:\\\/\\\/en.wikipedia.org\\\/w\\\/api.php\\\/.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rubygems><mediawiki>"},"20911719":{"date":"2013-02","id":"20911719","postid":"14907511","body":"\"Please post questions with better titles when posting to Stack Overflow.\"","score":"4","tags":"<javascript><function>"},"20911724":{"date":"2013-02","id":"20911724","postid":"14907511","body":"\"We can't give an answer to this because we can't see any code that you're referencing. Please provide code.\"","score":"1","tags":"<javascript><function>"},"21375983":{"date":"2013-03","id":"21375983","postid":"15175941","body":"\"Please show us the `RelationshipsController`.\"","score":"0","tags":"<ruby-on-rails><tdd><railstutorial.org>"},"21376036":{"date":"2013-03","id":"21376036","postid":"15175916","body":"\"You want to inspect the packets coming into and going out of a Ruby on  Rails application? Why?\"","score":"0","tags":"<ruby-on-rails><ruby><tcp><gem><monitoring>"},"21376045":{"date":"2013-03","id":"21376045","postid":"15175949","body":"\"Please show us the code that gives you that error. The model and the migration aren't actually inserting data. Something else is, though. So please show us that \\\"something else\\\"\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3.2>"},"21376575":{"date":"2013-03","id":"21376575","postid":"15175998","body":"\"Updated answer.\"","score":"0","tags":""},"21409464":{"date":"2013-03","id":"21409464","postid":"15192451","body":"\"Why do you think **rbenv** is better? Please explain :D\"","score":"0","tags":""},"21488405":{"date":"2013-03","id":"21488405","postid":"15239528","body":"\"I'm sorry, but that is not what Stack Overflow is for.\"","score":"0","tags":"<ruby-on-rails-3><performance><comparison><rabl><jsonbuilder>"},"21675200":{"date":"2013-03","id":"21675200","postid":"15322334","body":"\"You will need to `git rm` locally those deleted files, and then commit that change.\"","score":"1","tags":""},"22467631":{"date":"2013-04","id":"22467631","postid":"15799687","body":"\"@texasbruce: That's incorrect. 1.9.3 was perfectly stable.\"","score":"5","tags":"<ruby><ruby-1.9.3><ruby-2.0>"},"22807824":{"date":"2013-04","id":"22807824","postid":"15995730","body":"\"Please show your spec_helper file\"","score":"0","tags":"<methods><undefined>"},"23058101":{"date":"2013-04","id":"23058101","postid":"16139481","body":"\"What is `default_pseud` returning?\"","score":"0","tags":"<ruby-on-rails><ruby>"},"25407244":{"date":"2013-07","id":"25407244","postid":"3148506","body":"\"This is now called `$.active`, btw.\"","score":"8","tags":""},"26290733":{"date":"2013-07","id":"26290733","postid":"9627796","body":"\"@shime: Really? The redirect should be handled by other routes in `config\\\/routes.rb`. Do you have an example app that does this that I can poke + prod at?\"","score":"0","tags":""},"26290811":{"date":"2013-07","id":"26290811","postid":"17982402","body":"\"possible duplicate of [How do you test an AJAX request with RSpec\\\/RoR?](http:\\\/\\\/stackoverflow.com\\\/questions\\\/3971268\\\/how-do-you-test-an-ajax-request-with-rspec-ror)\"","score":"0","tags":"<ruby-on-rails><ajax><rspec>"},"26600453":{"date":"2013-08","id":"26600453","postid":"18158775","body":"\"This question does not provide anywhere near enough information for us to debug it. Please at least show us your Gemfile.\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"27314528":{"date":"2013-09","id":"27314528","postid":"18564776","body":"\"Please do not override `find` within Active Record, as you're overriding very basic functionality that other code may depend on. Instead, call this method something different.\"","score":"1","tags":""},"27384325":{"date":"2013-09","id":"27384325","postid":"18605301","body":"\"Are you positive you want a member route? That is defining a route for `lists\\\/:id\\\/tableOrder`, but you say you want `lists\\\/tableOrder`. What does this action do? In your action, you seem to want a single list. I am confused. Please explain.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3.1>"},"27384494":{"date":"2013-09","id":"27384494","postid":"18605376","body":"\"How did you send this object? Why are you sending an object and not just a query parameter? (i.e. `\\\/lists\\\/tableOrder.json?tableno=1`)\"","score":"0","tags":""},"27418795":{"date":"2013-09","id":"27418795","postid":"18625153","body":"\"Why that particular route? What problem are you trying to solve here? The route that would define would be `\\\/cities_by_state\\\/list2`, for example.\"","score":"0","tags":"<ruby-on-rails>"},"27682763":{"date":"2013-09","id":"27682763","postid":"18776190","body":"\"Because 't' will never be 'f'.\"","score":"1","tags":"<ruby-on-rails-3><activeadmin>"},"27877134":{"date":"2013-09","id":"27877134","postid":"18886760","body":"\"But why are you restricted to using such an older version of Rack?\"","score":"0","tags":"<ruby-on-rails><ruby><rack>"},"27988019":{"date":"2013-09","id":"27988019","postid":"1685243","body":"\"@HenleyChiu, no, not that I know of. You can override `new_record?` \\\/ `persisted?` on your model and run some custom code in that if you want different behaviour.\"","score":"0","tags":""},"20914974":{"date":"2013-02","id":"20914974","postid":"14909435","body":"\"Please show us the code for this button, as well as the full source for the page.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3>"},"20947237":{"date":"2013-02","id":"20947237","postid":"14926125","body":"\"If you use nested attributes you won't have that problem.\"","score":"0","tags":""},"22863018":{"date":"2013-04","id":"22863018","postid":"16027361","body":"\"Please show us the exact way you're making this request. \\\"undefined\\\" is typically a JavaScript message which happens when you try to reference an undefined variable.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><rails-routing>"},"22939402":{"date":"2013-04","id":"22939402","postid":"16071208","body":"\"Your stacktrace is very poorly formatted. Please improve the formatting.\"","score":"0","tags":"<ruby-on-rails><heroku>"},"22939545":{"date":"2013-04","id":"22939545","postid":"16071208","body":"\"I've improved the formatting myself this time. Next time, please double check the output and make sure it's readable when posting a question. Thank you.\"","score":"0","tags":"<ruby-on-rails><heroku>"},"22939561":{"date":"2013-04","id":"22939561","postid":"16071323","body":"\"I tidied it up for you. You're right that he's missing thin.\"","score":"0","tags":""},"22939834":{"date":"2013-04","id":"22939834","postid":"16070323","body":"\"Why do you want to stop the altering of attributes? If they can't save them, why does it matter?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"23426314":{"date":"2013-05","id":"23426314","postid":"16340064","body":"\"Thank you for sharing, Erik.\"","score":"0","tags":""},"26404512":{"date":"2013-08","id":"26404512","postid":"18028334","body":"\"Please ask a new question for this new error.\"","score":"0","tags":""},"26404737":{"date":"2013-08","id":"26404737","postid":"18043495","body":"\"This question belongs on http:\\\/\\\/math.stackexchange.com\\\/\"","score":"0","tags":"<matlab><loops><matrix><manipulation>"},"26495555":{"date":"2013-08","id":"26495555","postid":"18096663","body":"\"The exact same error? Please update your question with the new error.\"","score":"1","tags":""},"26495574":{"date":"2013-08","id":"26495574","postid":"18100091","body":"\"How did you install Ruby?\"","score":"0","tags":"<ruby-on-rails><gem>"},"26495700":{"date":"2013-08","id":"26495700","postid":"18099483","body":"\"This question appears to be off-topic because it should ask on the GitHub page for the project (https:\\\/\\\/github.com\\\/pboling\\\/flag_shih_tzu)\"","score":"2","tags":"<ruby-on-rails><ruby><gem>"},"26495734":{"date":"2013-08","id":"26495734","postid":"18100219","body":"\"Please provide the stack trace for the error.\"","score":"0","tags":"<ruby-on-rails>"},"26495930":{"date":"2013-08","id":"26495930","postid":"18100329","body":"\"How did you install passenger and configure it to work with nginx? Can you please show your configuration from nginx for passenger?\"","score":"0","tags":"<ruby-on-rails><ruby><ubuntu><nginx><passenger>"},"26495963":{"date":"2013-08","id":"26495963","postid":"18099972","body":"\"Voted to close this question because it's unclear what you're asking. Please clarify your question so it is answerable without too much decoding.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3.2><routes>"},"26524804":{"date":"2013-08","id":"26524804","postid":"18094718","body":"\"This question appears to be off-topic because it is about Google App Engine Support.\"","score":"0","tags":"<python><google-app-engine>"},"26669878":{"date":"2013-08","id":"26669878","postid":"18197793","body":"\"@PaulS. I have corrected the tag.\"","score":"0","tags":"<actionscript-3>"},"26670460":{"date":"2013-08","id":"26670460","postid":"18198360","body":"\"possible duplicate of [Rails table\\\\_name\\\\_prefix missing](http:\\\/\\\/stackoverflow.com\\\/questions\\\/8911046\\\/rails-table-name-prefix-missing)\"","score":"0","tags":"<ruby-on-rails><rspec>"},"27085353":{"date":"2013-08","id":"27085353","postid":"18434515","body":"\"What do you mean by \\\"named fields\\\"? Could you explain also what data there is to be kept for tech and admin contacts? Is it the same data for both tech and admin contacts?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><activerecord>"},"27085571":{"date":"2013-08","id":"27085571","postid":"18434617","body":"\"Shouldn't the foreign key here be \\\"tech_contact_id\\\" and \\\"admin_contact_id\\\"?\"","score":"1","tags":""},"27536448":{"date":"2013-09","id":"27536448","postid":"18692335","body":"\"Why do you have `zone_id` in your `zones` table? Why are you not depending on that table's primary key?\"","score":"0","tags":"<ruby-on-rails-3>"},"27910064":{"date":"2013-09","id":"27910064","postid":"18886760","body":"\"Ruby does not have a dependency on Rack. Please provide more information.\"","score":"0","tags":"<ruby-on-rails><ruby><rack>"},"28137159":{"date":"2013-09","id":"28137159","postid":"19017501","body":"\"No, I don't think it's a type error at all. I still think this is super specific to your application. Nothing except the code for a proof-of-concept application which proves that wrong would change my viewpoint.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><mongodb><hash><mongoid>"},"28137225":{"date":"2013-09","id":"28137225","postid":"19039799","body":"\"Marked the question to close as \\\"Primarily opinion based\\\" because it really depends on if there's going to be more than just this information in those actions.\"","score":"2","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><rails-activerecord>"},"28216269":{"date":"2013-09","id":"28216269","postid":"19086371","body":"\"Please show us the full error message. You're missing a part of it from your post.\"","score":"0","tags":"<javascript><ruby-on-rails>"},"28216566":{"date":"2013-09","id":"28216566","postid":"19086707","body":"\"This is because you're passing in single quoted JSON keys\\\/values. Use double quotes.\"","score":"1","tags":""},"26785140":{"date":"2013-08","id":"26785140","postid":"18220494","body":"\"Well that problem is pretty indicative of the next step... it's clear to me that you don't have an `Admin::AppointmentsController`, but yet you're attempting to route to one. Create one using `rails g controller admin\\\/appointments`.\"","score":"0","tags":""},"27119606":{"date":"2013-08","id":"27119606","postid":"18453572","body":"\"Why is that installing the gems to `vendor\\\/bundle`?\"","score":"0","tags":"<ruby><bundler>"},"27119688":{"date":"2013-08","id":"27119688","postid":"18454078","body":"\"Please explain your question better. Clearly there is a lot of ambiguity in your original question. Why do you want to see if the created_at is within 1-2 weeks before the created at?\"","score":"2","tags":""},"27120125":{"date":"2013-08","id":"27120125","postid":"18454134","body":"\"@PeterAlfvin: Yes, that's right. The singular for \\\"ties\\\" will be \\\"tie\\\" but if you pluralize \\\"tie\\\" you'll always get \\\"ties\\\".\"","score":"0","tags":""},"27120144":{"date":"2013-08","id":"27120144","postid":"18454134","body":"\"Sorry, that was a Rails 4 application. Let me update it for Rails 3.\"","score":"0","tags":""},"27530163":{"date":"2013-09","id":"27530163","postid":"18688237","body":"\"There is most likely a JavaScript I18n library out there that would let you do this. Storing the translations in XML and attempting to read them out with JS into a JS-friendly format is adding an extremely high level of complexity to a problem that is already quite complex.\"","score":"1","tags":"<javascript><jquery><xml>"},"27755324":{"date":"2013-09","id":"27755324","postid":"18772930","body":"\"You did not provide the stacktrace as I requested. Please provide this if you are still having issues.\"","score":"0","tags":"<ruby-on-rails><comments><ruby-on-rails-4><nested-attributes><railscasts>"},"28105882":{"date":"2013-09","id":"28105882","postid":"18995557","body":"\"Thanks @BluGeni :)\"","score":"0","tags":""},"28106293":{"date":"2013-09","id":"28106293","postid":"19017501","body":"\"This seems oddly specific to your application, and therefore I doubt anyone else would see it. If you can narrow it down to an example that we can easily reproduce on our machines then it would be appreciated.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><mongodb><hash><mongoid>"},"28106301":{"date":"2013-09","id":"28106301","postid":"19017501","body":"\"This question appears to be off-topic because it is super-specific to the user's application.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><mongodb><hash><mongoid>"},"28518233":{"date":"2013-10","id":"28518233","postid":"1549211","body":"\"@Chloe: The API documentation is sometimes not reflective of reality. I have been doing Rails long enough now to know that `[comment.post, comment]` would correctly generate the `post_comment_path` helper that you ask for. I even wrote a post about this: http:\\\/\\\/ryanbigg.com\\\/2012\\\/03\\\/polymorphic-routes\\\/\"","score":"0","tags":""},"28518268":{"date":"2013-10","id":"28518268","postid":"1549211","body":"\"Your `post_comment_path` method is wrong, btw. You should be passing the post object first, then the comment.\"","score":"1","tags":""},"28657402":{"date":"2013-10","id":"28657402","postid":"19343460","body":"\"Is the document body's background color really yellow? Please show us a JSFiddle of the code that you're currently using\"","score":"1","tags":"<javascript>"},"28657427":{"date":"2013-10","id":"28657427","postid":"19343322","body":"\"@SNEHPANDYA: Please do not post code as comments. instead, edit your original question to add more content.\"","score":"0","tags":"<html><ruby-on-rails>"},"28901056":{"date":"2013-10","id":"28901056","postid":"19483329","body":"\"What is the top line of output in the error? youv'e shown us the stacktrace, but not the error message itself.\"","score":"0","tags":"<ruby-on-rails-4><nomethoderror>"},"28901104":{"date":"2013-10","id":"28901104","postid":"19485811","body":"\"Please show us the code that you're using to make the request.\"","score":"0","tags":"<ruby-on-rails><angularjs><post>"},"28901224":{"date":"2013-10","id":"28901224","postid":"19485835","body":"\"@AlainGoldman: is there any extra content above the HINT line? Please show us the 20 lines above and below this message.\"","score":"0","tags":"<ruby-on-rails><ruby><heroku>"},"28934911":{"date":"2013-10","id":"28934911","postid":"19505580","body":"\"Corrected tags on this question. This code is Java, not JavaScript. You should only tag the questions with the name of the language you're using. Any other tags are excessive.\"","score":"1","tags":"<java>"},"29133268":{"date":"2013-10","id":"29133268","postid":"19617227","body":"\"Please show us your `Gemfile`.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><bundler>"},"29249013":{"date":"2013-10","id":"29249013","postid":"19691759","body":"\"What version of rubygems are you using? `gem -v`\"","score":"0","tags":"<ruby-on-rails><ruby><rubygems><gem>"},"26250259":{"date":"2013-07","id":"26250259","postid":"17959544","body":"\"@Jsor: Could you provide an answer on this question with the code you're talking about so that I can understand?\"","score":"0","tags":""},"26488626":{"date":"2013-08","id":"26488626","postid":"18095462","body":"\"You probably want to validate it within the scope of something: `validates_uniqueness_of :email, :scope => :user_id`\"","score":"1","tags":""},"26488834":{"date":"2013-08","id":"26488834","postid":"18095864","body":"\"Error is happening here: `spec\\\/spec_helper.rb:56`. What is on that line? Why is that on that line? What purpose does it serve?\"","score":"1","tags":"<ruby-on-rails><rspec><spork>"},"26490010":{"date":"2013-08","id":"26490010","postid":"18096392","body":"\"The error seems to indicate an issue with your database configuration. Please show us `config\\\/database.yml`.\"","score":"1","tags":"<ruby-on-rails><ruby>"},"26562366":{"date":"2013-08","id":"26562366","postid":"4282875","body":"\"@Leahcim: That's just an attribute from your model.\"","score":"0","tags":""},"26616079":{"date":"2013-08","id":"26616079","postid":"18167757","body":"\"This is a duplicate of my answer.\"","score":"0","tags":""},"26616206":{"date":"2013-08","id":"26616206","postid":"18166960","body":"\"Please don't post duplicate questions. http:\\\/\\\/stackoverflow.com\\\/questions\\\/18167414\\\/activerecordrecordnotfound-song-ids-not-linked\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3><postgresql><ruby-on-rails-4>"},"26616469":{"date":"2013-08","id":"26616469","postid":"18163646","body":"\"This seems *extremely* like homework to me. http:\\\/\\\/meta.stackexchange.com\\\/questions\\\/147100\\\/the-homework-tag-is-now-officially-deprecated\"","score":"0","tags":"<algorithm><graph><matching>"},"26638535":{"date":"2013-08","id":"26638535","postid":"18180725","body":"\"Please explain what you mean by \\\"is not working\\\"\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"27074267":{"date":"2013-08","id":"27074267","postid":"16210515","body":"\"No, the book does not support Mongodb and I have no plans to add that support currently. I think PostgreSQL is the \\\"correct\\\" way of doing it . The book at the link is currently Rails 4, but I will be releasing a Rails 3 edition of it again at a later date. The book relies on the Apartment gem to provide the basis for the multitenant engine.\"","score":"0","tags":""},"27680036":{"date":"2013-09","id":"27680036","postid":"18772930","body":"\"Where are you defining the `@design` and `@commentable` variables so that they are available for the forms? I only see your `create` actions.\"","score":"0","tags":"<ruby-on-rails><comments><ruby-on-rails-4><nested-attributes><railscasts>"},"27680406":{"date":"2013-09","id":"27680406","postid":"18772930","body":"\"Please provide a stacktrace for the error.\"","score":"0","tags":"<ruby-on-rails><comments><ruby-on-rails-4><nested-attributes><railscasts>"},"28438756":{"date":"2013-10","id":"28438756","postid":"19172935","body":"\"Find out where this method is coming from by putting this line above that call: `p method(:sign_in).source_location`. Run the tests again and now you'll see where that method is being defined.\"","score":"0","tags":"<ruby-on-rails-3><devise><controller>"},"31574829":{"date":"2014-01","id":"31574829","postid":"9723219","body":"\"@shigazaru Not as far as I know. The middleware stack is frozen after initialization, and therefore cannot be modified.\"","score":"0","tags":""},"31621832":{"date":"2014-01","id":"31621832","postid":"21034438","body":"\"I don't understand the question here. What is `correct_user` supposed to be doing? What exception could it possibly be rescuing there?\"","score":"0","tags":"<ruby-on-rails>"},"31622046":{"date":"2014-01","id":"31622046","postid":"21033820","body":"\"`$msg_success_icon` in Ruby means \\\"global variable\\\", which means that variable will be available EVERYWHERE in your code. Perhaps you meant to define a constant instead, such as `MSG_SUCCESS_ICON`?\"","score":"0","tags":"<ruby-on-rails><ruby><locale>"},"31622055":{"date":"2014-01","id":"31622055","postid":"21033820","body":"\"On second thought, that looks to me like view logic. Why is it even in the model in the first place?\"","score":"0","tags":"<ruby-on-rails><ruby><locale>"},"32842701":{"date":"2014-02","id":"32842701","postid":"21718703","body":"\"Is the `User` model defined within your application?\"","score":"1","tags":"<ruby-on-rails><ruby-on-rails-3>"},"33813041":{"date":"2014-03","id":"33813041","postid":"22260806","body":"\"Show us the code for the `preorder_helper.rb` file please.\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-4><ruby-on-rails-4-1>"},"33813058":{"date":"2014-03","id":"33813058","postid":"22259335","body":"\"possible duplicate of [wrong number of arguments (1 for 0) (Social Gem )](http:\\\/\\\/stackoverflow.com\\\/questions\\\/22260806\\\/wrong-number-of-arguments-1-for-0-social-gem)\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-4>"},"33813065":{"date":"2014-03","id":"33813065","postid":"22259335","body":"\"Please do not post duplicate questions for the same problem.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-4>"},"20521983":{"date":"2013-02","id":"20521983","postid":"14661088","body":"\"Clear out your database (`rake db:reset`) and then re-seed the data manually (`rake db:seed`) and see if that brings up any extra errors or works. I don't know why it wouldn't be showing images right off the bat.\"","score":"0","tags":"<ruby-on-rails-3.2><imagemagick><spree>"},"20522406":{"date":"2013-02","id":"20522406","postid":"14679242","body":"\"@jkface: has the timer run out yet?\"","score":"0","tags":""},"20877776":{"date":"2013-02","id":"20877776","postid":"14887800","body":"\"Where is `@cast` defined?\"","score":"0","tags":"<ruby-on-rails-3><nested-forms><nested-attributes><image-upload>"},"21242482":{"date":"2013-02","id":"21242482","postid":"15099216","body":"\"Which version of Ruby (`ruby -v`)? Which version of RubyGems (`gem -v`)?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"21242839":{"date":"2013-02","id":"21242839","postid":"15099216","body":"\"Ta for the quick response. What's your Bundler version? `bundle -v`\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"21380673":{"date":"2013-03","id":"21380673","postid":"15175998","body":"\"Is that in your controller? If so, get the path for that object by calling `.path` on it before passing it to `Category.import`.\"","score":"0","tags":""},"21444369":{"date":"2013-03","id":"21444369","postid":"6690953","body":"\"Thanks for taking the time to answer this. This came up as the first result in Google for me and answered my query. You rock.\"","score":"3","tags":""},"21771698":{"date":"2013-03","id":"21771698","postid":"15399658","body":"\"Please show us your `test.rb` script.\"","score":"0","tags":"<ruby-on-rails><rubygems>"},"23215028":{"date":"2013-04","id":"23215028","postid":"16229329","body":"\"Thanks for the great explanation, James. I definitely think channels are what I am looking for.\"","score":"0","tags":""},"25222101":{"date":"2013-06","id":"25222101","postid":"17374426","body":"\"Excellent answer!\"","score":"2","tags":""},"25584480":{"date":"2013-07","id":"25584480","postid":"17581930","body":"\"Could you please share with us your models? Thanks.\"","score":"0","tags":"<mysql><ruby-on-rails><ruby><activerecord>"},"26169765":{"date":"2013-07","id":"26169765","postid":"17894764","body":"\"The route is at wherever you mounted Spree. Check `rake routes` for that.\"","score":"0","tags":""},"26208985":{"date":"2013-07","id":"26208985","postid":"17914208","body":"\"Then create a new User object to represent Anonymous.\"","score":"0","tags":""},"26209093":{"date":"2013-07","id":"26209093","postid":"17936359","body":"\"You could also do `Bet.all.each(&:check_bet)`.\"","score":"1","tags":""},"26209127":{"date":"2013-07","id":"26209127","postid":"17935707","body":"\"This question does not provide valid code to reproduce any problem, and so I've voted to close it. Please provide that information to prevent this question from being closed.\"","score":"0","tags":"<ruby-on-rails-3><https><devise><flash-message>"},"26527216":{"date":"2013-08","id":"26527216","postid":"18117651","body":"\"There is no screenshot in your question.\"","score":"0","tags":"<mysql><ruby><ruby-on-rails-3><e-commerce><spree>"},"26634337":{"date":"2013-08","id":"26634337","postid":"18176963","body":"\"Please see my updated answer.\"","score":"0","tags":""},"26634347":{"date":"2013-08","id":"26634347","postid":"18176944","body":"\"Great :) Thanks for following my advice.\"","score":"0","tags":""},"26786958":{"date":"2013-08","id":"26786958","postid":"18263835","body":"\"Please don't use fake values. They can be misleading or deceptive. Sometimes both.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><github><github-api>"},"27319553":{"date":"2013-09","id":"27319553","postid":"18564776","body":"\"Good to hear, @BillyChan :)\"","score":"0","tags":""},"28113933":{"date":"2013-09","id":"28113933","postid":"19025601","body":"\"Use Ruby 1.9.3. Ruby 1.8.7 has reached its end of life. Any code that you're using that expressly depends on 1.8.7 should be upgraded to 1.9.3\"","score":"0","tags":"<ruby-on-rails><ruby><friendly-id><ruby-1.8.7>"},"28114169":{"date":"2013-09","id":"28114169","postid":"19025201","body":"\"Show us this post-receive file that you have please.\"","score":"0","tags":"<ruby-on-rails-3><git><ssh><capistrano><su>"},"28114249":{"date":"2013-09","id":"28114249","postid":"19022025","body":"\"Ah, that would be because params[:convertor] is not set. You need to check for that before you use it there.\"","score":"0","tags":""},"28214156":{"date":"2013-09","id":"28214156","postid":"19085272","body":"\"Please explain what you're seeing when you attempt to sign in\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3.2><devise>"},"28214161":{"date":"2013-09","id":"28214161","postid":"19022025","body":"\"@ben: The polite thing to do now would be to upvote and accept my answer if it helped you answer your question.\"","score":"0","tags":""},"33814911":{"date":"2014-03","id":"33814911","postid":"22261379","body":"\"Thank you :) Steve Klabnik is doing all of the writing on that now.\"","score":"0","tags":""},"33815033":{"date":"2014-03","id":"33815033","postid":"22262406","body":"\"You're correct @sidney, thank you. I have fixed this code now.\"","score":"0","tags":""},"33830796":{"date":"2014-03","id":"33830796","postid":"22261379","body":"\"@TomWillson: Define a proper route for that as per the routing guide.\"","score":"0","tags":""},"33831087":{"date":"2014-03","id":"33831087","postid":"22271282","body":"\"Please show us your `Gemfile`. That should indicate to us which gems you're using and out of those gems we might be able to pick which is providing the `Country` class.\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-4>"},"21565216":{"date":"2013-03","id":"21565216","postid":"15283487","body":"\"Could you please include which files these classes are defined within? I noticed you're also missing the `class` call from before the class names. Is that really how the code is?\"","score":"0","tags":"<ruby><ruby-on-rails-3><ruby-on-rails-3.2>"},"21891784":{"date":"2013-03","id":"21891784","postid":"15468894","body":"\"@bdares: It's not in the middleware stack. It's an instrumentation call.\"","score":"1","tags":"<ruby-on-rails><ruby><ruby-on-rails-3>"},"21892222":{"date":"2013-03","id":"21892222","postid":"15469320","body":"\"Funny that we had a very similar approach to solving this problem. Great minds and all that :)\"","score":"1","tags":""},"23056516":{"date":"2013-04","id":"23056516","postid":"16139116","body":"\"What happens if you override `allocate` instead?\"","score":"1","tags":"<ruby>"},"23057528":{"date":"2013-04","id":"23057528","postid":"16139752","body":"\"possible duplicate of [JavaScript find array index with value](http:\\\/\\\/stackoverflow.com\\\/questions\\\/7346827\\\/javascript-find-array-index-with-value)\"","score":"0","tags":"<javascript>"},"23134922":{"date":"2013-04","id":"23134922","postid":"16182740","body":"\"@user2295369: You will need to run `rake db:create`.\"","score":"0","tags":""},"23690481":{"date":"2013-05","id":"23690481","postid":"16502727","body":"\"`os.Stdout.Write([]byte(\\\"Saving to PGDB\\\\n\\\"))` can be better witten as `fmt.Println(\\\"Saving to PGDB\\\")` btw\"","score":"0","tags":"<postgresql><go>"},"26210921":{"date":"2013-07","id":"26210921","postid":"17937485","body":"\"Are you sure `config.action_mailer.delivery_method` is set to `:test`?\"","score":"0","tags":"<ruby-on-rails><rspec><actionmailer><rspec-rails>"},"26249686":{"date":"2013-07","id":"26249686","postid":"17959374","body":"\"Well, I'm a Ruby programmer and in Ruby I would just do `users.map(&:name).join(' ')`. I thought there may be something obvious in Go that I'm missing.\"","score":"1","tags":"<go>"},"27380538":{"date":"2013-09","id":"27380538","postid":"18602892","body":"\"Why do you want this feature? I don't see the use case for it at all.\"","score":"0","tags":"<ruby><rspec>"},"27604743":{"date":"2013-09","id":"27604743","postid":"7906305","body":"\"api.rubyonrails.com is now the only one that responds. rails.rubyonrails.org is deprecated.\"","score":"0","tags":""},"28248769":{"date":"2013-09","id":"28248769","postid":"17007942","body":"\"You can also do just \\\"require 'process_bill', as the `lib` directory is already on the load path.\"","score":"0","tags":""},"28707945":{"date":"2013-10","id":"28707945","postid":"19372409","body":"\"Please show us your select boxes. That will show us how they're passing their values to the controller, and we can go from there.\"","score":"0","tags":"<ruby-on-rails><controller><belongs-to>"},"28707967":{"date":"2013-10","id":"28707967","postid":"19352928","body":"\"@EvanLi: In that syntax, Ruby can't know if that's supposed to be a block that you're passing to `puts` or if it's a hash. It assumes a block, because that makes the most sense. You should use `puts({a: \\\"b\\\"  })` if you want it to work.\"","score":"0","tags":""},"28905141":{"date":"2013-10","id":"28905141","postid":"19486640","body":"\"Trails do not have `site_id`, at least according to how you've defined the model associations. Maybe you meant that a trail belongs to a site and that a site has many trails? In that case then, you could define `@list` as just `site.trails`\"","score":"1","tags":"<ruby-on-rails-3>"},"28937478":{"date":"2013-10","id":"28937478","postid":"19507208","body":"\"The answer would be 'not easily'. Why do you want this hash?\"","score":"1","tags":"<ruby-on-rails><ruby><rails-i18n>"},"28937908":{"date":"2013-10","id":"28937908","postid":"19507205","body":"\"Why do both the sites table and trials table have `site_id`? I would expect `trials` to have `site_id` and `sites` to have a primary key `id` column\"","score":"0","tags":"<ruby-on-rails>"},"29648075":{"date":"2013-11","id":"29648075","postid":"19924656","body":"\"I don't understand the question.\"","score":"0","tags":"<ruby-on-rails><cron><whenever>"},"29648128":{"date":"2013-11","id":"29648128","postid":"19924702","body":"\"Please format your code using 4 space indentation.\"","score":"0","tags":"<ruby-on-rails-4><spree><ruby-2.0><strong-parameters>"},"30955417":{"date":"2013-12","id":"30955417","postid":"20672889","body":"\"Please explain how it does not work.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.2>"},"33954785":{"date":"2014-03","id":"33954785","postid":"22341307","body":"\"@Giri I don't understand why you would need to have a `batch_create` action. Can you explain your thinking behind that?\"","score":"1","tags":""},"28251278":{"date":"2013-10","id":"28251278","postid":"19086880","body":"\"What kind of custom implementation? I'm interested in what they have in mind.\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><shopping-cart>"},"28475342":{"date":"2013-10","id":"28475342","postid":"1549211","body":"\"@Chloe I am pretty sure this is still valid in the latest versions of Rails. Please do try it before downvoting me.\"","score":"0","tags":""},"28657917":{"date":"2013-10","id":"28657917","postid":"19343653","body":"\"Pretty hard to debug this without seeing it in action. Any chance you can show us more code than just one line? Like the model and the database schema for that table?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><ruby-on-rails-3.2><rubygems>"},"28658074":{"date":"2013-10","id":"28658074","postid":"19343710","body":"\"I've found better success with the apartment gem (https:\\\/\\\/github.com\\\/influitive\\\/apartment)\"","score":"2","tags":"<ruby-on-rails><ruby-on-rails-3><multi-tenant><multi-tenancy><acts-as-tenant>"},"29437162":{"date":"2013-11","id":"29437162","postid":"19332909","body":"\"Specifying the iconv gem worked for me on Ruby 2.0.0. Thanks!\"","score":"2","tags":""},"33815916":{"date":"2014-03","id":"33815916","postid":"22262921","body":"\"The error is happening in the controller. Including it in the test is not going to fix it.\"","score":"2","tags":""},"33815934":{"date":"2014-03","id":"33815934","postid":"22262902","body":"\"What is so important about these variables that they shouldn't be changeD?\"","score":"0","tags":"<javascript><security><variables><global>"},"28216615":{"date":"2013-09","id":"28216615","postid":"19086880","body":"\"Just out of curiosity: why aren't you using [Spree Commerce](http:\\\/\\\/spreecommerce.com)?\"","score":"0","tags":"<ruby-on-rails><ruby-on-rails-3><shopping-cart>"},"28397292":{"date":"2013-10","id":"28397292","postid":"19191873","body":"\"I removed the unrelated ruby-on-rails, ruby and coffeescript tags here. Please be more careful when tagging your questions.\"","score":"0","tags":"<backbone.js>"},"28397322":{"date":"2013-10","id":"28397322","postid":"19173006","body":"\"@Psl There is no need to have that many question marks. You have well exceeded your daily allowed limit for question marks and you will be charged $0.25 per question mark you use until the time limit elapses.\"","score":"0","tags":"<javascript><jquery><json>"},"28880729":{"date":"2013-10","id":"28880729","postid":"19474020","body":"\"Please show us the output from the console and the output of 'git status'\"","score":"2","tags":"<github>"},"28902574":{"date":"2013-10","id":"28902574","postid":"19486640","body":"\"What is `@list`?\"","score":"0","tags":"<ruby-on-rails-3>"},"29310947":{"date":"2013-11","id":"29310947","postid":"3827359","body":"\"This code does not work on Ruby 2.0.0 for me. First: File.unlink takes a path. Second, I get the same no such file or directory error as the OP.\"","score":"0","tags":""},"29396894":{"date":"2013-11","id":"29396894","postid":"19777674","body":"\"Please show us your attempted solutions at this problem.\"","score":"1","tags":"<ruby-on-rails>"},"29396973":{"date":"2013-11","id":"29396973","postid":"19777713","body":"\"I agree. Comparing the paths would be a good way to check this.\"","score":"0","tags":""},"29728448":{"date":"2013-11","id":"29728448","postid":"19970909","body":"\"Using JavaScript to query an SQLite? How? Using Node.js?\"","score":"0","tags":"<javascript><sqlite><cordova>"},"33996125":{"date":"2014-03","id":"33996125","postid":"22117845","body":"\"A product can only have taxons.\"","score":"1","tags":""},"33996146":{"date":"2014-03","id":"33996146","postid":"22341307","body":"\"@giri The routing is best explained by the Routing guide: http:\\\/\\\/guides.rubyonrails.org\\\/routing.html\"","score":"0","tags":""},"26427552":{"date":"2013-08","id":"26427552","postid":"18061050","body":"\"Can you please show us an example of this whitespace?\"","score":"0","tags":"<ruby-on-rails><ruby><ruby-on-rails-3><ruby-on-rails-3.2>"},"26567911":{"date":"2013-08","id":"26567911","postid":"18140671","body":"\"Could you show us some of the relevant XML so that we could build a solution and test it to see it work before we recommend something incorrectly?\"","score":"0","tags":"<ruby-on-rails><ruby><xml><nokogiri>"},"26683740":{"date":"2013-08","id":"26683740","postid":"18198568","body":"\"@Cacofonix: Please open a new question for this new problem rather than modifying the existing question.\"","score":"1","tags":""},"27345394":{"date":"2013-09","id":"27345394","postid":"18581825","body":"\"`belongs_to :employee` will do the trick.\"","score":"0","tags":""},"27381946":{"date":"2013-09","id":"27381946","postid":"18602920","body":"\"It's pretty hard for us to debug server config issues without seeing the server itself. In my experience, installing that package has made that error disappear.\"","score":"0","tags":""},"27564860":{"date":"2013-09","id":"27564860","postid":"18707583","body":"\"You have not explained at all what you want this command line thing to do. Please explain it in detailed terms in your original post.\"","score":"2","tags":"<ruby-on-rails><ruby><ruby-on-rails-4>"},"28289999":{"date":"2013-10","id":"28289999","postid":"19129562","body":"\"Why are you returning ` Hash` object rather than an instance of the `Project` class?\"","score":"0","tags":"<ruby-on-rails><json>"},"28291231":{"date":"2013-10","id":"28291231","postid":"19130323","body":"\"Could you please make a [JSfiddle](http:\\\/\\\/jsfiddle.net) that demonstrates this issue?\"","score":"0","tags":"<css3>"},"28703744":{"date":"2013-10","id":"28703744","postid":"19357178","body":"\"@asaignment: if this answered your question, then please accept.\"","score":"0","tags":""},"28703787":{"date":"2013-10","id":"28703787","postid":"19352928","body":"\"Ensure that you're really using the RVM supplied Ruby (`which ruby` should include '.rvm'). You can mark code using backticks. For more information, check out the [Markdown Editing Help](http:\\\/\\\/stackoverflow.com\\\/editing-help) guide.\"","score":"0","tags":""},"28704628":{"date":"2013-10","id":"28704628","postid":"19370049","body":"\"I don't understand here what's not working. Your question is pretty vague about what's actually broken here... What is `user.role`? How is the `brown?` method defined on that object? Does that return `true` for the current user in the view directly before than `can?` call?\"","score":"0","tags":"<ruby-on-rails><devise><ruby-on-rails-4><cancan><roles>"},"28704840":{"date":"2013-10","id":"28704840","postid":"19357178","body":"\"Thank you @asaignment.\"","score":"0","tags":""},"33839156":{"date":"2014-03","id":"33839156","postid":"22273954","body":"\"No, the Money gem won't magically convert things for you. No gem should.\"","score":"0","tags":""},"33839165":{"date":"2014-03","id":"33839165","postid":"22274168","body":"\"At some point, yes. If that's what it's going to take to get some New Relic info on our API to find out the painpoints in larger Spree apps, then we should probably go down that path. Again: please submit an issue about this because I am likely to forget.\"","score":"0","tags":""},"33857286":{"date":"2014-03","id":"33857286","postid":"22285432","body":"\"May I ask why you're piping out to curl instead of using HTTParty?\"","score":"1","tags":"<html><css><ruby-on-rails><ruby-on-rails-3><curl>"},"27566813":{"date":"2013-09","id":"27566813","postid":"18708465","body":"\"Works fine for me: https:\\\/\\\/gist.github.com\\\/radar\\\/6503866. Please provide steps to reproduce this issue.\"","score":"0","tags":"<ruby-on-rails><polymorphic-associations>"},"27832779":{"date":"2013-09","id":"27832779","postid":"18861567","body":"\"Please do not define a method called `send` in Ruby. That is a reserved method name and will conflict with `Object`'s `send` method.\"","score":"0","tags":"<ruby><sockets>"},"28435810":{"date":"2013-10","id":"28435810","postid":"312304","body":"\"Yes it does exist. I have fixed the file name now.\"","score":"0","tags":""},"28435829":{"date":"2013-10","id":"28435829","postid":"9343181","body":"\"@takodil Maybe that method is being defined by something else. Open a new SO question and include your code. Along with that information, show us the output of `method(:sign_in).source_location` in this new question as well.\"","score":"0","tags":""},"28435904":{"date":"2013-10","id":"28435904","postid":"19200805","body":"\"Please show us your `Gemfile` so we can see where you're getting spree_simple_sales from.\"","score":"0","tags":"<ruby-on-rails><ruby><generator><spree>"},"29234531":{"date":"2013-10","id":"29234531","postid":"19682813","body":"\"Please show us the complete command that you're running to get this error.\"","score":"0","tags":"<ruby-on-rails-3><bundler>"},"33910276":{"date":"2014-03","id":"33910276","postid":"22285432","body":"\"Thanks @Riyad :)\"","score":"0","tags":"<html><css><ruby-on-rails><ruby-on-rails-3><curl>"},"29249030":{"date":"2013-10","id":"29249030","postid":"19691759","body":"\"@NickM: That recommends installing an RC version of Devise, which is incorrect. The Gemfile in the question above does not even include Devise.\"","score":"0","tags":"<ruby-on-rails><ruby><rubygems><gem>"},"30484304":{"date":"2013-12","id":"30484304","postid":"20410948","body":"\"As the author of that blog post I can say that I've never seen someone have to do that before. I hope you get an answer that helps you :)\"","score":"1","tags":"<ruby><ubuntu><rvm>"},"31712103":{"date":"2014-01","id":"31712103","postid":"21034452","body":"\"Not if your migration is missing... You can create the migration to drop the table as I suggested, or go into the database and delete it manually.\"","score":"0","tags":""},"33217933":{"date":"2014-02","id":"33217933","postid":"5616152","body":"\"You can do that with `as: :blah` on the end of the scope.\"","score":"0","tags":""},"33217983":{"date":"2014-02","id":"33217983","postid":"5658738","body":"\"Active Record is perfectly fine for working with a database connection. You can also use the Sequel gem if you want something a bit lighter. AR was what I knew at the time and therefore that is what I recommended.\"","score":"0","tags":""},"33218000":{"date":"2014-02","id":"33218000","postid":"16025798","body":"\"Thanks @Danny :)\"","score":"0","tags":""}}}